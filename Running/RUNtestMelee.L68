00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/02/2025 22:43:24

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Philip Bourke
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  *-----------------------------------------------------------
00001000                            11  * Section       : Trap Codes
00001000                            12  * Description   : Trap Codes used throughout StarterKit
00001000                            13  *-----------------------------------------------------------
00001000                            14  * Trap CODES
00001000  =00000021                 15  TC_SCREEN   EQU         33          ; Screen size information trap code
00001000  =00000000                 16  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00001000                            17                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00001000  =00000013                 18  TC_KEYCODE  EQU         19          ; Check for pressed keys
00001000  =0000005C                 19  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00001000  =0000000B                 20  TC_CURSR_P  EQU         11          ; Trap code cursor position
00001000                            21  
00001000  =0000005E                 22  TC_REDRAW   EQU         94          ; Redraw Screen
00001000  =00000009                 23  TC_EXIT     EQU         09          ; Exit Trapcode
00001000                            24  
00001000                            25  *-----------------------------------------------------------
00001000                            26  * Section       : Charater Setup
00001000                            27  * Description   : Size of Player and Enemy and properties
00001000                            28  * of these characters e.g Starting Positions and Sizes
00001000                            29  *-----------------------------------------------------------
00001000  =00000014                 30  PLYR_W_INIT EQU         20          ; Players initial Width
00001000  =0000000C                 31  PLYR_H_INIT EQU         12          ; Players initial Height
00001000                            32  
00001000  =00000000                 33  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00001000  =FFFFFFED                 34  PLYR_JUMP_V EQU         -19          ; Player Jump Velocity
00001000  =00000001                 35  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00001000                            36  
00001000  =00000001                 37  GND_TRUE    EQU         01          ; Player on Ground True
00001000  =00000000                 38  GND_FALSE   EQU         00          ; Player on Ground False
00001000                            39  
00001000  =00000000                 40  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00001000  =00000001                 41  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00001000  =00000002                 42  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00001000  =00000003                 43  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00001000  =00000004                 44  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00001000                            45  
00001000  =0000000C                 46  ENMY_W_INIT EQU         12          ; Enemy initial Width
00001000  =0000000C                 47  ENMY_H_INIT EQU         12          ; Enemy initial Height
00001000  =0000000C                 48  ENEMY_H_INIT EQU         12          ; Enemy initial Height
00001000                            49  
00001000  =00000014                 50  FLY_ENMY_W_INIT  EQU         20          ; Enemy initial Width
00001000  =0000000C                 51  FLY_ENMY_H_INIT  EQU         12          ; Enemy initial Height
00001000                            52  
00001000  =0000000C                 53  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00001000  =0000000C                 54  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00001000                            55  
00001000  =00000002                 56  LOOKRIGHT   EQU         02          ; Look Right
00001000  =00000001                 57  LOOKLEFT    EQU         01          ; Look Left
00001000                            58  *-----------------------------------------------------------
00001000                            59  * Section       : Graphic Colors
00001000                            60  * Description   : Screen Pixel Color
00001000                            61  *-----------------------------------------------------------
00001000  =00FFFFFF                 62  WHITE           EQU     $00FFFFFF
00001000  =00000000                 63  BLACK           EQU     $00000000
00001000  =000000FF                 64  RED             EQU     $000000FF
00001000  =00FF0000                 65  BLUE            EQU     $00FF0000
00001000  =00566D19                 66  GREEN           EQU     $00566D19
00001000  =0044FF44                 67  LIFEGREEN       EQU     $0044FF44
00001000  =0019506D                 68  BROWN           EQU     $0019506D         ; Brown   
00001000  =00FFE2B0                 69  SKY             EQU     $00FFE2B0         ; Sky Blue
00001000                            70  
00001000                            71  *-----------------------------------------------------------
00001000                            72  * Section       : Keyboard Keys
00001000                            73  * Description   : Spacebar and Escape or two functioning keys
00001000                            74  * Spacebar to JUMP and Escape to Exit Game
00001000                            75  *-----------------------------------------------------------
00001000  =00000020                 76  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00001000  =0000001B                 77  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00001000  =00000052                 78  Rkey           EQU         $52         ; R ASCII Keycode
00001000  =00000041                 79  Akey           EQU         $41         ; A ASCII Keycode
00001000  =00000053                 80  Skey           EQU         $53         ; S ASCII Keycode
00001000  =00000044                 81  Dkey           EQU         $44         ; D ASCII Keycode
00001000  =0000004C                 82  Lkey           EQU         $4C         ; L ASCII Keycode
00001000                            83  
00001000                            84  *-----------------------------------------------------------
00001000                            85  * Subroutine    : Initialise
00001000                            86  * Description   : Initialise game data into memory such as 
00001000                            87  * sounds and screen size
00001000                            88  *-----------------------------------------------------------
00001000                            89  INITIALISE:
00001000                            90      ; Initialise Sounds
00001000  6100 0796                 91      BSR     JUMP_LOAD               ; Load Jump Sound into Memory
00001004  6100 0774                 92      BSR     GAMEOVER_LOAD                ; Load Run Sound into Memory
00001008  6100 07AC                 93      BSR     HITHURT_LOAD               ; Load Opps (Collision) Sound into Memory
0000100C  6100 07C6                 94      BSR     POWERUP_LOAD               ; Load Opps (Collision) Sound into Memory
00001010  6100 07E0                 95      BSR     LVLCHANGE_LOAD               ; Load Opps (Collision) Sound into Memory
00001014                            96  
00001014                            97      ; Screen Size
00001014  103C 0021                 98      MOVE.B  #TC_SCREEN, D0          ; access screen information
00001018  7200                      99      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
0000101A  4E4F                     100      TRAP    #15                     ; interpret D0 and D1 for screen size
0000101C  33C1 00001F32            101      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
00001022  4841                     102      SWAP    D1                      ; Swap top and bottom word to retrive screen size
00001024  33C1 00001F30            103      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
0000102A                           104  
0000102A                           105      ; Place the Player at the center of the screen
0000102A  B381                     106      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
0000102C  3239 00001F30            107      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00001032  82FC 0002                108      DIVU    #02,        D1          ; divide by 2 for center on X Axis
00001036  23C1 00001F3A            109      MOVE.L  D1,         PLAYER_X    ; Players X Position
0000103C                           110  
0000103C  B381                     111      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000103E  3239 00001F32            112      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001044  82FC 0002                113      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001048  23C1 00001F3E            114      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
0000104E                           115  
0000104E                           116      ; Set the player starting width and height
0000104E  13FC 0014 00001F8B       117      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
00001056  13FC 000C 00001F8C       118      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
0000105E                           119  
0000105E  B381                     120      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00001060  3239 00001F32            121      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001066  82FC 0002                122      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000106A  23C1 00001F3E            123      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00001070                           124  
00001070                           125      ; Initialise Player Score
00001070  B381                     126      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00001072  7200                     127      MOVE.L  #00,        D1          ; Init Score
00001074  23C1 00001F42            128      MOVE.L  D1,         PLAYER_SCORE
0000107A                           129  
0000107A                           130      ; Initialise Player Velocity
0000107A  B381                     131      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000107C  123C 0000                132      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
00001080  23C1 00001F46            133      MOVE.L  D1,         PLYR_VELOCITY
00001086                           134  
00001086                           135      ; Initialise Player Gravity
00001086  B381                     136      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00001088  7201                     137      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
0000108A  23C1 00001F4A            138      MOVE.L  D1,         PLYR_GRAVITY
00001090                           139  
00001090                           140      ; Initialize Player on Ground
00001090  23FC 00000001 00001F4E   141      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
0000109A                           142  
0000109A                           143      ; Initial Position for Enemy
0000109A  B381                     144      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000109C  3239 00001F30            145      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000010A2  23C1 00001F54            146      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000010A8                           147  
000010A8  B381                     148      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000010AA  3239 00001F32            149      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000010B0  82FC 0002                150      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000010B4  23C1 00001F58            151      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
000010BA                           152  
000010BA                           153      ; Initialise the starting enemy width and height
000010BA  33FC 000C 00001F8E       154      MOVE.W  #12,        ENEMY_WIDTH ; Enemy Width
000010C2  33FC 000C 00001F90       155      MOVE.W  #12,        ENEMY_HEIGHT ; Enemy Height
000010CA                           156  
000010CA                           157      ; Initial Position for Flying Enemy
000010CA  B381                     158      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000010CC  3239 00001F30            159      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000010D2  23C1 00001F64            160      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
000010D8                           161  
000010D8  B381                     162      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000010DA  3239 00001F32            163      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000010E0  82FC 0002                164      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000010E4  0441 003C                165      SUB.W   #60,        D1
000010E8  23C1 00001F68            166      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
000010EE                           167      
000010EE                           168      ; Initial Flying enemy width and height
000010EE  33FC 0014 00001F92       169      MOVE.W  #20,        FLYENEMY_WIDTH ; Enemy Width
000010F6  33FC 000C 00001F94       170      MOVE.W  #12,        FLYENEMY_HEIGHT ; Enemy Height
000010FE                           171      ; Initial Position for Health pack
000010FE  B381                     172      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00001100  3239 00001F30            173      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00001106  0481 FFFFFFFF            174      SUB.L   #-1,        D1
0000110C  23C1 00001F5C            175      MOVE.L  D1,         HEALTH_X     ; Enemy X Position
00001112                           176  
00001112  B381                     177      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00001114  3239 00001F32            178      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000111A  82FC 0002                179      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000111E  23C1 00001F60            180      MOVE.L  D1,         HEALTH_Y     ; Enemy Y Position
00001124                           181  
00001124                           182  
00001124  45F9 00001F20            183      LEA    LEVELS,      A2
0000112A  13FC 0005 00001F78       184      MOVE.B  #05,        LIVES
00001132  13FC 0002 00001F79       185      MOVE.B  #02,        POINTS
0000113A  13FC 0000 00001F19       186      MOVE.B  #00,        DRAW_HEALTHPACKS
00001142  13FC 0000 00001F1A       187      MOVE.B  #00,        SPAWN_HEALTHPACKS
0000114A  33FC 0140 00001FDA       188      MOVE.W  #320,       Z
00001152  33FC 0004 00001FDC       189      MOVE.W  #4,         SCALER   
0000115A  33FC FFB0 00001FDE       190      MOVE.W  #-80,       WIDTH     
00001162                           191  
00001162  4281                     192      CLR.L   D1
00001164                           193      ; load tree 
00001164  7032                     194      MOVE.L  #50,D0
00001166  4E4F                     195      TRAP    #15
00001168  43F9 00001FE0            196      LEA     title,A1
0000116E  7033                     197      MOVE.L  #51,D0
00001170  4E4F                     198      TRAP    #15
00001172                           199      
00001172  43F9 00001FF4            200      LEA     SPRITE_DATA,A1
00001178  243C 000007B6            201      MOVE.L  #1974,D2
0000117E  7035                     202      MOVE.L  #53,D0
00001180  4E4F                     203      TRAP #15
00001182                           204  
00001182                           205  
00001182                           206      ; Enable the screen back buffer(see easy 68k help)
00001182  103C 005C                207      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
00001186  123C 0011                208      MOVE.B  #17,        D1          ; Combine Tasks
0000118A  4E4F                     209      TRAP    #15                     ; Trap (Perform action)
0000118C                           210          
0000118C                           211      ; Clear the screen (see easy 68k help)
0000118C  103C 000B                212      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001190  323C FF00                213      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001194  4E4F                     214      TRAP    #15                     ; Trap (Perform action)
00001196                           215  
00001196                           216  
00001196                           217  *-----------------------------------------------------------
00001196                           218  * Subroutine    : Game
00001196                           219  * Description   : Game including main GameLoop. GameLoop is like
00001196                           220  * a while loop in that it runs forever until interupted
00001196                           221  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
00001196                           222  *-----------------------------------------------------------
00001196                           223  GAME:
00001196                           224     
00001196                           225  STARTSCREEN:
00001196                           226           
00001196                           227      ;MOVE.L     #$01090000,D2
00001196                           228      ;MOVE.L     #$00FFFFFF,D1
00001196                           229      ;MOVE.B     #21,D0
00001196                           230      ;TRAP       #15
00001196                           231       
00001196                           232       ;INCLUDE    "ROTATINGSQUARE.X68"
00001196                           233       ;MOVE.B     #04,D0
00001196                           234       ;TRAP       #15
00001196                           235      
00001196                           236  GAMELOOP:
00001196                           237      ; Main Gameloop
00001196  23FC 00000BB8 00001FF0   238      MOVE.L      #3000,timer
000011A0                           239  DELAY:     
000011A0  53B9 00001FF0            240      SUBI.L      #1,timer            ; decrement timer by 1 to simulate a delay
000011A6  4AB9 00001FF0            241      TST.L       timer            ; compare 0 to the value of timer
000011AC  66F2                     242      BNE         DELAY               ; branch back to DELAY if the previous compare was not equal
000011AE                           243  
000011AE  6100 0014                244      BSR     INPUT                   ; Check Keyboard Input
000011B2  6100 00B8                245      BSR     UPDATE                  ; Update positions and points
000011B6  6100 0548                246      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
000011BA  6100 08E8                247      BSR     CHECK_COLLISIONS        ; Check for Collisions
000011BE  6100 02E2                248      BSR     DRAW                    ; Draw the Scene
000011C2                           249                  ; Loop back to GameLoop
000011C2  60D2                     250      BRA     GAMELOOP    
000011C4                           251      
000011C4                           252  *-----------------------------------------------------------
000011C4                           253  * Subroutine    : Input
000011C4                           254  * Description   : Process Keyboard Input
000011C4                           255  *-----------------------------------------------------------
000011C4                           256  INPUT:
000011C4  103C 0013                257      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000011C8  223C 41444C20            258      MOVE.L  #$41444C20, D1          ; Check for A, D and Spacebar
000011CE  4E4F                     259      TRAP    #15                     ; Trap (Perform action)
000011D0  23C1 00001F34            260      MOVE.L  D1,         CURRENT_KEY ; Put Current Key in Memory
000011D6                           261  
000011D6  0801 0018                262      BTST.L  #24,D1
000011DA                           263      IF <NE> THEN
000011DE  6100 0144                264          BSR    MOVE_PLAYER_LEFT
000011E2                           265      ENDI
000011E2                           266  
000011E2  2239 00001F34            267      MOVE.L  CURRENT_KEY, D1
000011E8  0801 0010                268      BTST.L  #16,D1
000011EC                           269      IF <NE> THEN
000011F0  6100 0150                270          BSR    MOVE_PLAYER_RIGHT
000011F4                           271      ENDI
000011F4                           272  
000011F4  2239 00001F34            273      MOVE.L  CURRENT_KEY, D1
000011FA  0801 0008                274      BTST.L  #8,D1
000011FE                           275      IF <NE> THEN
00001202  6100 0260                276          BSR    PERFORM_ATTACK
00001206                           277      ENDI
00001206                           278  
00001206  2239 00001F34            279      MOVE.L  CURRENT_KEY, D1
0000120C  0801 0000                280      BTST.L  #0,D1
00001210                           281      IF <NE> THEN
00001214  6100 053E                282          BSR    JUMP
00001218                           283      ENDI
00001218                           284      
00001218                           285      ; Process Input
00001218  4281                     286      CLR.L   D1                      ; Clear Data Register
0000121A  4282                     287      CLR.L   D2
0000121C  103C 0013                288      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
00001220  4E4F                     289      TRAP    #15                     ; Trap (Perform action)
00001222  1401                     290      MOVE.B  D1,         D2          ; Move last key D1 to D2
00001224  B43C 0000                291      CMP.B   #00,        D2          ; Key is pressed
00001228  6700 000E                292      BEQ     PROCESS_INPUT           ; Process Key
0000122C  4E4F                     293      TRAP    #15                     ; Trap for Last Key
0000122E                           294      ; Check if key still pressed
0000122E  B23C 00FF                295      CMP.B   #$FF,       D1          ; Is it still pressed
00001232  6700 0004                296      BEQ     PROCESS_INPUT           ; Process Last Key
00001236  4E75                     297      RTS                             ; Return to subroutine
00001238                           298  *-----------------------------------------------------------
00001238                           299  * Subroutine    : Process Input
00001238                           300  * Description   : Branch based on keys pressed
00001238                           301  *-----------------------------------------------------------
00001238                           302  PROCESS_INPUT:
00001238  23C2 00001F34            303      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
0000123E                           304  
0000123E  0CB9 0000001B 00001F34   305      CMP.L   #ESCAPE,    CURRENT_KEY ; Is Current Key Escape
00001248  6700 0C02                306      BEQ     EXIT                    ; Exit if Escape
0000124C  4A39 00001F78            307      TST.B   LIVES
00001252  6700 0008                308      BEQ     PROCESS_RESTART
00001256  6000 0520                309      BRA     IDLE                    ; Or Idle
0000125A  4E75                     310      RTS                             ; Return to subroutine
0000125C                           311  
0000125C                           312  PROCESS_RESTART:
0000125C  0CB9 00000052 00001F34   313      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
00001266  6700 FD98                314      BEQ     INITIALISE
0000126A  4E75                     315      RTS                             ; Return to subroutine
0000126C                           316  *-----------------------------------------------------------
0000126C                           317  * Subroutine    : Update
0000126C                           318  * Description   : Main update loop update Player and Enemies
0000126C                           319  *-----------------------------------------------------------
0000126C                           320  UPDATE:
0000126C                           321      ; Update the Players Positon based on Velocity and Gravity
0000126C  4281                     322      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000126E  2239 00001F46            323      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00001274  2439 00001F4A            324      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
0000127A  D282                     325      ADD.L   D2,         D1          ; Add Gravity to Velocity
0000127C  23C1 00001F46            326      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00001282  D2B9 00001F3E            327      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
00001288  23C1 00001F3E            328      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
0000128E  23C1 00001F84            329      MOVE.L  D1,         ATTACK_Y 
00001294                           330  
00001294                           331  
00001294                           332      ; Move the Enemy
00001294  4281                     333      CLR.L   D1                      ; Clear the contents of D0
00001296  2239 00001F54            334      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
0000129C  B2BC 00000000            335      CMP.L   #00,        D1
000012A2  6F00 014E                336      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
000012A6  6100 00D2                337      BSR     MOVE_ENEMY              ; Move the Enemy
000012AA                           338  
000012AA                           339      ; Move flying enemy
000012AA  4281                     340      CLR.L   D1                      ; Clear the contents of D0
000012AC  2239 00001F64            341      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
000012B2  B2BC 00000000            342      CMP.L   #00,        D1
000012B8  6F00 0162                343      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
000012BC                           344  
000012BC  0CB9 00000000 00001F5C   345      CMP.L   #00,        HEALTH_X
000012C6  6F00 0182                346      BLE     RESET_HEALTH_POSITION
000012CA  6100 00A6                347      BSR     MOVE_HEALTHPACK
000012CE                           348  
000012CE  B381                     349      EOR.L   D1,D1
000012D0  3239 00001FDE            350      MOVE.W  WIDTH,D1
000012D6  B279 00001FDA            351      CMP.W   Z,D1
000012DC  6C00 0082                352      BGE     RESET_TREE
000012E0  6100 0088                353      BSR     MOVE_TREE
000012E4                           354  
000012E4  6100 0020                355      BSR     CHECK_ATTACK_COOLDOWN
000012E8                           356  
000012E8  4A79 00001F7E            357      TST.W   ATTACK_TIME
000012EE  6600 0024                358      BNE     ATTACK_TIME_SUB
000012F2  13FC 0000 00001F7A       359      MOVE.B  #00,        CURRENTLYATTACKING
000012FA  23FC 000001E0 00001F84   360      MOVE.L  #480,        ATTACK_Y
00001304                           361  
00001304  4E75                     362      RTS                             ; Return to subroutine  
00001306                           363  
00001306                           364  CHECK_ATTACK_COOLDOWN:
00001306  0C79 0000 00001F7C       365      CMP.W   #0, ATTACK_COOLDOWN
0000130E  6E00 000C                366      BGT     ATTACK_COOLDOWN_SUB
00001312  4E75                     367      RTS
00001314                           368  
00001314                           369  ATTACK_TIME_SUB:
00001314  5579 00001F7E            370      SUB.W   #02,        ATTACK_TIME
0000131A  4E75                     371      RTS   
0000131C                           372  ATTACK_COOLDOWN_SUB:
0000131C  5579 00001F7C            373      SUB.W   #02,        ATTACK_COOLDOWN
00001322  4E75                     374      RTS                            
00001324                           375  
00001324                           376  MOVE_PLAYER_LEFT:
00001324  13FC 0001 00001F52       377      MOVE.B  #LOOKLEFT,        PLAYER_DIR
0000132C  2239 00001F3A            378      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00001332  5581                     379      SUB.L   #02,        D1          ; Move Player Left
00001334  23C1 00001F3A            380      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
0000133A  55B9 00001F80            381      SUB.L   #02,        ATTACK_X
00001340  4E75                     382      RTS                             ; Return to subroutine    
00001342                           383  
00001342                           384  MOVE_PLAYER_RIGHT:
00001342  13FC 0002 00001F52       385      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
0000134A  2239 00001F3A            386      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00001350  5481                     387      ADD.L   #02,        D1          ; Move Player Right
00001352  23C1 00001F3A            388      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00001358  54B9 00001F80            389      ADD.L   #02,        ATTACK_X
0000135E  4E75                     390      RTS                             ; Return to subroutine
00001360                           391  
00001360                           392  RESET_TREE:
00001360  33FC 0280 00001FDA       393      MOVE.W  #640,Z
00001368  4E75                     394      RTS
0000136A                           395  
0000136A                           396  MOVE_TREE:
0000136A  5379 00001FDA            397      SUB.W  #01,Z
00001370  4E75                     398      RTS
00001372                           399  
00001372                           400  MOVE_HEALTHPACK:
00001372  55B9 00001F5C            401      SUB.L   #02,        HEALTH_X
00001378  4E75                     402      RTS
0000137A                           403  
0000137A                           404  *-----------------------------------------------------------
0000137A                           405  * Subroutine    : Move Enemy
0000137A                           406  * Description   : Move Enemy Right to Left
0000137A                           407  *-----------------------------------------------------------
0000137A                           408  MOVE_ENEMY:
0000137A  45F9 00001F20            409      LEA     LEVELS,      A2
00001380  2A39 00001F42            410      MOVE.L  PLAYER_SCORE,   D5
00001386  2C1A                     411      MOVE.L  (A2)+,       D6
00001388  BA86                     412      CMP.L   D6,   D5
0000138A  6E00 004C                413      BGT     MOVE_ENEMY_L4
0000138E  2C1A                     414      MOVE.L  (A2)+,       D6
00001390  BA86                     415      CMP.L   D6,   D5
00001392  6E00 002E                416      BGT     MOVE_ENEMY_L3
00001396  2C1A                     417      MOVE.L  (A2)+,       D6
00001398  BA86                     418      CMP.L   D6,   D5
0000139A  6E00 0010                419      BGT     MOVE_ENEMY_L2
0000139E  57B9 00001F64            420      SUB.L   #03,        FLYINGENEMY_X
000013A4  55B9 00001F54            421      SUB.L   #02,        ENEMY_X     ; Move enemy by X Value
000013AA  4E75                     422      RTS
000013AC                           423  
000013AC                           424  MOVE_ENEMY_L2:
000013AC  57B9 00001F64            425      SUB.L   #03,        FLYINGENEMY_X
000013B2  59B9 00001F54            426      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
000013B8  13FC 0003 00001F79       427      MOVE.B  #03,        POINTS
000013C0  4E75                     428      RTS
000013C2                           429  
000013C2                           430  MOVE_ENEMY_L3:
000013C2  5FB9 00001F64            431      SUB.L   #07,        FLYINGENEMY_X
000013C8  5BB9 00001F54            432      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
000013CE  13FC 0005 00001F79       433      MOVE.B  #05,        POINTS
000013D6  4E75                     434      RTS
000013D8                           435  
000013D8                           436  MOVE_ENEMY_L4:
000013D8  04B9 0000000A 00001F64   437      SUB.L   #10,        FLYINGENEMY_X
000013E2  51B9 00001F54            438      SUB.L   #08,        ENEMY_X     ; Move enemy by X Value
000013E8  13FC 000A 00001F79       439      MOVE.B  #10,        POINTS
000013F0  4E75                     440      RTS
000013F2                           441  *-----------------------------------------------------------
000013F2                           442  * Subroutine    : Reset Enemy
000013F2                           443  * Description   : Reset Enemy if to passes 0 to Right of Screen
000013F2                           444  *-----------------------------------------------------------
000013F2                           445  RESET_ENEMY_POSITION:
000013F2  4281                     446      CLR.L   D1       
000013F4  3239 00001F32            447      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000013FA  82FC 0002                448      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000013FE  23C1 00001F58            449      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
00001404  13FC 0000 00001F89       450      MOVE.B  #0,         ENEMY_HIT
0000140C                           451  
0000140C  B381                     452      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
0000140E  3239 00001F30            453      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00001414  23C1 00001F54            454      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
0000141A  4E75                     455      RTS
0000141C                           456  
0000141C                           457  RESET_FLYENEMY_POSITION:
0000141C  B381                     458      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000141E  3239 00001F32            459      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001424  82FC 0002                460      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001428  0441 003C                461      SUB.W   #60,        D1
0000142C  23C1 00001F68            462      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00001432  13FC 0000 00001F8A       463      MOVE.B  #0,         FLYENEMY_HIT
0000143A                           464  
0000143A  4281                     465      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000143C  3239 00001F30            466      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00001442  23C1 00001F64            467      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
00001448  4E75                     468      RTS
0000144A                           469      
0000144A                           470  RESET_HEALTH_POSITION:
0000144A  13FC 0001 00001F19       471      MOVE.B  #01,        DRAW_HEALTHPACKS
00001452  4281                     472      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001454  3239 00001F30            473      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000145A  23C1 00001F5C            474      MOVE.L  D1,         HEALTH_X     ; healthpack X Position
00001460  4E75                     475      RTS
00001462                           476  
00001462                           477  CONTINUE:
00001462  4E75                     478      RTS
00001464                           479  
00001464                           480  PERFORM_ATTACK:
00001464  4A79 00001F7C            481      TST.W    ATTACK_COOLDOWN
0000146A  66F6                     482      BNE      CONTINUE
0000146C                           483      
0000146C  13FC 0001 00001F7A       484      MOVE.B   #01, CURRENTLYATTACKING
00001474  33FC 0032 00001F7E       485      MOVE.W   #50, ATTACK_TIME
0000147C  33FC 004C 00001F7C       486      MOVE.W   #76, ATTACK_COOLDOWN
00001484                           487  
00001484  23F9 00001F3A 00001F80   488      MOVE.L   PLAYER_X,ATTACK_X
0000148E  06B9 00000014 00001F80   489      ADDI.L   #PLYR_W_INIT,ATTACK_X
00001498  23F9 00001F3E 00001F84   490      MOVE.L   PLAYER_Y,ATTACK_Y
000014A2                           491      ;SUBI.L   #PLYR_H_INIT-20,ATTACK_Y
000014A2                           492  *-----------------------------------------------------------
000014A2                           493  * Subroutine    : Draw
000014A2                           494  * Description   : Draw Screen
000014A2                           495  *-----------------------------------------------------------
000014A2                           496  DRAW: 
000014A2                           497      ; Enable back buffer
000014A2  103C 005E                498      MOVE.B  #TC_REDRAW,        D0
000014A6  4E4F                     499      TRAP    #15
000014A8                           500  
000014A8                           501      ; Clear the screen
000014A8  103C 000B                502      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000014AC  323C FF00                503      MOVE.W  #$FF00,     D1          ; Clear contents
000014B0  4E4F                     504      TRAP    #15                     ; Trap (Perform action)
000014B2                           505  
000014B2  123C 0001                506      MOVE.B  #1,D1
000014B6  103C 005D                507      MOVE.B  #93,D0
000014BA  4E4F                     508      TRAP    #15
000014BC  6100 001C                509      BSR     DRAW_BACKGROUND         
000014C0  6100 00C0                510      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
000014C4  6100 034A                511      BSR     DRAW_PLAYER             ; Draw Player
000014C8  6100 03D4                512      BSR     DRAW_ENEMY              ; Draw Enemy
000014CC  6100 0414                513      BSR     DRAW_FLYENEMY
000014D0  6100 0454                514      BSR     DRAW_HEALTHPACK
000014D4  6100 04D2                515      BSR     DRAW_FLOOR              ; Draw Floor
000014D8  4E75                     516      RTS                             ; Return to subroutine
000014DA                           517  
000014DA                           518  
000014DA                           519  DRAW_BACKGROUND:
000014DA  4281                     520      CLR.L       D1
000014DC  223C 00FFE2B0            521      MOVE.L      #SKY,D1
000014E2  103C 0051                522      MOVE.B      #81,D0
000014E6  4E4F                     523      TRAP        #15
000014E8                           524  
000014E8  7200                     525      MOVE.L      #00, D1
000014EA  7400                     526      MOVE.L      #00, D2
000014EC  7059                     527      MOVE.L      #89, D0
000014EE  4E4F                     528      TRAP        #15
000014F0                           529      
000014F0  223C 0019506D            530      MOVE.L     #BROWN,D1
000014F6  243C 01110000            531      MOVE.L     #$01110000,D2
000014FC  103C 0015                532      MOVE.B     #21,D0
00001500  4E4F                     533      TRAP       #15
00001502                           534      
00001502                           535  
00001502  B381                     536      EOR.L      D1,D1
00001504  143C 0005                537      MOVE.B     #5,D2
00001508  33FC 300B 00001FD4       538      MOVE.W     #$300B,TRUNK
00001510                           539  TREE_LOOP:
00001510  700B                     540      MOVE.L     #TC_CURSR_P,D0
00001512  3239 00001FD4            541      MOVE.W     TRUNK,D1
00001518  5379 00001FD4            542      SUBQ.W      #01,TRUNK
0000151E  4E4F                     543      TRAP       #15
00001520                           544     
00001520  43F9 00001EED            545      LEA         TREET, A1
00001526  700E                     546      MOVE.L      #14, D0
00001528  4E4F                     547      TRAP        #15
0000152A                           548  
0000152A  5302                     549      SUBQ.B      #01,D2
0000152C  B43C 0000                550      CMP.B       #00,D2
00001530  66DE                     551      BNE         TREE_LOOP
00001532                           552  
00001532  223C 00566D19            553      MOVE.L     #GREEN,D1
00001538  243C 01110000            554      MOVE.L     #$01110000,D2
0000153E  103C 0015                555      MOVE.B     #21,D0
00001542  4E4F                     556      TRAP       #15
00001544                           557  
00001544  163C 0005                558      MOVE.B     #5,D3
00001548                           559  TREE_LEAVES_Y:
00001548  13FC 002D 00001FD4       560      MOVE.B     #$2D,TRUNK
00001550  143C 0008                561      MOVE.B     #8,D2
00001554                           562  TREE_LEAVES_X:
00001554  700B                     563      MOVE.L     #TC_CURSR_P,D0
00001556  3239 00001FD4            564      MOVE.W     TRUNK,D1
0000155C  5239 00001FD4            565      ADDQ.B     #01,TRUNK
00001562  4E4F                     566      TRAP       #15
00001564                           567     
00001564  7240                     568      MOVE.L      #$40, D1
00001566  7006                     569      MOVE.L      #6, D0
00001568  4E4F                     570      TRAP        #15
0000156A                           571  
0000156A  5302                     572      SUBQ.B      #01,D2
0000156C  B43C 0000                573      CMP.B       #00,D2
00001570  66E2                     574      BNE         TREE_LEAVES_X
00001572  5303                     575      SUB.B       #01,D3
00001574  5379 00001FD4            576      SUB.W       #01,TRUNK
0000157A  B63C 0000                577      CMP.B       #00,D3
0000157E  66C8                     578      BNE         TREE_LEAVES_Y
00001580  4E75                     579      RTS
00001582                           580  *-----------------------------------------------------------
00001582                           581  * Subroutine    : Draw Player Data
00001582                           582  * Description   : Draw Player X, Y, Velocity, Gravity and OnGround
00001582                           583  *-----------------------------------------------------------
00001582                           584  DRAW_PLYR_DATA:
00001582  B381                     585      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00001584  B582                     586      EOR.L    D2,D2
00001586                           587  
00001586                           588  
00001586  7200                     589      MOVE.L  #BLACK,     D1
00001588  103C 0015                590      MOVE.B  #21,        D0          ; Set Text Color
0000158C  4E4F                     591      TRAP    #15                     ; Trap (Perform action)
0000158E                           592  
0000158E  223C 00FFE2B0            593      MOVE.L  #SKY,       D1          ; Set Text Color
00001594  7051                     594      MOVE.L  #81,        D0          ; Set Text Color
00001596  4E4F                     595      TRAP    #15                     ; Trap (Perform action)
00001598                           596  
00001598                           597      ; Player Score Message
00001598  103C 000B                598      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000159C  323C 0201                599      MOVE.W  #$0201,     D1          ; Col 02, Row 01
000015A0  4E4F                     600      TRAP    #15                     ; Trap (Perform action)
000015A2  43F9 00001E66            601      LEA     SCORE_MSG,  A1          ; Score Message
000015A8  303C 000D                602      MOVE    #13,        D0          ; No Line feed
000015AC  4E4F                     603      TRAP    #15                     ; Trap (Perform action)
000015AE                           604  
000015AE                           605      ; Player Score Value
000015AE  103C 000B                606      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000015B2  323C 0901                607      MOVE.W  #$0901,     D1          ; Col 09, Row 01
000015B6  4E4F                     608      TRAP    #15                     ; Trap (Perform action)
000015B8  103C 0003                609      MOVE.B  #03,        D0          ; Display number at D1.L
000015BC  2239 00001F42            610      MOVE.L  PLAYER_SCORE,D1         ; Move Score to D1.L
000015C2  4E4F                     611      TRAP    #15                     ; Trap (Perform action)
000015C4                           612      
000015C4                           613      ; Player X Message
000015C4  103C 000B                614      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000015C8  323C 0202                615      MOVE.W  #$0202,     D1          ; Col 02, Row 02
000015CC  4E4F                     616      TRAP    #15                     ; Trap (Perform action)
000015CE  43F9 00001EA0            617      LEA     X_MSG,      A1          ; X Message
000015D4  303C 000D                618      MOVE    #13,        D0          ; No Line feed
000015D8  4E4F                     619      TRAP    #15                     ; Trap (Perform action)
000015DA                           620      
000015DA                           621      ; Player X
000015DA  103C 000B                622      MOVE.B  #TC_CURSR_P, D0          ; Set Cursor Position
000015DE  323C 0502                623      MOVE.W  #$0502,     D1          ; Col 05, Row 02
000015E2  4E4F                     624      TRAP    #15                     ; Trap (Perform action)
000015E4  103C 0003                625      MOVE.B  #03,        D0          ; Display number at D1.L
000015E8  2239 00001F5C            626      MOVE.L  HEALTH_X,   D1          ; Move X to D1.L
000015EE  4E4F                     627      TRAP    #15                     ; Trap (Perform action)
000015F0                           628      
000015F0                           629      ; Player Y Message
000015F0  103C 000B                630      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000015F4  323C 1002                631      MOVE.W  #$1002,     D1          ; Col 10, Row 02
000015F8  4E4F                     632      TRAP    #15                     ; Trap (Perform action)
000015FA  43F9 00001EA3            633      LEA     Y_MSG,      A1          ; Y Message
00001600  303C 000D                634      MOVE    #13,        D0          ; No Line feed
00001604  4E4F                     635      TRAP    #15                     ; Trap (Perform action)
00001606                           636      
00001606                           637      ; Player Y
00001606  103C 000B                638      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000160A  323C 1202                639      MOVE.W  #$1202,     D1          ; Col 12, Row 02
0000160E  4E4F                     640      TRAP    #15                     ; Trap (Perform action)
00001610  103C 0003                641      MOVE.B  #03,        D0          ; Display number at D1.L
00001614  2239 00001F68            642      MOVE.L  FLYINGENEMY_Y,   D1          ; Move X to D1.L
0000161A  4E4F                     643      TRAP    #15                     ; Trap (Perform action) 
0000161C                           644  
0000161C                           645      ; Player Velocity Message
0000161C  103C 000B                646      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001620  323C 0203                647      MOVE.W  #$0203,     D1          ; Col 02, Row 03
00001624  4E4F                     648      TRAP    #15                     ; Trap (Perform action)
00001626  43F9 00001EA6            649      LEA     V_MSG,      A1          ; Velocity Message
0000162C  303C 000D                650      MOVE    #13,        D0          ; No Line feed
00001630  4E4F                     651      TRAP    #15                     ; Trap (Perform action)
00001632                           652      
00001632                           653      ; Player Velocity
00001632  103C 000B                654      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001636  323C 0503                655      MOVE.W  #$0503,     D1          ; Col 05, Row 03
0000163A  4E4F                     656      TRAP    #15                     ; Trap (Perform action)
0000163C  103C 0003                657      MOVE.B  #03,        D0          ; Display number at D1.L
00001640  2239 00001F46            658      MOVE.L  PLYR_VELOCITY,D1        ; Move X to D1.L
00001646  4E4F                     659      TRAP    #15                     ; Trap (Perform action)
00001648                           660      
00001648                           661      ; Player Gravity Message
00001648  103C 000B                662      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000164C  323C 1003                663      MOVE.W  #$1003,     D1          ; Col 10, Row 03
00001650  4E4F                     664      TRAP    #15                     ; Trap (Perform action)
00001652  43F9 00001EA9            665      LEA     VARMSG,      A1          ; G Message
00001658  303C 000D                666      MOVE    #13,        D0          ; No Line feed
0000165C  4E4F                     667      TRAP    #15                     ; Trap (Perform action)
0000165E                           668      
0000165E                           669      ; Player Gravity
0000165E  103C 000B                670      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001662  323C 1903                671      MOVE.W  #$1903,     D1          ; Col 12, Row 03
00001666  4E4F                     672      TRAP    #15                     ; Trap (Perform action)
00001668  103C 0003                673      MOVE.B  #03,        D0          ; Display number at D1.L
0000166C  4281                     674      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000166E  1239 00001F7C            675      MOVE.B  ATTACK_COOLDOWN,D1         ; Move Gravity to D1.L
00001674  4E4F                     676      TRAP    #15                     ; Trap (Perform action)
00001676                           677  
00001676                           678      ; Player On Ground Message
00001676  103C 000B                679      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000167A  323C 0204                680      MOVE.W  #$0204,     D1          ; Col 10, Row 03
0000167E  4E4F                     681      TRAP    #15                     ; Trap (Perform action)
00001680  43F9 00001EAE            682      LEA     GND_MSG,    A1          ; On Ground Message
00001686  303C 000D                683      MOVE    #13,        D0          ; No Line feed
0000168A  4E4F                     684      TRAP    #15                     ; Trap (Perform action)
0000168C                           685      
0000168C                           686      ; Player On Ground
0000168C  103C 000B                687      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001690  323C 1504                688      MOVE.W  #$1504,     D1          ; Col 06, Row 04
00001694  4E4F                     689      TRAP    #15                     ; Trap (Perform action)
00001696  103C 0003                690      MOVE.B  #03,        D0          ; Display number at D1.L
0000169A  4281                     691      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000169C  1239 00001F88            692      MOVE.B  ENEMIES_DEFEATED,     D1          ; Move Play on Ground ? to D1.L
000016A2  4E4F                     693      TRAP    #15                     ; Trap (Perform action)
000016A4                           694  
000016A4                           695      ; Show Keys Pressed
000016A4  103C 000B                696      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016A8  323C 2001                697      MOVE.W  #$2001,     D1          ; Col 20, Row 1
000016AC  4E4F                     698      TRAP    #15                     ; Trap (Perform action)
000016AE  43F9 00001E6F            699      LEA     KEYCODE_MSG, A1         ; Keycode
000016B4  303C 000D                700      MOVE    #13,        D0          ; No Line feed
000016B8  4E4F                     701      TRAP    #15                     ; Trap (Perform action)
000016BA                           702  
000016BA                           703      ; Show KeyCode
000016BA  103C 000B                704      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016BE  323C 3001                705      MOVE.W  #$3001,     D1          ; Col 30, Row 1
000016C2  4E4F                     706      TRAP    #15                     ; Trap (Perform action)    
000016C4  2239 00001F34            707      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
000016CA  103C 0003                708      MOVE.B  #03,        D0          ; Display the contents of D1
000016CE  4E4F                     709      TRAP    #15                     ; Trap (Perform action)
000016D0                           710  
000016D0                           711      ; Show Lives msg
000016D0  103C 000B                712      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016D4  323C 0207                713      MOVE.W  #$0207,     D1          ; Col 02, Row 06
000016D8  4E4F                     714      TRAP    #15                     ; Trap (Perform action)
000016DA  43F9 00001F0E            715      LEA     LIVES_MSG,   A1          ; Draw
000016E0  303C 000D                716      MOVE    #13,        D0          ; No Line feed
000016E4  4E4F                     717      TRAP    #15                     ; Trap (Perform action)  
000016E6                           718      
000016E6                           719      ; Show Lives msg
000016E6  103C 000B                720      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016EA  323C 0A07                721      MOVE.W  #$0A07,     D1          ; Col 30, Row 1
000016EE  4E4F                     722      TRAP    #15                     ; Trap (Perform action)   
000016F0  B381                     723      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
000016F2  1239 00001F78            724      MOVE.B  LIVES,      D1          ; Move Key Pressed to D1
000016F8  103C 0003                725      MOVE.B  #03,        D0          ; Display the contents of D1
000016FC  4E4F                     726      TRAP    #15                     ; Trap (Perform action)
000016FE                           727  
000016FE  4E75                     728      RTS
00001700                           729  *-----------------------------------------------------------
00001700                           730  * Subroutine    : Player is on Ground
00001700                           731  * Description   : Check if the Player is on or off Ground
00001700                           732  *-----------------------------------------------------------
00001700                           733  IS_PLAYER_ON_GND:
00001700                           734      ; Check if Player is on Ground
00001700  4281                     735      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001702  4282                     736      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
00001704  3239 00001F32            737      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
0000170A  82FC 0002                738      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000170E  2439 00001F3E            739      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
00001714  B441                     740      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
00001716  6C00 0008                741      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
0000171A  6D00 002C                742      BLT     SET_OFF_GROUND          ; The Player is off the Ground
0000171E  4E75                     743      RTS                             ; Return to subroutine
00001720                           744  
00001720                           745  
00001720                           746  *-----------------------------------------------------------
00001720                           747  * Subroutine    : On Ground
00001720                           748  * Description   : Set the Player On Ground
00001720                           749  *-----------------------------------------------------------
00001720                           750  SET_ON_GROUND:
00001720  4281                     751      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001722  3239 00001F32            752      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001728  82FC 0002                753      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000172C  23C1 00001F3E            754      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00001732  4281                     755      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001734  7200                     756      MOVE.L  #00,        D1          ; Player Velocity
00001736  23C1 00001F46            757      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
0000173C  23FC 00000001 00001F4E   758      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
00001746  4E75                     759      RTS
00001748                           760  
00001748                           761  *-----------------------------------------------------------
00001748                           762  * Subroutine    : Off Ground
00001748                           763  * Description   : Set the Player Off Ground
00001748                           764  *-----------------------------------------------------------
00001748                           765  SET_OFF_GROUND:
00001748  23FC 00000000 00001F4E   766      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00001752  4E75                     767      RTS                             ; Return to subroutine
00001754                           768  *-----------------------------------------------------------
00001754                           769  * Subroutine    : Jump
00001754                           770  * Description   : Perform a Jump
00001754                           771  *-----------------------------------------------------------
00001754                           772  JUMP:
00001754  0CB9 00000001 00001F4E   773      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
0000175E  6700 0006                774      BEQ     PERFORM_JUMP            ; Do Jump
00001762  6000 0012                775      BRA     JUMP_DONE               ;
00001766                           776  PERFORM_JUMP:
00001766  6100 0042                777      BSR     PLAY_JUMP               ; Play jump sound
0000176A  23FC FFFFFFED 00001F46   778      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00001774  4E75                     779      RTS                             ; Return to subroutine
00001776                           780  JUMP_DONE:
00001776  4E75                     781      RTS                             ; Return to subroutine
00001778                           782  
00001778                           783  *-----------------------------------------------------------
00001778                           784  * Subroutine    : Idle
00001778                           785  * Description   : Perform a Idle
00001778                           786  *----------------------------------------------------------- 
00001778                           787  IDLE:
00001778  4E75                     788      RTS                             ; Return to subroutine
0000177A                           789  
0000177A                           790  *-----------------------------------------------------------
0000177A                           791  * Subroutines   : Sound Load and Play
0000177A                           792  * Description   : Initialise game sounds into memory 
0000177A                           793  * Current Sounds are RUN, JUMP and Opps for Collision
0000177A                           794  *-----------------------------------------------------------
0000177A                           795  GAMEOVER_LOAD:
0000177A  43F9 00001F9F            796      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00001780  323C 0000                797      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00001784  303C 004A                798      MOVE    #74,        D0          ; Load into memory
00001788  4E4F                     799      TRAP    #15                     ; Trap (Perform action)
0000178A  4E75                     800      RTS                             ; Return to subroutine
0000178C                           801  
0000178C                           802  PLAY_GAMEOVER:
0000178C  323C 0000                803      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00001790  303C 004B                804      MOVE    #75,        D0          ; Play Sound
00001794  4E4F                     805      TRAP    #15                     ; Trap (Perform action)
00001796  4E75                     806      RTS                             ; Return to subroutine
00001798                           807  
00001798                           808  JUMP_LOAD:
00001798  43F9 00001F96            809      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
0000179E  323C 0001                810      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
000017A2  303C 004A                811      MOVE    #74,        D0          ; Load into memory
000017A6  4E4F                     812      TRAP    #15                     ; Trap (Perform action)
000017A8  4E75                     813      RTS                             ; Return to subroutine
000017AA                           814  
000017AA                           815  PLAY_JUMP:
000017AA  323C 0001                816      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
000017AE  303C 004B                817      MOVE    #75,        D0          ; Play Sound
000017B2  4E4F                     818      TRAP    #15                     ; Trap (Perform action)
000017B4  4E75                     819      RTS                             ; Return to subroutine
000017B6                           820  
000017B6                           821  HITHURT_LOAD:
000017B6  43F9 00001FAC            822      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
000017BC  323C 0002                823      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
000017C0  303C 004A                824      MOVE    #74,        D0          ; Load into memory
000017C4  4E4F                     825      TRAP    #15                     ; Trap (Perform action)
000017C6  4E75                     826      RTS                             ; Return to subroutine
000017C8                           827  
000017C8                           828  PLAY_HITHURT:
000017C8  323C 0002                829      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
000017CC  303C 004B                830      MOVE    #75,        D0          ; Play Sound
000017D0  4E4F                     831      TRAP    #15                     ; Trap (Perform action)
000017D2  4E75                     832      RTS                             ; Return to subroutine
000017D4                           833  
000017D4                           834  POWERUP_LOAD:
000017D4  43F9 00001FB8            835      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
000017DA  323C 0003                836      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
000017DE  303C 004A                837      MOVE    #74,        D0          ; Load into memory
000017E2  4E4F                     838      TRAP    #15                     ; Trap (Perform action)
000017E4  4E75                     839      RTS                             ; Return to subroutine
000017E6                           840  
000017E6                           841  PLAY_POWERUP:
000017E6  323C 0003                842      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
000017EA  303C 004B                843      MOVE    #75,        D0          ; Play Sound
000017EE  4E4F                     844      TRAP    #15                     ; Trap (Perform action)
000017F0  4E75                     845      RTS                             ; Return to subroutine
000017F2                           846  
000017F2                           847  LVLCHANGE_LOAD:
000017F2  43F9 00001FC4            848      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
000017F8  323C 0004                849      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
000017FC  303C 004A                850      MOVE    #74,        D0          ; Load into memory
00001800  4E4F                     851      TRAP    #15                     ; Trap (Perform action)
00001802  4E75                     852      RTS                             ; Return to subroutine
00001804                           853  
00001804                           854  PLAY_LVLCHANGE:
00001804  323C 0004                855      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00001808  303C 004B                856      MOVE    #75,        D0          ; Play Sound
0000180C  4E4F                     857      TRAP    #15                     ; Trap (Perform action)
0000180E  4E75                     858      RTS                             ; Return to subroutine
00001810                           859  
00001810                           860  *-----------------------------------------------------------
00001810                           861  * Subroutine    : Draw Player
00001810                           862  * Description   : Draw Player Square
00001810                           863  *-----------------------------------------------------------
00001810                           864  DRAW_PLAYER:
00001810                           865      ; Set Pixel Colors
00001810  7200                     866      MOVE.L  #BLACK,     D1          ; Set Background color
00001812  103C 0050                867      MOVE.B  #80,        D0          ; Task for Background Color
00001816  4E4F                     868      TRAP    #15                     ; Trap (Perform action)
00001818                           869      ; Reset Pixel Colors
00001818  7200                     870      MOVE.L  #BLACK,     D1          ; Set Background color
0000181A  103C 0051                871      MOVE.B  #81,        D0          ; Task for Background Color
0000181E  4E4F                     872      TRAP    #15                     ; Trap (Perform action)
00001820                           873  
00001820                           874      ; Set X, Y, Width and Height
00001820  2239 00001F3A            875      MOVE.L  PLAYER_X,   D1          ; X
00001826  2439 00001F3E            876      MOVE.L  PLAYER_Y,   D2
0000182C                           877      
0000182C  2639 00001F3A            878      MOVE.L  PLAYER_X,   D3
00001832  B984                     879      EOR.L   D4,D4
00001834  1839 00001F8B            880      MOVE.B   PLAYER_WIDTH,   D4      ; Width
0000183A  D684                     881      ADD.L   D4,D3
0000183C  2839 00001F3E            882      MOVE.L  PLAYER_Y,   D4 
00001842  9839 00001F8C            883      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00001848                           884      
00001848                           885      ; Draw Player
00001848  103C 0057                886      MOVE.B  #87,        D0          ; Draw Player
0000184C  4E4F                     887      TRAP    #15                     ; Trap (Perform action)
0000184E  4A39 00001F7A            888      TST.B   CURRENTLYATTACKING
00001854  6600 0004                889      BNE     DRAW_ATTACK
00001858  4E75                     890      RTS                             ; Return to subroutine
0000185A                           891  
0000185A                           892  DRAW_ATTACK:
0000185A                           893  
0000185A                           894      ; Set Pixel Colors
0000185A  223C 00FFFFFF            895      MOVE.L  #WHITE,     D1          ; Set Background color
00001860  103C 0050                896      MOVE.B  #80,        D0          ; Task for Background Color
00001864  4E4F                     897      TRAP    #15                     ; Trap (Perform action)
00001866                           898      ; Reset Pixel Colors
00001866  223C 00FFFFFF            899      MOVE.L  #WHITE,     D1          ; Set Background color
0000186C  103C 0051                900      MOVE.B  #81,        D0          ; Task for Background Color
00001870  4E4F                     901      TRAP    #15                     ; Trap (Perform action)
00001872                           902  
00001872  2239 00001F80            903      MOVE.L  ATTACK_X,   D1          ; X
00001878  2439 00001F84            904      MOVE.L  ATTACK_Y,   D2
0000187E                           905      
0000187E  2639 00001F80            906      MOVE.L  ATTACK_X,   D3
00001884  0683 00000023            907      ADD.L   #ATTACK_WIDTH,   D3      ; Width
0000188A  2839 00001F84            908      MOVE.L  ATTACK_Y,   D4 
00001890  0484 00000014            909      SUB.L   #ATTACK_HEIGHT,   D4      ; Height          ; Y
00001896                           910      
00001896                           911      ; Draw Player
00001896  103C 0057                912      MOVE.B  #87,        D0          ; Draw Player
0000189A  4E4F                     913      TRAP    #15                     ; Trap (Perform action)
0000189C  4E75                     914      RTS                             ; Return to subroutine
0000189E                           915  
0000189E                           916  *-----------------------------------------------------------
0000189E                           917  * Subroutine    : Draw Enemy
0000189E                           918  * Description   : Draw Enemy Square
0000189E                           919  *-----------------------------------------------------------
0000189E                           920  DRAW_ENEMY:
0000189E                           921      ; Set Pixel Colors
0000189E  2239 00001F6C            922      MOVE.L  ENEMYCOLOR,       D1          ; Set Background color
000018A4  103C 0050                923      MOVE.B  #80,        D0          ; Task for Background Color
000018A8  4E4F                     924      TRAP    #15                     ; Trap (Perform action)
000018AA                           925  
000018AA                           926      ; Reset Pixel Colors
000018AA  2239 00001F6C            927      MOVE.L  ENEMYCOLOR,     D1          ; Set Background color
000018B0  103C 0051                928      MOVE.B  #81,        D0          ; Task for Background Color
000018B4  4E4F                     929      TRAP    #15                     ; Trap (Perform action)
000018B6                           930  
000018B6                           931      ; Set X, Y, Width and Height
000018B6  2239 00001F54            932      MOVE.L  ENEMY_X,    D1          ; X
000018BC  2439 00001F58            933      MOVE.L  ENEMY_Y,    D2          ; Y
000018C2  2639 00001F54            934      MOVE.L  ENEMY_X,    D3
000018C8  D679 00001F8E            935      ADD.W   ENEMY_WIDTH,   D3      ; Width
000018CE  2839 00001F58            936      MOVE.L  ENEMY_Y,    D4 
000018D4  9879 00001F90            937      SUB.W   ENEMY_HEIGHT,   D4      ; Height
000018DA                           938      
000018DA                           939      ; Draw Enemy    
000018DA  103C 0057                940      MOVE.B  #87,        D0          ; Draw Enemy
000018DE  4E4F                     941      TRAP    #15                     ; Trap (Perform action)
000018E0  4E75                     942      RTS                             ; Return to subroutine
000018E2                           943  
000018E2                           944  DRAW_FLYENEMY:
000018E2                           945      ; Set Pixel Colors
000018E2  2239 00001F70            946      MOVE.L  FLYENEMYCOLOR,       D1          ; Set Background color
000018E8  103C 0050                947      MOVE.B  #80,        D0          ; Task for Background Color
000018EC  4E4F                     948      TRAP    #15                     ; Trap (Perform action)
000018EE                           949  
000018EE                           950      ; Reset Pixel Colors
000018EE  2239 00001F70            951      MOVE.L  FLYENEMYCOLOR,     D1          ; Set Background color
000018F4  103C 0051                952      MOVE.B  #81,        D0          ; Task for Background Color
000018F8  4E4F                     953      TRAP    #15                     ; Trap (Perform action)
000018FA                           954  
000018FA                           955      ; Set X, Y, Width and Height
000018FA  2239 00001F64            956      MOVE.L  FLYINGENEMY_X,    D1          ; X
00001900  2439 00001F68            957      MOVE.L  FLYINGENEMY_Y,    D2          ; Y
00001906  2639 00001F64            958      MOVE.L  FLYINGENEMY_X,    D3
0000190C  D679 00001F92            959      ADD.W   FLYENEMY_WIDTH,   D3      ; Width
00001912  2839 00001F68            960      MOVE.L  FLYINGENEMY_Y,    D4 
00001918  9879 00001F94            961      SUB.W   FLYENEMY_HEIGHT,   D4      ; Height
0000191E                           962      
0000191E                           963      ; Draw Enemy    
0000191E  103C 0057                964      MOVE.B  #87,        D0          ; Draw Enemy
00001922  4E4F                     965      TRAP    #15                     ; Trap (Perform action)
00001924  4E75                     966      RTS  
00001926                           967  
00001926                           968  DRAW_HEALTHPACK:
00001926                           969  
00001926  0C39 0000 00001F1A       970      CMP.B   #00,     SPAWN_HEALTHPACKS
0000192E  6700 006C                971      BEQ     DRAW_HEALTHPACK_DONE
00001932  0C39 0000 00001F19       972      CMP.B   #00,     DRAW_HEALTHPACKS
0000193A  6700 0060                973      BEQ     DRAW_HEALTHPACK_DONE
0000193E                           974      
0000193E                           975      ;BSR     RANDOM_NUMBER
0000193E                           976      ;CMP.L   #$80,  D1
0000193E                           977      ;BGT     DRAW_HEALTHPACK_DONE
0000193E                           978  
0000193E  13FC 0001 00001F19       979      MOVE.B  #01,        DRAW_HEALTHPACKS
00001946  3239 00001F32            980      MOVE.W  SCREEN_H,     D1
0000194C  82FC 0002                981      DIVU.W    #02,        D1
00001950  C2BC 0000FFFF            982      AND.L   #$0000FFFF,   D1
00001956  23C1 00001F60            983      MOVE.L  D1,         HEALTH_Y
0000195C                           984      ; Set Pixel Colors
0000195C  7200                     985      MOVE.L  #BLACK,       D1          ; Set Background color
0000195E  103C 0050                986      MOVE.B  #80,        D0          ; Task for Background Color
00001962  4E4F                     987      TRAP    #15                     ; Trap (Perform action)
00001964                           988  
00001964                           989      ; Reset Pixel Colors
00001964  223C 0044FF44            990      MOVE.L  #LIFEGREEN,     D1          ; Set Background color
0000196A  103C 0051                991      MOVE.B  #81,        D0          ; Task for Background Color
0000196E  4E4F                     992      TRAP    #15                     ; Trap (Perform action)
00001970                           993  
00001970                           994      ; Set X, Y, Width and Height
00001970  2239 00001F5C            995      MOVE.L  HEALTH_X,    D1          ; X
00001976  2439 00001F60            996      MOVE.L  HEALTH_Y,    D2          ; Y
0000197C  2639 00001F5C            997      MOVE.L  HEALTH_X,    D3
00001982  0683 0000000C            998      ADD.L   #HEALTH_PACK_W,   D3      ; Width
00001988  2839 00001F60            999      MOVE.L  HEALTH_Y,    D4 
0000198E  0484 0000000C           1000      SUB.L   #HEALTH_PACK_H,   D4      ; Height
00001994                          1001      
00001994                          1002      ; Draw Enemy    
00001994  103C 0057               1003      MOVE.B  #87,        D0          ; Draw Enemy
00001998  4E4F                    1004      TRAP    #15                     ; Trap (Perform action)
0000199A  4E75                    1005      RTS                             ; Return to subroutine
0000199C                          1006  
0000199C                          1007  DRAW_HEALTHPACK_DONE:
0000199C  23FC FFFFFFFF 00001F60  1008      MOVE.L  #-1, HEALTH_Y
000019A6  4E75                    1009      RTS
000019A8                          1010  
000019A8                          1011  DRAW_FLOOR:
000019A8                          1012      ; Set Pixel Colors
000019A8  223C 00566D19           1013      MOVE.L  #GREEN,     D1          ; Set Background color
000019AE  103C 0050               1014      MOVE.B  #80,        D0          ; Task for Background Color
000019B2  4E4F                    1015      TRAP    #15                     ; Trap (Perform action)
000019B4                          1016  
000019B4  223C 00566D19           1017      MOVE.L  #GREEN,     D1
000019BA  103C 0051               1018      MOVE.B  #81,        D0
000019BE  4E4F                    1019      TRAP    #15
000019C0                          1020  
000019C0                          1021      
000019C0                          1022      ; Set X, Y, X2, and Y2
000019C0  7200                    1023      MOVE.L  #0,   D1          ; X
000019C2  243C 000000F1           1024      MOVE.L  #241,  D2          ; Y
000019C8  263C 00000280           1025      MOVE.L  #640,   D3           
000019CE  283C 000001E0           1026      MOVE.L  #480,   D4 
000019D4                          1027      
000019D4                          1028      ; Draw grass
000019D4  103C 0057               1029      MOVE.B  #87,        D0          ; Draw Line
000019D8  4E4F                    1030      TRAP    #15                     ; Trap (Perform action)
000019DA                          1031  
000019DA                          1032      ; Set Pixel Colors
000019DA  223C 0019506D           1033      MOVE.L  #BROWN,     D1          ; Set Background color
000019E0  103C 0050               1034      MOVE.B  #80,        D0          ; Task for Background Color
000019E4  4E4F                    1035      TRAP    #15                     ; Trap (Perform action)
000019E6                          1036  
000019E6  223C 0019506D           1037      MOVE.L  #BROWN,     D1
000019EC  103C 0051               1038      MOVE.B  #81,        D0
000019F0  4E4F                    1039      TRAP    #15
000019F2                          1040  
000019F2                          1041  * -----------------------------------------------------------
000019F2                          1042  * Find level and draw dirt
000019F2                          1043  * -----------------------------------------------------------
000019F2  45F9 00001F20           1044      LEA     LEVELS,      A2
000019F8  2A39 00001F42           1045      MOVE.L  PLAYER_SCORE,   D5
000019FE                          1046      ;CMP.L   (A2)+,       D5
000019FE                          1047      ;BGT     DRAW_FLOOR_L5
000019FE                          1048      ;CMP.L   (A2)+,       D5
000019FE                          1049      ;BGT     DRAW_FLOOR_L4
000019FE                          1050      ;CMP.L   (A2)+,       D5
000019FE                          1051      ;BGT     DRAW_FLOOR_L3
000019FE                          1052      ;CMP.L   (A2)+,       D5
000019FE                          1053      ;BGT     DRAW_FLOOR_L2
000019FE  6000 0074               1054      BRA     DRAW_FLOOR_L1
00001A02                          1055  
00001A02                          1056  DRAW_FLOOR_L5:
00001A02  33FC 000C 00001FDC      1057      MOVE.W  #12,SCALER
00001A0A  243C 000001E0           1058      MOVE.L  #480,   D2          ; Y
00001A10                          1059      ;MOVE.L  #135, FLYINGENEMY_Y
00001A10                          1060      ;MOVE.W  #40, FLYENEMY_HEIGHT
00001A10                          1061      ;MOVE.W  #65, FLYENEMY_WIDTH
00001A10                          1062      ;MOVE.W  #40, ENEMY_HEIGHT
00001A10                          1063      ;MOVE.W  #40, ENEMY_WIDTH
00001A10  6000 006C               1064      BRA     DRAWDIRT
00001A14                          1065      
00001A14                          1066  DRAW_FLOOR_L4:
00001A14  33FC 000A 00001FDC      1067      MOVE.W  #10,SCALER
00001A1C  243C 000001E0           1068      MOVE.L  #480,   D2          ; Y
00001A22                          1069      ;MOVE.L  #140, FLYINGENEMY_Y
00001A22                          1070      ;MOVE.W  #45, FLYENEMY_HEIGHT
00001A22                          1071      ;MOVE.W  #55, FLYENEMY_WIDTH
00001A22                          1072      ;MOVE.W  #30, ENEMY_HEIGHT
00001A22                          1073      ;MOVE.W  #30, ENEMY_WIDTH
00001A22  6000 005A               1074      BRA     DRAWDIRT
00001A26                          1075  DRAW_FLOOR_L3:
00001A26  33FC 0008 00001FDC      1076      MOVE.W  #8,SCALER
00001A2E  243C 000001AE           1077      MOVE.L  #430,   D2          ; Y
00001A34                          1078      ;MOVE.L  #160, FLYINGENEMY_Y
00001A34                          1079      ;MOVE.W  #25, FLYENEMY_HEIGHT
00001A34                          1080      ;MOVE.W  #35, FLYENEMY_WIDTH
00001A34                          1081      ;MOVE.W  #25, ENEMY_HEIGHT
00001A34                          1082      ;MOVE.W  #25, ENEMY_WIDTH
00001A34  6000 0048               1083      BRA     DRAWDIRT
00001A38                          1084  DRAW_FLOOR_L2:
00001A38  33FC 0006 00001FDC      1085      MOVE.W  #6,SCALER
00001A40  243C 0000014A           1086      MOVE.L  #330,   D2          ; Y
00001A46  23FC 000000AA 00001F68  1087      MOVE.L  #170, FLYINGENEMY_Y
00001A50  33FC 000F 00001F94      1088      MOVE.W  #15, FLYENEMY_HEIGHT
00001A58  33FC 0019 00001F92      1089      MOVE.W  #25, FLYENEMY_WIDTH
00001A60  33FC 000F 00001F90      1090      MOVE.W  #15, ENEMY_HEIGHT
00001A68  33FC 000F 00001F8E      1091      MOVE.W  #15, ENEMY_WIDTH
00001A70                          1092  
00001A70  6000 000C               1093      BRA     DRAWDIRT
00001A74                          1094  DRAW_FLOOR_L1:
00001A74  243C 00000115           1095      MOVE.L  #277,   D2          ; Y
00001A7A  6000 0002               1096      BRA     DRAWDIRT
00001A7E                          1097  DRAWDIRT:
00001A7E                          1098      ; Set X, Y, X2, and Y2
00001A7E  7200                    1099      MOVE.L  #0,   D1          ; X
00001A80  263C 00000280           1100      MOVE.L  #640,   D3           
00001A86  283C 000001E0           1101      MOVE.L  #480,   D4 
00001A8C                          1102      
00001A8C                          1103      ; Draw Dirt
00001A8C  103C 0057               1104      MOVE.B  #87,        D0          ; Draw Line
00001A90  4E4F                    1105      TRAP    #15                     ; Trap (Perform action)
00001A92                          1106  
00001A92                          1107  
00001A92                          1108      ; Reset Pixel Colors
00001A92  7200                    1109      MOVE.L  #$00000000,     D1          ; Set Background color
00001A94  103C 0050               1110      MOVE.B  #80,        D0          ; Task for Background Color
00001A98  4E4F                    1111      TRAP    #15                     ; Trap (Perform action)
00001A9A                          1112  
00001A9A                          1113      ; Reset Pixel Colors
00001A9A  7200                    1114      MOVE.L  #$00000000,     D1          ; Set Background color
00001A9C  103C 0051               1115      MOVE.B  #81,        D0          ; Task for Background Color
00001AA0  4E4F                    1116      TRAP    #15                     ; Trap (Perform action)
00001AA2                          1117  
00001AA2  4E75                    1118      RTS                             ; Return to subroutine
00001AA4                          1119  
00001AA4                          1120  *-----------------------------------------------------------
00001AA4                          1121  * Subroutine    : Collision Check
00001AA4                          1122  * Description   : Axis-Aligned Bounding Box Collision Detection
00001AA4                          1123  * Algorithm checks for overlap on the 4 sides of the Player and 
00001AA4                          1124  * Enemy rectangles
00001AA4                          1125  * PLAYER_X <= ENEMY_X + ENEMY_W &&
00001AA4                          1126  * PLAYER_X + PLAYER_W >= ENEMY_X &&
00001AA4                          1127  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
00001AA4                          1128  * PLAYER_H + PLAYER_Y >= ENEMY_Y
00001AA4                          1129  *-----------------------------------------------------------
00001AA4                          1130  CHECK_COLLISIONS:
00001AA4                          1131  
00001AA4  4281                    1132      CLR.L   D1                      ; Clear D1
00001AA6  4282                    1133      CLR.L   D2                      ; Clear D2
00001AA8                          1134  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
00001AA8  2239 00001F3A           1135      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001AAE  D239 00001F8B           1136      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001AB4  2439 00001F54           1137      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
00001ABA  B481                    1138      CMP.L   D1,         D2          ; Do the Overlap ?
00001ABC  6F00 0006               1139      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
00001AC0  6000 004C               1140      BRA     CHECK_FLYENEMY_COLLISIONS
00001AC4                          1141  
00001AC4                          1142  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
00001AC4  2239 00001F3A           1143      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001ACA  2439 00001F54           1144      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
00001AD0  D479 00001F8E           1145      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
00001AD6  B481                    1146      CMP.L   D1,         D2          ; Do they OverLap ?
00001AD8  6C00 0006               1147      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001ADC  6000 0030               1148      BRA     CHECK_FLYENEMY_COLLISIONS  
00001AE0                          1149  
00001AE0                          1150  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
00001AE0  2239 00001F3E           1151      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001AE6  2439 00001F58           1152      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001AEC  D478 000C               1153      ADD.W   ENMY_H_INIT,D2          ; Set Enemy Height to D2
00001AF0  B481                    1154      CMP.L   D1,         D2          ; Do they Overlap ?
00001AF2  6F00 0006               1155      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
00001AF6  6000 0016               1156      BRA     CHECK_FLYENEMY_COLLISIONS
00001AFA                          1157  
00001AFA                          1158  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
00001AFA  D238 000C               1159      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
00001AFE  2439 00001F58           1160      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001B04  B481                    1161      CMP.L   D1,         D2          ; Do they OverLap ?
00001B06  6C00 0214               1162      BGE     COLLISION               ; Collision !
00001B0A  6000 0002               1163      BRA     CHECK_FLYENEMY_COLLISIONS
00001B0E                          1164  
00001B0E                          1165  *--------------------Checking for flying enemy collision---------------------
00001B0E                          1166  CHECK_FLYENEMY_COLLISIONS:
00001B0E  4281                    1167      CLR.L   D1                      ; Clear D1
00001B10  4282                    1168      CLR.L   D2                      ; Clear D2
00001B12                          1169  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
00001B12  2239 00001F3A           1170      MOVE.L  PLAYER_X,   D1
00001B18  D239 00001F8B           1171      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001B1E  2439 00001F64           1172      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001B24  B481                    1173      CMP.L   D1,         D2                          ; Do the Overlap ?
00001B26  6F00 0006               1174      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
00001B2A  6000 0050               1175      BRA     CHECK_HEALTH_COLLISIONS
00001B2E                          1176  
00001B2E                          1177  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
00001B2E  2239 00001F3A           1178      MOVE.L  PLAYER_X,   D1
00001B34  2439 00001F64           1179      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001B3A  D479 00001F92           1180      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001B40  B481                    1181      CMP.L   D1,         D2                  ; Do they OverLap ?
00001B42  6C00 0006               1182      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001B46  6000 0034               1183      BRA     CHECK_HEALTH_COLLISIONS
00001B4A                          1184  
00001B4A                          1185  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001B4A  2239 00001F3E           1186      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001B50  2439 00001F68           1187      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001B56  D479 00001F94           1188      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001B5C  B481                    1189      CMP.L   D1,         D2          ; Do they Overlap ?
00001B5E  6C00 0006               1190      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001B62  6000 0018               1191      BRA     CHECK_HEALTH_COLLISIONS
00001B66                          1192  
00001B66                          1193  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001B66  D239 00001F8C           1194      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001B6C  2439 00001F68           1195      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001B72  B481                    1196      CMP.L   D1,         D2          ; Do they OverLap ?
00001B74  6F00 01A6               1197      BLE     COLLISION               ; Collision !
00001B78  6000 0002               1198      BRA     CHECK_HEALTH_COLLISIONS
00001B7C                          1199  
00001B7C                          1200  *--------------------Checking for Health collision---------------------
00001B7C                          1201  CHECK_HEALTH_COLLISIONS:
00001B7C  4281                    1202      CLR.L   D1                      ; Clear D1
00001B7E  4282                    1203      CLR.L   D2                      ; Clear D2
00001B80                          1204  PLX_LTE_TO_HEALTH_X_PLUS_W:
00001B80  2239 00001F3A           1205      MOVE.L  PLAYER_X,   D1
00001B86  D239 00001F8B           1206      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001B8C  2439 00001F5C           1207      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
00001B92  B481                    1208      CMP.L   D1,         D2                          ; Do the Overlap ?
00001B94  6F00 0006               1209      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
00001B98  6000 0050               1210      BRA     CHECK_ATTACK_COLLISIONS
00001B9C                          1211  
00001B9C                          1212  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
00001B9C  2239 00001F3A           1213      MOVE.L  PLAYER_X,   D1
00001BA2  2439 00001F5C           1214      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
00001BA8  0682 0000000C           1215      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
00001BAE  B481                    1216      CMP.L   D1,         D2                  ; Do they OverLap ?
00001BB0  6C00 0006               1217      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
00001BB4  6000 0034               1218      BRA     CHECK_ATTACK_COLLISIONS
00001BB8                          1219  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
00001BB8  2239 00001F3E           1220      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001BBE  2439 00001F60           1221      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
00001BC4  0682 0000000C           1222      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
00001BCA  B481                    1223      CMP.L   D1,         D2          ; Do they Overlap ?
00001BCC  6C00 0006               1224      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
00001BD0  6000 0018               1225      BRA     CHECK_ATTACK_COLLISIONS
00001BD4                          1226  
00001BD4                          1227  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
00001BD4  D239 00001F8C           1228      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001BDA  2439 00001F60           1229      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
00001BE0  B481                    1230      CMP.L   D1,         D2          ; Do they OverLap ?
00001BE2  6F00 017E               1231      BLE     HEALTH_COLLISION               ; Collision !
00001BE6  6000 0002               1232      BRA     CHECK_ATTACK_COLLISIONS
00001BEA                          1233  
00001BEA                          1234  *--------------------Checking for ATTACK collision---------------------
00001BEA                          1235  CHECK_ATTACK_COLLISIONS:
00001BEA  4281                    1236      CLR.L   D1                      ; Clear D1
00001BEC  4282                    1237      CLR.L   D2                      ; Clear D2
00001BEE                          1238  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
00001BEE  2239 00001F80           1239      MOVE.L  ATTACK_X,   D1
00001BF4  0681 00000023           1240      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001BFA  2439 00001F54           1241      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001C00  B481                    1242      CMP.L   D1,         D2                          ; Do the Overlap ?
00001C02  6F00 0006               1243      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
00001C06  6000 0050               1244      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001C0A                          1245  
00001C0A                          1246  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
00001C0A  2239 00001F80           1247      MOVE.L  ATTACK_X,   D1
00001C10  2439 00001F54           1248      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
00001C16  D479 00001F8E           1249      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001C1C  B481                    1250      CMP.L   D1,         D2                  ; Do they OverLap ?
00001C1E  6C00 0006               1251      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001C22  6000 0034               1252      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001C26                          1253  
00001C26                          1254  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
00001C26  2239 00001F84           1255      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001C2C  2439 00001F58           1256      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001C32  D479 00001F90           1257      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001C38  B481                    1258      CMP.L   D1,         D2          ; Do they Overlap ?
00001C3A  6C00 0006               1259      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
00001C3E  6000 0018               1260      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001C42                          1261  
00001C42                          1262  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
00001C42  0681 00001F84           1263      ADD.L   #ATTACK_Y,D1          ; Add Player Height to D1
00001C48  2439 00001F58           1264      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001C4E  B481                    1265      CMP.L   D1,         D2          ; Do they OverLap ?
00001C50  6F00 0074               1266      BLE     ATTACK_COLLISION               ; Collision !
00001C54  6000 0002               1267      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001C58                          1268  
00001C58                          1269  *--------------------Checking for ATTACK FLYING collision---------------------
00001C58                          1270  CHECK_ATTACK_FLY_COLLISIONS:
00001C58  4281                    1271      CLR.L   D1                      ; Clear D1
00001C5A  4282                    1272      CLR.L   D2                      ; Clear D2
00001C5C                          1273  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001C5C  2239 00001F80           1274      MOVE.L  ATTACK_X,   D1
00001C62  0681 00000023           1275      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001C68  2439 00001F64           1276      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001C6E  B481                    1277      CMP.L   D1,         D2                          ; Do the Overlap ?
00001C70  6F00 0006               1278      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001C74  6000 0084               1279      BRA     COLLISION_CHECK_DONE
00001C78                          1280  
00001C78                          1281  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001C78  2239 00001F80           1282      MOVE.L  ATTACK_X,   D1
00001C7E  2439 00001F64           1283      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001C84  D479 00001F92           1284      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001C8A  B481                    1285      CMP.L   D1,         D2                  ; Do they OverLap ?
00001C8C  6C00 0006               1286      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001C90  6000 0068               1287      BRA     COLLISION_CHECK_DONE
00001C94                          1288  
00001C94                          1289  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001C94  2239 00001F84           1290      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001C9A  2439 00001F68           1291      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001CA0  D479 00001F94           1292      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001CA6  B481                    1293      CMP.L   D1,         D2          ; Do they Overlap ?
00001CA8  6C00 0006               1294      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001CAC  6000 004C               1295      BRA     COLLISION_CHECK_DONE
00001CB0                          1296  
00001CB0                          1297  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001CB0  0681 00001F84           1298      ADD.L   #ATTACK_Y,D1          ; Add Player Height to D1
00001CB6  2439 00001F68           1299      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001CBC  B481                    1300      CMP.L   D1,         D2          ; Do they OverLap ?
00001CBE  6F00 0020               1301      BLE     ATTACK_FLY_COLLISION               ; Collision !
00001CC2  6000 0036               1302      BRA     COLLISION_CHECK_DONE
00001CC6                          1303  
00001CC6                          1304  ;---
00001CC6                          1305  
00001CC6                          1306  ATTACK_COLLISION:
00001CC6  23FC 00000190 00001F58  1307      MOVE.L  #400, ENEMY_Y
00001CD0  13FC 0001 00001F89      1308      MOVE.B  #01,  ENEMY_HIT
00001CD8  5239 00001F88           1309      ADDI.B  #1,   ENEMIES_DEFEATED
00001CDE  4E75                    1310      RTS
00001CE0                          1311  
00001CE0                          1312  ATTACK_FLY_COLLISION:
00001CE0  23FC 00000190 00001F68  1313      MOVE.L  #400, FLYINGENEMY_Y
00001CEA  13FC 0001 00001F8A      1314      MOVE.B  #01,  FLYENEMY_HIT
00001CF2  5239 00001F88           1315      ADDI.B  #1,   ENEMIES_DEFEATED
00001CF8  4E75                    1316      RTS
00001CFA                          1317  
00001CFA                          1318  COLLISION_CHECK_DONE:               ; No Collision Update points
00001CFA  4239 00001F17           1319      CLR.B   IN_ENEMY
00001D00  4239 00001F18           1320      CLR.B   IN_HPACK
00001D06  4281                    1321      CLR.L   D1
00001D08  1239 00001F79           1322      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
00001D0E  D2B9 00001F42           1323      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001D14  23C1 00001F42           1324      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
00001D1A  4E75                    1325      RTS                             ; Return to subroutine
00001D1C                          1326  
00001D1C                          1327  
00001D1C                          1328  COLLISION:
00001D1C  0C39 0001 00001F17      1329      CMP.B     #$01, IN_ENEMY
00001D24  6700 007A               1330      BEQ     STILL_COLLIDED
00001D28  0C39 0001 00001F19      1331      CMP.B   #01, DRAW_HEALTHPACKS
00001D30  6600 F718               1332      BNE     RESET_HEALTH_POSITION
00001D34  13FC 0001 00001F19      1333      MOVE.B  #01, DRAW_HEALTHPACKS 
00001D3C  13FC 0001 00001F1A      1334      MOVE.B  #01, SPAWN_HEALTHPACKS 
00001D44  5339 00001F78           1335      SUB.B   #1, LIVES
00001D4A  13FC 0001 00001F17      1336      MOVE.B  #$01, IN_ENEMY
00001D52  4A39 00001F78           1337      TST.B   LIVES
00001D58  6700 0048               1338      BEQ     GAME_OVER
00001D5C  6100 FA6A               1339      BSR     PLAY_HITHURT               ; Play Opps Wav
00001D60  4E75                    1340      RTS                             ; Return to subroutine
00001D62                          1341  
00001D62                          1342  HEALTH_COLLISION:
00001D62  0C39 0001 00001F18      1343      CMP.B     #$01, IN_HPACK
00001D6A  6700 0034               1344      BEQ     STILL_COLLIDED
00001D6E  13FC 0000 00001F19      1345      MOVE.B  #00, DRAW_HEALTHPACKS
00001D76  6100 FA6E               1346      BSR     PLAY_POWERUP               ; Play Opps Wav
00001D7A  5239 00001F78           1347      ADD.B   #1, LIVES
00001D80  0C39 0005 00001F78      1348      CMP.B   #05, LIVES
00001D88  6C00 000C               1349      BGE     STOP_HPACK_SPAWN
00001D8C  13FC 0001 00001F18      1350      MOVE.B  #$01, IN_HPACK
00001D94  4E75                    1351      RTS
00001D96                          1352  
00001D96                          1353  STOP_HPACK_SPAWN:
00001D96  13FC 0000 00001F1A      1354      MOVE.B  #00, SPAWN_HEALTHPACKS
00001D9E  4E75                    1355      RTS
00001DA0                          1356  
00001DA0                          1357  STILL_COLLIDED:
00001DA0  4E75                    1358      RTS
00001DA2                          1359  *-----------------------------------------------------------
00001DA2                          1360  * Subroutine    : EXIT
00001DA2                          1361  * Description   : Exit message and End Game
00001DA2                          1362  *-----------------------------------------------------------
00001DA2                          1363  
00001DA2                          1364  GAME_OVER:
00001DA2  6100 F6FE               1365      BSR     DRAW                    ; Redraw the Scene
00001DA6  103C 005E               1366      MOVE.B  #TC_REDRAW,        D0
00001DAA  4E4F                    1367      TRAP    #15
00001DAC  6100 F9DE               1368      BSR     PLAY_GAMEOVER
00001DB0  4281                    1369      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00001DB2                          1370  
00001DB2  223C 00FFFFFF           1371      MOVE.L  #WHITE,     D1
00001DB8  103C 0015               1372      MOVE.B  #21,        D0          ; Set Text Color
00001DBC  243C 01130005           1373      MOVE.L  #$01130005, D2
00001DC2  4E4F                    1374      TRAP    #15                     ; Trap (Perform action)
00001DC4                          1375  
00001DC4  7200                    1376      MOVE.L  #BLACK,     D1
00001DC6  103C 0051               1377      MOVE.B  #81,        D0          ; Set Text Color
00001DCA  4E4F                    1378      TRAP    #15                     ; Trap (Perform action)
00001DCC                          1379  
00001DCC  103C 000B               1380      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001DD0  323C FF00               1381      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001DD4  4E4F                    1382      TRAP    #15                     ; Trap (Perform action)
00001DD6                          1383  
00001DD6  103C 000B               1384      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001DDA  323C 1005               1385      MOVE.W  #$1005,     D1          ; Col 10, Row 03
00001DDE  4E4F                    1386      TRAP    #15                     ; Trap (Perform action)
00001DE0  43F9 00001ECC           1387      LEA     GAMEOVER_MSG,A1        ; Game Over Message
00001DE6  303C 000D               1388      MOVE    #13,        D0          ; No Line feed
00001DEA  4E4F                    1389      TRAP    #15                     ; Trap (Perform action)
00001DEC                          1390  
00001DEC                          1391      ; Player Score Message
00001DEC  103C 000B               1392      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001DF0  323C 0F06               1393      MOVE.W  #$0F06,     D1          ; Col 02, Row 01
00001DF4  4E4F                    1394      TRAP    #15                     ; Trap (Perform action)
00001DF6  43F9 00001E66           1395      LEA     SCORE_MSG,  A1          ; Score Message
00001DFC  303C 000D               1396      MOVE    #13,        D0          ; No Line feed
00001E00  4E4F                    1397      TRAP    #15                     ; Trap (Perform action)
00001E02                          1398  
00001E02                          1399      ; Player Score Value
00001E02  103C 000B               1400      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E06  323C 1706               1401      MOVE.W  #$1706,     D1          ; Col 09, Row 01
00001E0A  4E4F                    1402      TRAP    #15                     ; Trap (Perform action)
00001E0C  103C 0003               1403      MOVE.B  #03,        D0          ; Display number at D1.L
00001E10  2239 00001F42           1404      MOVE.L  PLAYER_SCORE,D1         ; Move Score to D1.L
00001E16  4E4F                    1405      TRAP    #15                     ; Trap (Perform action)
00001E18                          1406      
00001E18                          1407  
00001E18  223C 00FFFFFF           1408      MOVE.L  #WHITE,     D1
00001E1E  103C 0015               1409      MOVE.B  #21,        D0          ; Set Text Color
00001E22  243C 03140000           1410      MOVE.L  #$03140000, D2
00001E28  4E4F                    1411      TRAP    #15                     ; Trap (Perform action)
00001E2A                          1412  
00001E2A                          1413  
00001E2A                          1414      ; Restart
00001E2A  103C 000B               1415      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E2E  323C 0B08               1416      MOVE.W  #$0B08,     D1          ; Col 09, Row 01
00001E32  4E4F                    1417      TRAP    #15                     ; Trap (Perform action)
00001E34  43F9 00001ED7           1418      LEA     RESTART_MSG,  A1          ; Score Message
00001E3A  303C 000D               1419      MOVE    #13,        D0          ; No Line feed
00001E3E  4E4F                    1420      TRAP    #15                     ; Trap (Perform action)
00001E40                          1421  
00001E40                          1422      
00001E40  103C 005E               1423      MOVE.B  #TC_REDRAW,        D0
00001E44  4E4F                    1424      TRAP    #15
00001E46                          1425  
00001E46                          1426  INPUTLOOP:
00001E46  6100 F37C               1427      BSR     INPUT
00001E4A  60FA                    1428      BRA     INPUTLOOP
00001E4C                          1429  
00001E4C                          1430  EXIT:
00001E4C                          1431      
00001E4C  103C 000B               1432      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E50  323C FF00               1433      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001E54  4E4F                    1434      TRAP    #15                     ; Trap (Perform action)
00001E56                          1435  
00001E56  103C 005E               1436      MOVE.B  #TC_REDRAW,        D0
00001E5A  4E4F                    1437      TRAP    #15
00001E5C                          1438  
00001E5C  103C 0009               1439      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001E60  4E4F                    1440      TRAP    #15                     ; Trap (Perform action)
00001E62  FFFF FFFF               1441      SIMHALT
00001E66                          1442  
00001E66                          1443  *-----------------------------------------------------------
00001E66                          1444  * Section       : Messages
00001E66                          1445  * Description   : Messages to Print on Console, names should be
00001E66                          1446  * self documenting
00001E66                          1447  *-----------------------------------------------------------
00001E66= 53 63 6F 72 65 20 ...   1448  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00001E6F= 4B 65 79 43 6F 64 ...   1449  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
00001E7A= 4A 75 6D 70 2E 2E ...   1450  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001E83                          1451  
00001E83= 49 64 6C 65 2E 2E ...   1452  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00001E8C= 55 70 64 61 74 65 ...   1453  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001E97= 44 72 61 77 2E 2E ...   1454  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001EA0                          1455  
00001EA0= 58 3A 00                1456  X_MSG           DC.B    'X:', 0             ; X Position Message
00001EA3= 59 3A 00                1457  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001EA6= 56 3A 00                1458  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
00001EA9= 44 52 41 57 00          1459  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00001EAE= 45 4E 45 4D 49 45 ...   1460  GND_MSG         DC.B    'ENEMIES DEFEATED:', 0           ; On Ground Position Message
00001EC0                          1461  
00001EC0= 45 78 69 74 69 6E ...   1462  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00001ECC= 47 61 6D 65 20 4F ...   1463  GAMEOVER_MSG    DC.B    'Game Over!', 0      ; Game Over Message
00001ED7= 50 72 65 73 73 20 ...   1464  RESTART_MSG    DC.B    'Press R to play again', 0      ; Game Over Message
00001EED= 23 23 00                1465  TREET          DC.B     '##',0
00001EF0                          1466  
00001EF0= 45 6E 74 65 72 20 ...   1467  PRESSSTART      DC.B    'Enter 1 to start',0
00001F01= 41 4E 54 20 44 45 ...   1468  TITLEMSG        DC.B    'ANT DEFENDER',0
00001F0E= 4C 69 76 65 73 20 ...   1469  LIVES_MSG       DC.B    'Lives : ',0        ; lives message
00001F17                          1470  
00001F17= 00                      1471  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
00001F18= 00                      1472  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00001F19= 00                      1473  DRAW_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are showing
00001F1A= 00                      1474  SPAWN_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are spawning
00001F1B                          1475  
00001F1C= 07D0                    1476  LEVEL_02        DC.W    2000
00001F1E= 2710                    1477  LEVEL_03        DC.W    10000
00001F20                          1478  
00001F20= 00001B58 00000FA0 ...   1479  LEVELS:         DC.L    7000,4000,2000,1000
00001F30                          1480  
00001F30                          1481  *-----------------------------------------------------------
00001F30                          1482  * Section       : Screen Size
00001F30                          1483  * Description   : Screen Width and Height
00001F30                          1484  *-----------------------------------------------------------
00001F30                          1485  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001F32                          1486  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001F34                          1487  
00001F34                          1488  *-----------------------------------------------------------
00001F34                          1489  * Section       : Keyboard Input
00001F34                          1490  * Description   : Used for storing Keypresses
00001F34                          1491  *-----------------------------------------------------------
00001F34                          1492  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001F38                          1493  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00001F3A                          1494  
00001F3A                          1495  *-----------------------------------------------------------
00001F3A                          1496  * Section       : Character Positions
00001F3A                          1497  * Description   : Player and Enemy Position Memory Locations
00001F3A                          1498  *-----------------------------------------------------------
00001F3A                          1499  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001F3E                          1500  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001F42                          1501  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001F46                          1502  
00001F46                          1503  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001F4A                          1504  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001F4E                          1505  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001F52                          1506  
00001F52                          1507  ; 1, = left, 0 = right
00001F52                          1508  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
00001F53                          1509  
00001F54                          1510  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001F58                          1511  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001F5C                          1512  
00001F5C                          1513  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
00001F60                          1514  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
00001F64                          1515  
00001F64                          1516  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
00001F68                          1517  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
00001F6C                          1518  
00001F6C= 000000FF                1519  ENEMYCOLOR        DC.L        $000000FF
00001F70= 00FF0000                1520  FLYENEMYCOLOR     DC.L        $00FF0000
00001F74                          1521  
00001F74                          1522  RANDOM            DS.L        01  ; Reserve Space for Random Number
00001F78= 05                      1523  LIVES             DC.B        05  ; reserves space for player lives
00001F79                          1524   
00001F79= 02                      1525  POINTS            DC.B        02          ; Points added
00001F7A                          1526  
00001F7A= 00                      1527  CURRENTLYATTACKING   DC.B    00
00001F7C= 0000                    1528  ATTACK_COOLDOWN      DC.W    00
00001F7E= 0000                    1529  ATTACK_TIME          DC.W    00
00001F80= 00000000                1530  ATTACK_X             DC.L    00
00001F84= 00000000                1531  ATTACK_Y             DC.L    00
00001F88  =00000014               1532  ATTACK_HEIGHT        EQU     20
00001F88  =00000023               1533  ATTACK_WIDTH         EQU     35 
00001F88                          1534  
00001F88= 00                      1535  ENEMIES_DEFEATED     DC.B    00
00001F89= 00                      1536  ENEMY_HIT           DC.B    00
00001F8A= 00                      1537  FLYENEMY_HIT        DC.B    00
00001F8B                          1538  
00001F8B                          1539  * Widths and heights of player, enemy and healthpack
00001F8B                          1540  *-----------------------------------------------------------
00001F8B= 0C                      1541  PLAYER_WIDTH      DC.B        12          ; Player Width
00001F8C= 0C                      1542  PLAYER_HEIGHT     DC.B        12          ; Player Height
00001F8D                          1543  
00001F8E= 000C                    1544  ENEMY_WIDTH       DC.W        12          ; Enemy Width
00001F90= 000C                    1545  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00001F92                          1546  
00001F92= 0014                    1547  FLYENEMY_WIDTH    DC.W        20 
00001F94= 000C                    1548  FLYENEMY_HEIGHT   DC.W        12 
00001F96                          1549  
00001F96                          1550          
00001F96                          1551  *-----------------------------------------------------------
00001F96                          1552  * Section       : Sounds
00001F96                          1553  * Description   : Sound files, which are then loaded and given
00001F96                          1554  * an address in memory, they take a longtime to process and play
00001F96                          1555  * so keep the files small. Used https://voicemaker.in/ to 
00001F96                          1556  * generate and Audacity to convert MP3 to WAV
00001F96                          1557  *-----------------------------------------------------------
00001F96= 6A 75 6D 70 2E 77 ...   1558  JUMP_WAV        DC.B    'jump.wav',0        ; Jump Sound
00001F9F= 67 61 6D 65 4F 76 ...   1559  GAMEOVER_WAV         DC.B    'gameOver.wav',0         ; Run Sound
00001FAC= 68 69 74 48 75 72 ...   1560  HITHURT_WAV        DC.B    'hitHurt.wav',0        ; Collision Opps
00001FB8= 70 6F 77 65 72 55 ...   1561  POWERUP_WAV        DC.B    'powerUP.wav',0        ; Collision Opps
00001FC4= 6C 65 76 65 6C 43 ...   1562  LEVELCHANGE_WAV        DC.B    'levelChange.wav',0        ; Collision Opps
00001FD4                          1563  
00001FD4                          1564  *---*
00001FD4= 3A0C                    1565  TRUNK   DC.W    $3A0C
00001FD6= 00C8                    1566  X   DC.W    200
00001FD8= 0190                    1567  Y   DC.W    400
00001FDA= 00C8                    1568  Z   DC.W    200
00001FDC= 0004                    1569  SCALER DC.W  4
00001FDE  =00000010               1570  ROWC    EQU    16
00001FDE= FFB0                    1571  WIDTH   DC.W    $FFB0
00001FE0                          1572  
00001FE0                          1573  title
00001FE0= 74 72 65 65 32 2E ...   1574      dc.b    'tree2.bmp',0
00001FEA                          1575  list
00001FEA= 2A 2E 62 6D 70 00       1576      dc.b    '*.bmp',0               * file type list
00001FF0                          1577      ds.w    0                   * ensure even
00001FF0                          1578  
00001FF0                          1579  
00001FF0= 00000000                1580  timer           DC.L    0
00001FF4                          1581  SPRITE_DATA:
00001FF4                          1582      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ATK_LTE_TO_ENEMY_Y_PLUS_H  1C26
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  1C94
ATK_PLUS_H_LTE_TO_ATTACK_Y  1C42
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  1CB0
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  1C5C
ATTACK_COLLISION    1CC6
ATTACK_COOLDOWN     1F7C
ATTACK_COOLDOWN_SUB  131C
ATTACK_FLY_COLLISION  1CE0
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_ENMY_X  1C0A
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  1C78
ATTACK_TIME         1F7E
ATTACK_TIME_SUB     1314
ATTACK_WIDTH        23
ATTACK_X            1F80
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  1BEE
ATTACK_Y            1F84
BLACK               0
BLUE                FF0000
BROWN               19506D
CHECK_ATTACK_COLLISIONS  1BEA
CHECK_ATTACK_COOLDOWN  1306
CHECK_ATTACK_FLY_COLLISIONS  1C58
CHECK_COLLISIONS    1AA4
CHECK_FLYENEMY_COLLISIONS  1B0E
CHECK_HEALTH_COLLISIONS  1B7C
COLLISION           1D1C
COLLISION_CHECK_DONE  1CFA
CONTINUE            1462
CURRENTLYATTACKING  1F7A
CURRENT_KEY         1F34
DELAY               11A0
DKEY                44
DRAW                14A2
DRAWDIRT            1A7E
DRAW_ATTACK         185A
DRAW_BACKGROUND     14DA
DRAW_ENEMY          189E
DRAW_FLOOR          19A8
DRAW_FLOOR_L1       1A74
DRAW_FLOOR_L2       1A38
DRAW_FLOOR_L3       1A26
DRAW_FLOOR_L4       1A14
DRAW_FLOOR_L5       1A02
DRAW_FLYENEMY       18E2
DRAW_HEALTHPACK     1926
DRAW_HEALTHPACKS    1F19
DRAW_HEALTHPACK_DONE  199C
DRAW_MSG            1E97
DRAW_PLAYER         1810
DRAW_PLYR_DATA      1582
ENEMIES_DEFEATED    1F88
ENEMYCOLOR          1F6C
ENEMY_HEIGHT        1F90
ENEMY_HIT           1F89
ENEMY_H_INIT        C
ENEMY_WIDTH         1F8E
ENEMY_X             1F54
ENEMY_Y             1F58
ENMY_H_INIT         C
ENMY_W_INIT         C
ESCAPE              1B
EXIT                1E4C
EXIT_MSG            1EC0
FLYENEMYCOLOR       1F70
FLYENEMY_HEIGHT     1F94
FLYENEMY_HIT        1F8A
FLYENEMY_WIDTH      1F92
FLYINGENEMY_X       1F64
FLYINGENEMY_Y       1F68
FLY_ENMY_H_INIT     C
FLY_ENMY_W_INIT     14
GAME                1196
GAMELOOP            1196
GAMEOVER_INDEX      0
GAMEOVER_LOAD       177A
GAMEOVER_MSG        1ECC
GAMEOVER_WAV        1F9F
GAME_OVER           1DA2
GND_FALSE           0
GND_MSG             1EAE
GND_TRUE            1
GREEN               566D19
HEALTH_COLLISION    1D62
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            1F5C
HEALTH_Y            1F60
HITHURT_INDEX       2
HITHURT_LOAD        17B6
HITHURT_WAV         1FAC
IDLE                1778
IDLE_MSG            1E83
INITIALISE          1000
INPUT               11C4
INPUTLOOP           1E46
IN_ENEMY            1F17
IN_HPACK            1F18
IS_PLAYER_ON_GND    1700
JMP_INDEX           1
JUMP                1754
JUMP_DONE           1776
JUMP_LOAD           1798
JUMP_MSG            1E7A
JUMP_WAV            1F96
KEYCODE_MSG         1E6F
LAST_KEY            1F38
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     1FC4
LEVELS              1F20
LEVEL_02            1F1C
LEVEL_03            1F1E
LIFEGREEN           44FF44
LIST                1FEA
LIVES               1F78
LIVES_MSG           1F0E
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LVLCHANGE_LOAD      17F2
MOVE_ENEMY          137A
MOVE_ENEMY_L2       13AC
MOVE_ENEMY_L3       13C2
MOVE_ENEMY_L4       13D8
MOVE_HEALTHPACK     1372
MOVE_PLAYER_LEFT    1324
MOVE_PLAYER_RIGHT   1342
MOVE_TREE           136A
PERFORM_ATTACK      1464
PERFORM_JUMP        1766
PLAYER_DIR          1F52
PLAYER_HEIGHT       1F8C
PLAYER_SCORE        1F42
PLAYER_WIDTH        1F8B
PLAYER_X            1F3A
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  1AA8
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  1AC4
PLAYER_Y            1F3E
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  1AE0
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  1AFA
PLAY_GAMEOVER       178C
PLAY_HITHURT        17C8
PLAY_JUMP           17AA
PLAY_LVLCHANGE      1804
PLAY_POWERUP        17E6
PLX_LTE_TO_FLYENEMY_X_PLUS_W  1B12
PLX_LTE_TO_HEALTH_X_PLUS_W  1B80
PLX_PLUS_W_LTE_TO_FLYENEMY_X  1B2E
PLX_PLUS_W_LTE_TO_HEALTH_X  1B9C
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1F4A
PLYR_H_INIT         C
PLYR_JUMP_V         FFFFFFED
PLYR_ON_GND         1F4E
PLYR_VELOCITY       1F46
PLYR_W_INIT         14
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  1B4A
PLY_LTE_TO_HEALTH_Y_PLUS_H  1BB8
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  1B66
PLY_PLUS_H_LTE_TO_HEALTH_Y  1BD4
POINTS              1F79
POWERUP_INDEX       3
POWERUP_LOAD        17D4
POWERUP_WAV         1FB8
PRESSSTART          1EF0
PROCESS_INPUT       1238
PROCESS_RESTART     125C
RANDOM              1F74
RED                 FF
RESET_ENEMY_POSITION  13F2
RESET_FLYENEMY_POSITION  141C
RESET_HEALTH_POSITION  144A
RESET_TREE          1360
RESTART_MSG         1ED7
RKEY                52
ROWC                10
SCALER              1FDC
SCORE_MSG           1E66
SCREEN_H            1F32
SCREEN_W            1F30
SET_OFF_GROUND      1748
SET_ON_GROUND       1720
SKEY                53
SKY                 FFE2B0
SPACEBAR            20
SPAWN_HEALTHPACKS   1F1A
SPRITE_DATA         1FF4
START               1000
STARTSCREEN         1196
STILL_COLLIDED      1DA0
STOP_HPACK_SPAWN    1D96
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
TIMER               1FF0
TITLE               1FE0
TITLEMSG            1F01
TREET               1EED
TREE_LEAVES_X       1554
TREE_LEAVES_Y       1548
TREE_LOOP           1510
TRUNK               1FD4
UPDATE              126C
UPDATE_MSG          1E8C
VARMSG              1EA9
V_MSG               1EA6
WHITE               FFFFFF
WIDTH               1FDE
X                   1FD6
X_MSG               1EA0
Y                   1FD8
Y_MSG               1EA3
Z                   1FDA
_00000000           11E2
_00000001           11F4
_00000002           1206
_00000003           1218
