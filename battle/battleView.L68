00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 27/02/2025 23:24:47

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Oliwier Jakubiec
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *-----------------------------------------------------------
00000000                            10  * Section       : Trap Codes
00000000                            11  * Description   : Trap Codes used throughout StarterKit
00000000                            12  *-----------------------------------------------------------
00000000                            13  * Trap CODES
00000000  =00000021                 14  TC_SCREEN   EQU         33          ; Screen size information trap code
00000000  =00000000                 15  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00000000                            16                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00000000  =00000013                 17  TC_KEYCODE  EQU         19          ; Check for pressed keys
00000000  =0000005C                 18  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00000000  =0000000B                 19  TC_CURSR_P  EQU         11          ; Trap code cursor position
00000000                            20  
00000000  =0000005E                 21  TC_REDRAW   EQU         94          ; Redraw Screen
00000000  =00000009                 22  TC_EXIT     EQU         09          ; Exit Trapcode
00000000                            23  
00000000                            24  *-----------------------------------------------------------
00000000                            25  * Section       : Charater Setup
00000000                            26  * Description   : Size of Player and Enemy and properties
00000000                            27  * of these characters e.g Starting Positions and Sizes
00000000                            28  *-----------------------------------------------------------
00000000                            29  
00000000  =0000000F                 30  THRW_W_INIT EQU         15          ; Players initial Width
00000000  =0000000F                 31  THRW_H_INIT EQU         15          ; Players initial Height
00000000                            32  
00000000  =00000000                 33  THRW_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFF0                 34  THRW_JUMP_V EQU         -16          ; Player Jump Velocity
00000000  =00000001                 35  THRW_DFLT_G EQU         01          ; Player Default Gravity
00000000                            36  
00000000  =00000001                 37  GND_TRUE    EQU         01          ; Player on Ground True
00000000  =00000000                 38  GND_FALSE   EQU         00          ; Player on Ground False
00000000                            39  
00000000  =00000000                 40  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00000000  =00000001                 41  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00000000  =00000002                 42  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00000000  =00000003                 43  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00000000  =00000004                 44  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00000000  =00000005                 45  HIT_INDEX  EQU              05  
00000000                            46  
00000000  =00000006                 47  SONG_INDEX equ          06
00000000                            48  
00000000  =0000001B                 49  ENMY_W_INIT EQU         27          ; Enemy initial Width
00000000  =0000000D                 50  ENMY_H_INIT EQU         13          ; Enemy initial Height
00000000                            51  
00000000  =00000023                 52  BIGENMY_W_INIT EQU         35          ; BRute Enemy initial Width
00000000  =00000012                 53  BIGENMY_H_INIT EQU         18          ; Brute Enemy initial Height
00000000                            54  
00000000  =0000001E                 55  FLY_ENMY_W_INIT  EQU         30          ; Enemy initial Width
00000000  =0000000D                 56  FLY_ENMY_H_INIT  EQU         13          ; Enemy initial Height
00000000                            57  
00000000  =0000000C                 58  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00000000  =0000000C                 59  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00000000                            60  
00000000  =00000002                 61  LOOKRIGHT   EQU         02          ; Look Right
00000000  =00000001                 62  LOOKLEFT    EQU         01          ; Look Left
00000000                            63  
00000000                            64  *-----------------------------------------------------------
00000000                            65  * Section       : Keyboard Keys
00000000                            66  * Description   : Spacebar and Escape or two functioning keys
00000000                            67  * Spacebar to JUMP and Escape to Exit Game
00000000                            68  *-----------------------------------------------------------
00000000  =00000020                 69  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00000000  =0000001B                 70  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00000000  =00000052                 71  Rkey           EQU         $52         ; R ASCII Keycode
00000000  =00000041                 72  Akey           EQU         $41         ; A ASCII Keycode
00000000  =00000053                 73  Skey           EQU         $53         ; S ASCII Keycode
00000000  =00000044                 74  Dkey           EQU         $44         ; D ASCII Keycode
00000000  =0000004C                 75  Lkey           EQU         $4C         ; L ASCII Keycode
00000000  =0000004B                 76  Kkey           EQU         $4B         ; K ASCII Keycode
00000000                            77  
00000000                            78  *-----------------------------------------------------------
00000000                            79  * Subroutine    : Initialise
00000000                            80  * Description   : Initialise game data into memory such as 
00000000                            81  * sounds and screen size
00000000                            82  *-----------------------------------------------------------
00000000                            83  INITRUN:
Line 84 ERROR: Undefined symbol
00000000  33FC 0002 005455B8        84      move.w #2, lvlType
00000008                            85      ; Initialise Sounds
00000008  6100 0B24                 86      BSR     JUMP_LOAD               ; Load Jump Sound into Memory
0000000C  6100 0AFE                 87      BSR     GAMEOVER_LOAD                ; Load Run Sound into Memory
00000010  6100 0B3A                 88      BSR     HITHURT_LOAD               ; Load Opps (Collision) Sound into Memory
00000014  6100 0B54                 89      BSR     POWERUP_LOAD               ; Load Opps (Collision) Sound into Memory
00000018  6100 0B6E                 90      BSR     LVLCHANGE_LOAD               ; Load Opps (Collision) Sound into Memory
0000001C  6100 0B88                 91      BSR     HIT_LOAD
00000020                            92  
00000020  6100 0BD4                 93      BSR     stop_song
00000024  6100 0BB0                 94      BSR     BATTLE_SONG_LOAD
00000028                            95  
00000028  6100 0BBE                 96      bsr PLAY_SONG
0000002C                            97  
0000002C                            98      ; Screen Size
0000002C  103C 0021                 99      MOVE.B  #TC_SCREEN, D0          ; access screen information
00000030  7200                     100      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
00000032  4E4F                     101      TRAP    #15                     ; interpret D0 and D1 for screen size
00000034  33C1 00001CB4            102      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
0000003A  4841                     103      SWAP    D1                      ; Swap top and bottom word to retrive screen size
0000003C  33C1 00001CB2            104      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
00000042                           105  
00000042                           106      ; Place the Player at the center of the screen
00000042  B381                     107      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
00000044  3239 00001CB2            108      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000004A  82FC 0002                109      DIVU    #02,        D1          ; divide by 2 for center on X Axis
0000004E  23C1 00001CBC            110      MOVE.L  D1,         PLAYER_X    ; Players X Position
00000054                           111  
00000054  B381                     112      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000056  3239 00001CB4            113      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000005C  82FC 0002                114      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000060  23C1 00001CC0            115      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000066                           116  
00000066                           117      ; Set the player starting width and height
00000066  13FC 001B 00001D25       118      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
0000006E  13FC 000D 00001D26       119      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
00000076                           120  
00000076  B381                     121      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000078  3239 00001CB4            122      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000007E  82FC 0002                123      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000082  23C1 00001CC0            124      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000088                           125  
00000088                           126      ; Initialise Player Score
00000088                           127      ;EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000088                           128      ;MOVE.L  #00,        D1          ; Init Score
00000088                           129      ;MOVE.L  D1,         PLAYER_SCORE
00000088                           130  
00000088                           131      ; Initialise Player Velocity
00000088  B381                     132      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000008A  123C 0000                133      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
0000008E  23C1 00001CC8            134      MOVE.L  D1,         PLYR_VELOCITY
00000094                           135  
00000094                           136      ; Initialise Player Gravity
00000094  B381                     137      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000096  223C 00000001            138      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
0000009C  23C1 00001CCC            139      MOVE.L  D1,         PLYR_GRAVITY
000000A2                           140      
000000A2                           141      ; Initialise Player Velocity
000000A2  B381                     142      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000A4  123C 0000                143      MOVE.B  #THRW_DFLT_V,D1         ; Init Player Velocity
000000A8  23C1 00001D18            144      MOVE.L  D1,         THROW_VELOCITY
000000AE                           145  
000000AE                           146      ; Initialise Player Gravity
000000AE  B381                     147      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000B0  7201                     148      MOVE.L  #THRW_DFLT_G,D1         ; Init Player Gravity
000000B2  23C1 00001D1C            149      MOVE.L  D1,         THROW_GRAVITY
000000B8                           150  
000000B8                           151      ; Initialize Player on Ground
000000B8  23FC 00000001 00001CD0   152      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
000000C2                           153  
000000C2                           154      ; Initial Position for Enemy
000000C2  B381                     155      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000C4  3239 00001CB2            156      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000000CA  23C1 00001CD6            157      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000000D0                           158  
000000D0  B381                     159      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000D2  3239 00001CB4            160      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000000D8  82FC 0002                161      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000000DC  23C1 00001CDA            162      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
000000E2                           163  
000000E2                           164      ; Initial Position for Flying Enemy
000000E2  B381                     165      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000E4  3239 00001CB2            166      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000000EA  23C1 00001CE6            167      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
000000F0                           168  
000000F0  B381                     169      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000F2  3239 00001CB4            170      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000000F8  82FC 0002                171      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000000FC  0441 003C                172      SUB.W   #60,        D1
00000100  23C1 00001CEA            173      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000106                           174      
00000106                           175      ; Initial Position for Health pack
00000106  B381                     176      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000108  3239 00001CB2            177      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000010E  0481 FFFFFFF6            178      SUB.L   #-10,        D1
00000114  23C1 00001CDE            179      MOVE.L  D1,         HEALTH_X     ; Enemy X Position
0000011A                           180  
0000011A  B381                     181      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000011C  3239 00001CB4            182      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000122  82FC 0002                183      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000126  23C1 00001CE2            184      MOVE.L  D1,         HEALTH_Y     ; Enemy Y Position
0000012C                           185  
0000012C  13FC 0032 00001C98       186      MOVE.B     #50,    hillHP
00000134                           187  
00000134  45F9 00001CA2            188      LEA    LEVELS,      A2
0000013A  13FC 0003 00001CFA       189      MOVE.B  #03,        antHealth
00000142                           190  
Line 191 ERROR: Undefined symbol
00000142  23FC 00000096 005455B8   191      MOVE.L  #150,       currentHealth
Line 192 ERROR: Undefined symbol
0000014C  23FC 00000014 005455B8   192      move.l  #20,        healthTlX
Line 193 ERROR: Undefined symbol
00000156  23FC 000001A9 005455B8   193      move.l  #425,       healthTlY
Line 194 ERROR: Undefined symbol
00000160  23FC 000000AA 005455B8   194      move.l  #170,       healthBrX
Line 195 ERROR: Undefined symbol
0000016A  23FC 000001B8 005455B8   195      move.l  #440,       healthBrY
00000174                           196  
00000174  13FC 0002 00001CFC       197      MOVE.B  #02,        POINTS
0000017C  13FC 0000 00001C9B       198      MOVE.B  #00,        DRAW_HEALTHPACKS
00000184  13FC 0000 00001C9C       199      MOVE.B  #00,        SPAWN_HEALTHPACKS
0000018C  33FC 0140 00001DAC       200      MOVE.W  #320,       Z
00000194  33FC 0004 00001DAE       201      MOVE.W  #4,         SCALER   
0000019C  33FC FFB0 00001DB0       202      MOVE.W  #-80,       WIDTH     
000001A4                           203  
000001A4  23FC 00000000 00001D02   204      MOVE.L  #0,         ATTACK_X
000001AE  23FC 00000000 00001D06   205      MOVE.L  #0,         ATTACK_Y
000001B8  23FC FFFFFF9C 00001D10   206      MOVE.L  #-100,        THROW_X
000001C2  23FC FFFFFF9C 00001D14   207      MOVE.L  #-100,        THROW_Y
000001CC                           208      
000001CC  13FC 0000 00001CFD       209      MOVE.B  #00,        CURRENTLYATTACKING
000001D4  13FC 0000 00001D0A       210      MOVE.B  #00,        CURRENTLYTHROWING
000001DC                           211      
000001DC  13FC 0000 00001D23       212      MOVE.B  #00,        ENEMY_HIT
000001E4  13FC 0000 00001D24       213      MOVE.B  #00,        FLYENEMY_HIT
000001EC                           214  
000001EC  0639 0032 00001D22       215      ADD.B   #50,        enemiesToDefeat
000001F4  13FC 0000 00001D20       216      MOVE.B  #0,         ENEMIES_DEFEATED
000001FC  13FC 0000 00001D21       217      MOVE.B  #0,         enemiesPassed
00000204  13FC 0004 00001DA4       218      MOVE.B  #4,         backToMapCount
0000020C  4281                     219      CLR.L   D1
0000020E                           220   
0000020E                           221  
0000020E                           222      ; Enable the screen back buffer(see easy 68k help)
0000020E  103C 005C                223      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
00000212  123C 0011                224      MOVE.B  #17,        D1          ; Combine Tasks
00000216  4E4F                     225      TRAP    #15                     ; Trap (Perform action)
00000218                           226          
00000218                           227      ; Clear the screen (see easy 68k help)
00000218  103C 000B                228      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000021C  323C FF00                229      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00000220  4E4F                     230      TRAP    #15                     ; Trap (Perform action)
00000222                           231  
00000222  6000 0002                232      bra gameloop
00000226                           233  
00000226                           234  *-----------------------------------------------------------
00000226                           235  * Subroutine    : Game
00000226                           236  * Description   : Game including main GameLoop. GameLoop is like
00000226                           237  * a while loop in that it runs forever until interupted
00000226                           238  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
00000226                           239  *-----------------------------------------------------------
00000226                           240  GAME:
00000226                           241  
00000226                           242      
00000226                           243  GAMELOOP:
00000226                           244      ; Main Gameloop
00000226  23FC 00000BB8 00001DB2   245      MOVE.L      #3000,timer
00000230  7200                     246      MOVE.L      #0,D1
00000232  103C 0017                247      MOVE.B      #23,D0
00000236  4E4F                     248      TRAP        #15
00000238                           249  DELAY:     
00000238                           250  
00000238  53B9 00001DB2            251      SUBI.L      #1,timer            ; decrement timer by 1 to simulate a delay
0000023E  4AB9 00001DB2            252      TST.L       timer            ; compare 0 to the value of timer
00000244  66F2                     253      BNE         DELAY               ; branch back to DELAY if the previous compare was not equal
00000246                           254  
00000246  6100 0018                255      BSR     BATTLEINPUT                   ; Check Keyboard Input
0000024A  6100 012C                256      BSR     checkPaused
0000024E  6100 013C                257      BSR     UPDATE                  ; Update positions and points
00000252  6100 0812                258      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
00000256  6100 1088                259      BSR     CHECK_COLLISIONS        ; Check for Collisions
0000025A  6100 044C                260      BSR     DRAWBATTLE                  ; Draw the Scene
0000025E                           261                  ; Loop back to GameLoop
0000025E  60C6                     262      BRA     GAMELOOP    
00000260                           263      
00000260                           264  *-----------------------------------------------------------
00000260                           265  * Subroutine    : Input
00000260                           266  * Description   : Process Keyboard Input
00000260                           267  *-----------------------------------------------------------
00000260                           268  BATTLEINPUT:
00000260  2039 00001CB6            269      move.l CURRENT_KEY, D0
Line 270 ERROR: Undefined symbol
00000266  13C0 005455B8            270      move.b D0,lastkey 
0000026C                           271  
0000026C  103C 0013                272      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
00000270                           273      ;MOVE.L  #$41444C20, D1          
Line 274 ERROR: Undefined symbol
00000270  223C 004DBD16            274      MOVE.L  #runActionKeys, D1          ; Check for A, D, L, and Spacebar
00000276  4E4F                     275      TRAP    #15                         ; Trap (Perform action)
00000278  23C1 00001CB6            276      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
0000027E                           277  
0000027E  0801 0018                278      BTST.L  #24,D1
00000282                           279      IF <NE> THEN
00000286  6100 09A6                280          BSR    MOVE_PLAYER_LEFT
0000028A                           281      ENDI
0000028A                           282  
0000028A  2239 00001CB6            283      MOVE.L  CURRENT_KEY, D1
00000290  0801 0010                284      BTST.L  #16,D1
00000294                           285      IF <NE> THEN
00000298  6100 09BE                286          BSR    MOVE_PLAYER_RIGHT
0000029C                           287      ENDI
0000029C                           288  
0000029C  2239 00001CB6            289      MOVE.L  CURRENT_KEY, D1
000002A2  0801 0008                290      BTST.L  #8,D1
000002A6                           291      IF <NE> THEN
000002AA  6100 0366                292          BSR    PERFORM_ATTACK
000002AE                           293      ENDI
000002AE                           294  
000002AE  2239 00001CB6            295      MOVE.L  CURRENT_KEY, D1
000002B4  0801 0000                296      BTST.L  #0,D1
000002B8                           297      IF <NE> THEN
000002BC  6100 07FC                298          BSR    JUMP
000002C0                           299      ENDI
000002C0                           300  
000002C0  103C 0013                301      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000002C4  223C 00001B4B            302      MOVE.L  #$1B4B, D1                 ; check K and escape
000002CA  4E4F                     303      TRAP    #15                     ; Trap (Perform action)
000002CC  23C1 00001CB6            304      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
000002D2                           305  
000002D2  2239 00001CB6            306      MOVE.L  CURRENT_KEY, D1
000002D8  0801 0000                307      BTST.L  #0,D1
000002DC                           308      IF <NE> THEN
000002E0  6100 037C                309          BSR    PERFORM_THROW
000002E4                           310      ENDI
000002E4                           311  
000002E4                           312  
000002E4                           313  
000002E4                           314      ; Process Input
000002E4  4281                     315      CLR.L   D1                      ; Clear Data Register
000002E6  4282                     316      CLR.L   D2
000002E8  103C 0013                317      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
000002EC  4E4F                     318      TRAP    #15                     ; Trap (Perform action)
000002EE  1401                     319      MOVE.B  D1,         D2          ; Move last key D1 to D2
000002F0  B43C 0000                320      CMP.B   #00,        D2          ; Key is pressed
000002F4  6700 000E                321      BEQ     PROCESS_INPUT           ; Process Key
000002F8  4E4F                     322      TRAP    #15                     ; Trap for Last Key
000002FA                           323      ; Check if key still pressed
000002FA  B23C 00FF                324      CMP.B   #$FF,       D1          ; Is it still pressed
000002FE  6700 0004                325      BEQ     PROCESS_INPUT           ; Process Last Key
00000302  4E75                     326      RTS                             ; Return to subroutine
00000304                           327  *-----------------------------------------------------------
00000304                           328  * Subroutine    : Process Input
00000304                           329  * Description   : Branch based on keys pressed
00000304                           330  *-----------------------------------------------------------
00000304                           331  PROCESS_INPUT:
00000304  23C2 00001CB6            332      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
0000030A                           333  
0000030A                           334  ; pause
Line 335 ERROR: Undefined symbol
0000030A  13C2 005455B8            335      move.b  d2,         currentKey
Line 336 ERROR: Undefined symbol
00000310  0C39 0016 005455CC       336      CMP.b   #escapekey,    currentKey ; Is Current Key Escape
Line 337 ERROR: Undefined symbol
00000318  6700 B9FC                337      BEQ     escapePressed
0000031C                           338  
Line 339 ERROR: Undefined symbol
0000031C  0C39 0016 005455C0       339      cmpi.b #key0, currentKey ; fullscreen
Line 340 ERROR: Undefined symbol
00000324  6700 B9F0                340      beq key0pressed
00000328                           341  
Line 342 ERROR: Undefined symbol
00000328  4A39 004DBD16            342      tst.b   isPaused
Line 343 ERROR: Undefined symbol
0000032E  6600 B9E6                343      bne     pausedInput
00000332                           344  
Line 345 ERROR: Undefined symbol
00000332  0C79 0003 005455B8       345      CMP.W   #3,lvlIndex
0000033A  6700 000E                346      BEQ     COMPLETE_RESTART
0000033E                           347  
0000033E  4A39 00001CFB            348      TST.B   antsRemaining
00000344  6F00 0004                349      BLE     COMPLETE_RESTART
00000348                           350  
00000348  4E75                     351      RTS                             ; Return to subroutine
0000034A                           352  
0000034A                           353  COMPLETE_RESTART:
0000034A  0CB9 00000052 00001CB6   354      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
00000354                           355      IF <EQ> THEN
Line 356 ERROR: Undefined symbol
00000358  33FC 0001 005455B8       356          move.w #1, lvlType
00000360                           357  
Line 358 ERROR: Undefined symbol
00000360  223C 004DBD16            358          MOVE.L    #color5,D1
00000366  243C 00015F90            359          MOVE.L  #00090000,D2
Line 360 ERROR: Undefined symbol
0000036C  103C 0016                360          MOVE.B  #tcFont,D0
00000370  4E4F                     361          TRAP    #15
00000372                           362          
Line 363 ERROR: Undefined symbol
00000372  6000 B9A2                363          BRA     nextInit
00000376                           364      ENDI
00000376                           365  
00000376  4E75                     366      RTS                             ; Return to subroutine
00000378                           367  *----------
00000378                           368  checkPaused:
Line 369 ERROR: Undefined symbol
00000378  4A39 004DBD16            369      TST.B  isPaused
0000037E  6600 0004                370      BNE    stillPaused
00000382  4E75                     371      RTS
00000384                           372  
00000384                           373  stillPaused:
00000384  6100 0322                374      BSR    DRAWBATTLE
00000388  6000 FE9C                375      BRA    GAMELOOP
0000038C                           376  *-----------------------------------------------------------
0000038C                           377  * Subroutine    : Update
0000038C                           378  * Description   : Main update loop update Player and Enemies
0000038C                           379  *-----------------------------------------------------------
0000038C                           380  UPDATE:
0000038C  6100 0876                381      BSR     UPDATE_PLAYER
00000390  6100 005E                382      BSR     MOVE_THROW
00000394                           383      ; Move the Enemy
00000394  4281                     384      CLR.L   D1                      ; Clear the contents of D0
00000396  2239 00001CD6            385      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
0000039C  B2BC 00000000            386      CMP.L   #00,        D1
000003A2  6F00 0196                387      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
000003A6  6100 00CA                388      BSR     MOVE_ENEMY              ; Move the Enemy
000003AA                           389  
000003AA                           390      ; Move flying enemy
000003AA                           391  
000003AA  4281                     392      CLR.L   D1                      ; Clear the contents of D0
000003AC  2239 00001CE6            393      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
000003B2  B2BC 00000000            394      CMP.L   #00,        D1
000003B8  6F00 01C2                395      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
000003BC                           396  
000003BC                           397  
000003BC                           398      ; Move health
000003BC  0CB9 00000000 00001CDE   399      CMP.L   #00,        HEALTH_X
000003C6  6F00 01FA                400      BLE     RESET_HEALTH_POSITION
000003CA  6100 009E                401      BSR     MOVE_HEALTHPACK
000003CE                           402  
000003CE                           403    
000003CE  6100 007C                404      BSR     CHECK_ATTACK_COOLDOWN
000003D2                           405  
000003D2  4A79 00001D00            406      TST.W   ATTACK_TIME
000003D8  6600 0080                407      BNE     ATTACK_TIME_SUB
000003DC  13FC 0000 00001CFD       408      MOVE.B  #00,        CURRENTLYATTACKING
000003E4  23FC 000001E0 00001D06   409      MOVE.L  #480,        ATTACK_Y
000003EE                           410  
000003EE                           411      
000003EE                           412  
000003EE  4E75                     413      RTS                             ; Return to subroutine  
000003F0                           414  
000003F0                           415  MOVE_THROW:
000003F0                           416         ; Update the Players Positon based on Velocity and Gravity
000003F0  B381                     417      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
000003F2  2239 00001D18            418      MOVE.L  THROW_VELOCITY, D1       ; Fetch Player Velocity
000003F8  2439 00001D1C            419      MOVE.L  THROW_GRAVITY, D2        ; Fetch Player Gravity
000003FE  D282                     420      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000400  23C1 00001D18            421      MOVE.L  D1,         THROW_VELOCITY ; Update Player Velocity
00000406  D2B9 00001D14            422      ADD.L   THROW_Y,   D1          ; Add Velocity to Player
0000040C  23C1 00001D14            423      MOVE.L  D1,         THROW_Y    ; Update Players Y Position
00000412                           424  
00000412  58B9 00001D10            425      ADDI.L   #4,        THROW_X
00000418  6100 0004                426      BSR     CHECK_THROW_DONE
0000041C                           427      
0000041C  4E75                     428      RTS
0000041E                           429  
0000041E                           430  CHECK_THROW_DONE:
0000041E  0CB9 0000015E 00001D14   431      CMP.L    #350, THROW_Y
00000428  6E00 0004                432      BGT      RESET_THROW
0000042C  4E75                     433      RTS
0000042E                           434  
0000042E                           435  RESET_THROW:
0000042E  13FC 0000 00001D0A       436      MOVE.B   #00, CURRENTLYTHROWING
00000436  23FC FFFFFF9C 00001D10   437      MOVE.L   #-100, THROW_X
00000440  23FC FFFFFF9C 00001D14   438      MOVE.L   #-100, THROW_Y
0000044A  4E75                     439      RTS
0000044C                           440  
0000044C                           441  CHECK_ATTACK_COOLDOWN:
0000044C  0C79 0000 00001CFE       442      CMP.W   #0, ATTACK_COOLDOWN
00000454  6E00 000C                443      BGT     ATTACK_COOLDOWN_SUB
00000458  4E75                     444      RTS
0000045A                           445  
0000045A                           446  ATTACK_TIME_SUB:
0000045A  5579 00001D00            447      SUB.W   #02,        ATTACK_TIME
00000460  4E75                     448      RTS   
00000462                           449  ATTACK_COOLDOWN_SUB:
00000462  5579 00001CFE            450      SUB.W   #02,        ATTACK_COOLDOWN
00000468  4E75                     451      RTS                            
0000046A                           452  
0000046A                           453  MOVE_HEALTHPACK:
0000046A  55B9 00001CDE            454      SUB.L   #02,        HEALTH_X
00000470  4E75                     455      RTS
00000472                           456  
00000472                           457  *-----------------------------------------------------------
00000472                           458  * Subroutine    : Move Enemy
00000472                           459  * Description   : Move Enemy Right to Left
00000472                           460  *-----------------------------------------------------------
00000472                           461  MOVE_ENEMY:
00000472  45F9 00001CA2            462      LEA     LEVELS,      A2
00000478  2A39 00001CC4            463      MOVE.L  PLAYER_SCORE,   D5
0000047E  2C1A                     464      MOVE.L  (A2)+,       D6
00000480  BA86                     465      CMP.L   D6,   D5
00000482  6E00 0088                466      BGT     MOVE_ENEMY_L4
00000486  2C1A                     467      MOVE.L  (A2)+,       D6
00000488  BA86                     468      CMP.L   D6,   D5
0000048A  6E00 0056                469      BGT     MOVE_ENEMY_L3
0000048E  2C1A                     470      MOVE.L  (A2)+,       D6
00000490  BA86                     471      CMP.L   D6,   D5
00000492  6E00 0024                472      BGT     MOVE_ENEMY_L2
00000496  0CB9 00000082 00001CE6   473      CMP.L   #130,      FLYINGENEMY_X
000004A0                           474      IF <LE> THEN
000004A4  52B9 00001CEA            475          ADD.L   #1,FLYINGENEMY_Y
000004AA                           476      ENDI
000004AA                           477  
000004AA  57B9 00001CE6            478      SUB.L   #03,        FLYINGENEMY_X
000004B0  55B9 00001CD6            479      SUB.L   #02,        ENEMY_X     ; Move enemy by X Value
000004B6  4E75                     480      RTS
000004B8                           481  
000004B8                           482  MOVE_ENEMY_L2:
000004B8  57B9 00001CE6            483      SUB.L   #03,        FLYINGENEMY_X
000004BE  0CB9 00000082 00001CE6   484       CMP.L   #130,      FLYINGENEMY_X
000004C8                           485      IF <LE> THEN
000004CC  52B9 00001CEA            486          ADD.L   #1,FLYINGENEMY_Y
000004D2                           487      ENDI
000004D2  59B9 00001CD6            488      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
000004D8  13FC 0003 00001CFC       489      MOVE.B  #03,        POINTS
000004E0  4E75                     490      RTS
000004E2                           491  
000004E2                           492  MOVE_ENEMY_L3:
000004E2  0CB9 00000082 00001CE6   493      CMP.L   #130,      FLYINGENEMY_X
000004EC                           494      IF <LE> THEN
000004F0  56B9 00001CEA            495          ADD.L   #3,FLYINGENEMY_Y
000004F6                           496      ENDI
000004F6  5FB9 00001CE6            497      SUB.L   #07,        FLYINGENEMY_X
000004FC  5BB9 00001CD6            498      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
00000502  13FC 0005 00001CFC       499      MOVE.B  #05,        POINTS
0000050A  4E75                     500      RTS
0000050C                           501  
0000050C                           502  MOVE_ENEMY_L4:
0000050C  0CB9 00000082 00001CE6   503      CMP.L   #130,      FLYINGENEMY_X
00000516                           504      IF <LE> THEN
0000051A  5AB9 00001CEA            505          ADD.L   #5,FLYINGENEMY_Y
00000520                           506      ENDI
00000520  04B9 0000000A 00001CE6   507      SUB.L   #10,        FLYINGENEMY_X
0000052A  51B9 00001CD6            508      SUB.L   #08,        ENEMY_X     ; Move enemy by X Value
00000530  13FC 000A 00001CFC       509      MOVE.B  #10,        POINTS
00000538  4E75                     510      RTS
0000053A                           511  *-----------------------------------------------------------
0000053A                           512  * Subroutine    : Reset Enemy
0000053A                           513  * Description   : Reset Enemy if to passes 0 to Right of Screen
0000053A                           514  *-----------------------------------------------------------
0000053A                           515  RESET_ENEMY_POSITION:
0000053A  4281                     516      CLR.L   D1       
0000053C  3239 00001CB4            517      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000542  82FC 0002                518      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000546  23C1 00001CDA            519      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
0000054C                           520  
0000054C  B381                     521      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
0000054E  3239 00001CB2            522      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000554  0681 0000001B            523      ADD.L   #ENMY_W_INIT,D1
0000055A  23C1 00001CD6            524      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
00000560                           525  
00000560  4A39 00001D23            526      TST.B     ENEMY_HIT
00000566                           527      IF <EQ> THEN        ; enemy has not been hit
0000056A  6100 0086                528          BSR   damage_hill
0000056E                           529      ENDI
0000056E  13FC 0000 00001D23       530      MOVE.B  #0,         ENEMY_HIT
00000576  6100 0062                531      BSR     CHECK_WAVE_CLEARED
0000057A                           532  
0000057A  4E75                     533      RTS
0000057C                           534  
0000057C                           535  RESET_FLYENEMY_POSITION:
0000057C  B381                     536      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000057E  3239 00001CB4            537      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000584  82FC 0002                538      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000588  0441 003C                539      SUB.W   #60,        D1
0000058C  23C1 00001CEA            540      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000592                           541  
00000592  4281                     542      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000594  3239 00001CB2            543      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000059A  0681 0000001E            544      ADD.L   #FLY_ENMY_W_INIT,D1
000005A0  23C1 00001CE6            545      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
000005A6                           546  
000005A6  4A39 00001D24            547      TST.B     FLYENEMY_HIT
000005AC                           548      IF <EQ> THEN        ; enemy has not been hit
000005B0  6100 0040                549          BSR   damage_hill
000005B4                           550      ENDI
000005B4  13FC 0000 00001D24       551      MOVE.B  #0,         FLYENEMY_HIT
000005BC  6100 001C                552      BSR     CHECK_WAVE_CLEARED
000005C0                           553  
000005C0  4E75                     554      RTS
000005C2                           555      
000005C2                           556  RESET_HEALTH_POSITION:
000005C2  13FC 0001 00001C9B       557      MOVE.B  #01,        DRAW_HEALTHPACKS
000005CA  4281                     558      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000005CC  3239 00001CB2            559      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000005D2  23C1 00001CDE            560      MOVE.L  D1,         HEALTH_X     ; healthpack X Position
000005D8  4E75                     561      RTS
000005DA                           562  
000005DA                           563  CHECK_WAVE_CLEARED:
000005DA  5239 00001D21            564      ADDI.B  #1,         enemiesPassed
000005E0  1239 00001D21            565      MOVE.B  enemiesPassed,D1
000005E6  B239 00001D22            566      CMP.B   enemiesToDefeat,D1
000005EC  6700 1330                567      BEQ     WAVE_DEFEATED
000005F0  4E75                     568      RTS
000005F2                           569  
000005F2                           570  damage_hill:
000005F2  5B39 00001C98            571      subq.b  #5,hillHP
Line 572 ERROR: Undefined symbol
000005F8  04B9 0000000F 005455B8   572      sub.l   #15,currentHealth
00000602  0C39 0000 00001C98       573      CMP.b   #0,hillHP
0000060A  6F00 10FC                574      BLE     HILL_LOST
0000060E  4E75                     575      RTS
00000610                           576  
00000610                           577  CONTINUE:
00000610  4E75                     578      RTS
00000612                           579  
00000612                           580  PERFORM_ATTACK:
Line 581 ERROR: Undefined symbol
00000612  4A39 004DBD16            581      TST.B  isPaused
00000618                           582      IF <NE> THEN
0000061C  4E75                     583          RTS
0000061E                           584      ENDI
0000061E  4A79 00001CFE            585      TST.W    ATTACK_COOLDOWN
00000624  66EA                     586      BNE      CONTINUE
00000626                           587      
00000626  13FC 0001 00001CFD       588      MOVE.B   #01, CURRENTLYATTACKING
0000062E  33FC 0032 00001D00       589      MOVE.W   #50, ATTACK_TIME
00000636  33FC 004C 00001CFE       590      MOVE.W   #76, ATTACK_COOLDOWN
0000063E                           591  
0000063E  23F9 00001CBC 00001D02   592      MOVE.L   PLAYER_X,ATTACK_X
00000648  06B9 0000001B 00001D02   593      ADDI.L   #PLYR_W_INIT,ATTACK_X
00000652  23F9 00001CC0 00001D06   594      MOVE.L   PLAYER_Y,ATTACK_Y
0000065C  4E75                     595      RTS
0000065E                           596  
0000065E                           597  PERFORM_THROW:
Line 598 ERROR: Undefined symbol
0000065E  4A39 004DBD16            598      TST.B  isPaused
00000664                           599      IF <NE> THEN
00000668  4E75                     600          RTS
0000066A                           601      ENDI
0000066A  4A39 00001D0A            602      TST.B    CURRENTLYTHROWING
00000670  669E                     603      BNE      CONTINUE
00000672                           604      
00000672  13FC 0001 00001D0A       605      MOVE.B   #01,CURRENTLYTHROWING
0000067A  23F9 00001CBC 00001D10   606      MOVE.L   PLAYER_X,THROW_X
00000684  06B9 0000001B 00001D10   607      ADDI.L   #PLYR_W_INIT,THROW_X
0000068E  23F9 00001CC0 00001D14   608      MOVE.L   PLAYER_Y,THROW_Y
00000698  04B9 0000000D 00001D14   609      SUBI.L   #PLYR_H_INIT,THROW_Y
000006A2                           610  
000006A2  6100 0458                611      BSR     PERFORM_THROW_ARC
000006A6  4E75                     612      RTS
000006A8                           613  
000006A8                           614  *-----------------------------------------------------------
000006A8                           615  * Subroutine    : Draw
000006A8                           616  * Description   : Draw Screen
000006A8                           617  *-----------------------------------------------------------
000006A8                           618  DRAWBATTLE: 
000006A8                           619      ; Enable back buffer
000006A8  103C 005E                620      MOVE.B  #TC_REDRAW,        D0
000006AC  4E4F                     621      TRAP    #15
000006AE                           622  
000006AE                           623      ; Clear the screen
000006AE  103C 000B                624      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000006B2  323C FF00                625      MOVE.W  #$FF00,     D1          ; Clear contents
000006B6  4E4F                     626      TRAP    #15                     ; Trap (Perform action)
000006B8                           627  
000006B8  123C 0001                628      MOVE.B  #1,D1
000006BC  103C 005D                629      MOVE.B  #93,D0
000006C0  4E4F                     630      TRAP    #15
000006C2                           631  
000006C2  6100 01FA                632      BSR     DRAW_BACKGROUND        
000006C6  6100 0066                633      BSR     DRAW_HILL 
000006CA  6100 029A                634      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
000006CE  6100 01BE                635      BSR     DRAW_ENTRANCE_HOLE
000006D2  6100 0796                636      BSR     DRAW_ENEMY              ; Draw Enemy
000006D6  6100 08D0                637      BSR     DRAW_FLYENEMY
000006DA  6100 0A78                638      BSR     DRAW_HEALTHPACK
000006DE  6100 017E                639      BSR     DRAW_ENTRANCE
000006E2  6100 059E                640      BSR     DRAW_PLAYER             ; Draw Player
000006E6  6100 0AF2                641      BSR     DRAW_FLOOR              ; Draw Floor
000006EA  6100 0008                642      BSR     drawHillHealth         ; draw hill hp
Line 643 ERROR: Undefined symbol
000006EE  6100 B626                643      BSR     drawPause
000006F2  4E75                     644      RTS                             ; Return to subroutine
000006F4                           645  
000006F4                           646  
000006F4                           647  
000006F4                           648  drawHillHealth:
Line 649 ERROR: Undefined symbol
000006F4  6100 B620                649      BSR     drawHealth
000006F8                           650          
Line 651 ERROR: Undefined symbol
000006F8  223C 004DBD16            651      MOVE.L  #color5,D1
Line 652 ERROR: Undefined symbol
000006FE  103C 0016                652      MOVE.B  #tcFont,D0
00000702  243C 00015F90            653      MOVE.L  #00090000,D2
00000708  4E4F                     654      TRAP    #15
0000070A                           655  
Line 656 ERROR: Undefined symbol
0000070A  223C 004DBD16            656      MOVE.L  #BROWN,D1
Line 657 ERROR: Undefined symbol
00000710  103C 0016                657      MOVE.B  #tcPenFil,D0
00000714  4E4F                     658      TRAP    #15
00000716                           659  
00000716  103C 000B                660      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000071A  323C 041B                661      MOVE.W  #$041B,     D1          ; Col 02, Row 01
0000071E  4E4F                     662      TRAP    #15                     ; Trap (Perform action)
00000720  43F9 00001C8A            663      LEA     hillHP_MSG,  A1          ; Score Message
00000726  303C 000D                664      MOVE    #13,        D0          ; No Line feed
0000072A  4E4F                     665      TRAP    #15                     ; Trap (Perform action)
0000072C                           666  
0000072C  4E75                     667      RTS
0000072E                           668  
0000072E                           669  DRAW_HILL:
0000072E                           670  
0000072E                           671      ; Set Pixel Colors
Line 672 ERROR: Undefined symbol
0000072E  223C 004DBD16            672      MOVE.L  #DIRT,     D1          ; Set Background color
00000734  103C 0050                673      MOVE.B  #80,        D0          ; Task for Background Color
00000738  4E4F                     674      TRAP    #15                     ; Trap (Perform action)
0000073A                           675  
Line 676 ERROR: Undefined symbol
0000073A  223C 004DBD16            676      MOVE.L  #DIRT,     D1
00000740  103C 0051                677      MOVE.B  #81,        D0
00000744  4E4F                     678      TRAP    #15
00000746                           679  
00000746                           680      ; Set X, Y, X2, and Y2
00000746  7200                     681      MOVE.L  #0,   D1          ; X
00000748  243C 000000F1            682      MOVE.L  #241,  D2          ; Y
0000074E  761E                     683      MOVE.L  #30,   D3           
00000750  7878                     684      MOVE.L  #120,   D4     
00000752                           685      
00000752  103C 0057                686      MOVE.B  #87,        D0          ; Draw 
00000756  4E4F                     687      TRAP    #15                     ; Trap (Perform action)
00000758                           688      
00000758                           689       ; Set X, Y, X2, and Y2
00000758  7200                     690      MOVE.L  #0,   D1          ; X
0000075A  243C 000000F1            691      MOVE.L  #241,  D2          ; Y
00000760  763C                     692      MOVE.L  #60,   D3           
00000762  283C 00000087            693      MOVE.L  #135,   D4 
00000768                           694      
00000768                           695      
00000768  103C 0057                696      MOVE.B  #87,        D0          ; Draw
0000076C  4E4F                     697      TRAP    #15                     ; Trap (Perform action)
0000076E                           698  
0000076E                           699       ; Set X, Y, X2, and Y2
0000076E  7200                     700      MOVE.L  #0,   D1          ; X
00000770  243C 000000F1            701      MOVE.L  #241,  D2          ; Y
00000776  7650                     702      MOVE.L  #80,   D3           
00000778  283C 00000096            703      MOVE.L  #150,   D4 
0000077E                           704      
0000077E                           705      
0000077E  103C 0057                706      MOVE.B  #87,        D0          ; Draw 
00000782  4E4F                     707      TRAP    #15                     ; Trap (Perform action)
00000784                           708  
00000784                           709       ; Set X, Y, X2, and Y2
00000784  7200                     710      MOVE.L  #0,   D1          ; X
00000786  243C 000000F1            711      MOVE.L  #241,  D2          ; Y
0000078C  7664                     712      MOVE.L  #100,   D3           
0000078E  283C 000000C8            713      MOVE.L  #200,   D4 
00000794                           714      
00000794                           715      
00000794  103C 0057                716      MOVE.B  #87,        D0          ; Draw 
00000798  4E4F                     717      TRAP    #15                     ; Trap (Perform action)
0000079A                           718  
Line 719 ERROR: Undefined symbol
0000079A  223C 004DBD16            719      MOVE.L  #BLACK,     D1
000007A0  103C 0051                720      MOVE.B  #81,        D0
000007A4  4E4F                     721      TRAP    #15
Line 722 ERROR: Undefined symbol
000007A6  223C 004DBD16            722      MOVE.L  #BLACK,     D1
000007AC  103C 0050                723      MOVE.B  #80,        D0
000007B0  4E4F                     724      TRAP    #15
000007B2                           725  
000007B2                           726      ; Set X, Y, X2, and Y2
000007B2  7205                     727      MOVE.L  #5,   D1          ; X
000007B4  243C 00000082            728      MOVE.L  #130,  D2          ; Y
000007BA  7619                     729      MOVE.L  #25,   D3           
000007BC  7878                     730      MOVE.L  #120,   D4     
000007BE                           731  
000007BE                           732      
000007BE  103C 0057                733      MOVE.B  #87,        D0          ; Draw 
000007C2  4E4F                     734      TRAP    #15                     ; Trap (Perform action)
000007C4                           735  
000007C4  4E75                     736      RTS
000007C6                           737  
000007C6                           738      ; Set Pixel Colors
Line 739 ERROR: Undefined symbol
000007C6  223C 004DBD16            739      MOVE.L  #DIRT,     D1          ; Set Background color
000007CC  103C 0050                740      MOVE.B  #80,        D0          ; Task for Background Color
000007D0  4E4F                     741      TRAP    #15                     ; Trap (Perform action)
000007D2                           742  
Line 743 ERROR: Undefined symbol
000007D2  223C 004DBD16            743      MOVE.L  #DIRT,     D1
000007D8  103C 0051                744      MOVE.B  #81,        D0
000007DC  4E4F                     745      TRAP    #15
000007DE                           746  
000007DE                           747      ; Set X, Y, X2, and Y2
000007DE  7200                     748      MOVE.L  #0,   D1          ; X
000007E0  243C 000000F1            749      MOVE.L  #241,  D2          ; Y
000007E6  761E                     750      MOVE.L  #30,   D3           
000007E8  7878                     751      MOVE.L  #120,   D4     
000007EA                           752      
000007EA  103C 0057                753      MOVE.B  #87,        D0          ; Draw 
000007EE  4E4F                     754      TRAP    #15                     ; Trap (Perform action)
000007F0                           755      
000007F0                           756       ; Set X, Y, X2, and Y2
000007F0  7200                     757      MOVE.L  #0,   D1          ; X
000007F2  243C 000000F1            758      MOVE.L  #241,  D2          ; Y
000007F8  763C                     759      MOVE.L  #60,   D3           
000007FA  283C 00000087            760      MOVE.L  #135,   D4 
00000800                           761      
00000800                           762      
00000800  103C 0057                763      MOVE.B  #87,        D0          ; Draw
00000804  4E4F                     764      TRAP    #15                     ; Trap (Perform action)
00000806                           765  
00000806                           766       ; Set X, Y, X2, and Y2
00000806  7200                     767      MOVE.L  #0,   D1          ; X
00000808  243C 000000F1            768      MOVE.L  #241,  D2          ; Y
0000080E  7650                     769      MOVE.L  #80,   D3           
00000810  283C 00000096            770      MOVE.L  #150,   D4 
00000816                           771      
00000816                           772      
00000816  103C 0057                773      MOVE.B  #87,        D0          ; Draw 
0000081A  4E4F                     774      TRAP    #15                     ; Trap (Perform action)
0000081C                           775  
0000081C                           776       ; Set X, Y, X2, and Y2
0000081C  7200                     777      MOVE.L  #0,   D1          ; X
0000081E  243C 000000F1            778      MOVE.L  #241,  D2          ; Y
00000824  7664                     779      MOVE.L  #100,   D3           
00000826  283C 000000C8            780      MOVE.L  #200,   D4 
0000082C                           781      
0000082C                           782      
0000082C  103C 0057                783      MOVE.B  #87,        D0          ; Draw 
00000830  4E4F                     784      TRAP    #15                     ; Trap (Perform action)
00000832                           785  
Line 786 ERROR: Undefined symbol
00000832  223C 004DBD16            786      MOVE.L  #BLACK,     D1
00000838  103C 0051                787      MOVE.B  #81,        D0
0000083C  4E4F                     788      TRAP    #15
Line 789 ERROR: Undefined symbol
0000083E  223C 004DBD16            789      MOVE.L  #BLACK,     D1
00000844  103C 0050                790      MOVE.B  #80,        D0
00000848  4E4F                     791      TRAP    #15
0000084A                           792  
0000084A                           793      ; Set X, Y, X2, and Y2
0000084A  7205                     794      MOVE.L  #5,   D1          ; X
0000084C  243C 00000082            795      MOVE.L  #130,  D2          ; Y
00000852  7619                     796      MOVE.L  #25,   D3           
00000854  7878                     797      MOVE.L  #120,   D4     
00000856                           798  
00000856                           799      
00000856  103C 0057                800      MOVE.B  #87,        D0          ; Draw 
0000085A  4E4F                     801      TRAP    #15                     ; Trap (Perform action)
0000085C                           802  
0000085C  4E75                     803      RTS
0000085E                           804  
0000085E                           805  DRAW_ENTRANCE:
0000085E                           806      ; Set Pixel Colors
Line 807 ERROR: Undefined symbol
0000085E  223C 004DBD16            807      MOVE.L  #DIRT,     D1          ; Set Background color
00000864  103C 0050                808      MOVE.B  #80,        D0          ; Task for Background Color
00000868  4E4F                     809      TRAP    #15                     ; Trap (Perform action)
0000086A                           810  
Line 811 ERROR: Undefined symbol
0000086A  223C 004DBD16            811      MOVE.L  #DIRT,     D1
00000870  103C 0051                812      MOVE.B  #81,        D0
00000874  4E4F                     813      TRAP    #15
00000876                           814  
00000876                           815      ; Set X, Y, X2, and Y2
00000876  7200                     816      MOVE.L  #0,   D1          ; X
00000878  243C 000000F1            817      MOVE.L  #241,  D2          ; Y
0000087E  7605                     818      MOVE.L  #5,   D3           
00000880  283C 000000B5            819      MOVE.L  #181,   D4     
00000886                           820      
00000886  103C 0057                821      MOVE.B  #87,        D0          ; Draw 
0000088A  4E4F                     822      TRAP    #15                     ; Trap (Perform action)
0000088C                           823  
0000088C  4E75                     824      RTS
0000088E                           825  
0000088E                           826  DRAW_ENTRANCE_HOLE:
0000088E                           827      ; Set Pixel Colors
Line 828 ERROR: Undefined symbol
0000088E  223C 004DBD16            828      MOVE.L  #BLACK,     D1          ; Set Background color
00000894  103C 0050                829      MOVE.B  #80,        D0          ; Task for Background Color
00000898  4E4F                     830      TRAP    #15                     ; Trap (Perform action)
0000089A                           831  
Line 832 ERROR: Undefined symbol
0000089A  223C 004DBD16            832      MOVE.L  #BLACK,     D1
000008A0  103C 0051                833      MOVE.B  #81,        D0
000008A4  4E4F                     834      TRAP    #15
000008A6                           835  
000008A6                           836      ; Set X, Y, X2, and Y2
000008A6  7205                     837      MOVE.L  #5,   D1          ; X
000008A8  243C 000000F1            838      MOVE.L  #241,  D2          ; Y
000008AE  7614                     839      MOVE.L  #20,   D3           
000008B0  283C 000000D3            840      MOVE.L  #211,   D4     
000008B6                           841      
000008B6  103C 0057                842      MOVE.B  #87,        D0          ; Draw 
000008BA  4E4F                     843      TRAP    #15                     ; Trap (Perform action)
000008BC  4E75                     844      RTS
000008BE                           845  
000008BE                           846  DRAW_BACKGROUND:
000008BE  4281                     847      CLR.L       D1
Line 848 ERROR: Undefined symbol
000008C0  223C 004DBD16            848      MOVE.L      #SKY,D1
000008C6  103C 0051                849      MOVE.B      #81,D0
000008CA  4E4F                     850      TRAP        #15
000008CC                           851  
000008CC  7200                     852      MOVE.L      #00, D1
000008CE  7400                     853      MOVE.L      #00, D2
000008D0  7059                     854      MOVE.L      #89, D0
000008D2  4E4F                     855      TRAP        #15
000008D4                           856      
Line 857 ERROR: Undefined symbol
000008D4  223C 004DBD16            857      MOVE.L     #BROWN,D1
000008DA  243C 01110000            858      MOVE.L     #$01110000,D2
000008E0  103C 0015                859      MOVE.B     #21,D0
000008E4  4E4F                     860      TRAP       #15
000008E6                           861      
000008E6                           862  
000008E6  B381                     863      EOR.L      D1,D1
000008E8  143C 0005                864      MOVE.B     #5,D2
000008EC  33FC 300B 00001DA6       865      MOVE.W     #$300B,TRUNK
000008F4                           866  TREE_LOOP:
000008F4  700B                     867      MOVE.L     #TC_CURSR_P,D0
000008F6  3239 00001DA6            868      MOVE.W     TRUNK,D1
000008FC  5379 00001DA6            869      SUBQ.W      #01,TRUNK
00000902  4E4F                     870      TRAP       #15
00000904                           871     
00000904  43F9 00001C4D            872      LEA         TREET, A1
0000090A  700E                     873      MOVE.L      #14, D0
0000090C  4E4F                     874      TRAP        #15
0000090E                           875  
0000090E  5302                     876      SUBQ.B      #01,D2
00000910  B43C 0000                877      CMP.B       #00,D2
00000914  66DE                     878      BNE         TREE_LOOP
00000916                           879  
Line 880 ERROR: Undefined symbol
00000916  223C 004DBD16            880      MOVE.L     #GREEN,D1
0000091C  243C 01110000            881      MOVE.L     #$01110000,D2
00000922  103C 0015                882      MOVE.B     #21,D0
00000926  4E4F                     883      TRAP       #15
00000928                           884  
00000928  163C 0005                885      MOVE.B     #5,D3
0000092C                           886  TREE_LEAVES_Y:
0000092C  13FC 002D 00001DA6       887      MOVE.B     #$2D,TRUNK
00000934  143C 0008                888      MOVE.B     #8,D2
00000938                           889  TREE_LEAVES_X:
00000938  700B                     890      MOVE.L     #TC_CURSR_P,D0
0000093A  3239 00001DA6            891      MOVE.W     TRUNK,D1
00000940  5239 00001DA6            892      ADDQ.B     #01,TRUNK
00000946  4E4F                     893      TRAP       #15
00000948                           894     
00000948  7240                     895      MOVE.L      #$40, D1
0000094A  7006                     896      MOVE.L      #6, D0
0000094C  4E4F                     897      TRAP        #15
0000094E                           898  
0000094E  5302                     899      SUBQ.B      #01,D2
00000950  B43C 0000                900      CMP.B       #00,D2
00000954  66E2                     901      BNE         TREE_LEAVES_X
00000956  5303                     902      SUB.B       #01,D3
00000958  5379 00001DA6            903      SUB.W       #01,TRUNK
0000095E  B63C 0000                904      CMP.B       #00,D3
00000962  66C8                     905      BNE         TREE_LEAVES_Y
00000964  4E75                     906      RTS
00000966                           907  *-----------------------------------------------------------
00000966                           908  * Subroutine    : Draw Player Data
00000966                           909  * Description   : Draw Player X, Y, Velocity, Gravity and OnGround
00000966                           910  *-----------------------------------------------------------
00000966                           911  DRAW_PLYR_DATA:
00000966  B381                     912      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000968  B582                     913      EOR.L    D2,D2
0000096A                           914  
Line 915 ERROR: Undefined symbol
0000096A  223C 004DBD16            915      MOVE.L  #BLACK,     D1
00000970  103C 0015                916      MOVE.B  #21,        D0          ; Set Text Color
00000974  4E4F                     917      TRAP    #15                     ; Trap (Perform action)
00000976                           918  
Line 919 ERROR: Undefined symbol
00000976  223C 004DBD16            919      MOVE.L  #SKY,       D1          ; Set Text Color
0000097C  7051                     920      MOVE.L  #81,        D0          ; Set Text Color
0000097E  4E4F                     921      TRAP    #15                     ; Trap (Perform action)
00000980                           922      ; Player 
00000980  103C 000B                923      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000984  323C 0203                924      MOVE.W  #$0203,     D1          ; Col 02, Row 03
00000988  4E4F                     925      TRAP    #15                     ; Trap (Perform action)
0000098A  43F9 00001C78            926      LEA     antsRem_MSG,      A1          ; Velocity Message
00000990  303C 000D                927      MOVE    #13,        D0          ; No Line feed
00000994  4E4F                     928      TRAP    #15                     ; Trap (Perform action)
00000996                           929      
00000996                           930      ; Player Velocity
00000996  103C 000B                931      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000099A  323C 1303                932      MOVE.W  #$1303,     D1          ; Col 05, Row 03
0000099E  4E4F                     933      TRAP    #15                     ; Trap (Perform action)
000009A0  103C 0003                934      MOVE.B  #03,        D0          ; Display number at D1.L
000009A4  B381                     935      EOR.L   D1,D1
000009A6  1239 00001CFB            936      MOVE.B  antsRemaining,D1        ; Move X to D1.L
000009AC  4E4F                     937      TRAP    #15                     ; Trap (Perform action)
000009AE                           938  
000009AE                           939      ; Player On Ground Message
000009AE  103C 000B                940      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009B2  323C 0204                941      MOVE.W  #$0204,     D1          ; Col 10, Row 03
000009B6  4E4F                     942      TRAP    #15                     ; Trap (Perform action)
000009B8  43F9 00001B84            943      LEA     ENEMIESDEAD_MSG,    A1          ; On Ground Message
000009BE  303C 000D                944      MOVE    #13,        D0          ; No Line feed
000009C2  4E4F                     945      TRAP    #15                     ; Trap (Perform action)
000009C4                           946      
000009C4                           947      ; Player On Ground
000009C4  103C 000B                948      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009C8  323C 1504                949      MOVE.W  #$1504,     D1          ; Col 06, Row 04
000009CC  4E4F                     950      TRAP    #15                     ; Trap (Perform action)
000009CE  103C 0003                951      MOVE.B  #03,        D0          ; Display number at D1.L
000009D2  4281                     952      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000009D4  1239 00001D20            953      MOVE.B  ENEMIES_DEFEATED,     D1          ; Move Play on Ground ? to D1.L
000009DA  4E4F                     954      TRAP    #15                     ; Trap (Perform action)
000009DC                           955      
000009DC                           956      ; number of enemies in wave msg
000009DC  103C 000B                957      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009E0  323C 0205                958      MOVE.W  #$0205,     D1          ; Col 10, Row 03
000009E4  4E4F                     959      TRAP    #15                     ; Trap (Perform action)
000009E6  43F9 00001B96            960      LEA     ENEMYCOUNT_MSG,    A1          ; On Ground Message
000009EC  303C 000D                961      MOVE    #13,        D0          ; No Line feed
000009F0  4E4F                     962      TRAP    #15                     ; Trap (Perform action)
000009F2                           963      
000009F2                           964      ; number of enemies in wave 
000009F2  103C 000B                965      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009F6  323C 1705                966      MOVE.W  #$1705,     D1          ; Col 06, Row 04
000009FA  4E4F                     967      TRAP    #15                     ; Trap (Perform action)
000009FC  4281                     968      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000009FE  1239 00001D22            969      MOVE.B  enemiesToDefeat,     D1          ; Move Play on Ground ? to D1.L
00000A04  103C 0003                970      MOVE.B  #03,        D0          ; Display number at D1.L
00000A08  4E4F                     971      TRAP    #15                     ; Trap (Perform action)
00000A0A                           972  
00000A0A                           973      ; Show Keys Pressed
00000A0A  103C 000B                974      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A0E  323C 2001                975      MOVE.W  #$2001,     D1          ; Col 20, Row 1
00000A12  4E4F                     976      TRAP    #15                     ; Trap (Perform action)
00000A14  43F9 00001B45            977      LEA     KEYCODE_MSG, A1         ; Keycode
00000A1A  303C 000D                978      MOVE    #13,        D0          ; No Line feed
00000A1E  4E4F                     979      TRAP    #15                     ; Trap (Perform action)
00000A20                           980  
00000A20                           981      ; Show KeyCode
00000A20  103C 000B                982      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A24  323C 3001                983      MOVE.W  #$3001,     D1          ; Col 30, Row 1
00000A28  4E4F                     984      TRAP    #15                     ; Trap (Perform action)    
00000A2A  2239 00001CB6            985      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
00000A30  103C 0003                986      MOVE.B  #03,        D0          ; Display the contents of D1
00000A34  4E4F                     987      TRAP    #15                     ; Trap (Perform action)
00000A36                           988  
00000A36                           989      
00000A36                           990      ; Show antHealth msg
00000A36  103C 000B                991      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A3A  323C 0202                992      MOVE.W  #$0202,     D1          ; Col 02, Row 06
00000A3E  4E4F                     993      TRAP    #15                     ; Trap (Perform action)
00000A40  43F9 00001C6E            994      LEA     antHealth_MSG,   A1          ; Draw
00000A46  303C 000D                995      MOVE    #13,        D0          ; No Line feed
00000A4A  4E4F                     996      TRAP    #15                     ; Trap (Perform action)  
00000A4C                           997      
00000A4C                           998      ; Show antHealth msg
00000A4C  103C 000B                999      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A50  323C 0A02               1000      MOVE.W  #$0A02,     D1          ; Col 30, Row 1
00000A54  4E4F                    1001      TRAP    #15                     ; Trap (Perform action)   
00000A56  B381                    1002      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000A58  1239 00001CFA           1003      MOVE.B  antHealth,      D1          ; Move Key Pressed to D1
00000A5E  103C 0003               1004      MOVE.B  #03,        D0          ; Display the contents of D1
00000A62  4E4F                    1005      TRAP    #15                     ; Trap (Perform action)
00000A64                          1006  
00000A64  4E75                    1007      RTS
00000A66                          1008  *-----------------------------------------------------------
00000A66                          1009  * Subroutine    : Player is on Ground
00000A66                          1010  * Description   : Check if the Player is on or off Ground
00000A66                          1011  *-----------------------------------------------------------
00000A66                          1012  IS_PLAYER_ON_GND:
00000A66                          1013      ; Check if Player is on Ground
00000A66  4281                    1014      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A68  4282                    1015      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
00000A6A  3239 00001CB4           1016      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
00000A70  82FC 0002               1017      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000A74  2439 00001CC0           1018      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
00000A7A  B441                    1019      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
00000A7C  6C00 0008               1020      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
00000A80  6D00 002C               1021      BLT     SET_OFF_GROUND          ; The Player is off the Ground
00000A84  4E75                    1022      RTS                             ; Return to subroutine
00000A86                          1023  
00000A86                          1024  
00000A86                          1025  *-----------------------------------------------------------
00000A86                          1026  * Subroutine    : On Ground
00000A86                          1027  * Description   : Set the Player On Ground
00000A86                          1028  *-----------------------------------------------------------
00000A86                          1029  SET_ON_GROUND:
00000A86  4281                    1030      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A88  3239 00001CB4           1031      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000A8E  82FC 0002               1032      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000A92  23C1 00001CC0           1033      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00000A98  4281                    1034      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A9A  7200                    1035      MOVE.L  #00,        D1          ; Player Velocity
00000A9C  23C1 00001CC8           1036      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
00000AA2  23FC 00000001 00001CD0  1037      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
00000AAC  4E75                    1038      RTS
00000AAE                          1039  
00000AAE                          1040  *-----------------------------------------------------------
00000AAE                          1041  * Subroutine    : Off Ground
00000AAE                          1042  * Description   : Set the Player Off Ground
00000AAE                          1043  *-----------------------------------------------------------
00000AAE                          1044  SET_OFF_GROUND:
00000AAE  23FC 00000000 00001CD0  1045      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00000AB8  4E75                    1046      RTS                             ; Return to subroutine
00000ABA                          1047  *-----------------------------------------------------------
00000ABA                          1048  * Subroutine    : Jump
00000ABA                          1049  * Description   : Perform a Jump
00000ABA                          1050  *-----------------------------------------------------------
00000ABA                          1051  JUMP:
Line 1052 ERROR: Undefined symbol
00000ABA  4A39 004DBD16           1052      TST.B  isPaused
00000AC0                          1053      IF <NE> THEN
00000AC4  4E75                    1054          RTS
00000AC6                          1055      ENDI
00000AC6  0CB9 00000001 00001CD0  1056      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000AD0  6700 0006               1057      BEQ     PERFORM_JUMP            ; Do Jump
00000AD4  6000 0012               1058      BRA     JUMP_DONE               ;
00000AD8                          1059  PERFORM_JUMP:
00000AD8  6100 0066               1060      BSR     PLAY_JUMP               ; Play jump sound
00000ADC  23FC FFFFFFED 00001CC8  1061      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00000AE6  4E75                    1062      RTS                             ; Return to subroutine
00000AE8                          1063  JUMP_DONE:
00000AE8  4E75                    1064      RTS                             ; Return to subroutine
00000AEA                          1065  
00000AEA                          1066  *-----------------------------------------------------------
00000AEA                          1067  * Subroutine    : Throw
00000AEA                          1068  * Description   : Perform a Throw
00000AEA                          1069  *-----------------------------------------------------------
00000AEA                          1070  THROW_ARC:
00000AEA  0CB9 00000001 00001CD0  1071      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000AF4  6700 0006               1072      BEQ     PERFORM_THROW_ARC    ; Do Jump
00000AF8  6000 000E               1073      BRA     ARC_DONE               ;
00000AFC                          1074  PERFORM_THROW_ARC:
00000AFC                          1075      ;BSR     PLAY_JUMP               ; Play jump sound
00000AFC  23FC FFFFFFF0 00001D18  1076      MOVE.L  #THRW_JUMP_V,THROW_VELOCITY ; Set the players velocity to true
00000B06  4E75                    1077      RTS                             ; Return to subroutine
00000B08                          1078  ARC_DONE:
00000B08  4E75                    1079      RTS                             ; Return to subroutine
00000B0A                          1080  
00000B0A                          1081  *-----------------------------------------------------------
00000B0A                          1082  * Subroutine    : Idle
00000B0A                          1083  * Description   : Perform a Idle
00000B0A                          1084  *----------------------------------------------------------- 
00000B0A                          1085  IDLE:
00000B0A  4E75                    1086      RTS                             ; Return to subroutine
00000B0C                          1087  
00000B0C                          1088  *-----------------------------------------------------------
00000B0C                          1089  * Subroutines   : Sound Load and Play
00000B0C                          1090  * Description   : Initialise game sounds into memory 
00000B0C                          1091  * Current Sounds are RUN, JUMP and Opps for Collision
00000B0C                          1092  *-----------------------------------------------------------
00000B0C                          1093  GAMEOVER_LOAD:
00000B0C  43F9 00001D3A           1094      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00000B12  323C 0000               1095      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00000B16  303C 004A               1096      MOVE    #74,        D0          ; Load into memory
00000B1A  4E4F                    1097      TRAP    #15                     ; Trap (Perform action)
00000B1C  4E75                    1098      RTS                             ; Return to subroutine
00000B1E                          1099  
00000B1E                          1100  PLAY_GAMEOVER:
00000B1E  6100 00D6               1101      bsr STOP_SONG
00000B22  323C 0000               1102      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00000B26  303C 004B               1103      MOVE    #75,        D0          ; Play Sound
00000B2A  4E4F                    1104      TRAP    #15                     ; Trap (Perform action)
00000B2C  4E75                    1105      RTS                             ; Return to subroutine
00000B2E                          1106  
00000B2E                          1107  JUMP_LOAD:
00000B2E  43F9 00001D30           1108      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
00000B34  323C 0001               1109      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
00000B38  303C 004A               1110      MOVE    #74,        D0          ; Load into memory
00000B3C  4E4F                    1111      TRAP    #15                     ; Trap (Perform action)
00000B3E  4E75                    1112      RTS                             ; Return to subroutine
00000B40                          1113  
00000B40                          1114  PLAY_JUMP:
00000B40  323C 0001               1115      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
00000B44  303C 004B               1116      MOVE    #75,        D0          ; Play Sound
00000B48  4E4F                    1117      TRAP    #15                     ; Trap (Perform action)
00000B4A  4E75                    1118      RTS                             ; Return to subroutine
00000B4C                          1119  
00000B4C                          1120  HITHURT_LOAD:
00000B4C  43F9 00001D48           1121      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
00000B52  323C 0002               1122      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
00000B56  303C 004A               1123      MOVE    #74,        D0          ; Load into memory
00000B5A  4E4F                    1124      TRAP    #15                     ; Trap (Perform action)
00000B5C  4E75                    1125      RTS                             ; Return to subroutine
00000B5E                          1126  
00000B5E                          1127  PLAY_HITHURT:
00000B5E  323C 0002               1128      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
00000B62  303C 004B               1129      MOVE    #75,        D0          ; Play Sound
00000B66  4E4F                    1130      TRAP    #15                     ; Trap (Perform action)
00000B68  4E75                    1131      RTS                             ; Return to subroutine
00000B6A                          1132  
00000B6A                          1133  POWERUP_LOAD:
00000B6A  43F9 00001D5E           1134      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
00000B70  323C 0003               1135      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
00000B74  303C 004A               1136      MOVE    #74,        D0          ; Load into memory
00000B78  4E4F                    1137      TRAP    #15                     ; Trap (Perform action)
00000B7A  4E75                    1138      RTS                             ; Return to subroutine
00000B7C                          1139  
00000B7C                          1140  PLAY_POWERUP:
00000B7C  323C 0003               1141      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
00000B80  303C 004B               1142      MOVE    #75,        D0          ; Play Sound
00000B84  4E4F                    1143      TRAP    #15                     ; Trap (Perform action)
00000B86  4E75                    1144      RTS                             ; Return to subroutine
00000B88                          1145  
00000B88                          1146  LVLCHANGE_LOAD:
00000B88  43F9 00001D6B           1147      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
00000B8E  323C 0004               1148      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
00000B92  303C 004A               1149      MOVE    #74,        D0          ; Load into memory
00000B96  4E4F                    1150      TRAP    #15                     ; Trap (Perform action)
00000B98  4E75                    1151      RTS                             ; Return to subroutine
00000B9A                          1152  
00000B9A                          1153  PLAY_LVLCHANGE:
00000B9A  323C 0004               1154      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00000B9E  303C 004B               1155      MOVE    #75,        D0          ; Play Sound
00000BA2  4E4F                    1156      TRAP    #15                     ; Trap (Perform action)
00000BA4  4E75                    1157      RTS                             ; Return to subroutine
00000BA6                          1158  
00000BA6                          1159  HIT_LOAD:
00000BA6  43F9 00001D55           1160      LEA     HIT_WAV,   A1          ; Load Wav File into A1
00000BAC  323C 0005               1161      MOVE    #HIT_INDEX,D1          ; Assign it INDEX
00000BB0  303C 004A               1162      MOVE    #74,        D0          ; Load into memory
00000BB4  4E4F                    1163      TRAP    #15                     ; Trap (Perform action)
00000BB6  4E75                    1164      RTS                             ; Return to subroutine
00000BB8                          1165  
00000BB8                          1166  PLAY_HIT:
00000BB8  323C 0005               1167      MOVE    #HIT_INDEX,D1          ; Load Sound INDEX
00000BBC  303C 004B               1168      MOVE    #75,        D0          ; Play Sound
00000BC0  4E4F                    1169      TRAP    #15                     ; Trap (Perform action)
00000BC2  4E75                    1170      RTS                             ; Return to subroutine
00000BC4                          1171  
00000BC4                          1172  MAP_SONG_LOAD:
00000BC4  43F9 00001D90           1173      LEA     MAP_SONG_WAV,   A1          ; Load Wav File into A1
00000BCA  323C 0006               1174      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000BCE  303C 004A               1175      MOVE    #74,        D0          ; Load into memory
00000BD2  4E4F                    1176      TRAP    #15                     ; Trap (Perform action)
00000BD4  4E75                    1177      RTS                             ; Return to subroutine
00000BD6                          1178  
00000BD6                          1179  BATTLE_SONG_LOAD:
00000BD6  43F9 00001D7C           1180      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000BDC  323C 0006               1181      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000BE0  303C 004A               1182      MOVE    #74,        D0          ; Load into memory
00000BE4  4E4F                    1183      TRAP    #15                     ; Trap (Perform action)
00000BE6  4E75                    1184      RTS                             ; Return to subroutine
00000BE8                          1185  
00000BE8                          1186  ; special function to play song in song index
00000BE8                          1187  PLAY_SONG:
00000BE8  323C 0006               1188      MOVE    #SONG_INDEX,D1          ; Load Sound INDEX
00000BEC  7401                    1189      move.l #1, d2
00000BEE  303C 004D               1190      MOVE    #77,        D0          ; Play Sound
00000BF2  4E4F                    1191      TRAP    #15                     ; Trap (Perform action)
00000BF4  4E75                    1192      RTS                             ; Return to subroutine
00000BF6                          1193  
00000BF6                          1194  ; stop song playing
00000BF6                          1195  STOP_SONG:
00000BF6  323C 0006               1196      move #SONG_INDEX,d1
00000BFA  7402                    1197      move.l #2, d2
00000BFC  303C 004D               1198      move #77, d0
00000C00  4E4F                    1199      trap #15
00000C02  4E75                    1200      rts
00000C04                          1201  
00000C04                          1202  *-----------------------------------------------------------
00000C04                          1203  * Subroutine    : Draw Player
00000C04                          1204  * Description   : Draw Player Ant
00000C04                          1205  *-----------------------------------------------------------
00000C04                          1206      include "battle/playerAnt.X68"
00000C04                          1207  
00000C04  =0000001B               1208  PLYR_W_INIT EQU         27          ; Players initial Width
00000C04  =0000000D               1209  PLYR_H_INIT EQU         13          ; Players initial Height
00000C04                          1210  
00000C04  =00000000               1211  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00000C04  =FFFFFFED               1212  PLYR_JUMP_V EQU         -19          ; Player Jump Velocity
00000C04  =00000001               1213  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00000C04                          1214  
00000C04                          1215  
00000C04                          1216  UPDATE_PLAYER:
00000C04                          1217      ; Update the Players Positon based on Velocity and Gravity
00000C04  4281                    1218      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000C06  2239 00001CC8           1219      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00000C0C  2439 00001CCC           1220      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
00000C12  D282                    1221      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000C14  23C1 00001CC8           1222      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00000C1A  D2B9 00001CC0           1223      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
00000C20  23C1 00001CC0           1224      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
00000C26  23C1 00001D06           1225      MOVE.L  D1,         ATTACK_Y 
00000C2C                          1226  
00000C2C  4E75                    1227      RTS
00000C2E                          1228  
00000C2E                          1229  ; Move Player to the left
00000C2E                          1230  MOVE_PLAYER_LEFT:
Line 1231 ERROR: Undefined symbol
00000C2E  4A39 004DBD16           1231      TST.B  isPaused
00000C34                          1232      IF <NE> THEN
00000C38  4E75                    1233          RTS
00000C3A                          1234      ENDI
00000C3A                          1235  
00000C3A  13FC 0001 00001CD4      1236      MOVE.B  #LOOKLEFT,        PLAYER_DIR
00000C42  2239 00001CBC           1237      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000C48  5581                    1238      SUB.L   #02,        D1          ; Move Player Left
00000C4A  23C1 00001CBC           1239      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000C50  55B9 00001D02           1240      SUB.L   #02,        ATTACK_X
00000C56  4E75                    1241      RTS                             ; Return to subroutine    
00000C58                          1242  
00000C58                          1243  ; Move Player to the right
00000C58                          1244  MOVE_PLAYER_RIGHT:
Line 1245 ERROR: Undefined symbol
00000C58  4A39 004DBD16           1245      TST.B  isPaused
00000C5E                          1246      IF <NE> THEN
00000C62  4E75                    1247          RTS
00000C64                          1248      ENDI
00000C64  13FC 0002 00001CD4      1249      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
00000C6C  2239 00001CBC           1250      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000C72  5481                    1251      ADD.L   #02,        D1          ; Move Player Right
00000C74  23C1 00001CBC           1252      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000C7A  54B9 00001D02           1253      ADD.L   #02,        ATTACK_X
00000C80  4E75                    1254      RTS                             ; Return to subroutine
00000C82                          1255  
00000C82                          1256  ; draw all player relevant data
00000C82                          1257  DRAW_PLAYER:
00000C82                          1258      ; Set Pixel Colors
Line 1259 ERROR: Undefined symbol
00000C82  223C 004DBD16           1259      MOVE.L  #BLACK,     D1          ; Set Background color
00000C88  103C 0050               1260      MOVE.B  #80,        D0          ; Task for Background Color
00000C8C  4E4F                    1261      TRAP    #15                     ; Trap (Perform action)
00000C8E                          1262      ; Reset Pixel Colors
Line 1263 ERROR: Undefined symbol
00000C8E  223C 004DBD16           1263      MOVE.L  #BLACK,     D1          ; Set Background color
00000C94  103C 0051               1264      MOVE.B  #81,        D0          ; Task for Background Color
00000C98  4E4F                    1265      TRAP    #15                     ; Trap (Perform action)
00000C9A                          1266  
00000C9A  2239 00001CBC           1267      MOVE.L  PLAYER_X,   D1          ; X
00000CA0  2439 00001CC0           1268      MOVE.L  PLAYER_Y,   D2
00000CA6  5982                    1269      SUBQ.L  #4,D2
00000CA8                          1270  
00000CA8  2639 00001CBC           1271      MOVE.L  PLAYER_X,   D3
00000CAE  B984                    1272      EOR.L   D4,D4
00000CB0  1839 00001D25           1273      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000CB6  D684                    1274      ADD.L   D4,D3
00000CB8  2839 00001CC0           1275      MOVE.L  PLAYER_Y,   D4
00000CBE  9839 00001D26           1276      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00000CC4                          1277      
00000CC4                          1278       ; Draw Player
00000CC4  103C 0057               1279      MOVE.B  #87,        D0          ; Draw Player
00000CC8  4E4F                    1280      TRAP    #15                     ; Trap (Perform action)
00000CCA                          1281  
00000CCA  2239 00001CBC           1282      MOVE.L  PLAYER_X,   D1          ; X
00000CD0  2439 00001CC0           1283      MOVE.L  PLAYER_Y,   D2
00000CD6  5982                    1284      SUBQ.L  #4,D2
00000CD8  2639 00001CBC           1285      MOVE.L  PLAYER_X,   D3
00000CDE  B984                    1286      EOR.L   D4,D4
00000CE0  1839 00001D25           1287      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000CE6  0404 000C               1288      SUBI.B   #12,D4
00000CEA  D684                    1289      ADD.L   D4,D3
00000CEC  2839 00001CC0           1290      MOVE.L  PLAYER_Y,   D4
00000CF2  9839 00001D26           1291      SUB.B   PLAYER_HEIGHT,   D4      ; Height
00000CF8  5704                    1292      SUB.B   #3,D4
00000CFA                          1293      
00000CFA                          1294      ; Draw Player
00000CFA  103C 0057               1295      MOVE.B  #87,        D0          ; Draw Player
00000CFE  4E4F                    1296      TRAP    #15                     ; Trap (Perform action)
00000D00                          1297  
00000D00                          1298      ; change thickness
00000D00  7203                    1299      MOVE.l  #3,D1
00000D02  103C 005D               1300      MOVE.B  #93,D0
00000D06  4E4F                    1301      TRAP    #15
00000D08                          1302  
00000D08  2239 00001CBC           1303      MOVE.L  PLAYER_X,D1
00000D0E  0681 00000016           1304      ADD.L   #22,D1
00000D14  2439 00001CC0           1305      MOVE.L  PLAYER_Y,D2
00000D1A  0482 0000000D           1306      SUB.L   #PLYR_H_INIT,D2
00000D20  2601                    1307      MOVE.L  D1,D3
00000D22  0683 0000000A           1308      ADD.L   #10,D3
00000D28  2802                    1309      MOVE.L  D2,D4
00000D2A  5F84                    1310      SUBI.L  #7,D4
00000D2C                          1311  
00000D2C  103C 0054               1312      MOVE.B  #84,D0
00000D30  4E4F                    1313      TRAP    #15
00000D32                          1314  
00000D32  2239 00001CBC           1315      MOVE.L  PLAYER_X,D1
00000D38  2439 00001CC0           1316      MOVE.L  PLAYER_Y,D2
00000D3E  2601                    1317      MOVE.L  D1,D3
00000D40  5883                    1318      ADD.L   #4,D3
00000D42  2802                    1319      MOVE.L  D2,D4
00000D44  5984                    1320      SUBI.L  #4,D4
00000D46                          1321  
00000D46  103C 0054               1322      MOVE.B  #84,D0
00000D4A  4E4F                    1323      TRAP    #15
00000D4C                          1324  
00000D4C  2239 00001CBC           1325      MOVE.L  PLAYER_X,D1
00000D52  0681 0000000D           1326      ADD.L   #13,D1
00000D58  2439 00001CC0           1327      MOVE.L  PLAYER_Y,D2
00000D5E  2601                    1328      MOVE.L  D1,D3
00000D60  2802                    1329      MOVE.L  D2,D4
00000D62  5984                    1330      SUBI.L  #4,D4
00000D64                          1331  
00000D64  103C 0054               1332      MOVE.B  #84,D0
00000D68  4E4F                    1333      TRAP    #15
00000D6A                          1334  
00000D6A  2239 00001CBC           1335      MOVE.L  PLAYER_X,D1
00000D70  0681 00000016           1336      ADD.L   #22,D1
00000D76  2839 00001CC0           1337      MOVE.L  PLAYER_Y,D4
00000D7C  2601                    1338      MOVE.L  D1,D3
00000D7E  5683                    1339      ADD.L   #3,D3
00000D80  2404                    1340      MOVE.L  D4,D2
00000D82  5982                    1341      SUBI.L  #4,D2
00000D84                          1342  
00000D84  103C 0054               1343      MOVE.B  #84,D0
00000D88  4E4F                    1344      TRAP    #15
00000D8A                          1345  
00000D8A                          1346      ; Set Pixel Colors
Line 1347 ERROR: Undefined symbol
00000D8A  223C 004DBD16           1347      MOVE.L  #WHITE,     D1          ; Set Background color
00000D90  103C 0050               1348      MOVE.B  #80,        D0          ; Task for Background Color
00000D94  4E4F                    1349      TRAP    #15                     ; Trap (Perform action)
00000D96                          1350  
00000D96  2239 00001CBC           1351      MOVE.L  PLAYER_X,D1
00000D9C  0681 00000016           1352      ADD.L   #22,D1
00000DA2  2439 00001CC0           1353      MOVE.L  PLAYER_Y,D2
00000DA8  0482 0000000A           1354      SUB.L   #10,D2
00000DAE  2601                    1355      MOVE.L  D1,D3
00000DB0  2802                    1356      MOVE.L  D2,D4
00000DB2                          1357  
00000DB2  103C 0054               1358      MOVE.B  #84,D0
00000DB6  4E4F                    1359      TRAP    #15
00000DB8                          1360  
00000DB8  7201                    1361      MOVE.l  #1,D1
00000DBA  103C 005D               1362      MOVE.B  #93,D0
00000DBE  4E4F                    1363      TRAP    #15
00000DC0                          1364      
00000DC0  6100 0008               1365      BSR     IS_ATTACKING
00000DC4  6100 0054               1366      BSR     IS_THROWING
00000DC8                          1367  
00000DC8  4E75                    1368      RTS                             ; Return to subroutine
00000DCA                          1369  
00000DCA                          1370  IS_ATTACKING:
00000DCA  4A39 00001CFD           1371      TST.B   CURRENTLYATTACKING
00000DD0  6600 0004               1372      BNE     DRAW_ATTACK
00000DD4  4E75                    1373      RTS
00000DD6                          1374  DRAW_ATTACK:
00000DD6                          1375  
00000DD6                          1376      ; Set Pixel Colors
Line 1377 ERROR: Undefined symbol
00000DD6  223C 004DBD16           1377      MOVE.L  #WHITE,     D1          ; Set Background color
00000DDC  103C 0050               1378      MOVE.B  #80,        D0          ; Task for Background Color
00000DE0  4E4F                    1379      TRAP    #15                     ; Trap (Perform action)
00000DE2                          1380      ; Reset Pixel Colors
Line 1381 ERROR: Undefined symbol
00000DE2  223C 004DBD16           1381      MOVE.L  #WHITE,     D1          ; Set Background color
00000DE8  103C 0051               1382      MOVE.B  #81,        D0          ; Task for Background Color
00000DEC  4E4F                    1383      TRAP    #15                     ; Trap (Perform action)
00000DEE                          1384  
00000DEE  2239 00001D02           1385      MOVE.L  ATTACK_X,   D1          ; X
00000DF4  2439 00001D06           1386      MOVE.L  ATTACK_Y,   D2
00000DFA                          1387      
00000DFA  2639 00001D02           1388      MOVE.L  ATTACK_X,   D3
00000E00  0683 00000023           1389      ADD.L   #ATTACK_WIDTH,   D3      ; Width
00000E06  2839 00001D06           1390      MOVE.L  ATTACK_Y,   D4 
00000E0C  0484 00000014           1391      SUB.L   #ATTACK_HEIGHT,   D4      ; Height          ; Y
00000E12                          1392      
00000E12                          1393      ; Draw Player
00000E12  103C 0057               1394      MOVE.B  #87,        D0          ; Draw Player
00000E16  4E4F                    1395      TRAP    #15                     ; Trap (Perform action)
00000E18  4E75                    1396      RTS                             ; Return to subroutine
00000E1A                          1397  
00000E1A                          1398  IS_THROWING:
00000E1A  4A39 00001D0A           1399      TST.B   CURRENTLYTHROWING
00000E20  6600 0004               1400      BNE     DRAW_THROW
00000E24  4E75                    1401      RTS
00000E26                          1402  DRAW_THROW:
00000E26                          1403  
00000E26                          1404      ; Set Pixel Colors
Line 1405 ERROR: Undefined symbol
00000E26  223C 004DBD16           1405      MOVE.L  #DIRT,     D1          ; Set Background color
00000E2C  103C 0050               1406      MOVE.B  #80,        D0          ; Task for Background Color
00000E30  4E4F                    1407      TRAP    #15                     ; Trap (Perform action)
00000E32                          1408      ; Reset Pixel Colors
Line 1409 ERROR: Undefined symbol
00000E32  223C 004DBD16           1409      MOVE.L  #DIRT,     D1          ; Set Background color
00000E38  103C 0051               1410      MOVE.B  #81,        D0          ; Task for Background Color
00000E3C  4E4F                    1411      TRAP    #15                     ; Trap (Perform action)
00000E3E                          1412  
00000E3E  2239 00001D10           1413      MOVE.L  THROW_X,   D1          ; X
00000E44  2439 00001D14           1414      MOVE.L  THROW_Y,   D2
00000E4A                          1415      
00000E4A  2639 00001D10           1416      MOVE.L  THROW_X,   D3
00000E50  0683 0000000F           1417      ADD.L   #THRW_W_INIT,   D3      ; Width
00000E56  2839 00001D14           1418      MOVE.L  THROW_Y,   D4 
00000E5C  0484 0000000F           1419      SUB.L   #THRW_H_INIT,   D4      ; Height          ; Y
00000E62                          1420      
00000E62                          1421      ; Draw Acorn
00000E62  103C 0057               1422      MOVE.B  #87,        D0          ; Draw Player
00000E66  4E4F                    1423      TRAP    #15                     ; Trap (Perform action)
00000E68  4E75                    1424      RTS                             ; Return to subroutine
00000E68  4E75                    1425  -------------------- end include --------------------
00000E6A                          1426  *-----------------------------------------------------------
00000E6A                          1427  * Subroutine    : Draw Enemy
00000E6A                          1428  * Description   : Draw Enemy Ant
00000E6A                          1429  *-----------------------------------------------------------
00000E6A                          1430  DRAW_ENEMY:
00000E6A                          1431      ; Set Pixel Colors
00000E6A  2239 00001CEE           1432      MOVE.L  ENEMYCOLOR,       D1          ; Set pen color
00000E70  103C 0050               1433      MOVE.B  #80,        D0          ; Task for pen Color
00000E74  4E4F                    1434      TRAP    #15                     ; Trap (Perform action)
00000E76                          1435  
00000E76                          1436      ; Reset Pixel Colors
00000E76  2239 00001CEE           1437      MOVE.L  ENEMYCOLOR,     D1          ; Set Background color
00000E7C  103C 0051               1438      MOVE.B  #81,        D0          ; Task for Background Color
00000E80  4E4F                    1439      TRAP    #15                     ; Trap (Perform action)
00000E82                          1440  
00000E82                          1441      *-------------- draw ENEMY body -----------------*
00000E82  2239 00001CD6           1442      MOVE.L  ENEMY_X,   D1          ; X
00000E88  2439 00001CDA           1443      MOVE.L  ENEMY_Y,   D2
00000E8E  5982                    1444      SUBQ.L  #4,D2
00000E90                          1445  
00000E90  2639 00001CD6           1446      MOVE.L  ENEMY_X,   D3
00000E96  0683 0000001B           1447      ADD.L   #ENMY_W_INIT, D3  
00000E9C  2839 00001CDA           1448      MOVE.L  ENEMY_Y,   D4
00000EA2  0484 0000000D           1449      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00000EA8                          1450      
00000EA8                          1451       ; Draw 
00000EA8  103C 0057               1452      MOVE.B  #87,        D0          ; Draw enemy
00000EAC  4E4F                    1453      TRAP    #15                     ; Trap (Perform action)
00000EAE                          1454  
00000EAE                          1455  *-------------- draw ENEMY abdomen -----------------*
00000EAE  2239 00001CD6           1456      MOVE.L  ENEMY_X,   D1          ; X
00000EB4  2601                    1457      MOVE.L  D1,   D3
00000EB6  0681 0000001B           1458      ADD.L   #ENMY_W_INIT,D1
00000EBC  2439 00001CDA           1459      MOVE.L  ENEMY_Y,   D2
00000EC2  5982                    1460      SUBQ.L  #4,D2
00000EC4  2639 00001CD6           1461      MOVE.L  ENEMY_X,   D3
00000ECA  0683 0000000C           1462      ADDI.L   #12,D3
00000ED0                          1463      
00000ED0  2839 00001CDA           1464      MOVE.L  ENEMY_Y,   D4
00000ED6  0484 0000000D           1465      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00000EDC  5704                    1466      SUB.B   #3,D4
00000EDE                          1467      
00000EDE                          1468      ; Draw 
00000EDE  103C 0057               1469      MOVE.B  #87,        D0          ; Draw enemy
00000EE2  4E4F                    1470      TRAP    #15                     ; Trap (Perform action)
00000EE4                          1471  
00000EE4                          1472  *-------------- draw ENEMY antena -----------------*    
00000EE4                          1473      ; change thickness
00000EE4  7203                    1474      MOVE.l  #3,D1
00000EE6  103C 005D               1475      MOVE.B  #93,D0
00000EEA  4E4F                    1476      TRAP    #15
00000EEC                          1477  
00000EEC  2239 00001CD6           1478      MOVE.L  ENEMY_X,D1
00000EF2  5681                    1479      ADD.L   #3,D1
00000EF4  2439 00001CDA           1480      MOVE.L  ENEMY_Y,D2
00000EFA  0482 0000000D           1481      SUB.L   #ENMY_H_INIT,D2
00000F00  2601                    1482      MOVE.L  D1,D3
00000F02  0483 0000000A           1483      SUB.L   #10,D3
00000F08  2802                    1484      MOVE.L  D2,D4
00000F0A  5F84                    1485      SUBI.L  #7,D4
00000F0C                          1486  
00000F0C  103C 0054               1487      MOVE.B  #84,D0
00000F10  4E4F                    1488      TRAP    #15
00000F12                          1489  
00000F12                          1490  *-------------- draw ENEMY leg 1 -----------------*
00000F12  2239 00001CD6           1491      MOVE.L  ENEMY_X,D1
00000F18  2439 00001CDA           1492      MOVE.L  ENEMY_Y,D2
00000F1E  2601                    1493      MOVE.L  D1,D3
00000F20  5883                    1494      ADD.L   #4,D3
00000F22  2802                    1495      MOVE.L  D2,D4
00000F24  5984                    1496      SUBI.L  #4,D4
00000F26                          1497  
00000F26  103C 0054               1498      MOVE.B  #84,D0
00000F2A  4E4F                    1499      TRAP    #15
00000F2C                          1500  
00000F2C                          1501  *-------------- draw ENEMY leg 2 -----------------*
00000F2C  2239 00001CD6           1502      MOVE.L  ENEMY_X,D1
00000F32  0681 0000000D           1503      ADD.L   #13,D1
00000F38  2439 00001CDA           1504      MOVE.L  ENEMY_Y,D2
00000F3E  2601                    1505      MOVE.L  D1,D3
00000F40  2802                    1506      MOVE.L  D2,D4
00000F42  5984                    1507      SUBI.L  #4,D4
00000F44                          1508  
00000F44  103C 0054               1509      MOVE.B  #84,D0
00000F48  4E4F                    1510      TRAP    #15
00000F4A                          1511  
00000F4A                          1512  *-------------- draw ENEMY leg 3 -----------------*
00000F4A  2239 00001CD6           1513      MOVE.L  ENEMY_X,D1
00000F50  0681 00000016           1514      ADD.L   #22,D1
00000F56  2839 00001CDA           1515      MOVE.L  ENEMY_Y,D4
00000F5C  2601                    1516      MOVE.L  D1,D3
00000F5E  5683                    1517      ADD.L   #3,D3
00000F60  2404                    1518      MOVE.L  D4,D2
00000F62  5982                    1519      SUBI.L  #4,D2
00000F64                          1520  
00000F64  103C 0054               1521      MOVE.B  #84,D0
00000F68  4E4F                    1522      TRAP    #15
00000F6A                          1523  
00000F6A                          1524      ; Set Pixel Colors
Line 1525 ERROR: Undefined symbol
00000F6A  223C 004DBD16           1525      MOVE.L  #BLACK,     D1          ; Set Pen color
00000F70  103C 0050               1526      MOVE.B  #80,        D0          ; Task for Pen Color
00000F74  4E4F                    1527      TRAP    #15                     ; Trap (Perform action)
00000F76                          1528  
00000F76                          1529  *-------------- draw ENEMY eye -----------------*
00000F76                          1530      ; change thickness
00000F76  7203                    1531      MOVE.l  #3,D1
00000F78  103C 005D               1532      MOVE.B  #93,D0
00000F7C  4E4F                    1533      TRAP    #15
00000F7E                          1534  
00000F7E  2239 00001CD6           1535      MOVE.L  ENEMY_X,D1
00000F84  5681                    1536      ADD.L   #3,D1
00000F86  2439 00001CDA           1537      MOVE.L  ENEMY_Y,D2
00000F8C  0482 0000000A           1538      SUB.L   #10,D2
00000F92  2601                    1539      MOVE.L  D1,D3
00000F94  5283                    1540      ADDQ.L  #1,D3
00000F96  2802                    1541      MOVE.L  D2,D4
00000F98                          1542  
00000F98  103C 0054               1543      MOVE.B  #84,D0
00000F9C  4E4F                    1544      TRAP    #15
00000F9E                          1545  
00000F9E                          1546      ; reset pen
00000F9E  7201                    1547      MOVE.l  #1,D1
00000FA0  103C 005D               1548      MOVE.B  #93,D0
00000FA4  4E4F                    1549      TRAP    #15
00000FA6                          1550  
00000FA6  4E75                    1551      RTS                             ; Return to subroutine
00000FA8                          1552  
00000FA8                          1553  DRAW_FLYENEMY:
00000FA8                          1554      ; Set Pixel Colors
00000FA8  2239 00001CF2           1555      MOVE.L  FLYENEMYCOLOR,       D1          ; Set Background color
00000FAE  103C 0050               1556      MOVE.B  #80,        D0          ; Task for Background Color
00000FB2  4E4F                    1557      TRAP    #15                     ; Trap (Perform action)
00000FB4                          1558  
00000FB4                          1559      ; Reset Pixel Colors
00000FB4  2239 00001CF2           1560      MOVE.L  FLYENEMYCOLOR,     D1          ; Set Background color
00000FBA  103C 0051               1561      MOVE.B  #81,        D0          ; Task for Background Color
00000FBE  4E4F                    1562      TRAP    #15                     ; Trap (Perform action)
00000FC0                          1563  
00000FC0                          1564          *-------------- draw FLYINGENEMY body -----------------*
00000FC0  2239 00001CE6           1565      MOVE.L  FLYINGENEMY_X,   D1          ; X
00000FC6  2439 00001CEA           1566      MOVE.L  FLYINGENEMY_Y,   D2
00000FCC  5982                    1567      SUBQ.L  #4,D2
00000FCE                          1568  
00000FCE  2639 00001CE6           1569      MOVE.L  FLYINGENEMY_X,   D3
00000FD4  0683 0000001E           1570      ADD.L   #FLY_ENMY_W_INIT, D3  
00000FDA  2839 00001CEA           1571      MOVE.L  FLYINGENEMY_Y,   D4
00000FE0  0484 0000000D           1572      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00000FE6                          1573      
00000FE6                          1574       ; Draw 
00000FE6  103C 0057               1575      MOVE.B  #87,        D0          ; Draw enemy
00000FEA  4E4F                    1576      TRAP    #15                     ; Trap (Perform action)
00000FEC                          1577  
00000FEC                          1578  *-------------- draw FLYINGENEMY abdomen -----------------*
00000FEC  2239 00001CE6           1579      MOVE.L  FLYINGENEMY_X,   D1          ; X
00000FF2  2601                    1580      MOVE.L  D1,   D3
00000FF4  0681 0000001E           1581      ADD.L   #FLY_ENMY_W_INIT,D1
00000FFA  2439 00001CEA           1582      MOVE.L  FLYINGENEMY_Y,   D2
00001000  5982                    1583      SUBQ.L  #4,D2
00001002  2639 00001CE6           1584      MOVE.L  FLYINGENEMY_X,   D3
00001008  0683 0000000C           1585      ADDI.L   #12,D3
0000100E                          1586      
0000100E  2839 00001CEA           1587      MOVE.L  FLYINGENEMY_Y,   D4
00001014  0484 0000000D           1588      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
0000101A  5704                    1589      SUB.B   #3,D4
0000101C                          1590      
0000101C                          1591      ; Draw 
0000101C  103C 0057               1592      MOVE.B  #87,        D0          ; Draw enemy
00001020  4E4F                    1593      TRAP    #15                     ; Trap (Perform action)
00001022                          1594  
00001022                          1595  *-------------- draw FLYINGENEMY antena -----------------*    
00001022                          1596      ; change thickness
00001022  7203                    1597      MOVE.l  #3,D1
00001024  103C 005D               1598      MOVE.B  #93,D0
00001028  4E4F                    1599      TRAP    #15
0000102A                          1600  
0000102A  2239 00001CE6           1601      MOVE.L  FLYINGENEMY_X,D1
00001030  5681                    1602      ADD.L   #3,D1
00001032  2439 00001CEA           1603      MOVE.L  FLYINGENEMY_Y,D2
00001038  0482 0000000D           1604      SUB.L   #FLY_ENMY_H_INIT,D2
0000103E  2601                    1605      MOVE.L  D1,D3
00001040  0483 0000000A           1606      SUB.L   #10,D3
00001046  2802                    1607      MOVE.L  D2,D4
00001048  5F84                    1608      SUBI.L  #7,D4
0000104A                          1609  
0000104A  103C 0054               1610      MOVE.B  #84,D0
0000104E  4E4F                    1611      TRAP    #15
00001050                          1612  
00001050                          1613  *-------------- draw FLYINGENEMY leg 1 -----------------*
00001050  2239 00001CE6           1614      MOVE.L  FLYINGENEMY_X,D1
00001056  2439 00001CEA           1615      MOVE.L  FLYINGENEMY_Y,D2
0000105C  2601                    1616      MOVE.L  D1,D3
0000105E  5883                    1617      ADD.L   #4,D3
00001060  2802                    1618      MOVE.L  D2,D4
00001062  5984                    1619      SUBI.L  #4,D4
00001064                          1620  
00001064  103C 0054               1621      MOVE.B  #84,D0
00001068  4E4F                    1622      TRAP    #15
0000106A                          1623  
0000106A                          1624  *-------------- draw FLYINGENEMY leg 2 -----------------*
0000106A  2239 00001CE6           1625      MOVE.L  FLYINGENEMY_X,D1
00001070  0681 0000000D           1626      ADD.L   #13,D1
00001076  2439 00001CEA           1627      MOVE.L  FLYINGENEMY_Y,D2
0000107C  2601                    1628      MOVE.L  D1,D3
0000107E  2802                    1629      MOVE.L  D2,D4
00001080  5984                    1630      SUBI.L  #4,D4
00001082                          1631  
00001082  103C 0054               1632      MOVE.B  #84,D0
00001086  4E4F                    1633      TRAP    #15
00001088                          1634  
00001088                          1635  *-------------- draw FLYINGENEMY leg 3 -----------------*
00001088  2239 00001CE6           1636      MOVE.L  FLYINGENEMY_X,D1
0000108E  0681 00000016           1637      ADD.L   #22,D1
00001094  2839 00001CEA           1638      MOVE.L  FLYINGENEMY_Y,D4
0000109A  2601                    1639      MOVE.L  D1,D3
0000109C  5683                    1640      ADD.L   #3,D3
0000109E  2404                    1641      MOVE.L  D4,D2
000010A0  5982                    1642      SUBI.L  #4,D2
000010A2                          1643  
000010A2  103C 0054               1644      MOVE.B  #84,D0
000010A6  4E4F                    1645      TRAP    #15
000010A8                          1646  
000010A8                          1647  *-------------- draw FLYINGENEMY Wing 1 -----------------*
000010A8                          1648      ; Set Pixel Colors
Line 1649 ERROR: Undefined symbol
000010A8  223C 004DBD16           1649      MOVE.L  #WING,     D1          ; Set Pen color
000010AE  103C 0050               1650      MOVE.B  #80,        D0          ; Task for Pen Color
000010B2  4E4F                    1651      TRAP    #15                     ; Trap (Perform action)
000010B4                          1652      
000010B4                          1653      ; change thickness
000010B4  7205                    1654      MOVE.l  #5,D1
000010B6  103C 005D               1655      MOVE.B  #93,D0
000010BA  4E4F                    1656      TRAP    #15
000010BC                          1657  
000010BC  2239 00001CE6           1658      MOVE.L  FLYINGENEMY_X,D1
000010C2  0681 0000000F           1659      ADD.L   #15,D1
000010C8  2439 00001CEA           1660      MOVE.L  FLYINGENEMY_Y,d2
000010CE  0482 0000000D           1661      SUB.L   #FLY_ENMY_H_INIT,D2
000010D4  2601                    1662      MOVE.L  D1,D3
000010D6  0483 00000009           1663      SUB.L   #9,D3
000010DC  2802                    1664      MOVE.L  D2,D4
000010DE  0484 0000000A           1665      SUB.L   #10,D4
000010E4                          1666  
000010E4  103C 0054               1667      MOVE.B  #84,D0
000010E8  4E4F                    1668      TRAP    #15
000010EA                          1669  
000010EA                          1670  *-------------- draw FLYINGENEMY Wing 2 -----------------*
000010EA  2239 00001CE6           1671      MOVE.L  FLYINGENEMY_X,D1
000010F0  0681 0000000F           1672      ADD.L   #15,D1
000010F6  2439 00001CEA           1673      MOVE.L  FLYINGENEMY_Y,d2
000010FC  0482 0000000D           1674      SUB.L   #FLY_ENMY_H_INIT,D2
00001102  2601                    1675      MOVE.L  D1,D3
00001104  0683 00000009           1676      ADD.L   #9,D3
0000110A  2802                    1677      MOVE.L  D2,D4
0000110C  0484 0000000A           1678      SUB.L   #10,D4
00001112                          1679  
00001112  103C 0054               1680      MOVE.B  #84,D0
00001116  4E4F                    1681      TRAP    #15
00001118                          1682  
00001118                          1683  
00001118                          1684  *-------------- draw FLYINGENEMY eye -----------------*
00001118                          1685      ; Set Pixel Colors
Line 1686 ERROR: Undefined symbol
00001118  223C 004DBD16           1686      MOVE.L  #BLACK,     D1          ; Set Pen color
0000111E  103C 0050               1687      MOVE.B  #80,        D0          ; Task for Pen Color
00001122  4E4F                    1688      TRAP    #15                     ; Trap (Perform action)
00001124                          1689      
00001124                          1690      ; change thickness
00001124  7203                    1691      MOVE.l  #3,D1
00001126  103C 005D               1692      MOVE.B  #93,D0
0000112A  4E4F                    1693      TRAP    #15
0000112C                          1694  
0000112C  2239 00001CE6           1695      MOVE.L  FLYINGENEMY_X,D1
00001132  5681                    1696      ADD.L   #3,D1
00001134  2839 00001CEA           1697      MOVE.L  FLYINGENEMY_Y,   D4
0000113A  0484 0000000D           1698      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00001140  2601                    1699      MOVE.L  D1,D3
00001142  2802                    1700      MOVE.L  D2,D4
00001144                          1701  
00001144  103C 0054               1702      MOVE.B  #84,D0
00001148  4E4F                    1703      TRAP    #15
0000114A                          1704  
0000114A                          1705      ; reset pen
0000114A  7201                    1706      MOVE.l  #1,D1
0000114C  103C 005D               1707      MOVE.B  #93,D0
00001150  4E4F                    1708      TRAP    #15
00001152                          1709  
00001152  4E75                    1710      RTS  
00001154                          1711  
00001154                          1712  DRAW_HEALTHPACK:
00001154                          1713  
00001154  0C39 0000 00001C9C      1714      CMP.B   #00,     SPAWN_HEALTHPACKS
0000115C  6700 0070               1715      BEQ     DRAW_HEALTHPACK_DONE
00001160  0C39 0000 00001C9B      1716      CMP.B   #00,     DRAW_HEALTHPACKS
00001168  6700 0064               1717      BEQ     DRAW_HEALTHPACK_DONE
0000116C                          1718      
0000116C                          1719      ;BSR     RANDOM_NUMBER
0000116C                          1720      ;CMP.L   #$80,  D1
0000116C                          1721      ;BGT     DRAW_HEALTHPACK_DONE
0000116C                          1722  
0000116C  13FC 0001 00001C9B      1723      MOVE.B  #01,        DRAW_HEALTHPACKS
00001174  3239 00001CB4           1724      MOVE.W  SCREEN_H,     D1
0000117A  82FC 0002               1725      DIVU.W    #02,        D1
0000117E  C2BC 0000FFFF           1726      AND.L   #$0000FFFF,   D1
00001184  23C1 00001CE2           1727      MOVE.L  D1,         HEALTH_Y
0000118A                          1728      ; Set Pixel Colors
Line 1729 ERROR: Undefined symbol
0000118A  223C 004DBD16           1729      MOVE.L  #BLACK,       D1          ; Set Background color
00001190  103C 0050               1730      MOVE.B  #80,        D0          ; Task for Background Color
00001194  4E4F                    1731      TRAP    #15                     ; Trap (Perform action)
00001196                          1732  
00001196                          1733      ; Reset Pixel Colors
Line 1734 ERROR: Undefined symbol
00001196  223C 004DBD16           1734      MOVE.L  #LIFEGREEN,     D1          ; Set Background color
0000119C  103C 0051               1735      MOVE.B  #81,        D0          ; Task for Background Color
000011A0  4E4F                    1736      TRAP    #15                     ; Trap (Perform action)
000011A2                          1737  
000011A2                          1738      ; Set X, Y, Width and Height
000011A2  2239 00001CDE           1739      MOVE.L  HEALTH_X,    D1          ; X
000011A8  2439 00001CE2           1740      MOVE.L  HEALTH_Y,    D2          ; Y
000011AE  2639 00001CDE           1741      MOVE.L  HEALTH_X,    D3
000011B4  0683 0000000C           1742      ADD.L   #HEALTH_PACK_W,   D3      ; Width
000011BA  2839 00001CE2           1743      MOVE.L  HEALTH_Y,    D4 
000011C0  0484 0000000C           1744      SUB.L   #HEALTH_PACK_H,   D4      ; Height
000011C6                          1745      
000011C6                          1746      ; Draw Enemy    
000011C6  103C 0057               1747      MOVE.B  #87,        D0          ; Draw Enemy
000011CA  4E4F                    1748      TRAP    #15                     ; Trap (Perform action)
000011CC  4E75                    1749      RTS                             ; Return to subroutine
000011CE                          1750  
000011CE                          1751  DRAW_HEALTHPACK_DONE:
000011CE  23FC FFFFFFFF 00001CE2  1752      MOVE.L  #-1, HEALTH_Y
000011D8  4E75                    1753      RTS
000011DA                          1754  
000011DA                          1755  DRAW_FLOOR:
000011DA                          1756      ; Set Pixel Colors
Line 1757 ERROR: Undefined symbol
000011DA  223C 004DBD16           1757      MOVE.L  #GREEN,     D1          ; Set Background color
000011E0  103C 0050               1758      MOVE.B  #80,        D0          ; Task for Background Color
000011E4  4E4F                    1759      TRAP    #15                     ; Trap (Perform action)
000011E6                          1760  
Line 1761 ERROR: Undefined symbol
000011E6  223C 004DBD16           1761      MOVE.L  #GREEN,     D1
000011EC  103C 0051               1762      MOVE.B  #81,        D0
000011F0  4E4F                    1763      TRAP    #15
000011F2                          1764  
000011F2                          1765      
000011F2                          1766      ; Set X, Y, X2, and Y2
000011F2  7200                    1767      MOVE.L  #0,   D1          ; X
000011F4  243C 000000F1           1768      MOVE.L  #241,  D2          ; Y
000011FA  263C 00000280           1769      MOVE.L  #640,   D3           
00001200  283C 000001E0           1770      MOVE.L  #480,   D4 
00001206                          1771      
00001206                          1772      ; Draw grass
00001206  103C 0057               1773      MOVE.B  #87,        D0          ; Draw Line
0000120A  4E4F                    1774      TRAP    #15                     ; Trap (Perform action)
0000120C                          1775  
0000120C                          1776      ; Set Pixel Colors
Line 1777 ERROR: Undefined symbol
0000120C  223C 004DBD16           1777      MOVE.L  #BROWN,     D1          ; Set Background color
00001212  103C 0050               1778      MOVE.B  #80,        D0          ; Task for Background Color
00001216  4E4F                    1779      TRAP    #15                     ; Trap (Perform action)
00001218                          1780  
Line 1781 ERROR: Undefined symbol
00001218  223C 004DBD16           1781      MOVE.L  #BROWN,     D1
0000121E  103C 0051               1782      MOVE.B  #81,        D0
00001222  4E4F                    1783      TRAP    #15
00001224                          1784  
00001224                          1785  * -----------------------------------------------------------
00001224                          1786  * Find level and draw dirt
00001224                          1787  * -----------------------------------------------------------
00001224  45F9 00001CA2           1788      LEA     LEVELS,      A2
0000122A  2A39 00001CC4           1789      MOVE.L  PLAYER_SCORE,   D5
00001230  60A8                    1790      BRA     DRAW_FLOOR
00001232                          1791  
Line 1792 ERROR: Symbol defined more than once
00001232                          1792  DRAW_FLOOR:
00001232  243C 00000115           1793      MOVE.L  #277,   D2          ; Y
00001238  6000 0002               1794      BRA     DRAWDIRT
0000123C                          1795  DRAWDIRT:
0000123C                          1796      ; Set X, Y, X2, and Y2
0000123C  7200                    1797      MOVE.L  #0,   D1          ; X
0000123E  263C 00000280           1798      MOVE.L  #640,   D3           
00001244  283C 000001E0           1799      MOVE.L  #480,   D4 
0000124A                          1800      
0000124A                          1801      ; Draw Dirt
0000124A  103C 0057               1802      MOVE.B  #87,        D0          ; Draw Line
0000124E  4E4F                    1803      TRAP    #15                     ; Trap (Perform action)
00001250                          1804  
00001250                          1805  
00001250                          1806      ; Reset Pixel Colors
00001250  7200                    1807      MOVE.L  #$00000000,     D1          ; Set Background color
00001252  103C 0050               1808      MOVE.B  #80,        D0          ; Task for Background Color
00001256  4E4F                    1809      TRAP    #15                     ; Trap (Perform action)
00001258                          1810  
00001258                          1811      ; Reset Pixel Colors
00001258  7200                    1812      MOVE.L  #$00000000,     D1          ; Set Background color
0000125A  103C 0051               1813      MOVE.B  #81,        D0          ; Task for Background Color
0000125E  4E4F                    1814      TRAP    #15                     ; Trap (Perform action)
00001260                          1815  
00001260  4E75                    1816      RTS                             ; Return to subroutine
00001262                          1817  
00001262                          1818  
00001262                          1819  *-----------------DRAW respawn -----------------------------*
00001262                          1820  DRAW_RESPAWN:
00001262  7A00                    1821      MOVEQ.L     #0,  D5
00001264  3A39 00001DA2           1822      MOVE.W      respawnTime,D5
0000126A                          1823  
0000126A  B381                    1824      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000126C  3239 00001CB4           1825      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001272  82FC 0002               1826      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001276  23C1 00001CC0           1827      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
0000127C                          1828  
0000127C                          1829  MOVE_RESPAWNED:
0000127C  23C5 00001CBC           1830      MOVE.L  D5, PLAYER_X
00001282                          1831  
00001282                          1832      ; Enable back buffer
00001282  103C 005E               1833      MOVE.B  #TC_REDRAW,        D0
00001286  4E4F                    1834      TRAP    #15
00001288                          1835  
00001288                          1836      ; Clear the screen
00001288  103C 000B               1837      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000128C  323C FF00               1838      MOVE.W  #$FF00,     D1          ; Clear contents
00001290  4E4F                    1839      TRAP    #15                     ; Trap (Perform action)
00001292                          1840  
00001292  123C 0001               1841      MOVE.B  #1,D1
00001296  103C 005D               1842      MOVE.B  #93,D0
0000129A  4E4F                    1843      TRAP    #15
0000129C                          1844  
0000129C  6100 F620               1845      BSR     DRAW_BACKGROUND        
000012A0  6100 F48C               1846      BSR     DRAW_HILL 
000012A4  6100 F6C0               1847      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
000012A8  6100 F9D8               1848      BSR     DRAW_PLAYER             ; Draw Player
000012AC  6100 FBBC               1849      BSR     DRAW_ENEMY              ; Draw Enemy
000012B0  6100 FCF6               1850      BSR     DRAW_FLYENEMY
000012B4  6100 FE9E               1851      BSR     DRAW_HEALTHPACK
000012B8  6100 FF20               1852      BSR     DRAW_FLOOR              ; Draw Floor
Line 1853 ERROR: Undefined symbol
000012BC  6100 AA58               1853      BSR     drawPause        
000012C0                          1854  
000012C0                          1855  
000012C0  5279 00001DA2           1856      ADDQ.W      #1,respawnTime
000012C6  3A39 00001DA2           1857      MOVE.W      respawnTime,D5
000012CC  0C79 00C8 00001DA2      1858      CMP.W       #200,respawnTime
000012D4  66A6                    1859      BNE         MOVE_RESPAWNED
000012D6  33FC 0000 00001DA2      1860      MOVE.W     #0,respawnTime
000012DE                          1861      ;else
000012DE  4E75                    1862      RTS
000012E0                          1863      
000012E0                          1864  *-----------------------------------------------------------
000012E0                          1865  * Subroutine    : Collision Check
000012E0                          1866  * Description   : Axis-Aligned Bounding Box Collision Detection
000012E0                          1867  * Algorithm checks for overlap on the 4 sides of the Player and 
000012E0                          1868  * Enemy rectangles
000012E0                          1869  * PLAYER_X <= ENEMY_X + ENEMY_W &&
000012E0                          1870  * PLAYER_X + PLAYER_W >= ENEMY_X &&
000012E0                          1871  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
000012E0                          1872  * PLAYER_H + PLAYER_Y >= ENEMY_Y
000012E0                          1873  *-----------------------------------------------------------
000012E0                          1874  CHECK_COLLISIONS:
000012E0                          1875      include     "battle/battlecollisions.x68"     
000012E0  4281                    1876      CLR.L   D1                      ; Clear D1
000012E2  4282                    1877      CLR.L   D2                      ; Clear D2
000012E4                          1878  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
000012E4  2239 00001CBC           1879      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
000012EA  D239 00001D25           1880      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
000012F0  2439 00001CD6           1881      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
000012F6  B481                    1882      CMP.L   D1,         D2          ; Do the Overlap ?
000012F8  6F00 0006               1883      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
000012FC  6000 0048               1884      BRA     CHECK_FLYENEMY_COLLISIONS
00001300                          1885  
00001300                          1886  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
00001300  2239 00001CBC           1887      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001306  2439 00001CD6           1888      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
0000130C  D479 00001D28           1889      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
00001312  B481                    1890      CMP.L   D1,         D2          ; Do they OverLap ?
00001314  6C00 0006               1891      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001318  6000 002C               1892      BRA     CHECK_FLYENEMY_COLLISIONS  
0000131C                          1893  
0000131C                          1894  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
0000131C  2239 00001CC0           1895      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001322  2439 00001CDA           1896      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001328                          1897      ;ADD.W   ENMY_H_INIT,D2          ; Set Enemy Height to D2
00001328  B481                    1898      CMP.L   D1,         D2          ; Do they Overlap ?
0000132A  6F00 0006               1899      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
0000132E  6000 0016               1900      BRA     CHECK_FLYENEMY_COLLISIONS
00001332                          1901  
00001332                          1902  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
00001332  D238 000D               1903      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
00001336  2439 00001CDA           1904      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
0000133C  B481                    1905      CMP.L   D1,         D2          ; Do they OverLap ?
0000133E  6C00 0320               1906      BGE     ENEMYCOLLISION               ; Collision !
00001342  6000 0002               1907      BRA     CHECK_FLYENEMY_COLLISIONS
00001346                          1908  
00001346                          1909  CHECK_FLYENEMY_COLLISIONS:
00001346  4281                    1910      CLR.L   D1                      ; Clear D1
00001348  4282                    1911      CLR.L   D2                      ; Clear D2
0000134A                          1912  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
0000134A  2239 00001CBC           1913      MOVE.L  PLAYER_X,   D1
00001350  D239 00001D25           1914      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001356  2439 00001CE6           1915      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
0000135C  B481                    1916      CMP.L   D1,         D2                          ; Do the Overlap ?
0000135E  6F00 0006               1917      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
00001362  6000 0050               1918      BRA     CHECK_HEALTH_COLLISIONS
00001366                          1919  
00001366                          1920  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
00001366  2239 00001CBC           1921      MOVE.L  PLAYER_X,   D1
0000136C  2439 00001CE6           1922      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001372  D479 00001D2C           1923      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001378  B481                    1924      CMP.L   D1,         D2                  ; Do they OverLap ?
0000137A  6C00 0006               1925      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
0000137E  6000 0034               1926      BRA     CHECK_HEALTH_COLLISIONS
00001382                          1927  
00001382                          1928  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001382  2239 00001CC0           1929      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001388  2439 00001CEA           1930      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
0000138E  D479 00001D2E           1931      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001394  B481                    1932      CMP.L   D1,         D2          ; Do they Overlap ?
00001396  6C00 0006               1933      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
0000139A  6000 0018               1934      BRA     CHECK_HEALTH_COLLISIONS
0000139E                          1935  
0000139E                          1936  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
0000139E  D239 00001D26           1937      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
000013A4  2439 00001CEA           1938      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000013AA  B481                    1939      CMP.L   D1,         D2          ; Do they OverLap ?
000013AC  6F00 02B2               1940      BLE     ENEMYCOLLISION               ; Collision !
000013B0  6000 0002               1941      BRA     CHECK_HEALTH_COLLISIONS
000013B4                          1942  
000013B4                          1943  CHECK_HEALTH_COLLISIONS:
000013B4  4281                    1944      CLR.L   D1                      ; Clear D1
000013B6  4282                    1945      CLR.L   D2                      ; Clear D2
000013B8                          1946  PLX_LTE_TO_HEALTH_X_PLUS_W:
000013B8  2239 00001CBC           1947      MOVE.L  PLAYER_X,   D1
000013BE  D239 00001D25           1948      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
000013C4  2439 00001CDE           1949      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
000013CA  B481                    1950      CMP.L   D1,         D2                          ; Do the Overlap ?
000013CC  6F00 0006               1951      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
000013D0  6000 0050               1952      BRA     CHECK_ATTACK_COLLISIONS
000013D4                          1953  
000013D4                          1954  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
000013D4  2239 00001CBC           1955      MOVE.L  PLAYER_X,   D1
000013DA  2439 00001CDE           1956      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
000013E0  0682 0000000C           1957      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
000013E6  B481                    1958      CMP.L   D1,         D2                  ; Do they OverLap ?
000013E8  6C00 0006               1959      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
000013EC  6000 0034               1960      BRA     CHECK_ATTACK_COLLISIONS
000013F0                          1961  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
000013F0  2239 00001CC0           1962      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
000013F6  2439 00001CE2           1963      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
000013FC  0682 0000000C           1964      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
00001402  B481                    1965      CMP.L   D1,         D2          ; Do they Overlap ?
00001404  6C00 0006               1966      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
00001408  6000 0018               1967      BRA     CHECK_ATTACK_COLLISIONS
0000140C                          1968  
0000140C                          1969  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
0000140C  D239 00001D26           1970      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001412  2439 00001CE2           1971      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
00001418  B481                    1972      CMP.L   D1,         D2          ; Do they OverLap ?
0000141A  6F00 02AC               1973      BLE     HEALTH_COLLISION               ; Collision !
0000141E  6000 0002               1974      BRA     CHECK_ATTACK_COLLISIONS
00001422                          1975  
00001422                          1976  CHECK_ATTACK_COLLISIONS:
00001422  4281                    1977      CLR.L   D1                      ; Clear D1
00001424  4282                    1978      CLR.L   D2                      ; Clear D2
00001426                          1979  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
00001426  2239 00001D02           1980      MOVE.L  ATTACK_X,   D1
0000142C  0681 00000023           1981      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001432  2439 00001CD6           1982      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001438  B481                    1983      CMP.L   D1,         D2                          ; Do the Overlap ?
0000143A  6F00 0006               1984      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
0000143E  6000 0050               1985      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001442                          1986  
00001442                          1987  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
00001442  2239 00001D02           1988      MOVE.L  ATTACK_X,   D1
00001448  2439 00001CD6           1989      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
0000144E  D479 00001D28           1990      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001454  B481                    1991      CMP.L   D1,         D2                  ; Do they OverLap ?
00001456  6C00 0006               1992      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
0000145A  6000 0034               1993      BRA     CHECK_ATTACK_FLY_COLLISIONS
0000145E                          1994  
0000145E                          1995  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
0000145E  2239 00001D06           1996      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001464  2439 00001CDA           1997      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
0000146A  D479 00001D2A           1998      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001470  B481                    1999      CMP.L   D1,         D2          ; Do they Overlap ?
00001472  6C00 0006               2000      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
00001476  6000 0018               2001      BRA     CHECK_ATTACK_FLY_COLLISIONS
0000147A                          2002  
0000147A                          2003  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
0000147A  0681 00000014           2004      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001480  2439 00001CDA           2005      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001486  B481                    2006      CMP.L   D1,         D2          ; Do they OverLap ?
00001488  6F00 0150               2007      BLE     ATTACK_COLLISION               ; Collision !
0000148C  6000 0002               2008      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001490                          2009  
00001490                          2010  CHECK_ATTACK_FLY_COLLISIONS:
00001490  4281                    2011      CLR.L   D1                      ; Clear D1
00001492  4282                    2012      CLR.L   D2                      ; Clear D2
00001494                          2013  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001494  2239 00001D02           2014      MOVE.L  ATTACK_X,   D1
0000149A  0681 00000023           2015      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
000014A0  2439 00001CE6           2016      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
000014A6  B481                    2017      CMP.L   D1,         D2                          ; Do the Overlap ?
000014A8  6F00 0006               2018      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
000014AC  6000 0050               2019      BRA     CHECK_THROW_COLLISION
000014B0                          2020  
000014B0                          2021  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
000014B0  2239 00001D02           2022      MOVE.L  ATTACK_X,   D1
000014B6  2439 00001CE6           2023      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
000014BC  D479 00001D2C           2024      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000014C2  B481                    2025      CMP.L   D1,         D2                  ; Do they OverLap ?
000014C4  6C00 0006               2026      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
000014C8  6000 0034               2027      BRA     CHECK_THROW_COLLISION
000014CC                          2028  
000014CC                          2029  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
000014CC  2239 00001D06           2030      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
000014D2  2439 00001CEA           2031      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000014D8  D479 00001D2E           2032      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000014DE  B481                    2033      CMP.L   D1,         D2          ; Do they Overlap ?
000014E0  6C00 0006               2034      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000014E4  6000 0018               2035      BRA     CHECK_THROW_COLLISION
000014E8                          2036  
000014E8                          2037  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000014E8  0681 00000014           2038      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
000014EE  2439 00001CEA           2039      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000014F4  B481                    2040      CMP.L   D1,         D2          ; Do they OverLap ?
000014F6  6F00 0108               2041      BLE     ATTACK_FLY_COLLISION               ; Collision !
000014FA  6000 0002               2042      BRA     CHECK_THROW_COLLISION
000014FE                          2043  
000014FE                          2044  CHECK_THROW_COLLISION:
000014FE  4281                    2045      CLR.L   D1                      ; Clear D1
00001500  4282                    2046      CLR.L   D2                      ; Clear D2
00001502                          2047  THROW_X_LTE_TO_ENEMY_X_PLUS_W:
00001502  2239 00001D10           2048      MOVE.L  THROW_X,   D1
00001508  0681 00000023           2049      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
0000150E  2439 00001CD6           2050      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001514  B481                    2051      CMP.L   D1,         D2                          ; Do the Overlap ?
00001516  6F00 0006               2052      BLE     THROW_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
0000151A  6000 0050               2053      BRA     CHECK_THROW_FLY_COLLISIONS
0000151E                          2054  
0000151E                          2055  THROW_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
0000151E  2239 00001D10           2056      MOVE.L  THROW_X,   D1
00001524  2439 00001CD6           2057      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
0000152A  D479 00001D28           2058      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001530  B481                    2059      CMP.L   D1,         D2                  ; Do they OverLap ?
00001532  6C00 0006               2060      BGE     TRW_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001536  6000 0034               2061      BRA     CHECK_THROW_FLY_COLLISIONS
0000153A                          2062  
0000153A                          2063  TRW_LTE_TO_ENEMY_Y_PLUS_H:     
0000153A  2239 00001D14           2064      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001540  2439 00001CDA           2065      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001546  D479 00001D2A           2066      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000154C  B481                    2067      CMP.L   D1,         D2          ; Do they Overlap ?
0000154E  6C00 0006               2068      BGE     TRW_PLUS_H_LTE_TO_THROW_Y  ; Less than or Equal
00001552  6000 0018               2069      BRA     CHECK_THROW_FLY_COLLISIONS
00001556                          2070  
00001556                          2071  TRW_PLUS_H_LTE_TO_THROW_Y:     ; Less than or Equal ?
00001556  0681 0000000F           2072      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
0000155C  2439 00001CDA           2073      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001562  B481                    2074      CMP.L   D1,         D2          ; Do they OverLap ?
00001564  6F00 0074               2075      BLE     ATTACK_COLLISION               ; Collision !
00001568  6000 0002               2076      BRA     CHECK_THROW_FLY_COLLISIONS
0000156C                          2077  
0000156C                          2078  CHECK_THROW_FLY_COLLISIONS:
0000156C  4281                    2079      CLR.L   D1                      ; Clear D1
0000156E  4282                    2080      CLR.L   D2                      ; Clear D2
00001570                          2081  THROW_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001570  2239 00001D10           2082      MOVE.L  THROW_X,   D1
00001576  0681 0000000F           2083      ADD.L   #THRW_W_INIT,D1          ; Move Player Width to D1
0000157C  2439 00001CE6           2084      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001582  B481                    2085      CMP.L   D1,         D2                          ; Do the Overlap ?
00001584  6F00 0006               2086      BLE     THROW_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001588  6000 00B4               2087      BRA     COLLISION_CHECK_DONE
0000158C                          2088  
0000158C                          2089  THROW_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
0000158C  2239 00001D10           2090      MOVE.L  THROW_X,   D1
00001592  2439 00001CE6           2091      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001598  D479 00001D2C           2092      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
0000159E  B481                    2093      CMP.L   D1,         D2                  ; Do they OverLap ?
000015A0  6C00 0006               2094      BGE     TRW_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
000015A4  6000 0098               2095      BRA     COLLISION_CHECK_DONE
000015A8                          2096  
000015A8                          2097  TRW_LTE_TO_FLYENEMY_Y_PLUS_H:     
000015A8  2239 00001D14           2098      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
000015AE  2439 00001CEA           2099      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000015B4  D479 00001D2E           2100      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000015BA  B481                    2101      CMP.L   D1,         D2          ; Do they Overlap ?
000015BC  6C00 0006               2102      BGE     TRW_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000015C0  6000 007C               2103      BRA     COLLISION_CHECK_DONE
000015C4                          2104  
000015C4                          2105  TRW_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000015C4  0681 0000000F           2106      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
000015CA  2439 00001CEA           2107      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000015D0  B481                    2108      CMP.L   D1,         D2          ; Do they OverLap ?
000015D2  6F00 002C               2109      BLE     ATTACK_FLY_COLLISION               ; Collision !
000015D6  6000 0066               2110      BRA     COLLISION_CHECK_DONE
000015DA                          2111  
000015DA                          2112  
000015DA                          2113  
000015DA                          2114  ATTACK_COLLISION:
000015DA  4A39 00001D23           2115      TST.B   ENEMY_HIT
000015E0  6600 0124               2116      BNE     STILL_COLLIDED
000015E4  6100 F5D2               2117      BSR     PLAY_HIT
000015E8  23FC 00000190 00001CDA  2118      MOVE.L  #400, ENEMY_Y
000015F2  13FC 0001 00001D23      2119      MOVE.B  #01,  ENEMY_HIT
000015FA  6100 002A               2120      BSR     CHECK_ENEMIES_CLEARED
000015FE  4E75                    2121      RTS
00001600                          2122  
00001600                          2123  ATTACK_FLY_COLLISION:
00001600  4A39 00001D24           2124      TST.B   FLYENEMY_HIT
00001606  6600 00FE               2125      BNE     STILL_COLLIDED
0000160A  6100 F5AC               2126      BSR     PLAY_HIT
0000160E  23FC 00000190 00001CEA  2127      MOVE.L  #400, FLYINGENEMY_Y
00001618  13FC 0001 00001D24      2128      MOVE.B  #01,  FLYENEMY_HIT
00001620  6100 0004               2129      BSR     CHECK_ENEMIES_CLEARED
00001624  4E75                    2130      RTS
00001626                          2131  
00001626                          2132  CHECK_ENEMIES_CLEARED:
00001626  5239 00001D20           2133      ADDI.B  #1,         ENEMIES_DEFEATED
0000162C  1239 00001D20           2134      MOVE.B  ENEMIES_DEFEATED,D1
00001632  B239 00001D22           2135      CMP.B   enemiesToDefeat,D1
00001638  6700 02E4               2136      BEQ     WAVE_DEFEATED
0000163C  4E75                    2137      RTS
0000163E                          2138  
0000163E                          2139  COLLISION_CHECK_DONE:               ; No Collision Update points
0000163E  4239 00001C99           2140      CLR.B   IN_ENEMY
00001644  4239 00001C9A           2141      CLR.B   IN_HPACK
0000164A  4281                    2142      CLR.L   D1
0000164C  1239 00001CFC           2143      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
00001652  D2B9 00001CC4           2144      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001658  23C1 00001CC4           2145      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
0000165E  4E75                    2146      RTS                             ; Return to subroutine
00001660                          2147  
00001660                          2148  
00001660                          2149  ENEMYCOLLISION:
00001660  0C39 0001 00001C99      2150      CMP.B     #$01, IN_ENEMY
00001668  6700 009C               2151      BEQ     STILL_COLLIDED
0000166C  0C39 0001 00001C9B      2152      CMP.B   #01, DRAW_HEALTHPACKS
00001674  6600 EF4C               2153      BNE     RESET_HEALTH_POSITION
00001678  13FC 0001 00001C9B      2154      MOVE.B  #01, DRAW_HEALTHPACKS 
00001680  13FC 0001 00001C9C      2155      MOVE.B  #01, SPAWN_HEALTHPACKS 
00001688  5339 00001CFA           2156      SUB.B   #1, antHealth
0000168E  13FC 0001 00001C99      2157      MOVE.B  #$01, IN_ENEMY
00001696  4A39 00001CFA           2158      TST.B   antHealth
0000169C  6700 0008               2159      BEQ     antKilled
000016A0  6100 F4BC               2160      BSR     PLAY_HITHURT               ; Play Opps Wav
000016A4  4E75                    2161      RTS                             ; Return to subroutine
000016A6                          2162  
000016A6                          2163  antKilled:
000016A6  13FC 0003 00001CFA      2164      MOVE.B    #3, antHealth
000016AE  5339 00001CFB           2165      SUBQ.b    #1, antsRemaining
000016B4  4A39 00001CFB           2166      TST.b     antsRemaining
000016BA  6700 0174               2167      BEQ       GAME_OVER
000016BE  6100 F49E               2168      BSR     PLAY_HITHURT               ; Play Opps Wav
000016C2  6100 FB9E               2169      BSR     DRAW_RESPAWN
000016C6  4E75                    2170      RTS
000016C8                          2171  
000016C8                          2172  HEALTH_COLLISION:
000016C8  0C39 0001 00001C9A      2173      CMP.B     #$01, IN_HPACK
000016D0  6700 0034               2174      BEQ     STILL_COLLIDED
000016D4  13FC 0000 00001C9B      2175      MOVE.B  #00, DRAW_HEALTHPACKS
000016DC  6100 F49E               2176      BSR     PLAY_POWERUP               ; Play Opps Wav
000016E0  5239 00001CFA           2177      ADD.B   #1, antHealth
000016E6  0C39 0003 00001CFA      2178      CMP.B   #03, antHealth
000016EE  6C00 000C               2179      BGE     STOP_HPACK_SPAWN
000016F2  13FC 0001 00001C9A      2180      MOVE.B  #$01, IN_HPACK
000016FA  4E75                    2181      RTS
000016FA  4E75                    2182  -------------------- end include --------------------
000016FC                          2183  
000016FC                          2184  STOP_HPACK_SPAWN:
000016FC  13FC 0000 00001C9C      2185      MOVE.B  #00, SPAWN_HEALTHPACKS
00001704  4E75                    2186      RTS
00001706                          2187  
00001706                          2188  STILL_COLLIDED:
00001706  4E75                    2189      RTS
00001708                          2190  *-----------------------------------------------------------
00001708                          2191  * Subroutine    : EXIT
00001708                          2192  * Description   : Exit message and End Game
00001708                          2193  *-----------------------------------------------------------
00001708                          2194  
00001708                          2195  HILL_LOST:
00001708                          2196  
Line 2197 ERROR: Undefined symbol
00001708  0C79 0003 005455B8      2197      CMP.W   #3,lvlIndex
00001710  6700 032E               2198      BEQ     WIN_SCREEN
00001714                          2199  
00001714  103C 000B               2200      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001718  323C FF00               2201      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
0000171C  4E4F                    2202      TRAP    #15                     ; Trap (Perform action)
0000171E  6100 F3FE               2203      BSR     PLAY_GAMEOVER
00001722                          2204  
00001722                          2205  *------------Set Colours--------------*
Line 2206 ERROR: Undefined symbol
00001722  223C 004DBD16           2206      MOVE.L  #color5,     D1
00001728  103C 0015               2207      MOVE.B  #21,        D0          ; Set Text Color
0000172C  243C 01130005           2208      MOVE.L  #$01130005, D2
00001732  4E4F                    2209      TRAP    #15                     ; Trap (Perform action)
00001734                          2210  
Line 2211 ERROR: Undefined symbol
00001734  223C 004DBD16           2211      MOVE.L  #color1,     D1
0000173A  103C 0051               2212      MOVE.B  #81,        D0          ; Set Text Color
0000173E  4E4F                    2213      TRAP    #15                     ; Trap (Perform action)
00001740                          2214  
00001740                          2215  *------------ fill background --------------*
00001740  323C 0000               2216      MOVE.W      #0,D1
00001744  343C 0000               2217      MOVE.W      #0,d2
00001748  103C 0059               2218      MOVE.B      #89,D0
0000174C  4E4F                    2219      TRAP        #15
0000174E                          2220  
0000174E                          2221  *------------ Print hill lost message--------------*
0000174E                          2222  
0000174E  103C 000B               2223      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001752  323C 0803               2224      MOVE.W  #$0803,     D1          ; Col 10, Row 03
00001756  4E4F                    2225      TRAP    #15                     ; Trap (Perform action)
00001758  43F9 00001BB4           2226      LEA     HILLLOST_MSG,A1        ; Game Over Message
Line 2227 ERROR: Undefined symbol
0000175E  6100 A5B6               2227      BSR     print
00001762                          2228  
00001762                          2229  *------------print amount of enemies defeated--------------*
00001762                          2230  
00001762  103C 000B               2231      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001766  323C 0606               2232      MOVE.W  #$0606,     D1          ; Col 02, Row 01
0000176A  4E4F                    2233      TRAP    #15                     ; Trap (Perform action)
0000176C  43F9 00001B84           2234      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2235 ERROR: Undefined symbol
00001772  6100 A5A2               2235      BSR     print
00001776                          2236  
00001776  103C 000B               2237      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000177A  323C 1B06               2238      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
0000177E  4E4F                    2239      TRAP    #15                     ; Trap (Perform action)
00001780  103C 0003               2240      MOVE.B  #03,        D0          ; Display number at D1.L
00001784  7200                    2241      MOVEQ.L #0,D1
00001786  1239 00001D20           2242      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
0000178C  4E4F                    2243      TRAP    #15                     ; Trap (Perform action)
0000178E                          2244      
0000178E                          2245  *------------print hill health --------------*
0000178E                          2246  
0000178E  103C 000B               2247      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001792  323C 0607               2248      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001796  4E4F                    2249      TRAP    #15                     ; Trap (Perform action)
00001798  43F9 00001C8A           2250      LEA     hillHP_MSG,  A1          ; Score Message
Line 2251 ERROR: Undefined symbol
0000179E  6100 A576               2251      BSR     print
000017A2                          2252  
000017A2  103C 000B               2253      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017A6  323C 1B07               2254      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000017AA  4E4F                    2255      TRAP    #15                     ; Trap (Perform action)
000017AC  7200                    2256      MOVEQ.L #0,D1
000017AE  1239 00001C98           2257      MOVE.B  hillHP,D1         ; Move Score to D1.L
000017B4  103C 0003               2258      MOVE.B  #03,        D0          ; Display number at D1.L
000017B8  4E4F                    2259      TRAP    #15                     ; Trap (Perform action)
000017BA                          2260      
000017BA                          2261  *------------ print back to map--------------*
000017BA                          2262  
Line 2263 ERROR: Undefined symbol
000017BA  223C 004DBD16           2263      MOVE.L  #color5,     D1
000017C0  103C 0015               2264      MOVE.B  #21,        D0          ; Set Text Color
000017C4  243C 03140000           2265      MOVE.L  #$03140000, D2
000017CA  4E4F                    2266      TRAP    #15                     ; Trap (Perform action)
000017CC                          2267  
000017CC                          2268      ; Restart
000017CC  103C 000B               2269      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017D0  323C 070C               2270      MOVE.W  #$070C,     D1          ; Col 09, Row 01
000017D4  4E4F                    2271      TRAP    #15                     ; Trap (Perform action)
000017D6  43F9 00001C22           2272      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
000017DC  303C 000D               2273      MOVE    #13,        D0          ; No Line feedF=
000017E0  4E4F                    2274      TRAP    #15                     ; Trap (Perform action)
000017E2                          2275  
000017E2  103C 000B               2276      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017E6  323C 1F0C               2277      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
000017EA  4E4F                    2278      TRAP    #15                     ; Trap (Perform action)
000017EC  7200                    2279      MOVEQ.L #0,D1
000017EE  1239 00001DA4           2280      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
000017F4  103C 0003               2281      MOVE.B  #03,        D0          ; Display number at D1.L
000017F8  4E4F                    2282      TRAP    #15                     ; Trap (Perform action)
000017FA                          2283  
000017FA                          2284      
000017FA  103C 005E               2285      MOVE.B  #TC_REDRAW,        D0
000017FE  4E4F                    2286      TRAP    #15
00001800                          2287     
00001800                          2288      ; delay by 1sec
00001800  103C 0017               2289      MOVE.b  #23,D0
00001804  7264                    2290      MOVE.L  #100,D1
00001806  4E4F                    2291      TRAP    #15
00001808                          2292  
00001808  5339 00001DA4           2293      SUB.B   #01,backToMapCount
0000180E  4A39 00001DA4           2294      TST.B   backToMapCount
Line 2295 ERROR: Undefined symbol
00001814  6700 A500               2295      BEQ     mapNotFirstInit
00001818                          2296  
Line 2297 ERROR: Undefined symbol
00001818  23FC 000000C8 005455B8  2297      MOVE.l  #200,currentHealth
Line 2298 ERROR: Undefined symbol
00001822  6100 A4F2               2298      bsr     initDraw
00001826                          2299      ; back to top
00001826  6000 FEE0               2300      BRA     HILL_LOST
0000182A                          2301  
0000182A                          2302  INPUTLOOP:
0000182A  6100 EA34               2303      BSR     BATTLEINPUT
0000182E  60FA                    2304      BRA     INPUTLOOP
00001830                          2305  
00001830                          2306  GAME_OVER:
00001830                          2307      
00001830  103C 000B               2308      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001834  323C FF00               2309      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001838  4E4F                    2310      TRAP    #15                     ; Trap (Perform action)
0000183A  6100 F2E2               2311      BSR     PLAY_GAMEOVER
0000183E                          2312  
0000183E                          2313  *------------Set Colours--------------*
Line 2314 ERROR: Undefined symbol
0000183E  223C 004DBD16           2314      MOVE.L  #color5,     D1
00001844  103C 0015               2315      MOVE.B  #21,        D0          ; Set Text Color
00001848  243C 01130005           2316      MOVE.L  #$01130005, D2
0000184E  4E4F                    2317      TRAP    #15                     ; Trap (Perform action)
00001850                          2318  
Line 2319 ERROR: Undefined symbol
00001850  223C 004DBD16           2319      MOVE.L  #color1,     D1
00001856  103C 0051               2320      MOVE.B  #81,        D0          ; Set Text Color
0000185A  4E4F                    2321      TRAP    #15                     ; Trap (Perform action)
0000185C                          2322  
0000185C                          2323  *------------ fill background --------------*
0000185C  323C 0000               2324      MOVE.W      #0,D1
00001860  343C 0000               2325      MOVE.W      #0,d2
00001864  103C 0059               2326      MOVE.B      #89,D0
00001868  4E4F                    2327      TRAP        #15
0000186A                          2328  
0000186A                          2329  *------------ Print gameover message--------------*
0000186A  103C 000B               2330      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000186E  323C 1001               2331      MOVE.W  #$1001,     D1          ; Col 10, Row 03
00001872  4E4F                    2332      TRAP    #15                     ; Trap (Perform action)
00001874  43F9 00001C18           2333      LEA     GAMEOVER_MSG,A1        ; Game Over Message
Line 2334 ERROR: Undefined symbol
0000187A  6100 A49A               2334      BSR     print
0000187E                          2335  
0000187E  103C 000B               2336      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001882  323C 0703               2337      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001886  4E4F                    2338      TRAP    #15                     ; Trap (Perform action)
00001888  43F9 00001BFC           2339      LEA     FALLENKINGDOM_MSG,A1        ; Game Over Message
Line 2340 ERROR: Undefined symbol
0000188E  6100 A486               2340      BSR     print
00001892                          2341  
00001892                          2342  
00001892                          2343  *------------ Print hills defended message--------------*
00001892                          2344      ; TODO TODO hills defended msg
00001892  103C 000B               2345      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001896  323C 0606               2346      MOVE.W  #$0606,     D1          ; Col 02, Row 01
0000189A  4E4F                    2347      TRAP    #15                     ; Trap (Perform action)
0000189C  43F9 00001B84           2348      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2349 ERROR: Undefined symbol
000018A2  6100 A472               2349      BSR     print
000018A6                          2350  
000018A6  103C 000B               2351      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018AA  323C 1B06               2352      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
000018AE  4E4F                    2353      TRAP    #15                     ; Trap (Perform action)
000018B0  103C 0003               2354      MOVE.B  #03,        D0          ; Display number at D1.L
000018B4  7200                    2355      MOVEQ.L #0,D1
000018B6  1239 00001D20           2356      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000018BC  4E4F                    2357      TRAP    #15                     ; Trap (Perform action)
000018BE                          2358      
000018BE                          2359  *------------ Print ants remaining message--------------*
000018BE  103C 000B               2360      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018C2  323C 0607               2361      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000018C6  4E4F                    2362      TRAP    #15                     ; Trap (Perform action)
000018C8  43F9 00001C78           2363      LEA     antsRem_MSG,  A1          ; Score Message
Line 2364 ERROR: Undefined symbol
000018CE  6100 A446               2364      BSR     print
000018D2                          2365  
000018D2  103C 000B               2366      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018D6  323C 1B07               2367      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000018DA  4E4F                    2368      TRAP    #15                     ; Trap (Perform action)
000018DC  7200                    2369      MOVEQ.L #0,D1
000018DE  1239 00001CFB           2370      MOVE.B  antsRemaining,D1         ; Move Score to D1.L
000018E4  103C 0003               2371      MOVE.B  #03,        D0          ; Display number at D1.L
000018E8  4E4F                    2372      TRAP    #15                     ; Trap (Perform action)
000018EA                          2373      
000018EA                          2374  *------------ change fonts --------------*
Line 2375 ERROR: Undefined symbol
000018EA  223C 004DBD16           2375      MOVE.L  #color5,     D1
000018F0  103C 0015               2376      MOVE.B  #21,        D0          ; Set Text Color
000018F4  243C 03140000           2377      MOVE.L  #$03140000, D2
000018FA  4E4F                    2378      TRAP    #15                     ; Trap (Perform action)
000018FC                          2379  
000018FC                          2380  *------------ Print restart message--------------*
000018FC  103C 000B               2381      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001900  323C 0B09               2382      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001904  4E4F                    2383      TRAP    #15                     ; Trap (Perform action)
00001906  43F9 00001C3A           2384      LEA     RESTART_MSG,  A1          ; Score Message
0000190C  303C 000D               2385      MOVE    #13,        D0          ; No Line feedF=
00001910  4E4F                    2386      TRAP    #15                     ; Trap (Perform action)
00001912                          2387  
00001912                          2388      
00001912  103C 005E               2389      MOVE.B  #TC_REDRAW,        D0
00001916  4E4F                    2390      TRAP    #15
00001918                          2391  
00001918                          2392  LOSSINPUTLOOP:
00001918  6100 E946               2393      BSR     BATTLEINPUT
0000191C  60FA                    2394      BRA     LOSSINPUTLOOP
0000191E                          2395  
0000191E                          2396  WAVE_DEFEATED:
0000191E                          2397  
Line 2398 ERROR: Undefined symbol
0000191E  0C79 0003 005455B8      2398      CMP.W   #3,lvlIndex
00001926  6700 0118               2399      BEQ     WIN_SCREEN
0000192A                          2400      
0000192A  103C 000B               2401      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000192E  323C FF00               2402      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001932  4E4F                    2403      TRAP    #15                     ; Trap (Perform action)
00001934  6100 F1E8               2404      BSR     PLAY_GAMEOVER
00001938                          2405  
00001938                          2406  *------------Set Colours--------------*
Line 2407 ERROR: Undefined symbol
00001938  223C 004DBD16           2407      MOVE.L  #color5,     D1
0000193E  103C 0015               2408      MOVE.B  #21,        D0          ; Set Text Color
00001942  243C 01130005           2409      MOVE.L  #$01130005, D2
00001948  4E4F                    2410      TRAP    #15                     ; Trap (Perform action)
0000194A                          2411  
Line 2412 ERROR: Undefined symbol
0000194A  223C 004DBD16           2412      MOVE.L  #color1,     D1
00001950  103C 0051               2413      MOVE.B  #81,        D0          ; Set Text Color
00001954  4E4F                    2414      TRAP    #15                     ; Trap (Perform action)
00001956                          2415  
00001956                          2416  *------------ fill background --------------*
00001956  323C 0000               2417      MOVE.W      #0,D1
0000195A  343C 0000               2418      MOVE.W      #0,d2
0000195E  103C 0059               2419      MOVE.B      #89,D0
00001962  4E4F                    2420      TRAP        #15
00001964                          2421  
00001964                          2422  *------------ Print wave defeated message--------------*
00001964                          2423  
00001964  103C 000B               2424      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001968  323C 0E03               2425      MOVE.W  #$0E03,     D1          ; Col 10, Row 03
0000196C  4E4F                    2426      TRAP    #15                     ; Trap (Perform action)
0000196E  43F9 00001BED           2427      LEA     HILLDEFENDED_MSG,A1        ; Game Over Message
Line 2428 ERROR: Undefined symbol
00001974  6100 A3A0               2428      BSR     print
00001978                          2429  
00001978                          2430  *------------print amount of enemies defeated--------------*
00001978                          2431  
00001978  103C 000B               2432      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000197C  323C 0606               2433      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001980  4E4F                    2434      TRAP    #15                     ; Trap (Perform action)
00001982  43F9 00001B84           2435      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2436 ERROR: Undefined symbol
00001988  6100 A38C               2436      BSR     print
0000198C                          2437  
0000198C  103C 000B               2438      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001990  323C 1B06               2439      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001994  4E4F                    2440      TRAP    #15                     ; Trap (Perform action)
00001996  103C 0003               2441      MOVE.B  #03,        D0          ; Display number at D1.L
0000199A  7200                    2442      MOVEQ.L #0,D1
0000199C  1239 00001D20           2443      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000019A2  4E4F                    2444      TRAP    #15                     ; Trap (Perform action)
000019A4                          2445      
000019A4                          2446  *------------print hill health --------------*
000019A4                          2447  
000019A4  103C 000B               2448      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019A8  323C 0607               2449      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000019AC  4E4F                    2450      TRAP    #15                     ; Trap (Perform action)
000019AE  43F9 00001C8A           2451      LEA     hillHP_MSG,  A1          ; Score Message
Line 2452 ERROR: Undefined symbol
000019B4  6100 A360               2452      BSR     print
000019B8                          2453  
000019B8  103C 000B               2454      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019BC  323C 1B07               2455      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000019C0  4E4F                    2456      TRAP    #15                     ; Trap (Perform action)
000019C2  7200                    2457      MOVEQ.L #0,D1
000019C4  1239 00001C98           2458      MOVE.B  hillHP,D1         ; Move Score to D1.L
000019CA  103C 0003               2459      MOVE.B  #03,        D0          ; Display number at D1.L
000019CE  4E4F                    2460      TRAP    #15                     ; Trap (Perform action)
000019D0                          2461      
000019D0                          2462  *------------ print back to map--------------*
Line 2463 ERROR: Undefined symbol
000019D0  223C 004DBD16           2463      MOVE.L  #color5,     D1
000019D6  103C 0015               2464      MOVE.B  #21,        D0          ; Set Text Color
000019DA  243C 03140000           2465      MOVE.L  #$03140000, D2
000019E0  4E4F                    2466      TRAP    #15                     ; Trap (Perform action)
000019E2                          2467  
000019E2                          2468  
000019E2                          2469      ; Restart
000019E2  103C 000B               2470      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019E6  323C 070C               2471      MOVE.W  #$070C,     D1          ; Col 09, Row 01
000019EA  4E4F                    2472      TRAP    #15                     ; Trap (Perform action)
000019EC  43F9 00001C22           2473      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
000019F2  303C 000D               2474      MOVE    #13,        D0          ; No Line feedF=
000019F6  4E4F                    2475      TRAP    #15                     ; Trap (Perform action)
000019F8                          2476  
000019F8  103C 000B               2477      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019FC  323C 1F0C               2478      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
00001A00  4E4F                    2479      TRAP    #15                     ; Trap (Perform action)
00001A02  7200                    2480      MOVEQ.L #0,D1
00001A04  1239 00001DA4           2481      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
00001A0A  103C 0003               2482      MOVE.B  #03,        D0          ; Display number at D1.L
00001A0E  4E4F                    2483      TRAP    #15                     ; Trap (Perform action)
00001A10                          2484  
00001A10                          2485  
00001A10                          2486      
00001A10  103C 005E               2487      MOVE.B  #TC_REDRAW,        D0
00001A14  4E4F                    2488      TRAP    #15
00001A16                          2489     
00001A16                          2490      ; delay by 1sec
00001A16  103C 0017               2491      MOVE.b  #23,D0
00001A1A  7264                    2492      MOVE.L  #100,D1
00001A1C  4E4F                    2493      TRAP    #15
00001A1E                          2494  
00001A1E  5339 00001DA4           2495      SUB.B   #01,backToMapCount
00001A24  4A39 00001DA4           2496      TST.B   backToMapCount
Line 2497 ERROR: Undefined symbol
00001A2A  6700 A2EA               2497      BEQ     mapNotFirstInit
00001A2E                          2498  
Line 2499 ERROR: Undefined symbol
00001A2E  6100 A2E6               2499      bsr     initDraw
Line 2500 ERROR: Undefined symbol
00001A32  23FC 000000C8 005455B8  2500      MOVE.l  #200,currentHealth
00001A3C                          2501      ; back to top
00001A3C  6000 FEE0               2502      BRA     WAVE_DEFEATED
00001A40                          2503  
00001A40                          2504  
00001A40                          2505  WIN_SCREEN:
Line 2506 ERROR: Undefined symbol
00001A40  13FC 0001 005455B8      2506      move.b #1, isWin
00001A48  103C 000B               2507      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A4C  323C FF00               2508      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001A50  4E4F                    2509      TRAP    #15                     ; Trap (Perform action)
00001A52  6100 F0CA               2510      BSR     PLAY_GAMEOVER
00001A56                          2511  
00001A56                          2512  *------------Set Colours--------------*
Line 2513 ERROR: Undefined symbol
00001A56  223C 004DBD16           2513      MOVE.L  #color5,     D1
00001A5C  103C 0015               2514      MOVE.B  #21,        D0          ; Set Text Color
00001A60  243C 01130005           2515      MOVE.L  #$01130005, D2
00001A66  4E4F                    2516      TRAP    #15                     ; Trap (Perform action)
00001A68                          2517  
Line 2518 ERROR: Undefined symbol
00001A68  223C 004DBD16           2518      MOVE.L  #color1,     D1
00001A6E  103C 0051               2519      MOVE.B  #81,        D0          ; Set Text Color
00001A72  4E4F                    2520      TRAP    #15                     ; Trap (Perform action)
00001A74                          2521  
00001A74                          2522  *------------ fill background --------------*
00001A74  323C 0000               2523      MOVE.W      #0,D1
00001A78  343C 0000               2524      MOVE.W      #0,d2
00001A7C  103C 0059               2525      MOVE.B      #89,D0
00001A80  4E4F                    2526      TRAP        #15
00001A82                          2527  
00001A82                          2528  *------------ Print wave defeated message--------------*
00001A82                          2529  
00001A82  103C 000B               2530      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A86  323C 0703               2531      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001A8A  4E4F                    2532      TRAP    #15                     ; Trap (Perform action)
00001A8C  43F9 00001BCF           2533      LEA     WIN_MSG,A1        ; Game Over Message
Line 2534 ERROR: Undefined symbol
00001A92  6100 A282               2534      BSR     print
00001A96                          2535  
00001A96                          2536  *------------print amount of enemies defeated--------------*
00001A96                          2537  
00001A96  103C 000B               2538      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A9A  323C 0606               2539      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001A9E  4E4F                    2540      TRAP    #15                     ; Trap (Perform action)
00001AA0  43F9 00001B84           2541      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2542 ERROR: Undefined symbol
00001AA6  6100 A26E               2542      BSR     print
00001AAA                          2543  
00001AAA  103C 000B               2544      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AAE  323C 1B06               2545      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001AB2  4E4F                    2546      TRAP    #15                     ; Trap (Perform action)
00001AB4  103C 0003               2547      MOVE.B  #03,        D0          ; Display number at D1.L
00001AB8  7200                    2548      MOVEQ.L #0,D1
00001ABA  1239 00001D20           2549      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001AC0  4E4F                    2550      TRAP    #15                     ; Trap (Perform action)
00001AC2                          2551      
00001AC2                          2552  *------------print hill health --------------*
00001AC2                          2553  
00001AC2  103C 000B               2554      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AC6  323C 0607               2555      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001ACA  4E4F                    2556      TRAP    #15                     ; Trap (Perform action)
00001ACC  43F9 00001C8A           2557      LEA     hillHP_MSG,  A1          ; Score Message
Line 2558 ERROR: Undefined symbol
00001AD2  6100 A242               2558      BSR     print
00001AD6                          2559  
00001AD6  103C 000B               2560      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001ADA  323C 1B07               2561      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001ADE  4E4F                    2562      TRAP    #15                     ; Trap (Perform action)
00001AE0  7200                    2563      MOVEQ.L #0,D1
00001AE2  1239 00001C98           2564      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001AE8  103C 0003               2565      MOVE.B  #03,        D0          ; Display number at D1.L
00001AEC  4E4F                    2566      TRAP    #15                     ; Trap (Perform action)
00001AEE                          2567      
00001AEE                          2568  *------------ print restart --------------*
Line 2569 ERROR: Undefined symbol
00001AEE  223C 004DBD16           2569      MOVE.L  #color5,     D1
00001AF4  103C 0015               2570      MOVE.B  #21,        D0          ; Set Text Color
00001AF8  243C 03140000           2571      MOVE.L  #$03140000, D2
00001AFE  4E4F                    2572      TRAP    #15                     ; Trap (Perform action)
00001B00                          2573  
00001B00                          2574  
00001B00                          2575      ; Restart
00001B00  103C 000B               2576      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B04  323C 0B09               2577      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001B08  4E4F                    2578      TRAP    #15                     ; Trap (Perform action)
00001B0A  43F9 00001C3A           2579      LEA     RESTART_MSG,  A1          ; Score Message
00001B10  303C 000D               2580      MOVE    #13,        D0          ; No Line feedF=
00001B14  4E4F                    2581      TRAP    #15                     ; Trap (Perform action)
00001B16                          2582  
00001B16                          2583      
00001B16  103C 005E               2584      MOVE.B  #TC_REDRAW,        D0
00001B1A  4E4F                    2585      TRAP    #15
00001B1C                          2586  
00001B1C                          2587  WININPUTLOOP:
00001B1C  6100 E742               2588      BSR     BATTLEINPUT
00001B20  60FA                    2589      BRA     WININPUTLOOP
00001B22                          2590  
00001B22                          2591  
00001B22                          2592  EXIT:
00001B22                          2593      
00001B22  103C 000B               2594      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B26  323C FF00               2595      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001B2A  4E4F                    2596      TRAP    #15                     ; Trap (Perform action)
00001B2C                          2597  
00001B2C  103C 005E               2598      MOVE.B  #TC_REDRAW,        D0
00001B30  4E4F                    2599      TRAP    #15
00001B32                          2600  
00001B32  103C 0009               2601      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001B36  4E4F                    2602      TRAP    #15                     ; Trap (Perform action)
00001B38  FFFF FFFF               2603      SIMHALT
00001B3C                          2604  
00001B3C                          2605  *-----------------------------------------------------------
00001B3C                          2606  * Section       : Messages
00001B3C                          2607  * Description   : Messages to Print on Console, names should be
00001B3C                          2608  * self documenting
00001B3C                          2609  *-----------------------------------------------------------
00001B3C= 53 63 6F 72 65 20 ...   2610  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00001B45= 4B 65 79 43 6F 64 ...   2611  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
00001B50= 4A 75 6D 70 2E 2E ...   2612  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001B59                          2613  
00001B59= 49 64 6C 65 2E 2E ...   2614  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00001B62= 55 70 64 61 74 65 ...   2615  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001B6D= 44 72 61 77 2E 2E ...   2616  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001B76                          2617  
00001B76= 58 3A 00                2618  X_MSG           DC.B    'X:', 0             ; X Position Message
00001B79= 59 3A 00                2619  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001B7C= 56 3A 00                2620  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
00001B7F= 44 52 41 57 00          2621  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00001B84= 45 6E 65 6D 69 65 ...   2622  ENEMIESDEAD_MSG         DC.B    'Enemies Defeated:', 0           
00001B96= 57 61 76 65 20 65 ...   2623  ENEMYCOUNT_MSG         DC.B    'Wave enemy count:', 0           
00001BA8                          2624  
00001BA8= 45 78 69 74 69 6E ...   2625  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00001BB4= 41 4E 54 20 48 49 ...   2626  HILLLOST_MSG    DC.B    'ANT HILL HAS BEEN OVERRUN!', 0      ; Game Over Message
00001BCF= 45 4E 45 4D 59 20 ...   2627  WIN_MSG    DC.B    'ENEMY ARMY HAS BEEN DEFEATED!', 0      ; Game Over Message
00001BED= 57 41 56 45 20 43 ...   2628  HILLDEFENDED_MSG    DC.B    'WAVE COMPLETE!', 0      ; Game Over Message
00001BFC= 59 4F 55 52 20 41 ...   2629  FALLENKINGDOM_MSG    DC.B    'YOUR ANT KINGDOM HAS FALLEN', 0      ; Game Over Message
00001C18= 47 41 4D 45 20 4F ...   2630  GAMEOVER_MSG    DC.B    'GAME OVER', 0      ; Game Over Message
00001C22= 52 65 74 75 72 6E ...   2631  BACK_TO_MAP_MSG    DC.B    'Returning to map in ...', 0      ; Game Over Message
00001C3A= 50 72 65 73 73 20 ...   2632  RESTART_MSG    DC.B    'Press R to restart', 0      ; Game Over Message
00001C4D= 23 23 00                2633  TREET          DC.B     '##',0
00001C50                          2634  
00001C50= 45 6E 74 65 72 20 ...   2635  PRESSSTART      DC.B    'Enter 1 to start',0
00001C61= 41 4E 54 20 44 45 ...   2636  TITLEMSG        DC.B    'ANT DEFENDER',0
00001C6E= 48 65 61 6C 74 68 ...   2637  antHealth_MSG       DC.B    'Health : ',0        ; health message
00001C78= 41 6E 74 73 20 52 ...   2638  antsRem_MSG       DC.B    'Ants Remaining : ',0        ; health message
00001C8A= 48 69 6C 6C 20 48 ...   2639  hillHP_MSG       DC.B    'Hill Health: ',0        ; health message
00001C98= 0A                      2640  hillHP          DC.B      10
00001C99                          2641  
00001C99= 00                      2642  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
00001C9A= 00                      2643  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00001C9B= 00                      2644  DRAW_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are showing
00001C9C= 00                      2645  SPAWN_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are spawning
00001C9D                          2646  
00001C9E= 07D0                    2647  LEVEL_02        DC.W    2000
00001CA0= 2710                    2648  LEVEL_03        DC.W    10000
00001CA2                          2649  
00001CA2= 00001B58 00000FA0 ...   2650  LEVELS:         DC.L    7000,4000,2000,1000
00001CB2                          2651  
00001CB2                          2652  *-----------------------------------------------------------
00001CB2                          2653  * Section       : Screen Size
00001CB2                          2654  * Description   : Screen Width and Height
00001CB2                          2655  *-----------------------------------------------------------
00001CB2                          2656  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001CB4                          2657  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001CB6                          2658  
00001CB6                          2659  *-----------------------------------------------------------
00001CB6                          2660  * Section       : Keyboard Input
00001CB6                          2661  * Description   : Used for storing Keypresses
00001CB6                          2662  *-----------------------------------------------------------
00001CB6                          2663  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001CBA                          2664  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00001CBC                          2665  
00001CBC                          2666  *-----------------------------------------------------------
00001CBC                          2667  * Section       : Character Positions
00001CBC                          2668  * Description   : Player and Enemy Position Memory Locations
00001CBC                          2669  *-----------------------------------------------------------
00001CBC                          2670  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001CC0                          2671  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001CC4                          2672  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001CC8                          2673  
00001CC8                          2674  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001CCC                          2675  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001CD0                          2676  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001CD4                          2677  
00001CD4                          2678  ; 1, = left, 0 = right
00001CD4                          2679  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
00001CD5                          2680  
00001CD6                          2681  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001CDA                          2682  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001CDE                          2683  
00001CDE                          2684  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
00001CE2                          2685  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
00001CE6                          2686  
00001CE6                          2687  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
00001CEA                          2688  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
00001CEE                          2689  
00001CEE= 000000FF                2690  ENEMYCOLOR        DC.L        $000000FF
00001CF2= 00FF0000                2691  FLYENEMYCOLOR     DC.L        $00FF0000
00001CF6                          2692  
00001CF6                          2693  RANDOM            DS.L        01  ; Reserve Space for Random Number
00001CFA= 03                      2694  antHealth         DC.B        03  ; reserves space for antHealth
00001CFB= 05                      2695  antsRemaining     DC.B        05  ; reserves space for ants
00001CFC                          2696  
00001CFC                          2697  
00001CFC                          2698   
00001CFC= 02                      2699  POINTS            DC.B        02          ; Points added
00001CFD                          2700  
00001CFD= 00                      2701  CURRENTLYATTACKING   DC.B    00
00001CFE= 0000                    2702  ATTACK_COOLDOWN      DC.W    00
00001D00= 0000                    2703  ATTACK_TIME          DC.W    00
00001D02= 00000000                2704  ATTACK_X             DC.L    00
00001D06= 00000000                2705  ATTACK_Y             DC.L    00
00001D0A  =00000014               2706  ATTACK_HEIGHT        EQU     20
00001D0A  =00000023               2707  ATTACK_WIDTH         EQU     35 
00001D0A                          2708  
00001D0A= 00                      2709  CURRENTLYTHROWING   DC.B    00
00001D0C= 0000                    2710  THROW_COOLDOWN      DC.W    00
00001D0E= 0000                    2711  THROW_TIME          DC.W    00
00001D10= 00000000                2712  THROW_X             DC.L    00
00001D14= 00000000                2713  THROW_Y             DC.L    00
00001D18  =00000014               2714  THROW_HEIGHT        EQU     20
00001D18  =00000023               2715  THROW_WIDTH         EQU     35 
00001D18                          2716  THROW_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001D1C                          2717  THROW_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001D20                          2718  
00001D20= 13                      2719  ENEMIES_DEFEATED     DC.B    19
00001D21= 00                      2720  enemiesPassed       DC.b    00
00001D22= 00                      2721  enemiesToDefeat     DC.B    00
00001D23  =00000014               2722  waveEnemyCount      SET    20
00001D23                          2723  
00001D23= 00                      2724  ENEMY_HIT           DC.B    00
00001D24= 00                      2725  FLYENEMY_HIT        DC.B    00
00001D25                          2726  
00001D25                          2727  
00001D25                          2728  * Widths and heights of player, enemy and healthpack
00001D25                          2729  *-----------------------------------------------------------
00001D25= 0C                      2730  PLAYER_WIDTH      DC.B        12          ; Player Width
00001D26= 0C                      2731  PLAYER_HEIGHT     DC.B        12          ; Player Height
00001D27                          2732  
00001D28= 000C                    2733  ENEMY_WIDTH       DC.W        12          ; Enemy Width
00001D2A= 000C                    2734  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00001D2C                          2735  
00001D2C= 0014                    2736  FLYENEMY_WIDTH    DC.W        20 
00001D2E= 000C                    2737  FLYENEMY_HEIGHT   DC.W        12 
00001D30                          2738  
00001D30                          2739          
00001D30                          2740  *-----------------------------------------------------------
00001D30                          2741  * Section       : Sounds
00001D30                          2742  * Description   : Sound files, which are then loaded and given
00001D30                          2743  * an address in memory, they take a longtime to process and play
00001D30                          2744  * so keep the files small. Used https://voicemaker.in/ to 
00001D30                          2745  * generate and Audacity to convert MP3 to WAV
00001D30                          2746  *-----------------------------------------------------------
00001D30= 6A 75 6D 70 2E 77 ...   2747  JUMP_WAV        DC.B    'jump.wav1',0        ; Jump Sound
00001D3A= 67 61 6D 65 4F 76 ...   2748  GAMEOVER_WAV    DC.B    'gameOver.wav1',0    ; Run Sound
00001D48= 68 69 74 48 75 72 ...   2749  HITHURT_WAV     DC.B    'hitHurt.wav1',0     ; Collision Opps
00001D55= 68 69 74 2E 77 61 ...   2750  HIT_WAV         DC.B    'hit.wav1',0         ; Collision Opps
00001D5E= 70 6F 77 65 72 55 ...   2751  POWERUP_WAV     DC.B    'powerUP.wav1',0     ; Collision Opps
00001D6B= 6C 65 76 65 6C 43 ...   2752  LEVELCHANGE_WAV DC.B    'levelChange.wav1',0 ; Collision Opps
00001D7C                          2753  
00001D7C= 61 6E 74 6F 70 69 ...   2754  BATTLE_SONG_WAV DC.B    'antopia-battle.wav1',0
00001D90= 61 6E 74 6F 70 69 ...   2755  MAP_SONG_WAV    DC.B    'antopia-map.wav1',0
00001DA1                          2756  
00001DA1                          2757  
00001DA2= 0000                    2758  respawnTime         dc.W        0
00001DA4= 03                      2759  backToMapCount      dc.b        3
00001DA5                          2760  *---*
00001DA6= 3A0C                    2761  TRUNK   DC.W    $3A0C
00001DA8= 00C8                    2762  X   DC.W    200
00001DAA= 0190                    2763  Y   DC.W    400
00001DAC= 00C8                    2764  Z   DC.W    200
00001DAE= 0004                    2765  SCALER DC.W  4
00001DB0  =00000010               2766  ROWC    EQU    16
00001DB0= FFB0                    2767  WIDTH   DC.W    $FFB0
00001DB2                          2768  
00001DB2= 00000000                2769  timer           DC.L    0
00001DB6                          2770  
00001DB6                          2771  ;    END    START        ; last line of source
00001DB6                          2772  
00001DB6                          2773  
00001DB6                          2774  
00001DB6                          2775  
00001DB6                          2776  
00001DB6                          2777  
00001DB6                          2778  
00001DB6                          2779  
00001DB6                          2780  
Line 2781 WARNING: END directive missing, starting address not set

102 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ANTHEALTH           1CFA
ANTHEALTH_MSG       1C6E
ANTKILLED           16A6
ANTSREMAINING       1CFB
ANTSREM_MSG         1C78
ARC_DONE            B08
ATK_LTE_TO_ENEMY_Y_PLUS_H  145E
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  14CC
ATK_PLUS_H_LTE_TO_ATTACK_Y  147A
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  14E8
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  1494
ATTACK_COLLISION    15DA
ATTACK_COOLDOWN     1CFE
ATTACK_COOLDOWN_SUB  462
ATTACK_FLY_COLLISION  1600
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_ENMY_X  1442
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  14B0
ATTACK_TIME         1D00
ATTACK_TIME_SUB     45A
ATTACK_WIDTH        23
ATTACK_X            1D02
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  1426
ATTACK_Y            1D06
BACKTOMAPCOUNT      1DA4
BACK_TO_MAP_MSG     1C22
BATTLEINPUT         260
BATTLE_SONG_LOAD    BD6
BATTLE_SONG_WAV     1D7C
BIGENMY_H_INIT      12
BIGENMY_W_INIT      23
CHECKPAUSED         378
CHECK_ATTACK_COLLISIONS  1422
CHECK_ATTACK_COOLDOWN  44C
CHECK_ATTACK_FLY_COLLISIONS  1490
CHECK_COLLISIONS    12E0
CHECK_ENEMIES_CLEARED  1626
CHECK_FLYENEMY_COLLISIONS  1346
CHECK_HEALTH_COLLISIONS  13B4
CHECK_THROW_COLLISION  14FE
CHECK_THROW_DONE    41E
CHECK_THROW_FLY_COLLISIONS  156C
CHECK_WAVE_CLEARED  5DA
COLLISION_CHECK_DONE  163E
COMPLETE_RESTART    34A
CONTINUE            610
CURRENTLYATTACKING  1CFD
CURRENTLYTHROWING   1D0A
CURRENT_KEY         1CB6
DAMAGE_HILL         5F2
DELAY               238
DKEY                44
DRAWBATTLE          6A8
DRAWDIRT            123C
DRAWHILLHEALTH      6F4
DRAW_ATTACK         DD6
DRAW_BACKGROUND     8BE
DRAW_ENEMY          E6A
DRAW_ENTRANCE       85E
DRAW_ENTRANCE_HOLE  88E
DRAW_FLOOR          11DA
DRAW_FLYENEMY       FA8
DRAW_HEALTHPACK     1154
DRAW_HEALTHPACKS    1C9B
DRAW_HEALTHPACK_DONE  11CE
DRAW_HILL           72E
DRAW_MSG            1B6D
DRAW_PLAYER         C82
DRAW_PLYR_DATA      966
DRAW_RESPAWN        1262
DRAW_THROW          E26
ENEMIESDEAD_MSG     1B84
ENEMIESPASSED       1D21
ENEMIESTODEFEAT     1D22
ENEMIES_DEFEATED    1D20
ENEMYCOLLISION      1660
ENEMYCOLOR          1CEE
ENEMYCOUNT_MSG      1B96
ENEMY_HEIGHT        1D2A
ENEMY_HIT           1D23
ENEMY_WIDTH         1D28
ENEMY_X             1CD6
ENEMY_Y             1CDA
ENMY_H_INIT         D
ENMY_W_INIT         1B
ESCAPE              1B
EXIT                1B22
EXIT_MSG            1BA8
FALLENKINGDOM_MSG   1BFC
FLYENEMYCOLOR       1CF2
FLYENEMY_HEIGHT     1D2E
FLYENEMY_HIT        1D24
FLYENEMY_WIDTH      1D2C
FLYINGENEMY_X       1CE6
FLYINGENEMY_Y       1CEA
FLY_ENMY_H_INIT     D
FLY_ENMY_W_INIT     1E
GAME                226
GAMELOOP            226
GAMEOVER_INDEX      0
GAMEOVER_LOAD       B0C
GAMEOVER_MSG        1C18
GAMEOVER_WAV        1D3A
GAME_OVER           1830
GND_FALSE           0
GND_TRUE            1
HEALTH_COLLISION    16C8
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            1CDE
HEALTH_Y            1CE2
HILLDEFENDED_MSG    1BED
HILLHP              1C98
HILLHP_MSG          1C8A
HILLLOST_MSG        1BB4
HILL_LOST           1708
HITHURT_INDEX       2
HITHURT_LOAD        B4C
HITHURT_WAV         1D48
HIT_INDEX           5
HIT_LOAD            BA6
HIT_WAV             1D55
IDLE                B0A
IDLE_MSG            1B59
INITRUN             0
INPUTLOOP           182A
IN_ENEMY            1C99
IN_HPACK            1C9A
IS_ATTACKING        DCA
IS_PLAYER_ON_GND    A66
IS_THROWING         E1A
JMP_INDEX           1
JUMP                ABA
JUMP_DONE           AE8
JUMP_LOAD           B2E
JUMP_MSG            1B50
JUMP_WAV            1D30
KEYCODE_MSG         1B45
KKEY                4B
LAST_KEY            1CBA
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     1D6B
LEVELS              1CA2
LEVEL_02            1C9E
LEVEL_03            1CA0
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LOSSINPUTLOOP       1918
LVLCHANGE_LOAD      B88
MAP_SONG_LOAD       BC4
MAP_SONG_WAV        1D90
MOVE_ENEMY          472
MOVE_ENEMY_L2       4B8
MOVE_ENEMY_L3       4E2
MOVE_ENEMY_L4       50C
MOVE_HEALTHPACK     46A
MOVE_PLAYER_LEFT    C2E
MOVE_PLAYER_RIGHT   C58
MOVE_RESPAWNED      127C
MOVE_THROW          3F0
PERFORM_ATTACK      612
PERFORM_JUMP        AD8
PERFORM_THROW       65E
PERFORM_THROW_ARC   AFC
PLAYER_DIR          1CD4
PLAYER_HEIGHT       1D26
PLAYER_SCORE        1CC4
PLAYER_WIDTH        1D25
PLAYER_X            1CBC
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  12E4
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  1300
PLAYER_Y            1CC0
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  131C
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  1332
PLAY_GAMEOVER       B1E
PLAY_HIT            BB8
PLAY_HITHURT        B5E
PLAY_JUMP           B40
PLAY_LVLCHANGE      B9A
PLAY_POWERUP        B7C
PLAY_SONG           BE8
PLX_LTE_TO_FLYENEMY_X_PLUS_W  134A
PLX_LTE_TO_HEALTH_X_PLUS_W  13B8
PLX_PLUS_W_LTE_TO_FLYENEMY_X  1366
PLX_PLUS_W_LTE_TO_HEALTH_X  13D4
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1CCC
PLYR_H_INIT         D
PLYR_JUMP_V         FFFFFFED
PLYR_ON_GND         1CD0
PLYR_VELOCITY       1CC8
PLYR_W_INIT         1B
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  1382
PLY_LTE_TO_HEALTH_Y_PLUS_H  13F0
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  139E
PLY_PLUS_H_LTE_TO_HEALTH_Y  140C
POINTS              1CFC
POWERUP_INDEX       3
POWERUP_LOAD        B6A
POWERUP_WAV         1D5E
PRESSSTART          1C50
PROCESS_INPUT       304
RANDOM              1CF6
RESET_ENEMY_POSITION  53A
RESET_FLYENEMY_POSITION  57C
RESET_HEALTH_POSITION  5C2
RESET_THROW         42E
RESPAWNTIME         1DA2
RESTART_MSG         1C3A
RKEY                52
ROWC                10
SCALER              1DAE
SCORE_MSG           1B3C
SCREEN_H            1CB4
SCREEN_W            1CB2
SET_OFF_GROUND      AAE
SET_ON_GROUND       A86
SKEY                53
SONG_INDEX          6
SPACEBAR            20
SPAWN_HEALTHPACKS   1C9C
STILLPAUSED         384
STILL_COLLIDED      1706
STOP_HPACK_SPAWN    16FC
STOP_SONG           BF6
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
THROW_ARC           AEA
THROW_COOLDOWN      1D0C
THROW_GRAVITY       1D1C
THROW_HEIGHT        14
THROW_PLUS_W_LTE_TO_ENMY_X  151E
THROW_PLUS_W_LTE_TO_FLYENMY_X  158C
THROW_TIME          1D0E
THROW_VELOCITY      1D18
THROW_WIDTH         23
THROW_X             1D10
THROW_X_LTE_TO_ENEMY_X_PLUS_W  1502
THROW_X_LTE_TO_FLYENEMY_X_PLUS_W  1570
THROW_Y             1D14
THRW_DFLT_G         1
THRW_DFLT_V         0
THRW_H_INIT         F
THRW_JUMP_V         FFFFFFF0
THRW_W_INIT         F
TIMER               1DB2
TITLEMSG            1C61
TREET               1C4D
TREE_LEAVES_X       938
TREE_LEAVES_Y       92C
TREE_LOOP           8F4
TRUNK               1DA6
TRW_LTE_TO_ENEMY_Y_PLUS_H  153A
TRW_LTE_TO_FLYENEMY_Y_PLUS_H  15A8
TRW_PLUS_H_LTE_TO_FLYENEMY_Y  15C4
TRW_PLUS_H_LTE_TO_THROW_Y  1556
UPDATE              38C
UPDATE_MSG          1B62
UPDATE_PLAYER       C04
VARMSG              1B7F
V_MSG               1B7C
WAVEENEMYCOUNT      14
WAVE_DEFEATED       191E
WIDTH               1DB0
WININPUTLOOP        1B1C
WIN_MSG             1BCF
WIN_SCREEN          1A40
X                   1DA8
X_MSG               1B76
Y                   1DAA
Y_MSG               1B79
Z                   1DAC
_00000000           28A
_00000001           29C
_00000002           2AE
_00000003           2C0
_00000004           2E4
_00000005           376
_00000006           4AA
_00000007           4D2
_00000008           4F6
_00000009           520
_0000000A           56E
_0000000B           5B4
_0000000C           61E
_0000000D           66A
_0000000E           AC6
_0000000F           C3A
_00000010           C64
