00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 27/02/2025 18:58:26

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Oliwier Jakubiec
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *-----------------------------------------------------------
00000000                            10  * Section       : Trap Codes
00000000                            11  * Description   : Trap Codes used throughout StarterKit
00000000                            12  *-----------------------------------------------------------
00000000                            13  * Trap CODES
00000000  =00000021                 14  TC_SCREEN   EQU         33          ; Screen size information trap code
00000000  =00000000                 15  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00000000                            16                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00000000  =00000013                 17  TC_KEYCODE  EQU         19          ; Check for pressed keys
00000000  =0000005C                 18  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00000000  =0000000B                 19  TC_CURSR_P  EQU         11          ; Trap code cursor position
00000000                            20  
00000000  =0000005E                 21  TC_REDRAW   EQU         94          ; Redraw Screen
00000000  =00000009                 22  TC_EXIT     EQU         09          ; Exit Trapcode
00000000                            23  
00000000                            24  *-----------------------------------------------------------
00000000                            25  * Section       : Charater Setup
00000000                            26  * Description   : Size of Player and Enemy and properties
00000000                            27  * of these characters e.g Starting Positions and Sizes
00000000                            28  *-----------------------------------------------------------
00000000  =0000001B                 29  PLYR_W_INIT EQU         27          ; Players initial Width
00000000  =0000000D                 30  PLYR_H_INIT EQU         13          ; Players initial Height
00000000                            31  
00000000  =00000000                 32  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFED                 33  PLYR_JUMP_V EQU         -19          ; Player Jump Velocity
00000000  =00000001                 34  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00000000                            35  
00000000  =0000000F                 36  THRW_W_INIT EQU         15          ; Players initial Width
00000000  =0000000F                 37  THRW_H_INIT EQU         15          ; Players initial Height
00000000                            38  
00000000  =00000000                 39  THRW_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFF0                 40  THRW_JUMP_V EQU         -16          ; Player Jump Velocity
00000000  =00000001                 41  THRW_DFLT_G EQU         01          ; Player Default Gravity
00000000                            42  
00000000  =00000001                 43  GND_TRUE    EQU         01          ; Player on Ground True
00000000  =00000000                 44  GND_FALSE   EQU         00          ; Player on Ground False
00000000                            45  
00000000  =00000000                 46  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00000000  =00000001                 47  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00000000  =00000002                 48  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00000000  =00000003                 49  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00000000  =00000004                 50  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00000000  =00000005                 51  HIT_INDEX  EQU              05  
00000000                            52  
00000000  =00000006                 53  SONG_INDEX equ          06
00000000                            54  
00000000  =0000001B                 55  ENMY_W_INIT EQU         27          ; Enemy initial Width
00000000  =0000000D                 56  ENMY_H_INIT EQU         13          ; Enemy initial Height
00000000                            57  
00000000  =0000001E                 58  FLY_ENMY_W_INIT  EQU         30          ; Enemy initial Width
00000000  =0000000D                 59  FLY_ENMY_H_INIT  EQU         13          ; Enemy initial Height
00000000                            60  
00000000  =0000000C                 61  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00000000  =0000000C                 62  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00000000                            63  
00000000  =00000002                 64  LOOKRIGHT   EQU         02          ; Look Right
00000000  =00000001                 65  LOOKLEFT    EQU         01          ; Look Left
00000000                            66  *-----------------------------------------------------------
00000000                            67  * Section       : Graphic Colors
00000000                            68  * Description   : Screen Pixel Color
00000000                            69  *-----------------------------------------------------------
00000000  =00FFFFFF                 70  WHITE           EQU     $00FFFFFF
00000000  =00000000                 71  BLACK           EQU     $00000000
00000000  =000000FF                 72  RED             EQU     $000000FF
00000000  =00FF0000                 73  BLUE            EQU     $00FF0000
00000000  =00566D19                 74  GREEN           EQU     $00566D19
00000000  =0044FF44                 75  LIFEGREEN       EQU     $0044FF44
00000000  =0019506D                 76  BROWN           EQU     $0019506D         ; Brown   
00000000  =00004FAD                 77  DIRT           EQU      $00004FAD         ; Brown   
00000000  =00FFE2B0                 78  SKY             EQU     $00FFE2B0         ; Sky Blue
00000000                            79  ;ad4f00
00000000                            80  *-----------------------------------------------------------
00000000                            81  * Section       : Keyboard Keys
00000000                            82  * Description   : Spacebar and Escape or two functioning keys
00000000                            83  * Spacebar to JUMP and Escape to Exit Game
00000000                            84  *-----------------------------------------------------------
00000000  =00000020                 85  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00000000  =0000001B                 86  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00000000  =00000052                 87  Rkey           EQU         $52         ; R ASCII Keycode
00000000  =00000041                 88  Akey           EQU         $41         ; A ASCII Keycode
00000000  =00000053                 89  Skey           EQU         $53         ; S ASCII Keycode
00000000  =00000044                 90  Dkey           EQU         $44         ; D ASCII Keycode
00000000  =0000004C                 91  Lkey           EQU         $4C         ; L ASCII Keycode
00000000  =0000004B                 92  Kkey           EQU         $4B         ; K ASCII Keycode
00000000                            93  
00000000                            94  *-----------------------------------------------------------
00000000                            95  * Subroutine    : Initialise
00000000                            96  * Description   : Initialise game data into memory such as 
00000000                            97  * sounds and screen size
00000000                            98  *-----------------------------------------------------------
00000000                            99  INITRUN:
Line 100 ERROR: Undefined symbol
00000000  33FC 0002 005455B8       100      move.w #2, lvlType
00000008                           101      ; Initialise Sounds
00000008  6100 0A48                102      BSR     JUMP_LOAD               ; Load Jump Sound into Memory
0000000C  6100 0A22                103      BSR     GAMEOVER_LOAD                ; Load Run Sound into Memory
00000010  6100 0A5E                104      BSR     HITHURT_LOAD               ; Load Opps (Collision) Sound into Memory
00000014  6100 0A78                105      BSR     POWERUP_LOAD               ; Load Opps (Collision) Sound into Memory
00000018  6100 0A92                106      BSR     LVLCHANGE_LOAD               ; Load Opps (Collision) Sound into Memory
0000001C  6100 0AAC                107      BSR     HIT_LOAD
00000020                           108  
00000020  6100 0AC6                109      BSR     MAP_SONG_LOAD
00000024  6100 0AD4                110      BSR     BATTLE_SONG_LOAD
00000028                           111  
00000028  6100 0AE2                112      bsr PLAY_SONG
0000002C                           113  
0000002C                           114      ; Screen Size
0000002C  103C 0021                115      MOVE.B  #TC_SCREEN, D0          ; access screen information
00000030  7200                     116      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
00000032  4E4F                     117      TRAP    #15                     ; interpret D0 and D1 for screen size
00000034  33C1 00001AC0            118      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
0000003A  4841                     119      SWAP    D1                      ; Swap top and bottom word to retrive screen size
0000003C  33C1 00001ABE            120      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
00000042                           121  
00000042                           122      ; Place the Player at the center of the screen
00000042  B381                     123      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
00000044  3239 00001ABE            124      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000004A  82FC 0002                125      DIVU    #02,        D1          ; divide by 2 for center on X Axis
0000004E  23C1 00001AC8            126      MOVE.L  D1,         PLAYER_X    ; Players X Position
00000054                           127  
00000054  B381                     128      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000056  3239 00001AC0            129      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000005C  82FC 0002                130      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000060  23C1 00001ACC            131      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000066                           132  
00000066                           133      ; Set the player starting width and height
00000066  13FC 001B 00001B31       134      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
0000006E  13FC 000D 00001B32       135      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
00000076                           136  
00000076  B381                     137      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000078  3239 00001AC0            138      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000007E  82FC 0002                139      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000082  23C1 00001ACC            140      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000088                           141  
00000088                           142      ; Initialise Player Score
00000088  B381                     143      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000008A  7200                     144      MOVE.L  #00,        D1          ; Init Score
0000008C  23C1 00001AD0            145      MOVE.L  D1,         PLAYER_SCORE
00000092                           146  
00000092                           147      ; Initialise Player Velocity
00000092  B381                     148      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000094  123C 0000                149      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
00000098  23C1 00001AD4            150      MOVE.L  D1,         PLYR_VELOCITY
0000009E                           151  
0000009E                           152      ; Initialise Player Gravity
0000009E  B381                     153      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000A0  7201                     154      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
000000A2  23C1 00001AD8            155      MOVE.L  D1,         PLYR_GRAVITY
000000A8                           156      
000000A8                           157      ; Initialise Player Velocity
000000A8  B381                     158      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000AA  123C 0000                159      MOVE.B  #THRW_DFLT_V,D1         ; Init Player Velocity
000000AE  23C1 00001B24            160      MOVE.L  D1,         THROW_VELOCITY
000000B4                           161  
000000B4                           162      ; Initialise Player Gravity
000000B4  B381                     163      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000B6  7201                     164      MOVE.L  #THRW_DFLT_G,D1         ; Init Player Gravity
000000B8  23C1 00001B28            165      MOVE.L  D1,         THROW_GRAVITY
000000BE                           166  
000000BE                           167      ; Initialize Player on Ground
000000BE  23FC 00000001 00001ADC   168      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
000000C8                           169  
000000C8                           170      ; Initial Position for Enemy
000000C8  B381                     171      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000CA  3239 00001ABE            172      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000000D0  23C1 00001AE2            173      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000000D6                           174  
000000D6  B381                     175      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000D8  3239 00001AC0            176      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000000DE  82FC 0002                177      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000000E2  23C1 00001AE6            178      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
000000E8                           179  
000000E8                           180      ; Initialise the starting enemy width and height
000000E8  33FC 000C 00001B34       181      MOVE.W  #12,        ENEMY_WIDTH ; Enemy Width
000000F0  33FC 000C 00001B36       182      MOVE.W  #12,        ENEMY_HEIGHT ; Enemy Height
000000F8                           183  
000000F8                           184      ; Initial Position for Flying Enemy
000000F8  B381                     185      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000FA  3239 00001ABE            186      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000100  23C1 00001AF2            187      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
00000106                           188  
00000106  B381                     189      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000108  3239 00001AC0            190      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000010E  82FC 0002                191      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000112  0441 003C                192      SUB.W   #60,        D1
00000116  23C1 00001AF6            193      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
0000011C                           194      
0000011C                           195      ; Initial Flying enemy width and height
0000011C  33FC 0014 00001B38       196      MOVE.W  #20,        FLYENEMY_WIDTH ; Enemy Width
00000124  33FC 000C 00001B3A       197      MOVE.W  #12,        FLYENEMY_HEIGHT ; Enemy Height
0000012C                           198      ; Initial Position for Health pack
0000012C  B381                     199      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000012E  3239 00001ABE            200      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000134  0481 FFFFFFFF            201      SUB.L   #-1,        D1
0000013A  23C1 00001AEA            202      MOVE.L  D1,         HEALTH_X     ; Enemy X Position
00000140                           203  
00000140  B381                     204      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000142  3239 00001AC0            205      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000148  82FC 0002                206      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000014C  23C1 00001AEE            207      MOVE.L  D1,         HEALTH_Y     ; Enemy Y Position
00000152                           208  
00000152  13FC 0064 00001AA5       209      MOVE.B     #100,    hillHP
0000015A                           210  
0000015A  45F9 00001AAE            211      LEA    LEVELS,      A2
00000160  13FC 0003 00001B06       212      MOVE.B  #03,        antHealth
00000168  13FC 0002 00001B08       213      MOVE.B  #02,        POINTS
00000170  13FC 0000 00001AA8       214      MOVE.B  #00,        DRAW_HEALTHPACKS
00000178  13FC 0000 00001AA9       215      MOVE.B  #00,        SPAWN_HEALTHPACKS
00000180  33FC 0140 00001BAE       216      MOVE.W  #320,       Z
00000188  33FC 0004 00001BB0       217      MOVE.W  #4,         SCALER   
00000190  33FC FFB0 00001BB2       218      MOVE.W  #-80,       WIDTH     
00000198                           219  
00000198  23FC 00000000 00001B0E   220      MOVE.L  #0,         ATTACK_X
000001A2  23FC 00000000 00001B12   221      MOVE.L  #0,         ATTACK_Y
000001AC  23FC FFFFFF9C 00001B1C   222      MOVE.L  #-100,        THROW_X
000001B6  23FC FFFFFF9C 00001B20   223      MOVE.L  #-100,        THROW_Y
000001C0                           224      
000001C0  13FC 0000 00001B09       225      MOVE.B  #00,        CURRENTLYATTACKING
000001C8  13FC 0000 00001B16       226      MOVE.B  #00,        CURRENTLYTHROWING
000001D0                           227      
000001D0  13FC 0000 00001B2F       228      MOVE.B  #00,        ENEMY_HIT
000001D8  13FC 0000 00001B30       229      MOVE.B  #00,        FLYENEMY_HIT
000001E0                           230  
000001E0  0639 0014 00001B2E       231      ADD.B   #20,        enemiesToDefeat
000001E8  13FC 0000 00001B2C       232      MOVE.B  #0,         ENEMIES_DEFEATED
000001F0                           233  
000001F0  4281                     234      CLR.L   D1
000001F2                           235   
000001F2                           236  
000001F2                           237      ; Enable the screen back buffer(see easy 68k help)
000001F2  103C 005C                238      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
000001F6  123C 0011                239      MOVE.B  #17,        D1          ; Combine Tasks
000001FA  4E4F                     240      TRAP    #15                     ; Trap (Perform action)
000001FC                           241          
000001FC                           242      ; Clear the screen (see easy 68k help)
000001FC  103C 000B                243      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000200  323C FF00                244      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00000204  4E4F                     245      TRAP    #15                     ; Trap (Perform action)
00000206                           246  
00000206  6000 0002                247      bra gameloop
0000020A                           248  
0000020A                           249  *-----------------------------------------------------------
0000020A                           250  * Subroutine    : Game
0000020A                           251  * Description   : Game including main GameLoop. GameLoop is like
0000020A                           252  * a while loop in that it runs forever until interupted
0000020A                           253  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
0000020A                           254  *-----------------------------------------------------------
0000020A                           255  GAME:
0000020A                           256  
0000020A                           257      
0000020A                           258  GAMELOOP:
0000020A                           259      ; Main Gameloop
0000020A  23FC 00000BB8 00001BB4   260      MOVE.L      #3000,timer
00000214                           261  DELAY:     
00000214  53B9 00001BB4            262      SUBI.L      #1,timer            ; decrement timer by 1 to simulate a delay
0000021A  4AB9 00001BB4            263      TST.L       timer            ; compare 0 to the value of timer
00000220  66F2                     264      BNE         DELAY               ; branch back to DELAY if the previous compare was not equal
00000222                           265  
00000222  6100 0018                266      BSR     BATTLEINPUT                   ; Check Keyboard Input
00000226  6100 0172                267      BSR     checkPaused
0000022A  6100 0182                268      BSR     UPDATE                  ; Update positions and points
0000022E  6100 075A                269      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
00000232  6100 0F42                270      BSR     CHECK_COLLISIONS        ; Check for Collisions
00000236  6100 04B0                271      BSR     DRAWBATTLE                  ; Draw the Scene
0000023A                           272                  ; Loop back to GameLoop
0000023A  60CE                     273      BRA     GAMELOOP    
0000023C                           274      
0000023C                           275  *-----------------------------------------------------------
0000023C                           276  * Subroutine    : Input
0000023C                           277  * Description   : Process Keyboard Input
0000023C                           278  *-----------------------------------------------------------
0000023C                           279  BATTLEINPUT:
0000023C  2039 00001AC2            280      move.l CURRENT_KEY, D0
Line 281 ERROR: Undefined symbol
00000242  13C0 005455B8            281      move.b D0,lastkey 
00000248                           282  
00000248  103C 0013                283      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
0000024C                           284      ;MOVE.L  #$41444C20, D1          
Line 285 ERROR: Undefined symbol
0000024C  223C 004DBD16            285      MOVE.L  #runActionKeys, D1          ; Check for A, D, L, and Spacebar
00000252  4E4F                     286      TRAP    #15                         ; Trap (Perform action)
00000254  23C1 00001AC2            287      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
0000025A                           288  
0000025A  0801 0018                289      BTST.L  #24,D1
0000025E                           290      IF <NE> THEN
00000262  6100 024C                291          BSR    MOVE_PLAYER_LEFT
00000266                           292      ENDI
00000266                           293  
00000266  2239 00001AC2            294      MOVE.L  CURRENT_KEY, D1
0000026C  0801 0010                295      BTST.L  #16,D1
00000270                           296      IF <NE> THEN
00000274  6100 0264                297          BSR    MOVE_PLAYER_RIGHT
00000278                           298      ENDI
00000278                           299  
00000278  2239 00001AC2            300      MOVE.L  CURRENT_KEY, D1
0000027E  0801 0008                301      BTST.L  #8,D1
00000282                           302      IF <NE> THEN
00000286  6100 03CA                303          BSR    PERFORM_ATTACK
0000028A                           304      ENDI
0000028A                           305  
0000028A  2239 00001AC2            306      MOVE.L  CURRENT_KEY, D1
00000290  0801 0000                307      BTST.L  #0,D1
00000294                           308      IF <NE> THEN
00000298  6100 0744                309          BSR    JUMP
0000029C                           310      ENDI
0000029C                           311  
0000029C  103C 0013                312      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000002A0  223C 00001B4B            313      MOVE.L  #$1B4B, D1                 ; check K and escape
000002A6  4E4F                     314      TRAP    #15                     ; Trap (Perform action)
000002A8  23C1 00001AC2            315      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
000002AE                           316  
000002AE  2239 00001AC2            317      MOVE.L  CURRENT_KEY, D1
000002B4  0801 0000                318      BTST.L  #0,D1
000002B8                           319      IF <NE> THEN
000002BC  6100 03E0                320          BSR    PERFORM_THROW
000002C0                           321      ENDI
000002C0                           322  
000002C0                           323  
000002C0                           324  
000002C0                           325      ; Process Input
000002C0  4281                     326      CLR.L   D1                      ; Clear Data Register
000002C2  4282                     327      CLR.L   D2
000002C4  103C 0013                328      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
000002C8  4E4F                     329      TRAP    #15                     ; Trap (Perform action)
000002CA  1401                     330      MOVE.B  D1,         D2          ; Move last key D1 to D2
000002CC  B43C 0000                331      CMP.B   #00,        D2          ; Key is pressed
000002D0  6700 000E                332      BEQ     PROCESS_INPUT           ; Process Key
000002D4  4E4F                     333      TRAP    #15                     ; Trap for Last Key
000002D6                           334      ; Check if key still pressed
000002D6  B23C 00FF                335      CMP.B   #$FF,       D1          ; Is it still pressed
000002DA  6700 0004                336      BEQ     PROCESS_INPUT           ; Process Last Key
000002DE  4E75                     337      RTS                             ; Return to subroutine
000002E0                           338  *-----------------------------------------------------------
000002E0                           339  * Subroutine    : Process Input
000002E0                           340  * Description   : Branch based on keys pressed
000002E0                           341  *-----------------------------------------------------------
000002E0                           342  PROCESS_INPUT:
000002E0  23C2 00001AC2            343      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
000002E6                           344  
000002E6                           345  ; pause
Line 346 ERROR: Undefined symbol
000002E6  13C2 005455B8            346      move.b  d2,         currentKey
Line 347 ERROR: Undefined symbol
000002EC  0C39 0016 005455CC       347      CMP.b   #escapekey,    currentKey ; Is Current Key Escape
Line 348 ERROR: Undefined symbol
000002F4  6700 BA20                348      BEQ     escapePressed
000002F8                           349  
Line 350 ERROR: Undefined symbol
000002F8  4A39 004DBD16            350      tst.b isPaused
Line 351 ERROR: Undefined symbol
000002FE  6600 BA16                351      bne pausedInput
00000302                           352  
Line 353 ERROR: Undefined symbol
00000302  0C79 0003 005455B8       353      CMP.W   #3,lvlIndex
0000030A  6700 0060                354      BEQ     COMPLETE_RESTART
0000030E                           355  
0000030E  0C39 0000 00001AA5       356      CMP.B   #0,hillHP
00000316  6F00 002E                357      BLE     PROCESS_RESTART
0000031A                           358  
0000031A  1239 00001B2E            359      MOVE.B  enemiesToDefeat,D1
00000320  B239 00001B2C            360      CMP.B   ENEMIES_DEFEATED,D1
00000326  6F00 001E                361      BLE     PROCESS_RESTART
0000032A                           362      
0000032A  1239 00001B2E            363      MOVE.B  enemiesToDefeat,D1
00000330  B239 00001B2D            364      CMP.B   enemiesPassed,D1
00000336  6F00 000E                365      BLE     PROCESS_RESTART
0000033A                           366  
0000033A  4A39 00001B07            367      TST.B   antsRemaining
00000340  6F00 002A                368      BLE     COMPLETE_RESTART
00000344                           369  
00000344  4E75                     370      RTS                             ; Return to subroutine
00000346                           371  
00000346                           372  PROCESS_RESTART:
00000346  0CB9 00000052 00001AC2   373      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
00000350                           374      IF <EQ> THEN
00000354                           375          
Line 376 ERROR: Undefined symbol
00000354  223C 004DBD16            376          MOVE.L    #color5,D1
0000035A  243C 00015F90            377          MOVE.L  #00090000,D2
Line 378 ERROR: Undefined symbol
00000360  103C 0016                378          MOVE.B  #tcFont,D0
00000364  4E4F                     379          TRAP    #15
00000366                           380          
Line 381 ERROR: Undefined symbol
00000366  6000 B9AE                381          BRA     mapNotFirstInit
0000036A                           382      ENDI
0000036A                           383  
0000036A  4E75                     384      RTS                             ; Return to subroutine
0000036C                           385  
0000036C                           386  COMPLETE_RESTART:
0000036C  0CB9 00000052 00001AC2   387      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
00000376                           388      IF <EQ> THEN
Line 389 ERROR: Undefined symbol
0000037A  33FC 0001 005455B8       389          move.w #1, lvlType
00000382                           390  
Line 391 ERROR: Undefined symbol
00000382  223C 004DBD16            391          MOVE.L    #color5,D1
00000388  243C 00015F90            392          MOVE.L  #00090000,D2
Line 393 ERROR: Undefined symbol
0000038E  103C 0016                393          MOVE.B  #tcFont,D0
00000392  4E4F                     394          TRAP    #15
00000394                           395          
Line 396 ERROR: Undefined symbol
00000394  6000 B980                396          BRA     nextInit
00000398                           397      ENDI
00000398                           398  
00000398  4E75                     399      RTS                             ; Return to subroutine
0000039A                           400  *----------
0000039A                           401  checkPaused:
Line 402 ERROR: Undefined symbol
0000039A  4A39 004DBD16            402      TST.B  isPaused
000003A0  6600 0004                403      BNE    stillPaused
000003A4  4E75                     404      RTS
000003A6                           405  
000003A6                           406  stillPaused:
000003A6  6100 0340                407      BSR    DRAWBATTLE
000003AA  6000 FE5E                408      BRA    GAMELOOP
000003AE                           409  *-----------------------------------------------------------
000003AE                           410  * Subroutine    : Update
000003AE                           411  * Description   : Main update loop update Player and Enemies
000003AE                           412  *-----------------------------------------------------------
000003AE                           413  UPDATE:
000003AE                           414      ; Update the Players Positon based on Velocity and Gravity
000003AE  4281                     415      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000003B0  2239 00001AD4            416      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
000003B6  2439 00001AD8            417      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
000003BC  D282                     418      ADD.L   D2,         D1          ; Add Gravity to Velocity
000003BE  23C1 00001AD4            419      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
000003C4  D2B9 00001ACC            420      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
000003CA  23C1 00001ACC            421      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
000003D0  23C1 00001B12            422      MOVE.L  D1,         ATTACK_Y 
000003D6                           423  
000003D6  6100 005E                424      BSR     MOVE_THROW
000003DA                           425  
000003DA                           426      ; Move the Enemy
000003DA  4281                     427      CLR.L   D1                      ; Clear the contents of D0
000003DC  2239 00001AE2            428      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
000003E2  B2BC 00000000            429      CMP.L   #00,        D1
000003E8  6F00 019A                430      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
000003EC  6100 011E                431      BSR     MOVE_ENEMY              ; Move the Enemy
000003F0                           432  
000003F0                           433      ; Move flying enemy
000003F0  4281                     434      CLR.L   D1                      ; Clear the contents of D0
000003F2  2239 00001AF2            435      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
000003F8  B2BC 00000000            436      CMP.L   #00,        D1
000003FE  6F00 01C6                437      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
00000402                           438  
00000402  0CB9 00000000 00001AEA   439      CMP.L   #00,        HEALTH_X
0000040C  6F00 01FE                440      BLE     RESET_HEALTH_POSITION
00000410  6100 00F2                441      BSR     MOVE_HEALTHPACK
00000414                           442  
00000414                           443    
00000414  6100 007C                444      BSR     CHECK_ATTACK_COOLDOWN
00000418                           445  
00000418  4A79 00001B0C            446      TST.W   ATTACK_TIME
0000041E  6600 0080                447      BNE     ATTACK_TIME_SUB
00000422  13FC 0000 00001B09       448      MOVE.B  #00,        CURRENTLYATTACKING
0000042A  23FC 000001E0 00001B12   449      MOVE.L  #480,        ATTACK_Y
00000434                           450  
00000434  4E75                     451      RTS                             ; Return to subroutine  
00000436                           452  
00000436                           453  MOVE_THROW:
00000436                           454         ; Update the Players Positon based on Velocity and Gravity
00000436  B381                     455      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000438  2239 00001B24            456      MOVE.L  THROW_VELOCITY, D1       ; Fetch Player Velocity
0000043E  2439 00001B28            457      MOVE.L  THROW_GRAVITY, D2        ; Fetch Player Gravity
00000444  D282                     458      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000446  23C1 00001B24            459      MOVE.L  D1,         THROW_VELOCITY ; Update Player Velocity
0000044C  D2B9 00001B20            460      ADD.L   THROW_Y,   D1          ; Add Velocity to Player
00000452  23C1 00001B20            461      MOVE.L  D1,         THROW_Y    ; Update Players Y Position
00000458                           462  
00000458  58B9 00001B1C            463      ADDI.L   #4,        THROW_X
0000045E  6100 0004                464      BSR     CHECK_THROW_DONE
00000462                           465      
00000462  4E75                     466      RTS
00000464                           467  
00000464                           468  CHECK_THROW_DONE:
00000464  0CB9 0000015E 00001B20   469      CMP.L    #350, THROW_Y
0000046E  6E00 0004                470      BGT      RESET_THROW
00000472  4E75                     471      RTS
00000474                           472  
00000474                           473  RESET_THROW:
00000474  13FC 0000 00001B16       474      MOVE.B   #00, CURRENTLYTHROWING
0000047C  23FC FFFFFF9C 00001B1C   475      MOVE.L   #-100, THROW_X
00000486  23FC FFFFFF9C 00001B20   476      MOVE.L   #-100, THROW_Y
00000490  4E75                     477      RTS
00000492                           478  
00000492                           479  CHECK_ATTACK_COOLDOWN:
00000492  0C79 0000 00001B0A       480      CMP.W   #0, ATTACK_COOLDOWN
0000049A  6E00 000C                481      BGT     ATTACK_COOLDOWN_SUB
0000049E  4E75                     482      RTS
000004A0                           483  
000004A0                           484  ATTACK_TIME_SUB:
000004A0  5579 00001B0C            485      SUB.W   #02,        ATTACK_TIME
000004A6  4E75                     486      RTS   
000004A8                           487  ATTACK_COOLDOWN_SUB:
000004A8  5579 00001B0A            488      SUB.W   #02,        ATTACK_COOLDOWN
000004AE  4E75                     489      RTS                            
000004B0                           490  
000004B0                           491  MOVE_PLAYER_LEFT:
Line 492 ERROR: Undefined symbol
000004B0  4A39 004DBD16            492      TST.B  isPaused
000004B6                           493      IF <NE> THEN
000004BA  4E75                     494          RTS
000004BC                           495      ENDI
000004BC                           496  
000004BC  13FC 0001 00001AE0       497      MOVE.B  #LOOKLEFT,        PLAYER_DIR
000004C4  2239 00001AC8            498      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
000004CA  5581                     499      SUB.L   #02,        D1          ; Move Player Left
000004CC  23C1 00001AC8            500      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
000004D2  55B9 00001B0E            501      SUB.L   #02,        ATTACK_X
000004D8  4E75                     502      RTS                             ; Return to subroutine    
000004DA                           503  
000004DA                           504  MOVE_PLAYER_RIGHT:
Line 505 ERROR: Undefined symbol
000004DA  4A39 004DBD16            505      TST.B  isPaused
000004E0                           506      IF <NE> THEN
000004E4  4E75                     507          RTS
000004E6                           508      ENDI
000004E6  13FC 0002 00001AE0       509      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
000004EE  2239 00001AC8            510      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
000004F4  5481                     511      ADD.L   #02,        D1          ; Move Player Right
000004F6  23C1 00001AC8            512      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
000004FC  54B9 00001B0E            513      ADD.L   #02,        ATTACK_X
00000502  4E75                     514      RTS                             ; Return to subroutine
00000504                           515  
00000504                           516  MOVE_HEALTHPACK:
00000504  55B9 00001AEA            517      SUB.L   #02,        HEALTH_X
0000050A  4E75                     518      RTS
0000050C                           519  
0000050C                           520  *-----------------------------------------------------------
0000050C                           521  * Subroutine    : Move Enemy
0000050C                           522  * Description   : Move Enemy Right to Left
0000050C                           523  *-----------------------------------------------------------
0000050C                           524  MOVE_ENEMY:
0000050C  45F9 00001AAE            525      LEA     LEVELS,      A2
00000512  2A39 00001AD0            526      MOVE.L  PLAYER_SCORE,   D5
00000518  2C1A                     527      MOVE.L  (A2)+,       D6
0000051A  BA86                     528      CMP.L   D6,   D5
0000051C  6E00 004C                529      BGT     MOVE_ENEMY_L4
00000520  2C1A                     530      MOVE.L  (A2)+,       D6
00000522  BA86                     531      CMP.L   D6,   D5
00000524  6E00 002E                532      BGT     MOVE_ENEMY_L3
00000528  2C1A                     533      MOVE.L  (A2)+,       D6
0000052A  BA86                     534      CMP.L   D6,   D5
0000052C  6E00 0010                535      BGT     MOVE_ENEMY_L2
00000530  57B9 00001AF2            536      SUB.L   #03,        FLYINGENEMY_X
00000536  55B9 00001AE2            537      SUB.L   #02,        ENEMY_X     ; Move enemy by X Value
0000053C  4E75                     538      RTS
0000053E                           539  
0000053E                           540  MOVE_ENEMY_L2:
0000053E  57B9 00001AF2            541      SUB.L   #03,        FLYINGENEMY_X
00000544  59B9 00001AE2            542      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
0000054A  13FC 0003 00001B08       543      MOVE.B  #03,        POINTS
00000552  4E75                     544      RTS
00000554                           545  
00000554                           546  MOVE_ENEMY_L3:
00000554  5FB9 00001AF2            547      SUB.L   #07,        FLYINGENEMY_X
0000055A  5BB9 00001AE2            548      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
00000560  13FC 0005 00001B08       549      MOVE.B  #05,        POINTS
00000568  4E75                     550      RTS
0000056A                           551  
0000056A                           552  MOVE_ENEMY_L4:
0000056A  04B9 0000000A 00001AF2   553      SUB.L   #10,        FLYINGENEMY_X
00000574  51B9 00001AE2            554      SUB.L   #08,        ENEMY_X     ; Move enemy by X Value
0000057A  13FC 000A 00001B08       555      MOVE.B  #10,        POINTS
00000582  4E75                     556      RTS
00000584                           557  *-----------------------------------------------------------
00000584                           558  * Subroutine    : Reset Enemy
00000584                           559  * Description   : Reset Enemy if to passes 0 to Right of Screen
00000584                           560  *-----------------------------------------------------------
00000584                           561  RESET_ENEMY_POSITION:
00000584  4281                     562      CLR.L   D1       
00000586  3239 00001AC0            563      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000058C  82FC 0002                564      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000590  23C1 00001AE6            565      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
00000596                           566  
00000596  B381                     567      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
00000598  3239 00001ABE            568      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000059E  0681 0000001B            569      ADD.L   #ENMY_W_INIT,D1
000005A4  23C1 00001AE2            570      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000005AA                           571  
000005AA  4A39 00001B2F            572      TST.B     ENEMY_HIT
000005B0                           573      IF <EQ> THEN        ; enemy has not been hit
000005B4  6100 0086                574          BSR   damage_hill
000005B8                           575      ENDI
000005B8  13FC 0000 00001B2F       576      MOVE.B  #0,         ENEMY_HIT
000005C0  6100 0062                577      BSR     CHECK_WAVE_CLEARED
000005C4                           578  
000005C4  4E75                     579      RTS
000005C6                           580  
000005C6                           581  RESET_FLYENEMY_POSITION:
000005C6  B381                     582      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000005C8  3239 00001AC0            583      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000005CE  82FC 0002                584      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000005D2  0441 003C                585      SUB.W   #60,        D1
000005D6  23C1 00001AF6            586      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
000005DC                           587  
000005DC  4281                     588      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000005DE  3239 00001ABE            589      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000005E4  0681 0000001E            590      ADD.L   #FLY_ENMY_W_INIT,D1
000005EA  23C1 00001AF2            591      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
000005F0                           592  
000005F0  4A39 00001B30            593      TST.B     FLYENEMY_HIT
000005F6                           594      IF <EQ> THEN        ; enemy has not been hit
000005FA  6100 0040                595          BSR   damage_hill
000005FE                           596      ENDI
000005FE  13FC 0000 00001B30       597      MOVE.B  #0,         FLYENEMY_HIT
00000606  6100 001C                598      BSR     CHECK_WAVE_CLEARED
0000060A                           599  
0000060A  4E75                     600      RTS
0000060C                           601      
0000060C                           602  RESET_HEALTH_POSITION:
0000060C  13FC 0001 00001AA8       603      MOVE.B  #01,        DRAW_HEALTHPACKS
00000614  4281                     604      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000616  3239 00001ABE            605      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000061C  23C1 00001AEA            606      MOVE.L  D1,         HEALTH_X     ; healthpack X Position
00000622  4E75                     607      RTS
00000624                           608  
00000624                           609  CHECK_WAVE_CLEARED:
00000624  5239 00001B2D            610      ADDI.B  #1,         enemiesPassed
0000062A  1239 00001B2D            611      MOVE.B  enemiesPassed,D1
00000630  B239 00001B2E            612      CMP.B   enemiesToDefeat,D1
00000636  6700 112E                613      BEQ     WAVE_DEFEATED
0000063A  4E75                     614      RTS
0000063C                           615  
0000063C                           616  damage_hill:
0000063C  5B39 00001AA5            617      subq.b  #5,hillHP
00000642  0C39 0000 00001AA5       618      CMP.b   #0,hillHP
0000064A  6F00 0F52                619      BLE     HILL_LOST
0000064E  4E75                     620      RTS
00000650                           621  
00000650                           622  CONTINUE:
00000650  4E75                     623      RTS
00000652                           624  
00000652                           625  PERFORM_ATTACK:
Line 626 ERROR: Undefined symbol
00000652  4A39 004DBD16            626      TST.B  isPaused
00000658                           627      IF <NE> THEN
0000065C  4E75                     628          RTS
0000065E                           629      ENDI
0000065E  4A79 00001B0A            630      TST.W    ATTACK_COOLDOWN
00000664  66EA                     631      BNE      CONTINUE
00000666                           632      
00000666  13FC 0001 00001B09       633      MOVE.B   #01, CURRENTLYATTACKING
0000066E  33FC 0032 00001B0C       634      MOVE.W   #50, ATTACK_TIME
00000676  33FC 004C 00001B0A       635      MOVE.W   #76, ATTACK_COOLDOWN
0000067E                           636  
0000067E  23F9 00001AC8 00001B0E   637      MOVE.L   PLAYER_X,ATTACK_X
00000688  06B9 0000001B 00001B0E   638      ADDI.L   #PLYR_W_INIT,ATTACK_X
00000692  23F9 00001ACC 00001B12   639      MOVE.L   PLAYER_Y,ATTACK_Y
0000069C  4E75                     640      RTS
0000069E                           641  
0000069E                           642  PERFORM_THROW:
Line 643 ERROR: Undefined symbol
0000069E  4A39 004DBD16            643      TST.B  isPaused
000006A4                           644      IF <NE> THEN
000006A8  4E75                     645          RTS
000006AA                           646      ENDI
000006AA  4A39 00001B16            647      TST.B    CURRENTLYTHROWING
000006B0  669E                     648      BNE      CONTINUE
000006B2                           649      
000006B2  13FC 0001 00001B16       650      MOVE.B   #01,CURRENTLYTHROWING
000006BA  23F9 00001AC8 00001B1C   651      MOVE.L   PLAYER_X,THROW_X
000006C4  06B9 0000001B 00001B1C   652      ADDI.L   #PLYR_W_INIT,THROW_X
000006CE  23F9 00001ACC 00001B20   653      MOVE.L   PLAYER_Y,THROW_Y
000006D8  04B9 0000000D 00001B20   654      SUBI.L   #PLYR_H_INIT,THROW_Y
000006E2                           655  
000006E2  6100 033C                656      BSR     PERFORM_THROW_ARC
000006E6  4E75                     657      RTS
000006E8                           658  
000006E8                           659  *-----------------------------------------------------------
000006E8                           660  * Subroutine    : Draw
000006E8                           661  * Description   : Draw Screen
000006E8                           662  *-----------------------------------------------------------
000006E8                           663  DRAWBATTLE: 
000006E8                           664      ; Enable back buffer
000006E8  103C 005E                665      MOVE.B  #TC_REDRAW,        D0
000006EC  4E4F                     666      TRAP    #15
000006EE                           667  
000006EE                           668      ; Clear the screen
000006EE  103C 000B                669      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000006F2  323C FF00                670      MOVE.W  #$FF00,     D1          ; Clear contents
000006F6  4E4F                     671      TRAP    #15                     ; Trap (Perform action)
000006F8                           672  
000006F8  123C 0001                673      MOVE.B  #1,D1
000006FC  103C 005D                674      MOVE.B  #93,D0
00000700  4E4F                     675      TRAP    #15
00000702                           676  
00000702  6100 00B4                677      BSR     DRAW_BACKGROUND        
00000706  6100 0020                678      BSR     DRAW_HILL 
0000070A  6100 0154                679      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
0000070E  6100 0418                680      BSR     DRAW_PLAYER             ; Draw Player
00000712  6100 05F4                681      BSR     DRAW_ENEMY              ; Draw Enemy
00000716  6100 072A                682      BSR     DRAW_FLYENEMY
0000071A  6100 085E                683      BSR     DRAW_HEALTHPACK
0000071E  6100 08DC                684      BSR     DRAW_FLOOR              ; Draw Floor
Line 685 ERROR: Undefined symbol
00000722  6100 B5F2                685      BSR     drawPause
00000726  4E75                     686      RTS                             ; Return to subroutine
00000728                           687  
00000728                           688  
00000728                           689  DRAW_HILL:
00000728                           690  
00000728                           691  ; Set Pixel Colors
00000728  223C 00004FAD            692      MOVE.L  #DIRT,     D1          ; Set Background color
0000072E  103C 0050                693      MOVE.B  #80,        D0          ; Task for Background Color
00000732  4E4F                     694      TRAP    #15                     ; Trap (Perform action)
00000734                           695  
00000734  223C 00004FAD            696      MOVE.L  #DIRT,     D1
0000073A  103C 0051                697      MOVE.B  #81,        D0
0000073E  4E4F                     698      TRAP    #15
00000740                           699  
00000740                           700      ; Set X, Y, X2, and Y2
00000740  7200                     701      MOVE.L  #0,   D1          ; X
00000742  243C 000000F1            702      MOVE.L  #241,  D2          ; Y
00000748  761E                     703      MOVE.L  #30,   D3           
0000074A  7878                     704      MOVE.L  #120,   D4     
0000074C                           705      
0000074C  103C 0057                706      MOVE.B  #87,        D0          ; Draw Line
00000750  4E4F                     707      TRAP    #15                     ; Trap (Perform action)
00000752                           708      
00000752                           709       ; Set X, Y, X2, and Y2
00000752  7200                     710      MOVE.L  #0,   D1          ; X
00000754  243C 000000F1            711      MOVE.L  #241,  D2          ; Y
0000075A  763C                     712      MOVE.L  #60,   D3           
0000075C  283C 00000087            713      MOVE.L  #135,   D4 
00000762                           714      
00000762                           715      
00000762  103C 0057                716      MOVE.B  #87,        D0          ; Draw Line
00000766  4E4F                     717      TRAP    #15                     ; Trap (Perform action)
00000768                           718  
00000768                           719       ; Set X, Y, X2, and Y2
00000768  7200                     720      MOVE.L  #0,   D1          ; X
0000076A  243C 000000F1            721      MOVE.L  #241,  D2          ; Y
00000770  7650                     722      MOVE.L  #80,   D3           
00000772  283C 00000096            723      MOVE.L  #150,   D4 
00000778                           724      
00000778                           725      
00000778  103C 0057                726      MOVE.B  #87,        D0          ; Draw Line
0000077C  4E4F                     727      TRAP    #15                     ; Trap (Perform action)
0000077E                           728  
0000077E                           729       ; Set X, Y, X2, and Y2
0000077E  7200                     730      MOVE.L  #0,   D1          ; X
00000780  243C 000000F1            731      MOVE.L  #241,  D2          ; Y
00000786  7664                     732      MOVE.L  #100,   D3           
00000788  283C 000000C8            733      MOVE.L  #200,   D4 
0000078E                           734      
0000078E                           735      
0000078E  103C 0057                736      MOVE.B  #87,        D0          ; Draw Line
00000792  4E4F                     737      TRAP    #15                     ; Trap (Perform action)
00000794                           738  
00000794  7200                     739      MOVE.L  #BLACK,     D1
00000796  103C 0051                740      MOVE.B  #81,        D0
0000079A  4E4F                     741      TRAP    #15
0000079C  7200                     742      MOVE.L  #BLACK,     D1
0000079E  103C 0050                743      MOVE.B  #80,        D0
000007A2  4E4F                     744      TRAP    #15
000007A4                           745  
000007A4                           746      ; Set X, Y, X2, and Y2
000007A4  7205                     747      MOVE.L  #5,   D1          ; X
000007A6  243C 00000082            748      MOVE.L  #130,  D2          ; Y
000007AC  7619                     749      MOVE.L  #25,   D3           
000007AE  7878                     750      MOVE.L  #120,   D4     
000007B0                           751  
000007B0                           752      
000007B0  103C 0057                753      MOVE.B  #87,        D0          ; Draw Line
000007B4  4E4F                     754      TRAP    #15                     ; Trap (Perform action)
000007B6                           755  
000007B6  4E75                     756      RTS
000007B8                           757  
000007B8                           758  DRAW_BACKGROUND:
000007B8  4281                     759      CLR.L       D1
000007BA  223C 00FFE2B0            760      MOVE.L      #SKY,D1
000007C0  103C 0051                761      MOVE.B      #81,D0
000007C4  4E4F                     762      TRAP        #15
000007C6                           763  
000007C6  7200                     764      MOVE.L      #00, D1
000007C8  7400                     765      MOVE.L      #00, D2
000007CA  7059                     766      MOVE.L      #89, D0
000007CC  4E4F                     767      TRAP        #15
000007CE                           768      
000007CE  223C 0019506D            769      MOVE.L     #BROWN,D1
000007D4  243C 01110000            770      MOVE.L     #$01110000,D2
000007DA  103C 0015                771      MOVE.B     #21,D0
000007DE  4E4F                     772      TRAP       #15
000007E0                           773      
000007E0                           774  
000007E0  B381                     775      EOR.L      D1,D1
000007E2  143C 0005                776      MOVE.B     #5,D2
000007E6  33FC 300B 00001BA8       777      MOVE.W     #$300B,TRUNK
000007EE                           778  TREE_LOOP:
000007EE  700B                     779      MOVE.L     #TC_CURSR_P,D0
000007F0  3239 00001BA8            780      MOVE.W     TRUNK,D1
000007F6  5379 00001BA8            781      SUBQ.W      #01,TRUNK
000007FC  4E4F                     782      TRAP       #15
000007FE                           783     
000007FE  43F9 00001A5A            784      LEA         TREET, A1
00000804  700E                     785      MOVE.L      #14, D0
00000806  4E4F                     786      TRAP        #15
00000808                           787  
00000808  5302                     788      SUBQ.B      #01,D2
0000080A  B43C 0000                789      CMP.B       #00,D2
0000080E  66DE                     790      BNE         TREE_LOOP
00000810                           791  
00000810  223C 00566D19            792      MOVE.L     #GREEN,D1
00000816  243C 01110000            793      MOVE.L     #$01110000,D2
0000081C  103C 0015                794      MOVE.B     #21,D0
00000820  4E4F                     795      TRAP       #15
00000822                           796  
00000822  163C 0005                797      MOVE.B     #5,D3
00000826                           798  TREE_LEAVES_Y:
00000826  13FC 002D 00001BA8       799      MOVE.B     #$2D,TRUNK
0000082E  143C 0008                800      MOVE.B     #8,D2
00000832                           801  TREE_LEAVES_X:
00000832  700B                     802      MOVE.L     #TC_CURSR_P,D0
00000834  3239 00001BA8            803      MOVE.W     TRUNK,D1
0000083A  5239 00001BA8            804      ADDQ.B     #01,TRUNK
00000840  4E4F                     805      TRAP       #15
00000842                           806     
00000842  7240                     807      MOVE.L      #$40, D1
00000844  7006                     808      MOVE.L      #6, D0
00000846  4E4F                     809      TRAP        #15
00000848                           810  
00000848  5302                     811      SUBQ.B      #01,D2
0000084A  B43C 0000                812      CMP.B       #00,D2
0000084E  66E2                     813      BNE         TREE_LEAVES_X
00000850  5303                     814      SUB.B       #01,D3
00000852  5379 00001BA8            815      SUB.W       #01,TRUNK
00000858  B63C 0000                816      CMP.B       #00,D3
0000085C  66C8                     817      BNE         TREE_LEAVES_Y
0000085E  4E75                     818      RTS
00000860                           819  *-----------------------------------------------------------
00000860                           820  * Subroutine    : Draw Player Data
00000860                           821  * Description   : Draw Player X, Y, Velocity, Gravity and OnGround
00000860                           822  *-----------------------------------------------------------
00000860                           823  DRAW_PLYR_DATA:
00000860  B381                     824      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000862  B582                     825      EOR.L    D2,D2
00000864                           826  
00000864                           827  
00000864  7200                     828      MOVE.L  #BLACK,     D1
00000866  103C 0015                829      MOVE.B  #21,        D0          ; Set Text Color
0000086A  4E4F                     830      TRAP    #15                     ; Trap (Perform action)
0000086C                           831  
0000086C  223C 00FFE2B0            832      MOVE.L  #SKY,       D1          ; Set Text Color
00000872  7051                     833      MOVE.L  #81,        D0          ; Set Text Color
00000874  4E4F                     834      TRAP    #15                     ; Trap (Perform action)
00000876                           835  
00000876                           836      ; Player Score Message
00000876                           837      ;MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000876                           838      ;MOVE.W  #$0201,     D1          ; Col 02, Row 01
00000876                           839      ;TRAP    #15                     ; Trap (Perform action)
00000876                           840      ;LEA     SCORE_MSG,  A1          ; Score Message
00000876                           841      ;MOVE    #13,        D0          ; No Line feed
00000876                           842      ;TRAP    #15                     ; Trap (Perform action)
00000876                           843  ;
00000876                           844      ;; Player Score Value
00000876                           845      ;MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000876                           846      ;MOVE.W  #$0901,     D1          ; Col 09, Row 01
00000876                           847      ;TRAP    #15                     ; Trap (Perform action)
00000876                           848      ;MOVE.B  #03,        D0          ; Display number at D1.L
00000876                           849      ;MOVE.L  PLAYER_SCORE,D1         ; Move Score to D1.L
00000876                           850      ;TRAP    #15                     ; Trap (Perform action)
00000876                           851      
00000876                           852      ; Player X Message
00000876                           853      ;MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000876                           854      ;MOVE.W  #$0202,     D1          ; Col 02, Row 02
00000876                           855      ;TRAP    #15                     ; Trap (Perform action)
00000876                           856      ;LEA     X_MSG,      A1          ; X Message
00000876                           857      ;MOVE    #13,        D0          ; No Line feed
00000876                           858      ;TRAP    #15                     ; Trap (Perform action)
00000876                           859      
00000876                           860      ; Player X
00000876                           861      ;MOVE.B  #TC_CURSR_P, D0          ; Set Cursor Position
00000876                           862      ;MOVE.W  #$0502,     D1          ; Col 05, Row 02
00000876                           863      ;TRAP    #15                     ; Trap (Perform action)
00000876                           864      ;MOVE.B  #03,        D0          ; Display number at D1.L
00000876                           865      ;MOVE.L  HEALTH_X,   D1          ; Move X to D1.L
00000876                           866      ;TRAP    #15                     ; Trap (Perform action)
00000876                           867      
00000876                           868      ; Player Y Message
00000876                           869      ;MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000876                           870      ;MOVE.W  #$1002,     D1          ; Col 10, Row 02
00000876                           871      ;TRAP    #15                     ; Trap (Perform action)
00000876                           872      ;LEA     Y_MSG,      A1          ; Y Message
00000876                           873      ;MOVE    #13,        D0          ; No Line feed
00000876                           874      ;TRAP    #15                     ; Trap (Perform action)
00000876                           875      
00000876                           876      ; Player Y
00000876                           877      ;MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000876                           878      ;MOVE.W  #$1202,     D1          ; Col 12, Row 02
00000876                           879      ;TRAP    #15                     ; Trap (Perform action)
00000876                           880      ;MOVE.B  #03,        D0          ; Display number at D1.L
00000876                           881      ;MOVE.L  FLYINGENEMY_Y,   D1          ; Move X to D1.L
00000876                           882      ;TRAP    #15                     ; Trap (Perform action) 
00000876                           883  
00000876                           884      ; Player 
00000876  103C 000B                885      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000087A  323C 0203                886      MOVE.W  #$0203,     D1          ; Col 02, Row 03
0000087E  4E4F                     887      TRAP    #15                     ; Trap (Perform action)
00000880  43F9 00001A85            888      LEA     antsRem_MSG,      A1          ; Velocity Message
00000886  303C 000D                889      MOVE    #13,        D0          ; No Line feed
0000088A  4E4F                     890      TRAP    #15                     ; Trap (Perform action)
0000088C                           891      
0000088C                           892      ; Player Velocity
0000088C  103C 000B                893      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000890  323C 1303                894      MOVE.W  #$1303,     D1          ; Col 05, Row 03
00000894  4E4F                     895      TRAP    #15                     ; Trap (Perform action)
00000896  103C 0003                896      MOVE.B  #03,        D0          ; Display number at D1.L
0000089A  B381                     897      EOR.L   D1,D1
0000089C  1239 00001B07            898      MOVE.B  antsRemaining,D1        ; Move X to D1.L
000008A2  4E4F                     899      TRAP    #15                     ; Trap (Perform action)
000008A4                           900  
000008A4                           901      ; Player On Ground Message
000008A4  103C 000B                902      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000008A8  323C 0204                903      MOVE.W  #$0204,     D1          ; Col 10, Row 03
000008AC  4E4F                     904      TRAP    #15                     ; Trap (Perform action)
000008AE  43F9 00001990            905      LEA     ENEMIESDEAD_MSG,    A1          ; On Ground Message
000008B4  303C 000D                906      MOVE    #13,        D0          ; No Line feed
000008B8  4E4F                     907      TRAP    #15                     ; Trap (Perform action)
000008BA                           908      
000008BA                           909      ; Player On Ground
000008BA  103C 000B                910      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000008BE  323C 1504                911      MOVE.W  #$1504,     D1          ; Col 06, Row 04
000008C2  4E4F                     912      TRAP    #15                     ; Trap (Perform action)
000008C4  103C 0003                913      MOVE.B  #03,        D0          ; Display number at D1.L
000008C8  4281                     914      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000008CA  1239 00001B2C            915      MOVE.B  ENEMIES_DEFEATED,     D1          ; Move Play on Ground ? to D1.L
000008D0  4E4F                     916      TRAP    #15                     ; Trap (Perform action)
000008D2                           917      
000008D2                           918      ; number of enemies in wave msg
000008D2  103C 000B                919      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000008D6  323C 0205                920      MOVE.W  #$0205,     D1          ; Col 10, Row 03
000008DA  4E4F                     921      TRAP    #15                     ; Trap (Perform action)
000008DC  43F9 000019A2            922      LEA     ENEMYCOUNT_MSG,    A1          ; On Ground Message
000008E2  303C 000D                923      MOVE    #13,        D0          ; No Line feed
000008E6  4E4F                     924      TRAP    #15                     ; Trap (Perform action)
000008E8                           925      
000008E8                           926      ; number of enemies in wave 
000008E8  103C 000B                927      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000008EC  323C 1705                928      MOVE.W  #$1705,     D1          ; Col 06, Row 04
000008F0  4E4F                     929      TRAP    #15                     ; Trap (Perform action)
000008F2  4281                     930      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000008F4  1239 00001B2E            931      MOVE.B  enemiesToDefeat,     D1          ; Move Play on Ground ? to D1.L
000008FA  103C 0003                932      MOVE.B  #03,        D0          ; Display number at D1.L
000008FE  4E4F                     933      TRAP    #15                     ; Trap (Perform action)
00000900                           934  
00000900                           935      ; Show Keys Pressed
00000900  103C 000B                936      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000904  323C 2001                937      MOVE.W  #$2001,     D1          ; Col 20, Row 1
00000908  4E4F                     938      TRAP    #15                     ; Trap (Perform action)
0000090A  43F9 00001951            939      LEA     KEYCODE_MSG, A1         ; Keycode
00000910  303C 000D                940      MOVE    #13,        D0          ; No Line feed
00000914  4E4F                     941      TRAP    #15                     ; Trap (Perform action)
00000916                           942  
00000916                           943      ; Show KeyCode
00000916  103C 000B                944      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000091A  323C 3001                945      MOVE.W  #$3001,     D1          ; Col 30, Row 1
0000091E  4E4F                     946      TRAP    #15                     ; Trap (Perform action)    
00000920  2239 00001AC2            947      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
00000926  103C 0003                948      MOVE.B  #03,        D0          ; Display the contents of D1
0000092A  4E4F                     949      TRAP    #15                     ; Trap (Perform action)
0000092C                           950  
0000092C                           951      ; Show hill msg
0000092C  103C 000B                952      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000930  323C 0206                953      MOVE.W  #$0206,     D1          ; Col 02, Row 06
00000934  4E4F                     954      TRAP    #15                     ; Trap (Perform action)
00000936  43F9 00001A97            955      LEA     hillHP_MSG,   A1          ; Draw
0000093C  303C 000D                956      MOVE    #13,        D0          ; No Line feed
00000940  4E4F                     957      TRAP    #15                     ; Trap (Perform action)  
00000942                           958      
00000942                           959      ; Show hill msg
00000942  103C 000B                960      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000946  323C 0E06                961      MOVE.W  #$0E06,     D1          ; Col 30, Row 1
0000094A  4E4F                     962      TRAP    #15                     ; Trap (Perform action)   
0000094C  B381                     963      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
0000094E  1239 00001AA5            964      MOVE.B  hillHP,      D1          ; Move Key Pressed to D1
00000954  103C 0003                965      MOVE.B  #03,        D0          ; Display the contents of D1
00000958  4E4F                     966      TRAP    #15                     ; Trap (Perform action)
0000095A                           967      
0000095A                           968      ; Show antHealth msg
0000095A  103C 000B                969      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000095E  323C 0202                970      MOVE.W  #$0202,     D1          ; Col 02, Row 06
00000962  4E4F                     971      TRAP    #15                     ; Trap (Perform action)
00000964  43F9 00001A7B            972      LEA     antHealth_MSG,   A1          ; Draw
0000096A  303C 000D                973      MOVE    #13,        D0          ; No Line feed
0000096E  4E4F                     974      TRAP    #15                     ; Trap (Perform action)  
00000970                           975      
00000970                           976      ; Show antHealth msg
00000970  103C 000B                977      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000974  323C 0A02                978      MOVE.W  #$0A02,     D1          ; Col 30, Row 1
00000978  4E4F                     979      TRAP    #15                     ; Trap (Perform action)   
0000097A  B381                     980      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
0000097C  1239 00001B06            981      MOVE.B  antHealth,      D1          ; Move Key Pressed to D1
00000982  103C 0003                982      MOVE.B  #03,        D0          ; Display the contents of D1
00000986  4E4F                     983      TRAP    #15                     ; Trap (Perform action)
00000988                           984  
00000988  4E75                     985      RTS
0000098A                           986  *-----------------------------------------------------------
0000098A                           987  * Subroutine    : Player is on Ground
0000098A                           988  * Description   : Check if the Player is on or off Ground
0000098A                           989  *-----------------------------------------------------------
0000098A                           990  IS_PLAYER_ON_GND:
0000098A                           991      ; Check if Player is on Ground
0000098A  4281                     992      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000098C  4282                     993      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
0000098E  3239 00001AC0            994      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
00000994  82FC 0002                995      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000998  2439 00001ACC            996      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
0000099E  B441                     997      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
000009A0  6C00 0008                998      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
000009A4  6D00 002C                999      BLT     SET_OFF_GROUND          ; The Player is off the Ground
000009A8  4E75                    1000      RTS                             ; Return to subroutine
000009AA                          1001  
000009AA                          1002  
000009AA                          1003  *-----------------------------------------------------------
000009AA                          1004  * Subroutine    : On Ground
000009AA                          1005  * Description   : Set the Player On Ground
000009AA                          1006  *-----------------------------------------------------------
000009AA                          1007  SET_ON_GROUND:
000009AA  4281                    1008      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000009AC  3239 00001AC0           1009      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000009B2  82FC 0002               1010      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000009B6  23C1 00001ACC           1011      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
000009BC  4281                    1012      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
000009BE  7200                    1013      MOVE.L  #00,        D1          ; Player Velocity
000009C0  23C1 00001AD4           1014      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
000009C6  23FC 00000001 00001ADC  1015      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
000009D0  4E75                    1016      RTS
000009D2                          1017  
000009D2                          1018  *-----------------------------------------------------------
000009D2                          1019  * Subroutine    : Off Ground
000009D2                          1020  * Description   : Set the Player Off Ground
000009D2                          1021  *-----------------------------------------------------------
000009D2                          1022  SET_OFF_GROUND:
000009D2  23FC 00000000 00001ADC  1023      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
000009DC  4E75                    1024      RTS                             ; Return to subroutine
000009DE                          1025  *-----------------------------------------------------------
000009DE                          1026  * Subroutine    : Jump
000009DE                          1027  * Description   : Perform a Jump
000009DE                          1028  *-----------------------------------------------------------
000009DE                          1029  JUMP:
Line 1030 ERROR: Undefined symbol
000009DE  4A39 004DBD16           1030      TST.B  isPaused
000009E4                          1031      IF <NE> THEN
000009E8  4E75                    1032          RTS
000009EA                          1033      ENDI
000009EA  0CB9 00000001 00001ADC  1034      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
000009F4  6700 0006               1035      BEQ     PERFORM_JUMP            ; Do Jump
000009F8  6000 0012               1036      BRA     JUMP_DONE               ;
000009FC                          1037  PERFORM_JUMP:
000009FC  6100 0066               1038      BSR     PLAY_JUMP               ; Play jump sound
00000A00  23FC FFFFFFED 00001AD4  1039      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00000A0A  4E75                    1040      RTS                             ; Return to subroutine
00000A0C                          1041  JUMP_DONE:
00000A0C  4E75                    1042      RTS                             ; Return to subroutine
00000A0E                          1043  
00000A0E                          1044  *-----------------------------------------------------------
00000A0E                          1045  * Subroutine    : Throw
00000A0E                          1046  * Description   : Perform a Throw
00000A0E                          1047  *-----------------------------------------------------------
00000A0E                          1048  THROW_ARC:
00000A0E  0CB9 00000001 00001ADC  1049      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000A18  6700 0006               1050      BEQ     PERFORM_THROW_ARC    ; Do Jump
00000A1C  6000 000E               1051      BRA     ARC_DONE               ;
00000A20                          1052  PERFORM_THROW_ARC:
00000A20                          1053      ;BSR     PLAY_JUMP               ; Play jump sound
00000A20  23FC FFFFFFF0 00001B24  1054      MOVE.L  #THRW_JUMP_V,THROW_VELOCITY ; Set the players velocity to true
00000A2A  4E75                    1055      RTS                             ; Return to subroutine
00000A2C                          1056  ARC_DONE:
00000A2C  4E75                    1057      RTS                             ; Return to subroutine
00000A2E                          1058  
00000A2E                          1059  *-----------------------------------------------------------
00000A2E                          1060  * Subroutine    : Idle
00000A2E                          1061  * Description   : Perform a Idle
00000A2E                          1062  *----------------------------------------------------------- 
00000A2E                          1063  IDLE:
00000A2E  4E75                    1064      RTS                             ; Return to subroutine
00000A30                          1065  
00000A30                          1066  *-----------------------------------------------------------
00000A30                          1067  * Subroutines   : Sound Load and Play
00000A30                          1068  * Description   : Initialise game sounds into memory 
00000A30                          1069  * Current Sounds are RUN, JUMP and Opps for Collision
00000A30                          1070  *-----------------------------------------------------------
00000A30                          1071  GAMEOVER_LOAD:
00000A30  43F9 00001B45           1072      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00000A36  323C 0000               1073      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00000A3A  303C 004A               1074      MOVE    #74,        D0          ; Load into memory
00000A3E  4E4F                    1075      TRAP    #15                     ; Trap (Perform action)
00000A40  4E75                    1076      RTS                             ; Return to subroutine
00000A42                          1077  
00000A42                          1078  PLAY_GAMEOVER:
00000A42  6100 00D6               1079      bsr STOP_SONG
00000A46  323C 0000               1080      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00000A4A  303C 004B               1081      MOVE    #75,        D0          ; Play Sound
00000A4E  4E4F                    1082      TRAP    #15                     ; Trap (Perform action)
00000A50  4E75                    1083      RTS                             ; Return to subroutine
00000A52                          1084  
00000A52                          1085  JUMP_LOAD:
00000A52  43F9 00001B3C           1086      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
00000A58  323C 0001               1087      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
00000A5C  303C 004A               1088      MOVE    #74,        D0          ; Load into memory
00000A60  4E4F                    1089      TRAP    #15                     ; Trap (Perform action)
00000A62  4E75                    1090      RTS                             ; Return to subroutine
00000A64                          1091  
00000A64                          1092  PLAY_JUMP:
00000A64  323C 0001               1093      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
00000A68  303C 004B               1094      MOVE    #75,        D0          ; Play Sound
00000A6C  4E4F                    1095      TRAP    #15                     ; Trap (Perform action)
00000A6E  4E75                    1096      RTS                             ; Return to subroutine
00000A70                          1097  
00000A70                          1098  HITHURT_LOAD:
00000A70  43F9 00001B52           1099      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
00000A76  323C 0002               1100      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
00000A7A  303C 004A               1101      MOVE    #74,        D0          ; Load into memory
00000A7E  4E4F                    1102      TRAP    #15                     ; Trap (Perform action)
00000A80  4E75                    1103      RTS                             ; Return to subroutine
00000A82                          1104  
00000A82                          1105  PLAY_HITHURT:
00000A82  323C 0002               1106      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
00000A86  303C 004B               1107      MOVE    #75,        D0          ; Play Sound
00000A8A  4E4F                    1108      TRAP    #15                     ; Trap (Perform action)
00000A8C  4E75                    1109      RTS                             ; Return to subroutine
00000A8E                          1110  
00000A8E                          1111  POWERUP_LOAD:
00000A8E  43F9 00001B66           1112      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
00000A94  323C 0003               1113      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
00000A98  303C 004A               1114      MOVE    #74,        D0          ; Load into memory
00000A9C  4E4F                    1115      TRAP    #15                     ; Trap (Perform action)
00000A9E  4E75                    1116      RTS                             ; Return to subroutine
00000AA0                          1117  
00000AA0                          1118  PLAY_POWERUP:
00000AA0  323C 0003               1119      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
00000AA4  303C 004B               1120      MOVE    #75,        D0          ; Play Sound
00000AA8  4E4F                    1121      TRAP    #15                     ; Trap (Perform action)
00000AAA  4E75                    1122      RTS                             ; Return to subroutine
00000AAC                          1123  
00000AAC                          1124  LVLCHANGE_LOAD:
00000AAC  43F9 00001B72           1125      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
00000AB2  323C 0004               1126      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
00000AB6  303C 004A               1127      MOVE    #74,        D0          ; Load into memory
00000ABA  4E4F                    1128      TRAP    #15                     ; Trap (Perform action)
00000ABC  4E75                    1129      RTS                             ; Return to subroutine
00000ABE                          1130  
00000ABE                          1131  PLAY_LVLCHANGE:
00000ABE  323C 0004               1132      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00000AC2  303C 004B               1133      MOVE    #75,        D0          ; Play Sound
00000AC6  4E4F                    1134      TRAP    #15                     ; Trap (Perform action)
00000AC8  4E75                    1135      RTS                             ; Return to subroutine
00000ACA                          1136  
00000ACA                          1137  HIT_LOAD:
00000ACA  43F9 00001B5E           1138      LEA     HIT_WAV,   A1          ; Load Wav File into A1
00000AD0  323C 0005               1139      MOVE    #HIT_INDEX,D1          ; Assign it INDEX
00000AD4  303C 004A               1140      MOVE    #74,        D0          ; Load into memory
00000AD8  4E4F                    1141      TRAP    #15                     ; Trap (Perform action)
00000ADA  4E75                    1142      RTS                             ; Return to subroutine
00000ADC                          1143  
00000ADC                          1144  PLAY_HIT:
00000ADC  323C 0005               1145      MOVE    #HIT_INDEX,D1          ; Load Sound INDEX
00000AE0  303C 004B               1146      MOVE    #75,        D0          ; Play Sound
00000AE4  4E4F                    1147      TRAP    #15                     ; Trap (Perform action)
00000AE6  4E75                    1148      RTS                             ; Return to subroutine
00000AE8                          1149  
00000AE8                          1150  MAP_SONG_LOAD:
00000AE8  43F9 00001B82           1151      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000AEE  323C 0006               1152      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000AF2  303C 004A               1153      MOVE    #74,        D0          ; Load into memory
00000AF6  4E4F                    1154      TRAP    #15                     ; Trap (Perform action)
00000AF8  4E75                    1155      RTS                             ; Return to subroutine
00000AFA                          1156  
00000AFA                          1157  BATTLE_SONG_LOAD:
00000AFA  43F9 00001B82           1158      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000B00  323C 0006               1159      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000B04  303C 004A               1160      MOVE    #74,        D0          ; Load into memory
00000B08  4E4F                    1161      TRAP    #15                     ; Trap (Perform action)
00000B0A  4E75                    1162      RTS                             ; Return to subroutine
00000B0C                          1163  
00000B0C                          1164  ; special function to play song in song index
00000B0C                          1165  PLAY_SONG:
00000B0C  323C 0006               1166      MOVE    #SONG_INDEX,D1          ; Load Sound INDEX
00000B10  7401                    1167      move.l #1, d2
00000B12  303C 004D               1168      MOVE    #77,        D0          ; Play Sound
00000B16  4E4F                    1169      TRAP    #15                     ; Trap (Perform action)
00000B18  4E75                    1170      RTS                             ; Return to subroutine
00000B1A                          1171  
00000B1A                          1172  ; stop song playing
00000B1A                          1173  STOP_SONG:
00000B1A  323C 0006               1174      move #SONG_INDEX,d1
00000B1E  7402                    1175      move.l #2, d2
00000B20  303C 004C               1176      move #76, d0
00000B24  4E4F                    1177      trap #15
00000B26  4E75                    1178      rts
00000B28                          1179  
00000B28                          1180  *-----------------------------------------------------------
00000B28                          1181  * Subroutine    : Draw Player
00000B28                          1182  * Description   : Draw Player Ant
00000B28                          1183  *-----------------------------------------------------------
00000B28                          1184  DRAW_PLAYER:
00000B28                          1185      ; Set Pixel Colors
00000B28  7200                    1186      MOVE.L  #BLACK,     D1          ; Set Background color
00000B2A  103C 0050               1187      MOVE.B  #80,        D0          ; Task for Background Color
00000B2E  4E4F                    1188      TRAP    #15                     ; Trap (Perform action)
00000B30                          1189      ; Reset Pixel Colors
00000B30  7200                    1190      MOVE.L  #BLACK,     D1          ; Set Background color
00000B32  103C 0051               1191      MOVE.B  #81,        D0          ; Task for Background Color
00000B36  4E4F                    1192      TRAP    #15                     ; Trap (Perform action)
00000B38                          1193  
00000B38                          1194  *-------------- draw body -----------------*
00000B38  2239 00001AC8           1195      MOVE.L  PLAYER_X,   D1          ; X
00000B3E  2439 00001ACC           1196      MOVE.L  PLAYER_Y,   D2
00000B44  5982                    1197      SUBQ.L  #4,D2
00000B46                          1198  
00000B46  2639 00001AC8           1199      MOVE.L  PLAYER_X,   D3
00000B4C  B984                    1200      EOR.L   D4,D4
00000B4E  1839 00001B31           1201      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000B54  D684                    1202      ADD.L   D4,D3
00000B56  2839 00001ACC           1203      MOVE.L  PLAYER_Y,   D4
00000B5C  9839 00001B32           1204      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00000B62                          1205      
00000B62                          1206       ; Draw Player
00000B62  103C 0057               1207      MOVE.B  #87,        D0          ; Draw Player
00000B66  4E4F                    1208      TRAP    #15                     ; Trap (Perform action)
00000B68                          1209  
00000B68                          1210  *-------------- draw anthrax -----------------*
00000B68  2239 00001AC8           1211      MOVE.L  PLAYER_X,   D1          ; X
00000B6E  2439 00001ACC           1212      MOVE.L  PLAYER_Y,   D2
00000B74  5982                    1213      SUBQ.L  #4,D2
00000B76  2639 00001AC8           1214      MOVE.L  PLAYER_X,   D3
00000B7C  B984                    1215      EOR.L   D4,D4
00000B7E  1839 00001B31           1216      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000B84  0404 000C               1217      SUBI.B   #12,D4
00000B88  D684                    1218      ADD.L   D4,D3
00000B8A  2839 00001ACC           1219      MOVE.L  PLAYER_Y,   D4
00000B90  9839 00001B32           1220      SUB.B   PLAYER_HEIGHT,   D4      ; Height
00000B96  5704                    1221      SUB.B   #3,D4
00000B98                          1222      
00000B98                          1223      ; Draw Player
00000B98  103C 0057               1224      MOVE.B  #87,        D0          ; Draw Player
00000B9C  4E4F                    1225      TRAP    #15                     ; Trap (Perform action)
00000B9E                          1226  
00000B9E                          1227  *-------------- draw antena -----------------*    
00000B9E                          1228      ; change thickness
00000B9E  7203                    1229      MOVE.l  #3,D1
00000BA0  103C 005D               1230      MOVE.B  #93,D0
00000BA4  4E4F                    1231      TRAP    #15
00000BA6                          1232  
00000BA6  2239 00001AC8           1233      MOVE.L  PLAYER_X,D1
00000BAC  0681 00000016           1234      ADD.L   #22,D1
00000BB2  2439 00001ACC           1235      MOVE.L  PLAYER_Y,D2
00000BB8  0482 0000000D           1236      SUB.L   #PLYR_H_INIT,D2
00000BBE  2601                    1237      MOVE.L  D1,D3
00000BC0  0683 0000000A           1238      ADD.L   #10,D3
00000BC6  2802                    1239      MOVE.L  D2,D4
00000BC8  5F84                    1240      SUBI.L  #7,D4
00000BCA                          1241  
00000BCA  103C 0054               1242      MOVE.B  #84,D0
00000BCE  4E4F                    1243      TRAP    #15
00000BD0                          1244  
00000BD0                          1245  *-------------- draw leg 1 -----------------*
00000BD0  2239 00001AC8           1246      MOVE.L  PLAYER_X,D1
00000BD6  2439 00001ACC           1247      MOVE.L  PLAYER_Y,D2
00000BDC  2601                    1248      MOVE.L  D1,D3
00000BDE  5883                    1249      ADD.L   #4,D3
00000BE0  2802                    1250      MOVE.L  D2,D4
00000BE2  5984                    1251      SUBI.L  #4,D4
00000BE4                          1252  
00000BE4  103C 0054               1253      MOVE.B  #84,D0
00000BE8  4E4F                    1254      TRAP    #15
00000BEA                          1255  
00000BEA                          1256  *-------------- draw leg 2 -----------------*
00000BEA  2239 00001AC8           1257      MOVE.L  PLAYER_X,D1
00000BF0  0681 0000000D           1258      ADD.L   #13,D1
00000BF6  2439 00001ACC           1259      MOVE.L  PLAYER_Y,D2
00000BFC  2601                    1260      MOVE.L  D1,D3
00000BFE  2802                    1261      MOVE.L  D2,D4
00000C00  5984                    1262      SUBI.L  #4,D4
00000C02                          1263  
00000C02  103C 0054               1264      MOVE.B  #84,D0
00000C06  4E4F                    1265      TRAP    #15
00000C08                          1266  
00000C08                          1267  *-------------- draw leg 3 -----------------*
00000C08  2239 00001AC8           1268      MOVE.L  PLAYER_X,D1
00000C0E  0681 00000016           1269      ADD.L   #22,D1
00000C14  2839 00001ACC           1270      MOVE.L  PLAYER_Y,D4
00000C1A  2601                    1271      MOVE.L  D1,D3
00000C1C  5683                    1272      ADD.L   #3,D3
00000C1E  2404                    1273      MOVE.L  D4,D2
00000C20  5982                    1274      SUBI.L  #4,D2
00000C22                          1275  
00000C22  103C 0054               1276      MOVE.B  #84,D0
00000C26  4E4F                    1277      TRAP    #15
00000C28                          1278  
00000C28                          1279      ; Set Pixel Colors
00000C28  223C 00FFFFFF           1280      MOVE.L  #WHITE,     D1          ; Set Background color
00000C2E  103C 0050               1281      MOVE.B  #80,        D0          ; Task for Background Color
00000C32  4E4F                    1282      TRAP    #15                     ; Trap (Perform action)
00000C34                          1283  
00000C34                          1284  *-------------- draw eye -----------------*
00000C34  2239 00001AC8           1285      MOVE.L  PLAYER_X,D1
00000C3A  0681 00000016           1286      ADD.L   #22,D1
00000C40  2439 00001ACC           1287      MOVE.L  PLAYER_Y,D2
00000C46  0482 0000000A           1288      SUB.L   #10,D2
00000C4C  2601                    1289      MOVE.L  D1,D3
00000C4E  2802                    1290      MOVE.L  D2,D4
00000C50                          1291  
00000C50  103C 0054               1292      MOVE.B  #84,D0
00000C54  4E4F                    1293      TRAP    #15
00000C56                          1294  
00000C56  7201                    1295      MOVE.l  #1,D1
00000C58  103C 005D               1296      MOVE.B  #93,D0
00000C5C  4E4F                    1297      TRAP    #15
00000C5E                          1298      
00000C5E  6100 0008               1299      BSR     IS_ATTACKING
00000C62  6100 0054               1300      BSR     IS_THROWING
00000C66                          1301  
00000C66  4E75                    1302      RTS                             ; Return to subroutine
00000C68                          1303  
00000C68                          1304  IS_ATTACKING:
00000C68  4A39 00001B09           1305      TST.B   CURRENTLYATTACKING
00000C6E  6600 0004               1306      BNE     DRAW_ATTACK
00000C72  4E75                    1307      RTS
00000C74                          1308  DRAW_ATTACK:
00000C74                          1309  
00000C74                          1310      ; Set Pixel Colors
00000C74  223C 00FFFFFF           1311      MOVE.L  #WHITE,     D1          ; Set Background color
00000C7A  103C 0050               1312      MOVE.B  #80,        D0          ; Task for Background Color
00000C7E  4E4F                    1313      TRAP    #15                     ; Trap (Perform action)
00000C80                          1314      ; Reset Pixel Colors
00000C80  223C 00FFFFFF           1315      MOVE.L  #WHITE,     D1          ; Set Background color
00000C86  103C 0051               1316      MOVE.B  #81,        D0          ; Task for Background Color
00000C8A  4E4F                    1317      TRAP    #15                     ; Trap (Perform action)
00000C8C                          1318  
00000C8C  2239 00001B0E           1319      MOVE.L  ATTACK_X,   D1          ; X
00000C92  2439 00001B12           1320      MOVE.L  ATTACK_Y,   D2
00000C98                          1321      
00000C98  2639 00001B0E           1322      MOVE.L  ATTACK_X,   D3
00000C9E  0683 00000023           1323      ADD.L   #ATTACK_WIDTH,   D3      ; Width
00000CA4  2839 00001B12           1324      MOVE.L  ATTACK_Y,   D4 
00000CAA  0484 00000014           1325      SUB.L   #ATTACK_HEIGHT,   D4      ; Height          ; Y
00000CB0                          1326      
00000CB0                          1327      ; Draw Player
00000CB0  103C 0057               1328      MOVE.B  #87,        D0          ; Draw Player
00000CB4  4E4F                    1329      TRAP    #15                     ; Trap (Perform action)
00000CB6  4E75                    1330      RTS                             ; Return to subroutine
00000CB8                          1331  
00000CB8                          1332  IS_THROWING:
00000CB8  4A39 00001B16           1333      TST.B   CURRENTLYTHROWING
00000CBE  6600 0004               1334      BNE     DRAW_THROW
00000CC2  4E75                    1335      RTS
00000CC4                          1336  DRAW_THROW:
00000CC4                          1337  
00000CC4                          1338      ; Set Pixel Colors
00000CC4  223C 0019506D           1339      MOVE.L  #BROWN,     D1          ; Set Background color
00000CCA  103C 0050               1340      MOVE.B  #80,        D0          ; Task for Background Color
00000CCE  4E4F                    1341      TRAP    #15                     ; Trap (Perform action)
00000CD0                          1342      ; Reset Pixel Colors
00000CD0  223C 0019506D           1343      MOVE.L  #BROWN,     D1          ; Set Background color
00000CD6  103C 0051               1344      MOVE.B  #81,        D0          ; Task for Background Color
00000CDA  4E4F                    1345      TRAP    #15                     ; Trap (Perform action)
00000CDC                          1346  
00000CDC  2239 00001B1C           1347      MOVE.L  THROW_X,   D1          ; X
00000CE2  2439 00001B20           1348      MOVE.L  THROW_Y,   D2
00000CE8                          1349      
00000CE8  2639 00001B1C           1350      MOVE.L  THROW_X,   D3
00000CEE  0683 0000000F           1351      ADD.L   #THRW_W_INIT,   D3      ; Width
00000CF4  2839 00001B20           1352      MOVE.L  THROW_Y,   D4 
00000CFA  0484 0000000F           1353      SUB.L   #THRW_H_INIT,   D4      ; Height          ; Y
00000D00                          1354      
00000D00                          1355      ; Draw Acorn
00000D00  103C 0057               1356      MOVE.B  #87,        D0          ; Draw Player
00000D04  4E4F                    1357      TRAP    #15                     ; Trap (Perform action)
00000D06  4E75                    1358      RTS                             ; Return to subroutine
00000D08                          1359  
00000D08                          1360  *-----------------------------------------------------------
00000D08                          1361  * Subroutine    : Draw Enemy
00000D08                          1362  * Description   : Draw Enemy Ant
00000D08                          1363  *-----------------------------------------------------------
00000D08                          1364  DRAW_ENEMY:
00000D08                          1365      ; Set Pixel Colors
00000D08  2239 00001AFA           1366      MOVE.L  ENEMYCOLOR,       D1          ; Set pen color
00000D0E  103C 0050               1367      MOVE.B  #80,        D0          ; Task for pen Color
00000D12  4E4F                    1368      TRAP    #15                     ; Trap (Perform action)
00000D14                          1369  
00000D14                          1370      ; Reset Pixel Colors
00000D14  2239 00001AFA           1371      MOVE.L  ENEMYCOLOR,     D1          ; Set Background color
00000D1A  103C 0051               1372      MOVE.B  #81,        D0          ; Task for Background Color
00000D1E  4E4F                    1373      TRAP    #15                     ; Trap (Perform action)
00000D20                          1374  
00000D20                          1375      *-------------- draw ENEMY body -----------------*
00000D20  2239 00001AE2           1376      MOVE.L  ENEMY_X,   D1          ; X
00000D26  2439 00001AE6           1377      MOVE.L  ENEMY_Y,   D2
00000D2C  5982                    1378      SUBQ.L  #4,D2
00000D2E                          1379  
00000D2E  2639 00001AE2           1380      MOVE.L  ENEMY_X,   D3
00000D34  0683 0000001B           1381      ADD.L   #ENMY_W_INIT, D3  
00000D3A  2839 00001AE6           1382      MOVE.L  ENEMY_Y,   D4
00000D40  0484 0000000D           1383      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00000D46                          1384      
00000D46                          1385       ; Draw 
00000D46  103C 0057               1386      MOVE.B  #87,        D0          ; Draw enemy
00000D4A  4E4F                    1387      TRAP    #15                     ; Trap (Perform action)
00000D4C                          1388  
00000D4C                          1389  *-------------- draw ENEMY anthrax -----------------*
00000D4C  2239 00001AE2           1390      MOVE.L  ENEMY_X,   D1          ; X
00000D52  2601                    1391      MOVE.L  D1,   D3
00000D54  0681 0000001B           1392      ADD.L   #ENMY_W_INIT,D1
00000D5A  2439 00001AE6           1393      MOVE.L  ENEMY_Y,   D2
00000D60  5982                    1394      SUBQ.L  #4,D2
00000D62  2639 00001AE2           1395      MOVE.L  ENEMY_X,   D3
00000D68  0683 0000000C           1396      ADDI.L   #12,D3
00000D6E                          1397      
00000D6E  2839 00001AE6           1398      MOVE.L  ENEMY_Y,   D4
00000D74  0484 0000000D           1399      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00000D7A  5704                    1400      SUB.B   #3,D4
00000D7C                          1401      
00000D7C                          1402      ; Draw 
00000D7C  103C 0057               1403      MOVE.B  #87,        D0          ; Draw enemy
00000D80  4E4F                    1404      TRAP    #15                     ; Trap (Perform action)
00000D82                          1405  
00000D82                          1406  *-------------- draw ENEMY antena -----------------*    
00000D82                          1407      ; change thickness
00000D82  7203                    1408      MOVE.l  #3,D1
00000D84  103C 005D               1409      MOVE.B  #93,D0
00000D88  4E4F                    1410      TRAP    #15
00000D8A                          1411  
00000D8A  2239 00001AE2           1412      MOVE.L  ENEMY_X,D1
00000D90  5681                    1413      ADD.L   #3,D1
00000D92  2439 00001AE6           1414      MOVE.L  ENEMY_Y,D2
00000D98  0482 0000000D           1415      SUB.L   #ENMY_H_INIT,D2
00000D9E  2601                    1416      MOVE.L  D1,D3
00000DA0  0483 0000000A           1417      SUB.L   #10,D3
00000DA6  2802                    1418      MOVE.L  D2,D4
00000DA8  5F84                    1419      SUBI.L  #7,D4
00000DAA                          1420  
00000DAA  103C 0054               1421      MOVE.B  #84,D0
00000DAE  4E4F                    1422      TRAP    #15
00000DB0                          1423  
00000DB0                          1424  *-------------- draw ENEMY leg 1 -----------------*
00000DB0  2239 00001AE2           1425      MOVE.L  ENEMY_X,D1
00000DB6  2439 00001AE6           1426      MOVE.L  ENEMY_Y,D2
00000DBC  2601                    1427      MOVE.L  D1,D3
00000DBE  5883                    1428      ADD.L   #4,D3
00000DC0  2802                    1429      MOVE.L  D2,D4
00000DC2  5984                    1430      SUBI.L  #4,D4
00000DC4                          1431  
00000DC4  103C 0054               1432      MOVE.B  #84,D0
00000DC8  4E4F                    1433      TRAP    #15
00000DCA                          1434  
00000DCA                          1435  *-------------- draw ENEMY leg 2 -----------------*
00000DCA  2239 00001AE2           1436      MOVE.L  ENEMY_X,D1
00000DD0  0681 0000000D           1437      ADD.L   #13,D1
00000DD6  2439 00001AE6           1438      MOVE.L  ENEMY_Y,D2
00000DDC  2601                    1439      MOVE.L  D1,D3
00000DDE  2802                    1440      MOVE.L  D2,D4
00000DE0  5984                    1441      SUBI.L  #4,D4
00000DE2                          1442  
00000DE2  103C 0054               1443      MOVE.B  #84,D0
00000DE6  4E4F                    1444      TRAP    #15
00000DE8                          1445  
00000DE8                          1446  *-------------- draw ENEMY leg 3 -----------------*
00000DE8  2239 00001AE2           1447      MOVE.L  ENEMY_X,D1
00000DEE  0681 00000016           1448      ADD.L   #22,D1
00000DF4  2839 00001AE6           1449      MOVE.L  ENEMY_Y,D4
00000DFA  2601                    1450      MOVE.L  D1,D3
00000DFC  5683                    1451      ADD.L   #3,D3
00000DFE  2404                    1452      MOVE.L  D4,D2
00000E00  5982                    1453      SUBI.L  #4,D2
00000E02                          1454  
00000E02  103C 0054               1455      MOVE.B  #84,D0
00000E06  4E4F                    1456      TRAP    #15
00000E08                          1457  
00000E08                          1458      ; Set Pixel Colors
00000E08  7200                    1459      MOVE.L  #BLACK,     D1          ; Set Pen color
00000E0A  103C 0050               1460      MOVE.B  #80,        D0          ; Task for Pen Color
00000E0E  4E4F                    1461      TRAP    #15                     ; Trap (Perform action)
00000E10                          1462  
00000E10                          1463  *-------------- draw ENEMY eye -----------------*
00000E10                          1464      ; change thickness
00000E10  7203                    1465      MOVE.l  #3,D1
00000E12  103C 005D               1466      MOVE.B  #93,D0
00000E16  4E4F                    1467      TRAP    #15
00000E18                          1468  
00000E18  2239 00001AE2           1469      MOVE.L  ENEMY_X,D1
00000E1E  5681                    1470      ADD.L   #3,D1
00000E20  2439 00001AE6           1471      MOVE.L  ENEMY_Y,D2
00000E26  0482 0000000A           1472      SUB.L   #10,D2
00000E2C  2601                    1473      MOVE.L  D1,D3
00000E2E  5283                    1474      ADDQ.L  #1,D3
00000E30  2802                    1475      MOVE.L  D2,D4
00000E32                          1476  
00000E32  103C 0054               1477      MOVE.B  #84,D0
00000E36  4E4F                    1478      TRAP    #15
00000E38                          1479  
00000E38                          1480      ; reset pen
00000E38  7201                    1481      MOVE.l  #1,D1
00000E3A  103C 005D               1482      MOVE.B  #93,D0
00000E3E  4E4F                    1483      TRAP    #15
00000E40                          1484  
00000E40  4E75                    1485      RTS                             ; Return to subroutine
00000E42                          1486  
00000E42                          1487  DRAW_FLYENEMY:
00000E42                          1488      ; Set Pixel Colors
00000E42  2239 00001AFE           1489      MOVE.L  FLYENEMYCOLOR,       D1          ; Set Background color
00000E48  103C 0050               1490      MOVE.B  #80,        D0          ; Task for Background Color
00000E4C  4E4F                    1491      TRAP    #15                     ; Trap (Perform action)
00000E4E                          1492  
00000E4E                          1493      ; Reset Pixel Colors
00000E4E  2239 00001AFE           1494      MOVE.L  FLYENEMYCOLOR,     D1          ; Set Background color
00000E54  103C 0051               1495      MOVE.B  #81,        D0          ; Task for Background Color
00000E58  4E4F                    1496      TRAP    #15                     ; Trap (Perform action)
00000E5A                          1497  
00000E5A                          1498          *-------------- draw FLYINGENEMY body -----------------*
00000E5A  2239 00001AF2           1499      MOVE.L  FLYINGENEMY_X,   D1          ; X
00000E60  2439 00001AF6           1500      MOVE.L  FLYINGENEMY_Y,   D2
00000E66  5982                    1501      SUBQ.L  #4,D2
00000E68                          1502  
00000E68  2639 00001AF2           1503      MOVE.L  FLYINGENEMY_X,   D3
00000E6E  0683 0000001E           1504      ADD.L   #FLY_ENMY_W_INIT, D3  
00000E74  2839 00001AF6           1505      MOVE.L  FLYINGENEMY_Y,   D4
00000E7A  0484 0000000D           1506      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00000E80                          1507      
00000E80                          1508       ; Draw 
00000E80  103C 0057               1509      MOVE.B  #87,        D0          ; Draw enemy
00000E84  4E4F                    1510      TRAP    #15                     ; Trap (Perform action)
00000E86                          1511  
00000E86                          1512  *-------------- draw FLYINGENEMY anthrax -----------------*
00000E86  2239 00001AF2           1513      MOVE.L  FLYINGENEMY_X,   D1          ; X
00000E8C  2601                    1514      MOVE.L  D1,   D3
00000E8E  0681 0000001E           1515      ADD.L   #FLY_ENMY_W_INIT,D1
00000E94  2439 00001AF6           1516      MOVE.L  FLYINGENEMY_Y,   D2
00000E9A  5982                    1517      SUBQ.L  #4,D2
00000E9C  2639 00001AF2           1518      MOVE.L  FLYINGENEMY_X,   D3
00000EA2  0683 0000000C           1519      ADDI.L   #12,D3
00000EA8                          1520      
00000EA8  2839 00001AF6           1521      MOVE.L  FLYINGENEMY_Y,   D4
00000EAE  0484 0000000D           1522      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00000EB4  5704                    1523      SUB.B   #3,D4
00000EB6                          1524      
00000EB6                          1525      ; Draw 
00000EB6  103C 0057               1526      MOVE.B  #87,        D0          ; Draw enemy
00000EBA  4E4F                    1527      TRAP    #15                     ; Trap (Perform action)
00000EBC                          1528  
00000EBC                          1529  *-------------- draw FLYINGENEMY antena -----------------*    
00000EBC                          1530      ; change thickness
00000EBC  7203                    1531      MOVE.l  #3,D1
00000EBE  103C 005D               1532      MOVE.B  #93,D0
00000EC2  4E4F                    1533      TRAP    #15
00000EC4                          1534  
00000EC4  2239 00001AF2           1535      MOVE.L  FLYINGENEMY_X,D1
00000ECA  5681                    1536      ADD.L   #3,D1
00000ECC  2439 00001AF6           1537      MOVE.L  FLYINGENEMY_Y,D2
00000ED2  0482 0000000D           1538      SUB.L   #FLY_ENMY_H_INIT,D2
00000ED8  2601                    1539      MOVE.L  D1,D3
00000EDA  0483 0000000A           1540      SUB.L   #10,D3
00000EE0  2802                    1541      MOVE.L  D2,D4
00000EE2  5F84                    1542      SUBI.L  #7,D4
00000EE4                          1543  
00000EE4  103C 0054               1544      MOVE.B  #84,D0
00000EE8  4E4F                    1545      TRAP    #15
00000EEA                          1546  
00000EEA                          1547  *-------------- draw FLYINGENEMY leg 1 -----------------*
00000EEA  2239 00001AF2           1548      MOVE.L  FLYINGENEMY_X,D1
00000EF0  2439 00001AF6           1549      MOVE.L  FLYINGENEMY_Y,D2
00000EF6  2601                    1550      MOVE.L  D1,D3
00000EF8  5883                    1551      ADD.L   #4,D3
00000EFA  2802                    1552      MOVE.L  D2,D4
00000EFC  5984                    1553      SUBI.L  #4,D4
00000EFE                          1554  
00000EFE  103C 0054               1555      MOVE.B  #84,D0
00000F02  4E4F                    1556      TRAP    #15
00000F04                          1557  
00000F04                          1558  *-------------- draw FLYINGENEMY leg 2 -----------------*
00000F04  2239 00001AF2           1559      MOVE.L  FLYINGENEMY_X,D1
00000F0A  0681 0000000D           1560      ADD.L   #13,D1
00000F10  2439 00001AF6           1561      MOVE.L  FLYINGENEMY_Y,D2
00000F16  2601                    1562      MOVE.L  D1,D3
00000F18  2802                    1563      MOVE.L  D2,D4
00000F1A  5984                    1564      SUBI.L  #4,D4
00000F1C                          1565  
00000F1C  103C 0054               1566      MOVE.B  #84,D0
00000F20  4E4F                    1567      TRAP    #15
00000F22                          1568  
00000F22                          1569  *-------------- draw FLYINGENEMY leg 3 -----------------*
00000F22  2239 00001AF2           1570      MOVE.L  FLYINGENEMY_X,D1
00000F28  0681 00000016           1571      ADD.L   #22,D1
00000F2E  2839 00001AF6           1572      MOVE.L  FLYINGENEMY_Y,D4
00000F34  2601                    1573      MOVE.L  D1,D3
00000F36  5683                    1574      ADD.L   #3,D3
00000F38  2404                    1575      MOVE.L  D4,D2
00000F3A  5982                    1576      SUBI.L  #4,D2
00000F3C                          1577  
00000F3C  103C 0054               1578      MOVE.B  #84,D0
00000F40  4E4F                    1579      TRAP    #15
00000F42                          1580  
00000F42                          1581      ; Set Pixel Colors
00000F42  7200                    1582      MOVE.L  #BLACK,     D1          ; Set Pen color
00000F44  103C 0050               1583      MOVE.B  #80,        D0          ; Task for Pen Color
00000F48  4E4F                    1584      TRAP    #15                     ; Trap (Perform action)
00000F4A                          1585  
00000F4A                          1586  *-------------- draw FLYINGENEMY eye -----------------*
00000F4A                          1587      ; change thickness
00000F4A  7203                    1588      MOVE.l  #3,D1
00000F4C  103C 005D               1589      MOVE.B  #93,D0
00000F50  4E4F                    1590      TRAP    #15
00000F52                          1591  
00000F52  2239 00001AF2           1592      MOVE.L  FLYINGENEMY_X,D1
00000F58  5681                    1593      ADD.L   #3,D1
00000F5A  2439 00001AF6           1594      MOVE.L  FLYINGENEMY_Y,D2
00000F60  0482 0000000A           1595      SUB.L   #10,D2
00000F66  2601                    1596      MOVE.L  D1,D3
00000F68  2802                    1597      MOVE.L  D2,D4
00000F6A                          1598  
00000F6A  103C 0054               1599      MOVE.B  #84,D0
00000F6E  4E4F                    1600      TRAP    #15
00000F70                          1601  
00000F70                          1602      ; reset pen
00000F70  7201                    1603      MOVE.l  #1,D1
00000F72  103C 005D               1604      MOVE.B  #93,D0
00000F76  4E4F                    1605      TRAP    #15
00000F78                          1606  
00000F78  4E75                    1607      RTS  
00000F7A                          1608  
00000F7A                          1609  DRAW_HEALTHPACK:
00000F7A                          1610  
00000F7A  0C39 0000 00001AA9      1611      CMP.B   #00,     SPAWN_HEALTHPACKS
00000F82  6700 006C               1612      BEQ     DRAW_HEALTHPACK_DONE
00000F86  0C39 0000 00001AA8      1613      CMP.B   #00,     DRAW_HEALTHPACKS
00000F8E  6700 0060               1614      BEQ     DRAW_HEALTHPACK_DONE
00000F92                          1615      
00000F92                          1616      ;BSR     RANDOM_NUMBER
00000F92                          1617      ;CMP.L   #$80,  D1
00000F92                          1618      ;BGT     DRAW_HEALTHPACK_DONE
00000F92                          1619  
00000F92  13FC 0001 00001AA8      1620      MOVE.B  #01,        DRAW_HEALTHPACKS
00000F9A  3239 00001AC0           1621      MOVE.W  SCREEN_H,     D1
00000FA0  82FC 0002               1622      DIVU.W    #02,        D1
00000FA4  C2BC 0000FFFF           1623      AND.L   #$0000FFFF,   D1
00000FAA  23C1 00001AEE           1624      MOVE.L  D1,         HEALTH_Y
00000FB0                          1625      ; Set Pixel Colors
00000FB0  7200                    1626      MOVE.L  #BLACK,       D1          ; Set Background color
00000FB2  103C 0050               1627      MOVE.B  #80,        D0          ; Task for Background Color
00000FB6  4E4F                    1628      TRAP    #15                     ; Trap (Perform action)
00000FB8                          1629  
00000FB8                          1630      ; Reset Pixel Colors
00000FB8  223C 0044FF44           1631      MOVE.L  #LIFEGREEN,     D1          ; Set Background color
00000FBE  103C 0051               1632      MOVE.B  #81,        D0          ; Task for Background Color
00000FC2  4E4F                    1633      TRAP    #15                     ; Trap (Perform action)
00000FC4                          1634  
00000FC4                          1635      ; Set X, Y, Width and Height
00000FC4  2239 00001AEA           1636      MOVE.L  HEALTH_X,    D1          ; X
00000FCA  2439 00001AEE           1637      MOVE.L  HEALTH_Y,    D2          ; Y
00000FD0  2639 00001AEA           1638      MOVE.L  HEALTH_X,    D3
00000FD6  0683 0000000C           1639      ADD.L   #HEALTH_PACK_W,   D3      ; Width
00000FDC  2839 00001AEE           1640      MOVE.L  HEALTH_Y,    D4 
00000FE2  0484 0000000C           1641      SUB.L   #HEALTH_PACK_H,   D4      ; Height
00000FE8                          1642      
00000FE8                          1643      ; Draw Enemy    
00000FE8  103C 0057               1644      MOVE.B  #87,        D0          ; Draw Enemy
00000FEC  4E4F                    1645      TRAP    #15                     ; Trap (Perform action)
00000FEE  4E75                    1646      RTS                             ; Return to subroutine
00000FF0                          1647  
00000FF0                          1648  DRAW_HEALTHPACK_DONE:
00000FF0  23FC FFFFFFFF 00001AEE  1649      MOVE.L  #-1, HEALTH_Y
00000FFA  4E75                    1650      RTS
00000FFC                          1651  
00000FFC                          1652  DRAW_FLOOR:
00000FFC                          1653      ; Set Pixel Colors
00000FFC  223C 00566D19           1654      MOVE.L  #GREEN,     D1          ; Set Background color
00001002  103C 0050               1655      MOVE.B  #80,        D0          ; Task for Background Color
00001006  4E4F                    1656      TRAP    #15                     ; Trap (Perform action)
00001008                          1657  
00001008  223C 00566D19           1658      MOVE.L  #GREEN,     D1
0000100E  103C 0051               1659      MOVE.B  #81,        D0
00001012  4E4F                    1660      TRAP    #15
00001014                          1661  
00001014                          1662      
00001014                          1663      ; Set X, Y, X2, and Y2
00001014  7200                    1664      MOVE.L  #0,   D1          ; X
00001016  243C 000000F1           1665      MOVE.L  #241,  D2          ; Y
0000101C  263C 00000280           1666      MOVE.L  #640,   D3           
00001022  283C 000001E0           1667      MOVE.L  #480,   D4 
00001028                          1668      
00001028                          1669      ; Draw grass
00001028  103C 0057               1670      MOVE.B  #87,        D0          ; Draw Line
0000102C  4E4F                    1671      TRAP    #15                     ; Trap (Perform action)
0000102E                          1672  
0000102E                          1673      ; Set Pixel Colors
0000102E  223C 0019506D           1674      MOVE.L  #BROWN,     D1          ; Set Background color
00001034  103C 0050               1675      MOVE.B  #80,        D0          ; Task for Background Color
00001038  4E4F                    1676      TRAP    #15                     ; Trap (Perform action)
0000103A                          1677  
0000103A  223C 0019506D           1678      MOVE.L  #BROWN,     D1
00001040  103C 0051               1679      MOVE.B  #81,        D0
00001044  4E4F                    1680      TRAP    #15
00001046                          1681  
00001046                          1682  * -----------------------------------------------------------
00001046                          1683  * Find level and draw dirt
00001046                          1684  * -----------------------------------------------------------
00001046  45F9 00001AAE           1685      LEA     LEVELS,      A2
0000104C  2A39 00001AD0           1686      MOVE.L  PLAYER_SCORE,   D5
00001052                          1687      ;CMP.L   (A2)+,       D5
00001052                          1688      ;BGT     DRAW_FLOOR_L5
00001052                          1689      ;CMP.L   (A2)+,       D5
00001052                          1690      ;BGT     DRAW_FLOOR_L4
00001052                          1691      ;CMP.L   (A2)+,       D5
00001052                          1692      ;BGT     DRAW_FLOOR_L3
00001052                          1693      ;CMP.L   (A2)+,       D5
00001052                          1694      ;BGT     DRAW_FLOOR_L2
00001052  6000 0074               1695      BRA     DRAW_FLOOR_L1
00001056                          1696  
00001056                          1697  DRAW_FLOOR_L5:
00001056  33FC 000C 00001BB0      1698      MOVE.W  #12,SCALER
0000105E  243C 000001E0           1699      MOVE.L  #480,   D2          ; Y
00001064                          1700      ;MOVE.L  #135, FLYINGENEMY_Y
00001064                          1701      ;MOVE.W  #40, FLYENEMY_HEIGHT
00001064                          1702      ;MOVE.W  #65, FLYENEMY_WIDTH
00001064                          1703      ;MOVE.W  #40, ENEMY_HEIGHT
00001064                          1704      ;MOVE.W  #40, ENEMY_WIDTH
00001064  6000 006C               1705      BRA     DRAWDIRT
00001068                          1706      
00001068                          1707  DRAW_FLOOR_L4:
00001068  33FC 000A 00001BB0      1708      MOVE.W  #10,SCALER
00001070  243C 000001E0           1709      MOVE.L  #480,   D2          ; Y
00001076                          1710      ;MOVE.L  #140, FLYINGENEMY_Y
00001076                          1711      ;MOVE.W  #45, FLYENEMY_HEIGHT
00001076                          1712      ;MOVE.W  #55, FLYENEMY_WIDTH
00001076                          1713      ;MOVE.W  #30, ENEMY_HEIGHT
00001076                          1714      ;MOVE.W  #30, ENEMY_WIDTH
00001076  6000 005A               1715      BRA     DRAWDIRT
0000107A                          1716  DRAW_FLOOR_L3:
0000107A  33FC 0008 00001BB0      1717      MOVE.W  #8,SCALER
00001082  243C 000001AE           1718      MOVE.L  #430,   D2          ; Y
00001088                          1719      ;MOVE.L  #160, FLYINGENEMY_Y
00001088                          1720      ;MOVE.W  #25, FLYENEMY_HEIGHT
00001088                          1721      ;MOVE.W  #35, FLYENEMY_WIDTH
00001088                          1722      ;MOVE.W  #25, ENEMY_HEIGHT
00001088                          1723      ;MOVE.W  #25, ENEMY_WIDTH
00001088  6000 0048               1724      BRA     DRAWDIRT
0000108C                          1725  DRAW_FLOOR_L2:
0000108C  33FC 0006 00001BB0      1726      MOVE.W  #6,SCALER
00001094  243C 0000014A           1727      MOVE.L  #330,   D2          ; Y
0000109A  23FC 000000AA 00001AF6  1728      MOVE.L  #170, FLYINGENEMY_Y
000010A4  33FC 000F 00001B3A      1729      MOVE.W  #15, FLYENEMY_HEIGHT
000010AC  33FC 0019 00001B38      1730      MOVE.W  #25, FLYENEMY_WIDTH
000010B4  33FC 000F 00001B36      1731      MOVE.W  #15, ENEMY_HEIGHT
000010BC  33FC 000F 00001B34      1732      MOVE.W  #15, ENEMY_WIDTH
000010C4                          1733  
000010C4  6000 000C               1734      BRA     DRAWDIRT
000010C8                          1735  DRAW_FLOOR_L1:
000010C8  243C 00000115           1736      MOVE.L  #277,   D2          ; Y
000010CE  6000 0002               1737      BRA     DRAWDIRT
000010D2                          1738  DRAWDIRT:
000010D2                          1739      ; Set X, Y, X2, and Y2
000010D2  7200                    1740      MOVE.L  #0,   D1          ; X
000010D4  263C 00000280           1741      MOVE.L  #640,   D3           
000010DA  283C 000001E0           1742      MOVE.L  #480,   D4 
000010E0                          1743      
000010E0                          1744      ; Draw Dirt
000010E0  103C 0057               1745      MOVE.B  #87,        D0          ; Draw Line
000010E4  4E4F                    1746      TRAP    #15                     ; Trap (Perform action)
000010E6                          1747  
000010E6                          1748  
000010E6                          1749      ; Reset Pixel Colors
000010E6  7200                    1750      MOVE.L  #$00000000,     D1          ; Set Background color
000010E8  103C 0050               1751      MOVE.B  #80,        D0          ; Task for Background Color
000010EC  4E4F                    1752      TRAP    #15                     ; Trap (Perform action)
000010EE                          1753  
000010EE                          1754      ; Reset Pixel Colors
000010EE  7200                    1755      MOVE.L  #$00000000,     D1          ; Set Background color
000010F0  103C 0051               1756      MOVE.B  #81,        D0          ; Task for Background Color
000010F4  4E4F                    1757      TRAP    #15                     ; Trap (Perform action)
000010F6                          1758  
000010F6  4E75                    1759      RTS                             ; Return to subroutine
000010F8                          1760  
000010F8                          1761  
000010F8                          1762  *-----------------DRAW respawn -----------------------------*
000010F8                          1763  DRAW_RESPAWN:
000010F8  7A00                    1764      MOVEQ.L     #0,  D5
000010FA  3A39 00001BA6           1765      MOVE.W      respawnTime,D5
00001100                          1766  
00001100  B381                    1767      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00001102  3239 00001AC0           1768      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001108  82FC 0002               1769      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000110C  23C1 00001ACC           1770      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00001112                          1771  
00001112                          1772  MOVE_RESPAWNED:
00001112  23C5 00001AC8           1773      MOVE.L  D5, PLAYER_X
00001118                          1774  
00001118                          1775      ; Enable back buffer
00001118  103C 005E               1776      MOVE.B  #TC_REDRAW,        D0
0000111C  4E4F                    1777      TRAP    #15
0000111E                          1778  
0000111E                          1779      ; Clear the screen
0000111E  103C 000B               1780      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001122  323C FF00               1781      MOVE.W  #$FF00,     D1          ; Clear contents
00001126  4E4F                    1782      TRAP    #15                     ; Trap (Perform action)
00001128                          1783  
00001128  123C 0001               1784      MOVE.B  #1,D1
0000112C  103C 005D               1785      MOVE.B  #93,D0
00001130  4E4F                    1786      TRAP    #15
00001132                          1787  
00001132  6100 F684               1788      BSR     DRAW_BACKGROUND        
00001136  6100 F5F0               1789      BSR     DRAW_HILL 
0000113A  6100 F724               1790      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
0000113E  6100 F9E8               1791      BSR     DRAW_PLAYER             ; Draw Player
00001142  6100 FBC4               1792      BSR     DRAW_ENEMY              ; Draw Enemy
00001146  6100 FCFA               1793      BSR     DRAW_FLYENEMY
0000114A  6100 FE2E               1794      BSR     DRAW_HEALTHPACK
0000114E  6100 FEAC               1795      BSR     DRAW_FLOOR              ; Draw Floor
Line 1796 ERROR: Undefined symbol
00001152  6100 ABC2               1796      BSR     drawPause        
00001156                          1797  
00001156                          1798  
00001156  5279 00001BA6           1799      ADDQ.W      #1,respawnTime
0000115C  3A39 00001BA6           1800      MOVE.W      respawnTime,D5
00001162  0C79 00C8 00001BA6      1801      CMP.W       #200,respawnTime
0000116A  66A6                    1802      BNE         MOVE_RESPAWNED
0000116C  33FC 0000 00001BA6      1803      MOVE.W     #0,respawnTime
00001174                          1804      ;else
00001174  4E75                    1805      RTS
00001176                          1806      
00001176                          1807  *-----------------------------------------------------------
00001176                          1808  * Subroutine    : Collision Check
00001176                          1809  * Description   : Axis-Aligned Bounding Box Collision Detection
00001176                          1810  * Algorithm checks for overlap on the 4 sides of the Player and 
00001176                          1811  * Enemy rectangles
00001176                          1812  * PLAYER_X <= ENEMY_X + ENEMY_W &&
00001176                          1813  * PLAYER_X + PLAYER_W >= ENEMY_X &&
00001176                          1814  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
00001176                          1815  * PLAYER_H + PLAYER_Y >= ENEMY_Y
00001176                          1816  *-----------------------------------------------------------
00001176                          1817  CHECK_COLLISIONS:
00001176                          1818      include     "battle/battlecollisions.x68"     
00001176  4281                    1819      CLR.L   D1                      ; Clear D1
00001178  4282                    1820      CLR.L   D2                      ; Clear D2
0000117A                          1821  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
0000117A  2239 00001AC8           1822      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001180  D239 00001B31           1823      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001186  2439 00001AE2           1824      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
0000118C  B481                    1825      CMP.L   D1,         D2          ; Do the Overlap ?
0000118E  6F00 0006               1826      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
00001192  6000 0048               1827      BRA     CHECK_FLYENEMY_COLLISIONS
00001196                          1828  
00001196                          1829  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
00001196  2239 00001AC8           1830      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
0000119C  2439 00001AE2           1831      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
000011A2  D479 00001B34           1832      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
000011A8  B481                    1833      CMP.L   D1,         D2          ; Do they OverLap ?
000011AA  6C00 0006               1834      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
000011AE  6000 002C               1835      BRA     CHECK_FLYENEMY_COLLISIONS  
000011B2                          1836  
000011B2                          1837  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
000011B2  2239 00001ACC           1838      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
000011B8  2439 00001AE6           1839      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
000011BE                          1840      ;ADD.W   ENMY_H_INIT,D2          ; Set Enemy Height to D2
000011BE  B481                    1841      CMP.L   D1,         D2          ; Do they Overlap ?
000011C0  6F00 0006               1842      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
000011C4  6000 0016               1843      BRA     CHECK_FLYENEMY_COLLISIONS
000011C8                          1844  
000011C8                          1845  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
000011C8  D238 000D               1846      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
000011CC  2439 00001AE6           1847      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
000011D2  B481                    1848      CMP.L   D1,         D2          ; Do they OverLap ?
000011D4  6C00 0320               1849      BGE     ENEMYCOLLISION               ; Collision !
000011D8  6000 0002               1850      BRA     CHECK_FLYENEMY_COLLISIONS
000011DC                          1851  
000011DC                          1852  CHECK_FLYENEMY_COLLISIONS:
000011DC  4281                    1853      CLR.L   D1                      ; Clear D1
000011DE  4282                    1854      CLR.L   D2                      ; Clear D2
000011E0                          1855  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
000011E0  2239 00001AC8           1856      MOVE.L  PLAYER_X,   D1
000011E6  D239 00001B31           1857      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
000011EC  2439 00001AF2           1858      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
000011F2  B481                    1859      CMP.L   D1,         D2                          ; Do the Overlap ?
000011F4  6F00 0006               1860      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
000011F8  6000 0050               1861      BRA     CHECK_HEALTH_COLLISIONS
000011FC                          1862  
000011FC                          1863  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
000011FC  2239 00001AC8           1864      MOVE.L  PLAYER_X,   D1
00001202  2439 00001AF2           1865      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001208  D479 00001B38           1866      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
0000120E  B481                    1867      CMP.L   D1,         D2                  ; Do they OverLap ?
00001210  6C00 0006               1868      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001214  6000 0034               1869      BRA     CHECK_HEALTH_COLLISIONS
00001218                          1870  
00001218                          1871  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001218  2239 00001ACC           1872      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
0000121E  2439 00001AF6           1873      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001224  D479 00001B3A           1874      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000122A  B481                    1875      CMP.L   D1,         D2          ; Do they Overlap ?
0000122C  6C00 0006               1876      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001230  6000 0018               1877      BRA     CHECK_HEALTH_COLLISIONS
00001234                          1878  
00001234                          1879  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001234  D239 00001B32           1880      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
0000123A  2439 00001AF6           1881      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001240  B481                    1882      CMP.L   D1,         D2          ; Do they OverLap ?
00001242  6F00 02B2               1883      BLE     ENEMYCOLLISION               ; Collision !
00001246  6000 0002               1884      BRA     CHECK_HEALTH_COLLISIONS
0000124A                          1885  
0000124A                          1886  CHECK_HEALTH_COLLISIONS:
0000124A  4281                    1887      CLR.L   D1                      ; Clear D1
0000124C  4282                    1888      CLR.L   D2                      ; Clear D2
0000124E                          1889  PLX_LTE_TO_HEALTH_X_PLUS_W:
0000124E  2239 00001AC8           1890      MOVE.L  PLAYER_X,   D1
00001254  D239 00001B31           1891      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
0000125A  2439 00001AEA           1892      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
00001260  B481                    1893      CMP.L   D1,         D2                          ; Do the Overlap ?
00001262  6F00 0006               1894      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
00001266  6000 0050               1895      BRA     CHECK_ATTACK_COLLISIONS
0000126A                          1896  
0000126A                          1897  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
0000126A  2239 00001AC8           1898      MOVE.L  PLAYER_X,   D1
00001270  2439 00001AEA           1899      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
00001276  0682 0000000C           1900      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
0000127C  B481                    1901      CMP.L   D1,         D2                  ; Do they OverLap ?
0000127E  6C00 0006               1902      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
00001282  6000 0034               1903      BRA     CHECK_ATTACK_COLLISIONS
00001286                          1904  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
00001286  2239 00001ACC           1905      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
0000128C  2439 00001AEE           1906      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
00001292  0682 0000000C           1907      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
00001298  B481                    1908      CMP.L   D1,         D2          ; Do they Overlap ?
0000129A  6C00 0006               1909      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
0000129E  6000 0018               1910      BRA     CHECK_ATTACK_COLLISIONS
000012A2                          1911  
000012A2                          1912  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
000012A2  D239 00001B32           1913      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
000012A8  2439 00001AEE           1914      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
000012AE  B481                    1915      CMP.L   D1,         D2          ; Do they OverLap ?
000012B0  6F00 02AC               1916      BLE     HEALTH_COLLISION               ; Collision !
000012B4  6000 0002               1917      BRA     CHECK_ATTACK_COLLISIONS
000012B8                          1918  
000012B8                          1919  CHECK_ATTACK_COLLISIONS:
000012B8  4281                    1920      CLR.L   D1                      ; Clear D1
000012BA  4282                    1921      CLR.L   D2                      ; Clear D2
000012BC                          1922  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
000012BC  2239 00001B0E           1923      MOVE.L  ATTACK_X,   D1
000012C2  0681 00000023           1924      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
000012C8  2439 00001AE2           1925      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
000012CE  B481                    1926      CMP.L   D1,         D2                          ; Do the Overlap ?
000012D0  6F00 0006               1927      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
000012D4  6000 0050               1928      BRA     CHECK_ATTACK_FLY_COLLISIONS
000012D8                          1929  
000012D8                          1930  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
000012D8  2239 00001B0E           1931      MOVE.L  ATTACK_X,   D1
000012DE  2439 00001AE2           1932      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
000012E4  D479 00001B34           1933      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000012EA  B481                    1934      CMP.L   D1,         D2                  ; Do they OverLap ?
000012EC  6C00 0006               1935      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
000012F0  6000 0034               1936      BRA     CHECK_ATTACK_FLY_COLLISIONS
000012F4                          1937  
000012F4                          1938  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
000012F4  2239 00001B12           1939      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
000012FA  2439 00001AE6           1940      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001300  D479 00001B36           1941      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001306  B481                    1942      CMP.L   D1,         D2          ; Do they Overlap ?
00001308  6C00 0006               1943      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
0000130C  6000 0018               1944      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001310                          1945  
00001310                          1946  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
00001310  0681 00000014           1947      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001316  2439 00001AE6           1948      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
0000131C  B481                    1949      CMP.L   D1,         D2          ; Do they OverLap ?
0000131E  6F00 0150               1950      BLE     ATTACK_COLLISION               ; Collision !
00001322  6000 0002               1951      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001326                          1952  
00001326                          1953  CHECK_ATTACK_FLY_COLLISIONS:
00001326  4281                    1954      CLR.L   D1                      ; Clear D1
00001328  4282                    1955      CLR.L   D2                      ; Clear D2
0000132A                          1956  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
0000132A  2239 00001B0E           1957      MOVE.L  ATTACK_X,   D1
00001330  0681 00000023           1958      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001336  2439 00001AF2           1959      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
0000133C  B481                    1960      CMP.L   D1,         D2                          ; Do the Overlap ?
0000133E  6F00 0006               1961      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001342  6000 0050               1962      BRA     CHECK_THROW_COLLISION
00001346                          1963  
00001346                          1964  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001346  2239 00001B0E           1965      MOVE.L  ATTACK_X,   D1
0000134C  2439 00001AF2           1966      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001352  D479 00001B38           1967      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001358  B481                    1968      CMP.L   D1,         D2                  ; Do they OverLap ?
0000135A  6C00 0006               1969      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
0000135E  6000 0034               1970      BRA     CHECK_THROW_COLLISION
00001362                          1971  
00001362                          1972  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001362  2239 00001B12           1973      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001368  2439 00001AF6           1974      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
0000136E  D479 00001B3A           1975      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001374  B481                    1976      CMP.L   D1,         D2          ; Do they Overlap ?
00001376  6C00 0006               1977      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
0000137A  6000 0018               1978      BRA     CHECK_THROW_COLLISION
0000137E                          1979  
0000137E                          1980  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
0000137E  0681 00000014           1981      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001384  2439 00001AF6           1982      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
0000138A  B481                    1983      CMP.L   D1,         D2          ; Do they OverLap ?
0000138C  6F00 0108               1984      BLE     ATTACK_FLY_COLLISION               ; Collision !
00001390  6000 0002               1985      BRA     CHECK_THROW_COLLISION
00001394                          1986  
00001394                          1987  CHECK_THROW_COLLISION:
00001394  4281                    1988      CLR.L   D1                      ; Clear D1
00001396  4282                    1989      CLR.L   D2                      ; Clear D2
00001398                          1990  THROW_X_LTE_TO_ENEMY_X_PLUS_W:
00001398  2239 00001B1C           1991      MOVE.L  THROW_X,   D1
0000139E  0681 00000023           1992      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
000013A4  2439 00001AE2           1993      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
000013AA  B481                    1994      CMP.L   D1,         D2                          ; Do the Overlap ?
000013AC  6F00 0006               1995      BLE     THROW_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
000013B0  6000 0050               1996      BRA     CHECK_THROW_FLY_COLLISIONS
000013B4                          1997  
000013B4                          1998  THROW_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
000013B4  2239 00001B1C           1999      MOVE.L  THROW_X,   D1
000013BA  2439 00001AE2           2000      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
000013C0  D479 00001B34           2001      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000013C6  B481                    2002      CMP.L   D1,         D2                  ; Do they OverLap ?
000013C8  6C00 0006               2003      BGE     TRW_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
000013CC  6000 0034               2004      BRA     CHECK_THROW_FLY_COLLISIONS
000013D0                          2005  
000013D0                          2006  TRW_LTE_TO_ENEMY_Y_PLUS_H:     
000013D0  2239 00001B20           2007      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
000013D6  2439 00001AE6           2008      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
000013DC  D479 00001B36           2009      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000013E2  B481                    2010      CMP.L   D1,         D2          ; Do they Overlap ?
000013E4  6C00 0006               2011      BGE     TRW_PLUS_H_LTE_TO_THROW_Y  ; Less than or Equal
000013E8  6000 0018               2012      BRA     CHECK_THROW_FLY_COLLISIONS
000013EC                          2013  
000013EC                          2014  TRW_PLUS_H_LTE_TO_THROW_Y:     ; Less than or Equal ?
000013EC  0681 0000000F           2015      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
000013F2  2439 00001AE6           2016      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
000013F8  B481                    2017      CMP.L   D1,         D2          ; Do they OverLap ?
000013FA  6F00 0074               2018      BLE     ATTACK_COLLISION               ; Collision !
000013FE  6000 0002               2019      BRA     CHECK_THROW_FLY_COLLISIONS
00001402                          2020  
00001402                          2021  CHECK_THROW_FLY_COLLISIONS:
00001402  4281                    2022      CLR.L   D1                      ; Clear D1
00001404  4282                    2023      CLR.L   D2                      ; Clear D2
00001406                          2024  THROW_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001406  2239 00001B1C           2025      MOVE.L  THROW_X,   D1
0000140C  0681 0000000F           2026      ADD.L   #THRW_W_INIT,D1          ; Move Player Width to D1
00001412  2439 00001AF2           2027      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001418  B481                    2028      CMP.L   D1,         D2                          ; Do the Overlap ?
0000141A  6F00 0006               2029      BLE     THROW_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
0000141E  6000 00B4               2030      BRA     COLLISION_CHECK_DONE
00001422                          2031  
00001422                          2032  THROW_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001422  2239 00001B1C           2033      MOVE.L  THROW_X,   D1
00001428  2439 00001AF2           2034      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
0000142E  D479 00001B38           2035      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001434  B481                    2036      CMP.L   D1,         D2                  ; Do they OverLap ?
00001436  6C00 0006               2037      BGE     TRW_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
0000143A  6000 0098               2038      BRA     COLLISION_CHECK_DONE
0000143E                          2039  
0000143E                          2040  TRW_LTE_TO_FLYENEMY_Y_PLUS_H:     
0000143E  2239 00001B20           2041      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001444  2439 00001AF6           2042      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
0000144A  D479 00001B3A           2043      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001450  B481                    2044      CMP.L   D1,         D2          ; Do they Overlap ?
00001452  6C00 0006               2045      BGE     TRW_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001456  6000 007C               2046      BRA     COLLISION_CHECK_DONE
0000145A                          2047  
0000145A                          2048  TRW_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
0000145A  0681 0000000F           2049      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
00001460  2439 00001AF6           2050      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001466  B481                    2051      CMP.L   D1,         D2          ; Do they OverLap ?
00001468  6F00 002C               2052      BLE     ATTACK_FLY_COLLISION               ; Collision !
0000146C  6000 0066               2053      BRA     COLLISION_CHECK_DONE
00001470                          2054  
00001470                          2055  
00001470                          2056  
00001470                          2057  ATTACK_COLLISION:
00001470  4A39 00001B2F           2058      TST.B   ENEMY_HIT
00001476  6600 0124               2059      BNE     STILL_COLLIDED
0000147A  6100 F660               2060      BSR     PLAY_HIT
0000147E  23FC 00000190 00001AE6  2061      MOVE.L  #400, ENEMY_Y
00001488  13FC 0001 00001B2F      2062      MOVE.B  #01,  ENEMY_HIT
00001490  6100 002A               2063      BSR     CHECK_ENEMIES_CLEARED
00001494  4E75                    2064      RTS
00001496                          2065  
00001496                          2066  ATTACK_FLY_COLLISION:
00001496  4A39 00001B30           2067      TST.B   FLYENEMY_HIT
0000149C  6600 00FE               2068      BNE     STILL_COLLIDED
000014A0  6100 F63A               2069      BSR     PLAY_HIT
000014A4  23FC 00000190 00001AF6  2070      MOVE.L  #400, FLYINGENEMY_Y
000014AE  13FC 0001 00001B30      2071      MOVE.B  #01,  FLYENEMY_HIT
000014B6  6100 0004               2072      BSR     CHECK_ENEMIES_CLEARED
000014BA  4E75                    2073      RTS
000014BC                          2074  
000014BC                          2075  CHECK_ENEMIES_CLEARED:
000014BC  5239 00001B2C           2076      ADDI.B  #1,         ENEMIES_DEFEATED
000014C2  1239 00001B2C           2077      MOVE.B  ENEMIES_DEFEATED,D1
000014C8  B239 00001B2E           2078      CMP.B   enemiesToDefeat,D1
000014CE  6700 0296               2079      BEQ     WAVE_DEFEATED
000014D2  4E75                    2080      RTS
000014D4                          2081  
000014D4                          2082  COLLISION_CHECK_DONE:               ; No Collision Update points
000014D4  4239 00001AA6           2083      CLR.B   IN_ENEMY
000014DA  4239 00001AA7           2084      CLR.B   IN_HPACK
000014E0  4281                    2085      CLR.L   D1
000014E2  1239 00001B08           2086      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
000014E8  D2B9 00001AD0           2087      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
000014EE  23C1 00001AD0           2088      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
000014F4  4E75                    2089      RTS                             ; Return to subroutine
000014F6                          2090  
000014F6                          2091  
000014F6                          2092  ENEMYCOLLISION:
000014F6  0C39 0001 00001AA6      2093      CMP.B     #$01, IN_ENEMY
000014FE  6700 009C               2094      BEQ     STILL_COLLIDED
00001502  0C39 0001 00001AA8      2095      CMP.B   #01, DRAW_HEALTHPACKS
0000150A  6600 F100               2096      BNE     RESET_HEALTH_POSITION
0000150E  13FC 0001 00001AA8      2097      MOVE.B  #01, DRAW_HEALTHPACKS 
00001516  13FC 0001 00001AA9      2098      MOVE.B  #01, SPAWN_HEALTHPACKS 
0000151E  5339 00001B06           2099      SUB.B   #1, antHealth
00001524  13FC 0001 00001AA6      2100      MOVE.B  #$01, IN_ENEMY
0000152C  4A39 00001B06           2101      TST.B   antHealth
00001532  6700 0008               2102      BEQ     antKilled
00001536  6100 F54A               2103      BSR     PLAY_HITHURT               ; Play Opps Wav
0000153A  4E75                    2104      RTS                             ; Return to subroutine
0000153C                          2105  
0000153C                          2106  antKilled:
0000153C  13FC 0003 00001B06      2107      MOVE.B    #3, antHealth
00001544  5339 00001B07           2108      SUBQ.b    #1, antsRemaining
0000154A  4A39 00001B07           2109      TST.b     antsRemaining
00001550  6700 0126               2110      BEQ       GAME_OVER
00001554  6100 F52C               2111      BSR     PLAY_HITHURT               ; Play Opps Wav
00001558  6100 FB9E               2112      BSR     DRAW_RESPAWN
0000155C  4E75                    2113      RTS
0000155E                          2114  
0000155E                          2115  HEALTH_COLLISION:
0000155E  0C39 0001 00001AA7      2116      CMP.B     #$01, IN_HPACK
00001566  6700 0034               2117      BEQ     STILL_COLLIDED
0000156A  13FC 0000 00001AA8      2118      MOVE.B  #00, DRAW_HEALTHPACKS
00001572  6100 F52C               2119      BSR     PLAY_POWERUP               ; Play Opps Wav
00001576  5239 00001B06           2120      ADD.B   #1, antHealth
0000157C  0C39 0003 00001B06      2121      CMP.B   #03, antHealth
00001584  6C00 000C               2122      BGE     STOP_HPACK_SPAWN
00001588  13FC 0001 00001AA7      2123      MOVE.B  #$01, IN_HPACK
00001590  4E75                    2124      RTS
00001590  4E75                    2125  -------------------- end include --------------------
00001592                          2126  
00001592                          2127  STOP_HPACK_SPAWN:
00001592  13FC 0000 00001AA9      2128      MOVE.B  #00, SPAWN_HEALTHPACKS
0000159A  4E75                    2129      RTS
0000159C                          2130  
0000159C                          2131  STILL_COLLIDED:
0000159C  4E75                    2132      RTS
0000159E                          2133  *-----------------------------------------------------------
0000159E                          2134  * Subroutine    : EXIT
0000159E                          2135  * Description   : Exit message and End Game
0000159E                          2136  *-----------------------------------------------------------
0000159E                          2137  
0000159E                          2138  HILL_LOST:
0000159E                          2139  
0000159E  103C 000B               2140      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000015A2  323C FF00               2141      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000015A6  4E4F                    2142      TRAP    #15                     ; Trap (Perform action)
000015A8  6100 F498               2143      BSR     PLAY_GAMEOVER
000015AC                          2144  
000015AC                          2145  *------------Set Colours--------------*
Line 2146 ERROR: Undefined symbol
000015AC  223C 004DBD16           2146      MOVE.L  #color5,     D1
000015B2  103C 0015               2147      MOVE.B  #21,        D0          ; Set Text Color
000015B6  243C 01130005           2148      MOVE.L  #$01130005, D2
000015BC  4E4F                    2149      TRAP    #15                     ; Trap (Perform action)
000015BE                          2150  
Line 2151 ERROR: Undefined symbol
000015BE  223C 004DBD16           2151      MOVE.L  #color1,     D1
000015C4  103C 0051               2152      MOVE.B  #81,        D0          ; Set Text Color
000015C8  4E4F                    2153      TRAP    #15                     ; Trap (Perform action)
000015CA                          2154  
000015CA                          2155  *------------ fill background --------------*
000015CA  323C 0000               2156      MOVE.W      #0,D1
000015CE  343C 0000               2157      MOVE.W      #0,d2
000015D2  103C 0059               2158      MOVE.B      #89,D0
000015D6  4E4F                    2159      TRAP        #15
000015D8                          2160  
000015D8                          2161  *------------ Print hill lost message--------------*
000015D8                          2162  
000015D8  103C 000B               2163      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000015DC  323C 0803               2164      MOVE.W  #$0803,     D1          ; Col 10, Row 03
000015E0  4E4F                    2165      TRAP    #15                     ; Trap (Perform action)
000015E2  43F9 000019C0           2166      LEA     HILLLOST_MSG,A1        ; Game Over Message
Line 2167 ERROR: Undefined symbol
000015E8  6100 A72C               2167      BSR     print
000015EC                          2168  
000015EC                          2169  *------------print amount of enemies defeated--------------*
000015EC                          2170  
000015EC  103C 000B               2171      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000015F0  323C 0606               2172      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000015F4  4E4F                    2173      TRAP    #15                     ; Trap (Perform action)
000015F6  43F9 00001990           2174      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2175 ERROR: Undefined symbol
000015FC  6100 A718               2175      BSR     print
00001600                          2176  
00001600  103C 000B               2177      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001604  323C 1B06               2178      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001608  4E4F                    2179      TRAP    #15                     ; Trap (Perform action)
0000160A  103C 0003               2180      MOVE.B  #03,        D0          ; Display number at D1.L
0000160E  7200                    2181      MOVEQ.L #0,D1
00001610  1239 00001B2C           2182      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001616  4E4F                    2183      TRAP    #15                     ; Trap (Perform action)
00001618                          2184      
00001618                          2185  *------------print hill health --------------*
00001618                          2186  
00001618  103C 000B               2187      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000161C  323C 0607               2188      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001620  4E4F                    2189      TRAP    #15                     ; Trap (Perform action)
00001622  43F9 00001A97           2190      LEA     hillHP_MSG,  A1          ; Score Message
Line 2191 ERROR: Undefined symbol
00001628  6100 A6EC               2191      BSR     print
0000162C                          2192  
0000162C  103C 000B               2193      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001630  323C 1B07               2194      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001634  4E4F                    2195      TRAP    #15                     ; Trap (Perform action)
00001636  7200                    2196      MOVEQ.L #0,D1
00001638  1239 00001AA5           2197      MOVE.B  hillHP,D1         ; Move Score to D1.L
0000163E  103C 0003               2198      MOVE.B  #03,        D0          ; Display number at D1.L
00001642  4E4F                    2199      TRAP    #15                     ; Trap (Perform action)
00001644                          2200      
00001644                          2201  *------------ print back to map--------------*
00001644                          2202  
Line 2203 ERROR: Undefined symbol
00001644  223C 004DBD16           2203      MOVE.L  #color5,     D1
0000164A  103C 0015               2204      MOVE.B  #21,        D0          ; Set Text Color
0000164E  243C 03140000           2205      MOVE.L  #$03140000, D2
00001654  4E4F                    2206      TRAP    #15                     ; Trap (Perform action)
00001656                          2207  
00001656  103C 000B               2208      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000165A  323C 090C               2209      MOVE.W  #$090C,     D1          ; Col 09, Row 01
0000165E  4E4F                    2210      TRAP    #15                     ; Trap (Perform action)
00001660  43F9 00001A2E           2211      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
00001666  303C 000D               2212      MOVE    #13,        D0          ; No Line feedF=
0000166A  4E4F                    2213      TRAP    #15                     ; Trap (Perform action)
0000166C                          2214  
0000166C                          2215      
0000166C  103C 005E               2216      MOVE.B  #TC_REDRAW,        D0
00001670  4E4F                    2217      TRAP    #15
00001672                          2218  
00001672                          2219  INPUTLOOP:
00001672  6100 EBC8               2220      BSR     BATTLEINPUT
00001676  60FA                    2221      BRA     INPUTLOOP
00001678                          2222  
00001678                          2223  GAME_OVER:
00001678                          2224      
00001678  103C 000B               2225      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000167C  323C FF00               2226      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001680  4E4F                    2227      TRAP    #15                     ; Trap (Perform action)
00001682  6100 F3BE               2228      BSR     PLAY_GAMEOVER
00001686                          2229  
00001686                          2230  *------------Set Colours--------------*
Line 2231 ERROR: Undefined symbol
00001686  223C 004DBD16           2231      MOVE.L  #color5,     D1
0000168C  103C 0015               2232      MOVE.B  #21,        D0          ; Set Text Color
00001690  243C 01130005           2233      MOVE.L  #$01130005, D2
00001696  4E4F                    2234      TRAP    #15                     ; Trap (Perform action)
00001698                          2235  
Line 2236 ERROR: Undefined symbol
00001698  223C 004DBD16           2236      MOVE.L  #color1,     D1
0000169E  103C 0051               2237      MOVE.B  #81,        D0          ; Set Text Color
000016A2  4E4F                    2238      TRAP    #15                     ; Trap (Perform action)
000016A4                          2239  
000016A4                          2240  *------------ fill background --------------*
000016A4  323C 0000               2241      MOVE.W      #0,D1
000016A8  343C 0000               2242      MOVE.W      #0,d2
000016AC  103C 0059               2243      MOVE.B      #89,D0
000016B0  4E4F                    2244      TRAP        #15
000016B2                          2245  
000016B2                          2246  *------------ Print gameover message--------------*
000016B2  103C 000B               2247      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016B6  323C 1001               2248      MOVE.W  #$1001,     D1          ; Col 10, Row 03
000016BA  4E4F                    2249      TRAP    #15                     ; Trap (Perform action)
000016BC  43F9 00001A24           2250      LEA     GAMEOVER_MSG,A1        ; Game Over Message
Line 2251 ERROR: Undefined symbol
000016C2  6100 A652               2251      BSR     print
000016C6                          2252  
000016C6  103C 000B               2253      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016CA  323C 0703               2254      MOVE.W  #$0703,     D1          ; Col 10, Row 03
000016CE  4E4F                    2255      TRAP    #15                     ; Trap (Perform action)
000016D0  43F9 00001A08           2256      LEA     FALLENKINGDOM_MSG,A1        ; Game Over Message
Line 2257 ERROR: Undefined symbol
000016D6  6100 A63E               2257      BSR     print
000016DA                          2258  
000016DA                          2259  
000016DA                          2260  *------------ Print hills defended message--------------*
000016DA                          2261      ; TODO TODO hills defended msg
000016DA  103C 000B               2262      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016DE  323C 0606               2263      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000016E2  4E4F                    2264      TRAP    #15                     ; Trap (Perform action)
000016E4  43F9 00001990           2265      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2266 ERROR: Undefined symbol
000016EA  6100 A62A               2266      BSR     print
000016EE                          2267  
000016EE  103C 000B               2268      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000016F2  323C 1B06               2269      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
000016F6  4E4F                    2270      TRAP    #15                     ; Trap (Perform action)
000016F8  103C 0003               2271      MOVE.B  #03,        D0          ; Display number at D1.L
000016FC  7200                    2272      MOVEQ.L #0,D1
000016FE  1239 00001B2C           2273      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001704  4E4F                    2274      TRAP    #15                     ; Trap (Perform action)
00001706                          2275      
00001706                          2276  *------------ Print ants remaining message--------------*
00001706  103C 000B               2277      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000170A  323C 0607               2278      MOVE.W  #$0607,     D1          ; Col 02, Row 01
0000170E  4E4F                    2279      TRAP    #15                     ; Trap (Perform action)
00001710  43F9 00001A85           2280      LEA     antsRem_MSG,  A1          ; Score Message
Line 2281 ERROR: Undefined symbol
00001716  6100 A5FE               2281      BSR     print
0000171A                          2282  
0000171A  103C 000B               2283      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000171E  323C 1B07               2284      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001722  4E4F                    2285      TRAP    #15                     ; Trap (Perform action)
00001724  7200                    2286      MOVEQ.L #0,D1
00001726  1239 00001B07           2287      MOVE.B  antsRemaining,D1         ; Move Score to D1.L
0000172C  103C 0003               2288      MOVE.B  #03,        D0          ; Display number at D1.L
00001730  4E4F                    2289      TRAP    #15                     ; Trap (Perform action)
00001732                          2290      
00001732                          2291  *------------ change fonts --------------*
Line 2292 ERROR: Undefined symbol
00001732  223C 004DBD16           2292      MOVE.L  #color5,     D1
00001738  103C 0015               2293      MOVE.B  #21,        D0          ; Set Text Color
0000173C  243C 03140000           2294      MOVE.L  #$03140000, D2
00001742  4E4F                    2295      TRAP    #15                     ; Trap (Perform action)
00001744                          2296  
00001744                          2297  *------------ Print restart message--------------*
00001744  103C 000B               2298      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001748  323C 0B09               2299      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
0000174C  4E4F                    2300      TRAP    #15                     ; Trap (Perform action)
0000174E  43F9 00001A47           2301      LEA     RESTART_MSG,  A1          ; Score Message
00001754  303C 000D               2302      MOVE    #13,        D0          ; No Line feedF=
00001758  4E4F                    2303      TRAP    #15                     ; Trap (Perform action)
0000175A                          2304  
0000175A                          2305      
0000175A  103C 005E               2306      MOVE.B  #TC_REDRAW,        D0
0000175E  4E4F                    2307      TRAP    #15
00001760                          2308  
00001760                          2309  LOSSINPUTLOOP:
00001760  6100 EADA               2310      BSR     BATTLEINPUT
00001764  60FA                    2311      BRA     LOSSINPUTLOOP
00001766                          2312  
00001766                          2313  WAVE_DEFEATED:
00001766                          2314  
Line 2315 ERROR: Undefined symbol
00001766  0C79 0003 005455B8      2315      CMP.W   #3,lvlIndex
0000176E  6700 00DC               2316      BEQ     WIN_SCREEN
00001772                          2317      
00001772  103C 000B               2318      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001776  323C FF00               2319      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
0000177A  4E4F                    2320      TRAP    #15                     ; Trap (Perform action)
0000177C  6100 F2C4               2321      BSR     PLAY_GAMEOVER
00001780                          2322  
00001780                          2323  *------------Set Colours--------------*
Line 2324 ERROR: Undefined symbol
00001780  223C 004DBD16           2324      MOVE.L  #color5,     D1
00001786  103C 0015               2325      MOVE.B  #21,        D0          ; Set Text Color
0000178A  243C 01130005           2326      MOVE.L  #$01130005, D2
00001790  4E4F                    2327      TRAP    #15                     ; Trap (Perform action)
00001792                          2328  
Line 2329 ERROR: Undefined symbol
00001792  223C 004DBD16           2329      MOVE.L  #color1,     D1
00001798  103C 0051               2330      MOVE.B  #81,        D0          ; Set Text Color
0000179C  4E4F                    2331      TRAP    #15                     ; Trap (Perform action)
0000179E                          2332  
0000179E                          2333  *------------ fill background --------------*
0000179E  323C 0000               2334      MOVE.W      #0,D1
000017A2  343C 0000               2335      MOVE.W      #0,d2
000017A6  103C 0059               2336      MOVE.B      #89,D0
000017AA  4E4F                    2337      TRAP        #15
000017AC                          2338  
000017AC                          2339  *------------ Print wave defeated message--------------*
000017AC                          2340  
000017AC  103C 000B               2341      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017B0  323C 0E03               2342      MOVE.W  #$0E03,     D1          ; Col 10, Row 03
000017B4  4E4F                    2343      TRAP    #15                     ; Trap (Perform action)
000017B6  43F9 000019F9           2344      LEA     HILLDEFENDED_MSG,A1        ; Game Over Message
Line 2345 ERROR: Undefined symbol
000017BC  6100 A558               2345      BSR     print
000017C0                          2346  
000017C0                          2347  *------------print amount of enemies defeated--------------*
000017C0                          2348  
000017C0  103C 000B               2349      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017C4  323C 0606               2350      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000017C8  4E4F                    2351      TRAP    #15                     ; Trap (Perform action)
000017CA  43F9 00001990           2352      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2353 ERROR: Undefined symbol
000017D0  6100 A544               2353      BSR     print
000017D4                          2354  
000017D4  103C 000B               2355      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017D8  323C 1B06               2356      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
000017DC  4E4F                    2357      TRAP    #15                     ; Trap (Perform action)
000017DE  103C 0003               2358      MOVE.B  #03,        D0          ; Display number at D1.L
000017E2  7200                    2359      MOVEQ.L #0,D1
000017E4  1239 00001B2C           2360      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000017EA  4E4F                    2361      TRAP    #15                     ; Trap (Perform action)
000017EC                          2362      
000017EC                          2363  *------------print hill health --------------*
000017EC                          2364  
000017EC  103C 000B               2365      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017F0  323C 0607               2366      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000017F4  4E4F                    2367      TRAP    #15                     ; Trap (Perform action)
000017F6  43F9 00001A97           2368      LEA     hillHP_MSG,  A1          ; Score Message
Line 2369 ERROR: Undefined symbol
000017FC  6100 A518               2369      BSR     print
00001800                          2370  
00001800  103C 000B               2371      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001804  323C 1B07               2372      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001808  4E4F                    2373      TRAP    #15                     ; Trap (Perform action)
0000180A  7200                    2374      MOVEQ.L #0,D1
0000180C  1239 00001AA5           2375      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001812  103C 0003               2376      MOVE.B  #03,        D0          ; Display number at D1.L
00001816  4E4F                    2377      TRAP    #15                     ; Trap (Perform action)
00001818                          2378      
00001818                          2379  *------------ print back to map--------------*
Line 2380 ERROR: Undefined symbol
00001818  223C 004DBD16           2380      MOVE.L  #color5,     D1
0000181E  103C 0015               2381      MOVE.B  #21,        D0          ; Set Text Color
00001822  243C 03140000           2382      MOVE.L  #$03140000, D2
00001828  4E4F                    2383      TRAP    #15                     ; Trap (Perform action)
0000182A                          2384  
0000182A                          2385  
0000182A                          2386      ; Restart
0000182A  103C 000B               2387      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000182E  323C 090C               2388      MOVE.W  #$090C,     D1          ; Col 09, Row 01
00001832  4E4F                    2389      TRAP    #15                     ; Trap (Perform action)
00001834  43F9 00001A2E           2390      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
0000183A  303C 000D               2391      MOVE    #13,        D0          ; No Line feedF=
0000183E  4E4F                    2392      TRAP    #15                     ; Trap (Perform action)
00001840                          2393  
00001840                          2394      
00001840  103C 005E               2395      MOVE.B  #TC_REDRAW,        D0
00001844  4E4F                    2396      TRAP    #15
00001846                          2397  
00001846                          2398  WAVEWININPUTLOOP:
00001846  6100 E9F4               2399      BSR     BATTLEINPUT
0000184A  60FA                    2400      BRA     WAVEWININPUTLOOP
0000184C                          2401  
0000184C                          2402  WIN_SCREEN:
Line 2403 ERROR: Undefined symbol
0000184C  13FC 0001 005455B8      2403      move.b #1, isWin
00001854  103C 000B               2404      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001858  323C FF00               2405      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
0000185C  4E4F                    2406      TRAP    #15                     ; Trap (Perform action)
0000185E  6100 F1E2               2407      BSR     PLAY_GAMEOVER
00001862                          2408  
00001862                          2409  *------------Set Colours--------------*
Line 2410 ERROR: Undefined symbol
00001862  223C 004DBD16           2410      MOVE.L  #color5,     D1
00001868  103C 0015               2411      MOVE.B  #21,        D0          ; Set Text Color
0000186C  243C 01130005           2412      MOVE.L  #$01130005, D2
00001872  4E4F                    2413      TRAP    #15                     ; Trap (Perform action)
00001874                          2414  
Line 2415 ERROR: Undefined symbol
00001874  223C 004DBD16           2415      MOVE.L  #color1,     D1
0000187A  103C 0051               2416      MOVE.B  #81,        D0          ; Set Text Color
0000187E  4E4F                    2417      TRAP    #15                     ; Trap (Perform action)
00001880                          2418  
00001880                          2419  *------------ fill background --------------*
00001880  323C 0000               2420      MOVE.W      #0,D1
00001884  343C 0000               2421      MOVE.W      #0,d2
00001888  103C 0059               2422      MOVE.B      #89,D0
0000188C  4E4F                    2423      TRAP        #15
0000188E                          2424  
0000188E                          2425  *------------ Print wave defeated message--------------*
0000188E                          2426  
0000188E  103C 000B               2427      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001892  323C 0703               2428      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001896  4E4F                    2429      TRAP    #15                     ; Trap (Perform action)
00001898  43F9 000019DB           2430      LEA     WIN_MSG,A1        ; Game Over Message
Line 2431 ERROR: Undefined symbol
0000189E  6100 A476               2431      BSR     print
000018A2                          2432  
000018A2                          2433  *------------print amount of enemies defeated--------------*
000018A2                          2434  
000018A2  103C 000B               2435      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018A6  323C 0606               2436      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000018AA  4E4F                    2437      TRAP    #15                     ; Trap (Perform action)
000018AC  43F9 00001990           2438      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2439 ERROR: Undefined symbol
000018B2  6100 A462               2439      BSR     print
000018B6                          2440  
000018B6  103C 000B               2441      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018BA  323C 1B06               2442      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
000018BE  4E4F                    2443      TRAP    #15                     ; Trap (Perform action)
000018C0  103C 0003               2444      MOVE.B  #03,        D0          ; Display number at D1.L
000018C4  7200                    2445      MOVEQ.L #0,D1
000018C6  1239 00001B2C           2446      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000018CC  4E4F                    2447      TRAP    #15                     ; Trap (Perform action)
000018CE                          2448      
000018CE                          2449  *------------print hill health --------------*
000018CE                          2450  
000018CE  103C 000B               2451      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018D2  323C 0607               2452      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000018D6  4E4F                    2453      TRAP    #15                     ; Trap (Perform action)
000018D8  43F9 00001A97           2454      LEA     hillHP_MSG,  A1          ; Score Message
Line 2455 ERROR: Undefined symbol
000018DE  6100 A436               2455      BSR     print
000018E2                          2456  
000018E2  103C 000B               2457      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018E6  323C 1B07               2458      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000018EA  4E4F                    2459      TRAP    #15                     ; Trap (Perform action)
000018EC  7200                    2460      MOVEQ.L #0,D1
000018EE  1239 00001AA5           2461      MOVE.B  hillHP,D1         ; Move Score to D1.L
000018F4  103C 0003               2462      MOVE.B  #03,        D0          ; Display number at D1.L
000018F8  4E4F                    2463      TRAP    #15                     ; Trap (Perform action)
000018FA                          2464      
000018FA                          2465  *------------ print restart --------------*
Line 2466 ERROR: Undefined symbol
000018FA  223C 004DBD16           2466      MOVE.L  #color5,     D1
00001900  103C 0015               2467      MOVE.B  #21,        D0          ; Set Text Color
00001904  243C 03140000           2468      MOVE.L  #$03140000, D2
0000190A  4E4F                    2469      TRAP    #15                     ; Trap (Perform action)
0000190C                          2470  
0000190C                          2471  
0000190C                          2472      ; Restart
0000190C  103C 000B               2473      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001910  323C 0B09               2474      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001914  4E4F                    2475      TRAP    #15                     ; Trap (Perform action)
00001916  43F9 00001A47           2476      LEA     RESTART_MSG,  A1          ; Score Message
0000191C  303C 000D               2477      MOVE    #13,        D0          ; No Line feedF=
00001920  4E4F                    2478      TRAP    #15                     ; Trap (Perform action)
00001922                          2479  
00001922                          2480      
00001922  103C 005E               2481      MOVE.B  #TC_REDRAW,        D0
00001926  4E4F                    2482      TRAP    #15
00001928                          2483  
00001928                          2484  WININPUTLOOP:
00001928  6100 E912               2485      BSR     BATTLEINPUT
0000192C  60FA                    2486      BRA     WININPUTLOOP
0000192E                          2487  
0000192E                          2488  
0000192E                          2489  EXIT:
0000192E                          2490      
0000192E  103C 000B               2491      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001932  323C FF00               2492      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001936  4E4F                    2493      TRAP    #15                     ; Trap (Perform action)
00001938                          2494  
00001938  103C 005E               2495      MOVE.B  #TC_REDRAW,        D0
0000193C  4E4F                    2496      TRAP    #15
0000193E                          2497  
0000193E  103C 0009               2498      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001942  4E4F                    2499      TRAP    #15                     ; Trap (Perform action)
00001944  FFFF FFFF               2500      SIMHALT
00001948                          2501  
00001948                          2502  *-----------------------------------------------------------
00001948                          2503  * Section       : Messages
00001948                          2504  * Description   : Messages to Print on Console, names should be
00001948                          2505  * self documenting
00001948                          2506  *-----------------------------------------------------------
00001948= 53 63 6F 72 65 20 ...   2507  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00001951= 4B 65 79 43 6F 64 ...   2508  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
0000195C= 4A 75 6D 70 2E 2E ...   2509  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001965                          2510  
00001965= 49 64 6C 65 2E 2E ...   2511  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
0000196E= 55 70 64 61 74 65 ...   2512  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001979= 44 72 61 77 2E 2E ...   2513  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001982                          2514  
00001982= 58 3A 00                2515  X_MSG           DC.B    'X:', 0             ; X Position Message
00001985= 59 3A 00                2516  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001988= 56 3A 00                2517  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
0000198B= 44 52 41 57 00          2518  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00001990= 45 6E 65 6D 69 65 ...   2519  ENEMIESDEAD_MSG         DC.B    'Enemies Defeated:', 0           
000019A2= 57 61 76 65 20 65 ...   2520  ENEMYCOUNT_MSG         DC.B    'Wave enemy count:', 0           
000019B4                          2521  
000019B4= 45 78 69 74 69 6E ...   2522  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
000019C0= 41 4E 54 20 48 49 ...   2523  HILLLOST_MSG    DC.B    'ANT HILL HAS BEEN OVERRUN!', 0      ; Game Over Message
000019DB= 45 4E 45 4D 59 20 ...   2524  WIN_MSG    DC.B    'ENEMY ARMY HAS BEEN DEFEATED!', 0      ; Game Over Message
000019F9= 57 41 56 45 20 43 ...   2525  HILLDEFENDED_MSG    DC.B    'WAVE COMPLETE!', 0      ; Game Over Message
00001A08= 59 4F 55 52 20 41 ...   2526  FALLENKINGDOM_MSG    DC.B    'YOUR ANT KINGDOM HAS FALLEN', 0      ; Game Over Message
00001A24= 47 41 4D 45 20 4F ...   2527  GAMEOVER_MSG    DC.B    'GAME OVER', 0      ; Game Over Message
00001A2E= 50 72 65 73 73 20 ...   2528  BACK_TO_MAP_MSG    DC.B    'Press R to return to map', 0      ; Game Over Message
00001A47= 50 72 65 73 73 20 ...   2529  RESTART_MSG    DC.B    'Press R to restart', 0      ; Game Over Message
00001A5A= 23 23 00                2530  TREET          DC.B     '##',0
00001A5D                          2531  
00001A5D= 45 6E 74 65 72 20 ...   2532  PRESSSTART      DC.B    'Enter 1 to start',0
00001A6E= 41 4E 54 20 44 45 ...   2533  TITLEMSG        DC.B    'ANT DEFENDER',0
00001A7B= 48 65 61 6C 74 68 ...   2534  antHealth_MSG       DC.B    'Health : ',0        ; health message
00001A85= 41 6E 74 73 20 52 ...   2535  antsRem_MSG       DC.B    'Ants Remaining : ',0        ; health message
00001A97= 48 69 6C 6C 20 48 ...   2536  hillHP_MSG       DC.B    'Hill Health: ',0        ; health message
00001AA5= 0A                      2537  hillHP          DC.B      10
00001AA6                          2538  
00001AA6= 00                      2539  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
00001AA7= 00                      2540  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00001AA8= 00                      2541  DRAW_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are showing
00001AA9= 00                      2542  SPAWN_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are spawning
00001AAA                          2543  
00001AAA= 07D0                    2544  LEVEL_02        DC.W    2000
00001AAC= 2710                    2545  LEVEL_03        DC.W    10000
00001AAE                          2546  
00001AAE= 00001B58 00000FA0 ...   2547  LEVELS:         DC.L    7000,4000,2000,1000
00001ABE                          2548  
00001ABE                          2549  *-----------------------------------------------------------
00001ABE                          2550  * Section       : Screen Size
00001ABE                          2551  * Description   : Screen Width and Height
00001ABE                          2552  *-----------------------------------------------------------
00001ABE                          2553  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001AC0                          2554  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001AC2                          2555  
00001AC2                          2556  *-----------------------------------------------------------
00001AC2                          2557  * Section       : Keyboard Input
00001AC2                          2558  * Description   : Used for storing Keypresses
00001AC2                          2559  *-----------------------------------------------------------
00001AC2                          2560  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001AC6                          2561  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00001AC8                          2562  
00001AC8                          2563  *-----------------------------------------------------------
00001AC8                          2564  * Section       : Character Positions
00001AC8                          2565  * Description   : Player and Enemy Position Memory Locations
00001AC8                          2566  *-----------------------------------------------------------
00001AC8                          2567  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001ACC                          2568  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001AD0                          2569  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001AD4                          2570  
00001AD4                          2571  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001AD8                          2572  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001ADC                          2573  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001AE0                          2574  
00001AE0                          2575  ; 1, = left, 0 = right
00001AE0                          2576  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
00001AE1                          2577  
00001AE2                          2578  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001AE6                          2579  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001AEA                          2580  
00001AEA                          2581  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
00001AEE                          2582  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
00001AF2                          2583  
00001AF2                          2584  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
00001AF6                          2585  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
00001AFA                          2586  
00001AFA= 000000FF                2587  ENEMYCOLOR        DC.L        $000000FF
00001AFE= 00FF0000                2588  FLYENEMYCOLOR     DC.L        $00FF0000
00001B02                          2589  
00001B02                          2590  RANDOM            DS.L        01  ; Reserve Space for Random Number
00001B06= 03                      2591  antHealth         DC.B        03  ; reserves space for antHealth
00001B07= 05                      2592  antsRemaining     DC.B        05  ; reserves space for ants
00001B08                          2593  
00001B08                          2594  
00001B08                          2595   
00001B08= 02                      2596  POINTS            DC.B        02          ; Points added
00001B09                          2597  
00001B09= 00                      2598  CURRENTLYATTACKING   DC.B    00
00001B0A= 0000                    2599  ATTACK_COOLDOWN      DC.W    00
00001B0C= 0000                    2600  ATTACK_TIME          DC.W    00
00001B0E= 00000000                2601  ATTACK_X             DC.L    00
00001B12= 00000000                2602  ATTACK_Y             DC.L    00
00001B16  =00000014               2603  ATTACK_HEIGHT        EQU     20
00001B16  =00000023               2604  ATTACK_WIDTH         EQU     35 
00001B16                          2605  
00001B16= 00                      2606  CURRENTLYTHROWING   DC.B    00
00001B18= 0000                    2607  THROW_COOLDOWN      DC.W    00
00001B1A= 0000                    2608  THROW_TIME          DC.W    00
00001B1C= 00000000                2609  THROW_X             DC.L    00
00001B20= 00000000                2610  THROW_Y             DC.L    00
00001B24  =00000014               2611  THROW_HEIGHT        EQU     20
00001B24  =00000023               2612  THROW_WIDTH         EQU     35 
00001B24                          2613  THROW_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001B28                          2614  THROW_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001B2C                          2615  
00001B2C= 13                      2616  ENEMIES_DEFEATED     DC.B    19
00001B2D= 00                      2617  enemiesPassed       DC.b    00
00001B2E= 00                      2618  enemiesToDefeat     DC.B    00
00001B2F  =00000014               2619  waveEnemyCount      SET    20
00001B2F                          2620  
00001B2F= 00                      2621  ENEMY_HIT           DC.B    00
00001B30= 00                      2622  FLYENEMY_HIT        DC.B    00
00001B31                          2623  
00001B31                          2624  
00001B31                          2625  * Widths and heights of player, enemy and healthpack
00001B31                          2626  *-----------------------------------------------------------
00001B31= 0C                      2627  PLAYER_WIDTH      DC.B        12          ; Player Width
00001B32= 0C                      2628  PLAYER_HEIGHT     DC.B        12          ; Player Height
00001B33                          2629  
00001B34= 000C                    2630  ENEMY_WIDTH       DC.W        12          ; Enemy Width
00001B36= 000C                    2631  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00001B38                          2632  
00001B38= 0014                    2633  FLYENEMY_WIDTH    DC.W        20 
00001B3A= 000C                    2634  FLYENEMY_HEIGHT   DC.W        12 
00001B3C                          2635  
00001B3C                          2636          
00001B3C                          2637  *-----------------------------------------------------------
00001B3C                          2638  * Section       : Sounds
00001B3C                          2639  * Description   : Sound files, which are then loaded and given
00001B3C                          2640  * an address in memory, they take a longtime to process and play
00001B3C                          2641  * so keep the files small. Used https://voicemaker.in/ to 
00001B3C                          2642  * generate and Audacity to convert MP3 to WAV
00001B3C                          2643  *-----------------------------------------------------------
00001B3C= 6A 75 6D 70 2E 77 ...   2644  JUMP_WAV        DC.B    'jump.wav',0        ; Jump Sound
00001B45= 67 61 6D 65 4F 76 ...   2645  GAMEOVER_WAV    DC.B    'gameOver.wav',0    ; Run Sound
00001B52= 68 69 74 48 75 72 ...   2646  HITHURT_WAV     DC.B    'hitHurt.wav',0     ; Collision Opps
00001B5E= 68 69 74 2E 77 61 ...   2647  HIT_WAV         DC.B    'hit.wav',0         ; Collision Opps
00001B66= 70 6F 77 65 72 55 ...   2648  POWERUP_WAV     DC.B    'powerUP.wav',0     ; Collision Opps
00001B72= 6C 65 76 65 6C 43 ...   2649  LEVELCHANGE_WAV DC.B    'levelChange.wav',0 ; Collision Opps
00001B82                          2650  
00001B82= 61 6E 74 6F 70 69 ...   2651  BATTLE_SONG_WAV DC.B    'antopia-battle.wav',0
00001B95= 61 6E 74 6F 70 69 ...   2652  MAP_SONG_WAV    DC.B    'antopia-map.wav',0
00001BA5                          2653  
00001BA5                          2654  
00001BA6= 0000                    2655  respawnTime         dc.W        0
00001BA8                          2656  
00001BA8                          2657  *---*
00001BA8= 3A0C                    2658  TRUNK   DC.W    $3A0C
00001BAA= 00C8                    2659  X   DC.W    200
00001BAC= 0190                    2660  Y   DC.W    400
00001BAE= 00C8                    2661  Z   DC.W    200
00001BB0= 0004                    2662  SCALER DC.W  4
00001BB2  =00000010               2663  ROWC    EQU    16
00001BB2= FFB0                    2664  WIDTH   DC.W    $FFB0
00001BB4                          2665  
00001BB4= 00000000                2666  timer           DC.L    0
00001BB8                          2667  
00001BB8                          2668  ;    END    START        ; last line of source
00001BB8                          2669  
00001BB8                          2670  
00001BB8                          2671  
00001BB8                          2672  
00001BB8                          2673  
00001BB8                          2674  
00001BB8                          2675  
Line 2676 WARNING: END directive missing, starting address not set

51 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ANTHEALTH           1B06
ANTHEALTH_MSG       1A7B
ANTKILLED           153C
ANTSREMAINING       1B07
ANTSREM_MSG         1A85
ARC_DONE            A2C
ATK_LTE_TO_ENEMY_Y_PLUS_H  12F4
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  1362
ATK_PLUS_H_LTE_TO_ATTACK_Y  1310
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  137E
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  132A
ATTACK_COLLISION    1470
ATTACK_COOLDOWN     1B0A
ATTACK_COOLDOWN_SUB  4A8
ATTACK_FLY_COLLISION  1496
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_ENMY_X  12D8
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  1346
ATTACK_TIME         1B0C
ATTACK_TIME_SUB     4A0
ATTACK_WIDTH        23
ATTACK_X            1B0E
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  12BC
ATTACK_Y            1B12
BACK_TO_MAP_MSG     1A2E
BATTLEINPUT         23C
BATTLE_SONG_LOAD    AFA
BATTLE_SONG_WAV     1B82
BLACK               0
BLUE                FF0000
BROWN               19506D
CHECKPAUSED         39A
CHECK_ATTACK_COLLISIONS  12B8
CHECK_ATTACK_COOLDOWN  492
CHECK_ATTACK_FLY_COLLISIONS  1326
CHECK_COLLISIONS    1176
CHECK_ENEMIES_CLEARED  14BC
CHECK_FLYENEMY_COLLISIONS  11DC
CHECK_HEALTH_COLLISIONS  124A
CHECK_THROW_COLLISION  1394
CHECK_THROW_DONE    464
CHECK_THROW_FLY_COLLISIONS  1402
CHECK_WAVE_CLEARED  624
COLLISION_CHECK_DONE  14D4
COMPLETE_RESTART    36C
CONTINUE            650
CURRENTLYATTACKING  1B09
CURRENTLYTHROWING   1B16
CURRENT_KEY         1AC2
DAMAGE_HILL         63C
DELAY               214
DIRT                4FAD
DKEY                44
DRAWBATTLE          6E8
DRAWDIRT            10D2
DRAW_ATTACK         C74
DRAW_BACKGROUND     7B8
DRAW_ENEMY          D08
DRAW_FLOOR          FFC
DRAW_FLOOR_L1       10C8
DRAW_FLOOR_L2       108C
DRAW_FLOOR_L3       107A
DRAW_FLOOR_L4       1068
DRAW_FLOOR_L5       1056
DRAW_FLYENEMY       E42
DRAW_HEALTHPACK     F7A
DRAW_HEALTHPACKS    1AA8
DRAW_HEALTHPACK_DONE  FF0
DRAW_HILL           728
DRAW_MSG            1979
DRAW_PLAYER         B28
DRAW_PLYR_DATA      860
DRAW_RESPAWN        10F8
DRAW_THROW          CC4
ENEMIESDEAD_MSG     1990
ENEMIESPASSED       1B2D
ENEMIESTODEFEAT     1B2E
ENEMIES_DEFEATED    1B2C
ENEMYCOLLISION      14F6
ENEMYCOLOR          1AFA
ENEMYCOUNT_MSG      19A2
ENEMY_HEIGHT        1B36
ENEMY_HIT           1B2F
ENEMY_WIDTH         1B34
ENEMY_X             1AE2
ENEMY_Y             1AE6
ENMY_H_INIT         D
ENMY_W_INIT         1B
ESCAPE              1B
EXIT                192E
EXIT_MSG            19B4
FALLENKINGDOM_MSG   1A08
FLYENEMYCOLOR       1AFE
FLYENEMY_HEIGHT     1B3A
FLYENEMY_HIT        1B30
FLYENEMY_WIDTH      1B38
FLYINGENEMY_X       1AF2
FLYINGENEMY_Y       1AF6
FLY_ENMY_H_INIT     D
FLY_ENMY_W_INIT     1E
GAME                20A
GAMELOOP            20A
GAMEOVER_INDEX      0
GAMEOVER_LOAD       A30
GAMEOVER_MSG        1A24
GAMEOVER_WAV        1B45
GAME_OVER           1678
GND_FALSE           0
GND_TRUE            1
GREEN               566D19
HEALTH_COLLISION    155E
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            1AEA
HEALTH_Y            1AEE
HILLDEFENDED_MSG    19F9
HILLHP              1AA5
HILLHP_MSG          1A97
HILLLOST_MSG        19C0
HILL_LOST           159E
HITHURT_INDEX       2
HITHURT_LOAD        A70
HITHURT_WAV         1B52
HIT_INDEX           5
HIT_LOAD            ACA
HIT_WAV             1B5E
IDLE                A2E
IDLE_MSG            1965
INITRUN             0
INPUTLOOP           1672
IN_ENEMY            1AA6
IN_HPACK            1AA7
IS_ATTACKING        C68
IS_PLAYER_ON_GND    98A
IS_THROWING         CB8
JMP_INDEX           1
JUMP                9DE
JUMP_DONE           A0C
JUMP_LOAD           A52
JUMP_MSG            195C
JUMP_WAV            1B3C
KEYCODE_MSG         1951
KKEY                4B
LAST_KEY            1AC6
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     1B72
LEVELS              1AAE
LEVEL_02            1AAA
LEVEL_03            1AAC
LIFEGREEN           44FF44
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LOSSINPUTLOOP       1760
LVLCHANGE_LOAD      AAC
MAP_SONG_LOAD       AE8
MAP_SONG_WAV        1B95
MOVE_ENEMY          50C
MOVE_ENEMY_L2       53E
MOVE_ENEMY_L3       554
MOVE_ENEMY_L4       56A
MOVE_HEALTHPACK     504
MOVE_PLAYER_LEFT    4B0
MOVE_PLAYER_RIGHT   4DA
MOVE_RESPAWNED      1112
MOVE_THROW          436
PERFORM_ATTACK      652
PERFORM_JUMP        9FC
PERFORM_THROW       69E
PERFORM_THROW_ARC   A20
PLAYER_DIR          1AE0
PLAYER_HEIGHT       1B32
PLAYER_SCORE        1AD0
PLAYER_WIDTH        1B31
PLAYER_X            1AC8
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  117A
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  1196
PLAYER_Y            1ACC
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  11B2
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  11C8
PLAY_GAMEOVER       A42
PLAY_HIT            ADC
PLAY_HITHURT        A82
PLAY_JUMP           A64
PLAY_LVLCHANGE      ABE
PLAY_POWERUP        AA0
PLAY_SONG           B0C
PLX_LTE_TO_FLYENEMY_X_PLUS_W  11E0
PLX_LTE_TO_HEALTH_X_PLUS_W  124E
PLX_PLUS_W_LTE_TO_FLYENEMY_X  11FC
PLX_PLUS_W_LTE_TO_HEALTH_X  126A
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1AD8
PLYR_H_INIT         D
PLYR_JUMP_V         FFFFFFED
PLYR_ON_GND         1ADC
PLYR_VELOCITY       1AD4
PLYR_W_INIT         1B
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  1218
PLY_LTE_TO_HEALTH_Y_PLUS_H  1286
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  1234
PLY_PLUS_H_LTE_TO_HEALTH_Y  12A2
POINTS              1B08
POWERUP_INDEX       3
POWERUP_LOAD        A8E
POWERUP_WAV         1B66
PRESSSTART          1A5D
PROCESS_INPUT       2E0
PROCESS_RESTART     346
RANDOM              1B02
RED                 FF
RESET_ENEMY_POSITION  584
RESET_FLYENEMY_POSITION  5C6
RESET_HEALTH_POSITION  60C
RESET_THROW         474
RESPAWNTIME         1BA6
RESTART_MSG         1A47
RKEY                52
ROWC                10
SCALER              1BB0
SCORE_MSG           1948
SCREEN_H            1AC0
SCREEN_W            1ABE
SET_OFF_GROUND      9D2
SET_ON_GROUND       9AA
SKEY                53
SKY                 FFE2B0
SONG_INDEX          6
SPACEBAR            20
SPAWN_HEALTHPACKS   1AA9
STILLPAUSED         3A6
STILL_COLLIDED      159C
STOP_HPACK_SPAWN    1592
STOP_SONG           B1A
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
THROW_ARC           A0E
THROW_COOLDOWN      1B18
THROW_GRAVITY       1B28
THROW_HEIGHT        14
THROW_PLUS_W_LTE_TO_ENMY_X  13B4
THROW_PLUS_W_LTE_TO_FLYENMY_X  1422
THROW_TIME          1B1A
THROW_VELOCITY      1B24
THROW_WIDTH         23
THROW_X             1B1C
THROW_X_LTE_TO_ENEMY_X_PLUS_W  1398
THROW_X_LTE_TO_FLYENEMY_X_PLUS_W  1406
THROW_Y             1B20
THRW_DFLT_G         1
THRW_DFLT_V         0
THRW_H_INIT         F
THRW_JUMP_V         FFFFFFF0
THRW_W_INIT         F
TIMER               1BB4
TITLEMSG            1A6E
TREET               1A5A
TREE_LEAVES_X       832
TREE_LEAVES_Y       826
TREE_LOOP           7EE
TRUNK               1BA8
TRW_LTE_TO_ENEMY_Y_PLUS_H  13D0
TRW_LTE_TO_FLYENEMY_Y_PLUS_H  143E
TRW_PLUS_H_LTE_TO_FLYENEMY_Y  145A
TRW_PLUS_H_LTE_TO_THROW_Y  13EC
UPDATE              3AE
UPDATE_MSG          196E
VARMSG              198B
V_MSG               1988
WAVEENEMYCOUNT      14
WAVEWININPUTLOOP    1846
WAVE_DEFEATED       1766
WHITE               FFFFFF
WIDTH               1BB2
WININPUTLOOP        1928
WIN_MSG             19DB
WIN_SCREEN          184C
X                   1BAA
X_MSG               1982
Y                   1BAC
Y_MSG               1985
Z                   1BAE
_00000000           266
_00000001           278
_00000002           28A
_00000003           29C
_00000004           2C0
_00000005           36A
_00000006           398
_00000007           4BC
_00000008           4E6
_00000009           5B8
_0000000A           5FE
_0000000B           65E
_0000000C           6AA
_0000000D           9EA
