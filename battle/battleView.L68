00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 28/02/2025 22:07:36

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Oliwier Jakubiec
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *-----------------------------------------------------------
00000000                            10  * Section       : Trap Codes
00000000                            11  * Description   : Trap Codes used throughout StarterKit
00000000                            12  *-----------------------------------------------------------
00000000                            13  * Trap CODES
00000000  =00000021                 14  TC_SCREEN   EQU         33          ; Screen size information trap code
00000000  =00000000                 15  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00000000                            16                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00000000  =00000013                 17  TC_KEYCODE  EQU         19          ; Check for pressed keys
00000000  =0000005C                 18  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00000000  =0000000B                 19  TC_CURSR_P  EQU         11          ; Trap code cursor position
00000000                            20  
00000000  =0000005E                 21  TC_REDRAW   EQU         94          ; Redraw Screen
00000000  =00000009                 22  TC_EXIT     EQU         09          ; Exit Trapcode
00000000                            23  
00000000                            24  *-----------------------------------------------------------
00000000                            25  * Section       : Charater Setup
00000000                            26  * Description   : Size of Player and Enemy and properties
00000000                            27  * of these characters e.g Starting Positions and Sizes
00000000                            28  *-----------------------------------------------------------
00000000                            29  
00000000  =0000000F                 30  THRW_W_INIT EQU         15          ; Players initial Width
00000000  =0000000F                 31  THRW_H_INIT EQU         15          ; Players initial Height
00000000                            32  
00000000  =00000000                 33  THRW_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFF0                 34  THRW_JUMP_V EQU         -16          ; Player Jump Velocity
00000000  =00000001                 35  THRW_DFLT_G EQU         01          ; Player Default Gravity
00000000                            36  
00000000  =00000001                 37  GND_TRUE    EQU         01          ; Player on Ground True
00000000  =00000000                 38  GND_FALSE   EQU         00          ; Player on Ground False
00000000                            39  
00000000  =00000000                 40  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00000000  =00000001                 41  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00000000  =00000002                 42  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00000000  =00000003                 43  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00000000  =00000004                 44  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00000000  =00000005                 45  HIT_INDEX  EQU              05  
00000000                            46  
00000000  =00000006                 47  SONG_INDEX equ          06
00000000                            48  
00000000  =0000001B                 49  ENMY_W_INIT EQU         27          ; Enemy initial Width
00000000  =0000000D                 50  ENMY_H_INIT EQU         13          ; Enemy initial Height
00000000                            51  
00000000  =00000023                 52  BIGENMY_W_INIT EQU         35          ; BRute Enemy initial Width
00000000  =00000012                 53  BIGENMY_H_INIT EQU         18          ; Brute Enemy initial Height
00000000                            54  
00000000  =0000001E                 55  FLY_ENMY_W_INIT  EQU         30          ; Enemy initial Width
00000000  =0000000D                 56  FLY_ENMY_H_INIT  EQU         13          ; Enemy initial Height
00000000                            57  
00000000  =0000000C                 58  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00000000  =0000000C                 59  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00000000                            60  
00000000  =00000002                 61  LOOKRIGHT   EQU         02          ; Look Right
00000000  =00000001                 62  LOOKLEFT    EQU         01          ; Look Left
00000000                            63  
00000000                            64  *-----------------------------------------------------------
00000000                            65  * Section       : Keyboard Keys
00000000                            66  * Description   : Spacebar and Escape or two functioning keys
00000000                            67  * Spacebar to JUMP and Escape to Exit Game
00000000                            68  *-----------------------------------------------------------
00000000  =00000020                 69  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00000000  =0000001B                 70  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00000000  =00000052                 71  Rkey           EQU         $52         ; R ASCII Keycode
00000000  =00000041                 72  Akey           EQU         $41         ; A ASCII Keycode
00000000  =00000053                 73  Skey           EQU         $53         ; S ASCII Keycode
00000000  =00000044                 74  Dkey           EQU         $44         ; D ASCII Keycode
00000000  =0000004C                 75  Lkey           EQU         $4C         ; L ASCII Keycode
00000000  =0000004B                 76  Kkey           EQU         $4B         ; K ASCII Keycode
00000000                            77  
00000000                            78  *-----------------------------------------------------------
00000000                            79  * Subroutine    : Initialise
00000000                            80  * Description   : Initialise game data into memory such as 
00000000                            81  * sounds and screen size
00000000                            82  *-----------------------------------------------------------
00000000                            83  INITRUN:
Line 84 ERROR: Undefined symbol
00000000  33FC 0002 005455B8        84      move.w #2, lvlType
00000008                            85      
00000008                            86      
00000008                            87  
00000008  6100 0C84                 88      BSR     stop_song
0000000C  6100 0C4E                 89      BSR     BATTLE_SONG_LOAD
00000010                            90  
00000010  6100 0C6E                 91      bsr PLAY_SONG
00000014                            92  
00000014                            93      ; Screen Size
00000014  103C 0021                 94      MOVE.B  #TC_SCREEN, D0          ; access screen information
00000018  7200                      95      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
0000001A  4E4F                      96      TRAP    #15                     ; interpret D0 and D1 for screen size
0000001C  33C1 00001E14             97      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
00000022  4841                      98      SWAP    D1                      ; Swap top and bottom word to retrive screen size
00000024  33C1 00001E12             99      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
0000002A                           100  
0000002A  6100 0C70                101      BSR     INIT_PLAYER
0000002E                           102      
0000002E                           103      ; Initialise Player Velocity
0000002E  B381                     104      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000030  123C 0000                105      MOVE.B  #THRW_DFLT_V,D1         ; Init Player Velocity
00000034  23C1 00001E78            106      MOVE.L  D1,         THROW_VELOCITY
0000003A                           107  
0000003A                           108      ; Initialise Player Gravity
0000003A  B381                     109      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000003C  7201                     110      MOVE.L  #THRW_DFLT_G,D1         ; Init Player Gravity
0000003E  23C1 00001E7C            111      MOVE.L  D1,         THROW_GRAVITY
00000044                           112  
00000044                           113      ; Initial Position for Enemy
00000044  B381                     114      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000046  3239 00001E12            115      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000004C  0681 00000064            116      ADD.L   #100,D1
00000052  23C1 00001E36            117      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
00000058                           118  
00000058  B381                     119      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000005A  3239 00001E14            120      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000060  82FC 0002                121      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000064  23C1 00001E3A            122      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
0000006A                           123  
0000006A                           124      ; Initial Position for Flying Enemy
0000006A  B381                     125      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000006C  3239 00001E12            126      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000072  0681 00000064            127      ADD.L   #100,D1
00000078  23C1 00001E46            128      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
0000007E                           129  
0000007E  B381                     130      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000080  3239 00001E14            131      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000086  82FC 0002                132      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000008A  0441 003C                133      SUB.W   #60,        D1
0000008E  23C1 00001E4A            134      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000094                           135      
00000094                           136      ; Initial Position for Health pack
00000094  23FC 0000017C 00001E3E   137      MOVE.L  #380,         HEALTH_X     ; Enemy X Position
0000009E  23FC 0000005A 00001E42   138      MOVE.L  #90,         HEALTH_Y     ; Enemy Y Position
000000A8                           139  
000000A8  13FC 0064 00001DF8       140      MOVE.B     #100,    hillHP
000000B0                           141  
000000B0  45F9 00001E02            142      LEA    LEVELS,      A2
000000B6  13FC 0003 00001E5A       143      MOVE.B  #03,        antHealth
000000BE                           144  
Line 145 ERROR: Undefined symbol
000000BE  23FC 00000096 005455B8   145      MOVE.L  #150,       currentHealth
Line 146 ERROR: Undefined symbol
000000C8  23FC 00000014 005455B8   146      move.l  #20,        healthTlX
Line 147 ERROR: Undefined symbol
000000D2  23FC 000001A9 005455B8   147      move.l  #425,       healthTlY
Line 148 ERROR: Undefined symbol
000000DC  23FC 000000AA 005455B8   148      move.l  #170,       healthBrX
Line 149 ERROR: Undefined symbol
000000E6  23FC 000001B8 005455B8   149      move.l  #440,       healthBrY
000000F0                           150  
000000F0  13FC 0002 00001E5C       151      MOVE.B  #02,        POINTS
000000F8  13FC 0000 00001DFB       152      MOVE.B  #00,        DRAW_HEALTHPACKS
00000100  13FC 0000 00001DFC       153      MOVE.B  #00,        SPAWN_HEALTHPACKS
00000108                           154  
00000108  23FC 00000000 00001E62   155      MOVE.L  #0,         ATTACK_X
00000112  23FC 00000000 00001E66   156      MOVE.L  #0,         ATTACK_Y
0000011C  23FC FFFFFF9C 00001E70   157      MOVE.L  #-100,      THROW_X
00000126  23FC FFFFFF9C 00001E74   158      MOVE.L  #-100,      THROW_Y
00000130                           159      
00000130  13FC 0000 00001E5D       160      MOVE.B  #00,        CURRENTLYATTACKING
00000138  13FC 0000 00001E6A       161      MOVE.B  #00,        CURRENTLYTHROWING
00000140                           162      
00000140  13FC 0000 00001E83       163      MOVE.B  #00,        ENEMY_HIT
00000148  13FC 0000 00001E84       164      MOVE.B  #00,        FLYENEMY_HIT
00000150                           165  
00000150  0639 0014 00001E82       166      ADD.B   #20,        enemiesToDefeat
00000158  13FC 0000 00001E80       167      MOVE.B  #0,         ENEMIES_DEFEATED
00000160  13FC 0000 00001E81       168      MOVE.B  #0,         enemiesPassed
00000168  13FC 0004 00001F0C       169      MOVE.B  #4,         backToMapCount
00000170  4281                     170      CLR.L   D1
00000172                           171   
00000172                           172  
00000172                           173      ; Enable the screen back buffer(see easy 68k help)
00000172  103C 005C                174      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
00000176  123C 0011                175      MOVE.B  #17,        D1          ; Combine Tasks
0000017A  4E4F                     176      TRAP    #15                     ; Trap (Perform action)
0000017C                           177          
0000017C                           178      ; Clear the screen (see easy 68k help)
0000017C  103C 000B                179      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000180  323C FF00                180      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00000184  4E4F                     181      TRAP    #15                     ; Trap (Perform action)
00000186                           182  
00000186  6000 0002                183      bra gameloop
0000018A                           184  
0000018A                           185  *-----------------------------------------------------------
0000018A                           186  * Subroutine    : Game
0000018A                           187  * Description   : Game including main GameLoop. GameLoop is like
0000018A                           188  * a while loop in that it runs forever until interupted
0000018A                           189  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
0000018A                           190  *-----------------------------------------------------------
0000018A                           191  GAME:
0000018A                           192  
0000018A                           193      
0000018A                           194  GAMELOOP:
0000018A                           195  
0000018A                           196  
0000018A  7008                     197      MOVEQ       #8,d0               * get time in 1/100 ths seconds
0000018C  4E4F                     198      TRAP        #15
0000018E                           199  
0000018E  2F01                     200      MOVE.l  d1,-(sp)            * push time on the stack
00000190  2E1F                     201      MOVE.l  (sp)+,d7            * restore time in 1/100 ths from stack
00000192                           202  wait_100ms:
00000192  7008                     203      MOVEQ       #8,d0               * get time in 1/100 ths seconds
00000194  4E4F                     204      TRAP        #15
00000196                           205  
00000196  9287                     206      SUB.l       d7,d1               * subtract previous time from current time
00000198  B23C 0002                207      CMP.b       #$02,d1         * compare with 9/100ths
0000019C  6BF4                     208      BMI.s       wait_100ms          * loop if time not up yet
0000019E                           209  
0000019E                           210  
0000019E  6100 0018                211      BSR     BATTLEINPUT                   ; Check Keyboard Input
000001A2  6100 012C                212      BSR     checkPaused
000001A6  6100 013C                213      BSR     UPDATE                  ; Update positions and points
000001AA  6100 0940                214      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
000001AE  6100 126E                215      BSR     CHECK_COLLISIONS        ; Check for Collisions
000001B2  6100 046E                216      BSR     DRAWBATTLE                  ; Draw the Scene
000001B6                           217                  ; Loop back to GameLoop
000001B6  60D2                     218      BRA     GAMELOOP    
000001B8                           219      
000001B8                           220  *-----------------------------------------------------------
000001B8                           221  * Subroutine    : Input
000001B8                           222  * Description   : Process Keyboard Input
000001B8                           223  *-----------------------------------------------------------
000001B8                           224  BATTLEINPUT:
000001B8  2039 00001E16            225      move.l CURRENT_KEY, D0
Line 226 ERROR: Undefined symbol
000001BE  13C0 005455B8            226      move.b D0,lastkey 
000001C4                           227  
000001C4  103C 0013                228      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000001C8                           229      ;MOVE.L  #$41444C20, D1          
Line 230 ERROR: Undefined symbol
000001C8  223C 004DBD16            230      MOVE.L  #runActionKeys, D1          ; Check for A, D, L, and Spacebar
000001CE  4E4F                     231      TRAP    #15                         ; Trap (Perform action)
000001D0  23C1 00001E16            232      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
000001D6                           233  
000001D6  0801 0018                234      BTST.L  #24,D1
000001DA                           235      IF <NE> THEN
000001DE  6100 0B4C                236          BSR    MOVE_PLAYER_LEFT
000001E2                           237      ENDI
000001E2                           238  
000001E2  2239 00001E16            239      MOVE.L  CURRENT_KEY, D1
000001E8  0801 0010                240      BTST.L  #16,D1
000001EC                           241      IF <NE> THEN
000001F0  6100 0B64                242          BSR    MOVE_PLAYER_RIGHT
000001F4                           243      ENDI
000001F4                           244  
000001F4  2239 00001E16            245      MOVE.L  CURRENT_KEY, D1
000001FA  0801 0008                246      BTST.L  #8,D1
000001FE                           247      IF <NE> THEN
00000202  6100 0388                248          BSR    PERFORM_ATTACK
00000206                           249      ENDI
00000206                           250  
00000206  2239 00001E16            251      MOVE.L  CURRENT_KEY, D1
0000020C  0801 0000                252      BTST.L  #0,D1
00000210                           253      IF <NE> THEN
00000214  6100 092A                254          BSR    JUMP
00000218                           255      ENDI
00000218                           256  
00000218  103C 0013                257      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
0000021C  223C 00001B4B            258      MOVE.L  #$1B4B, D1                 ; check K and escape
00000222  4E4F                     259      TRAP    #15                     ; Trap (Perform action)
00000224  23C1 00001E16            260      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
0000022A                           261  
0000022A  2239 00001E16            262      MOVE.L  CURRENT_KEY, D1
00000230  0801 0000                263      BTST.L  #0,D1
00000234                           264      IF <NE> THEN
00000238  6100 039E                265          BSR    PERFORM_THROW
0000023C                           266      ENDI
0000023C                           267  
0000023C                           268  
0000023C                           269  
0000023C                           270      ; Process Input
0000023C  4281                     271      CLR.L   D1                      ; Clear Data Register
0000023E  4282                     272      CLR.L   D2
00000240  103C 0013                273      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
00000244  4E4F                     274      TRAP    #15                     ; Trap (Perform action)
00000246  1401                     275      MOVE.B  D1,         D2          ; Move last key D1 to D2
00000248  B43C 0000                276      CMP.B   #00,        D2          ; Key is pressed
0000024C  6700 000E                277      BEQ     PROCESS_INPUT           ; Process Key
00000250  4E4F                     278      TRAP    #15                     ; Trap for Last Key
00000252                           279      ; Check if key still pressed
00000252  B23C 00FF                280      CMP.B   #$FF,       D1          ; Is it still pressed
00000256  6700 0004                281      BEQ     PROCESS_INPUT           ; Process Last Key
0000025A  4E75                     282      RTS                             ; Return to subroutine
0000025C                           283  *-----------------------------------------------------------
0000025C                           284  * Subroutine    : Process Input
0000025C                           285  * Description   : Branch based on keys pressed
0000025C                           286  *-----------------------------------------------------------
0000025C                           287  PROCESS_INPUT:
0000025C  23C2 00001E16            288      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
00000262                           289  
00000262                           290  ; pause
Line 291 ERROR: Undefined symbol
00000262  13C2 005455B8            291      move.b  d2,         currentKey
Line 292 ERROR: Undefined symbol
00000268  0C39 0016 005455CC       292      CMP.b   #escapekey,    currentKey ; Is Current Key Escape
Line 293 ERROR: Undefined symbol
00000270  6700 BAA4                293      BEQ     escapePressed
00000274                           294  
Line 295 ERROR: Undefined symbol
00000274  0C39 0016 005455C0       295      cmpi.b #key0, currentKey ; fullscreen
Line 296 ERROR: Undefined symbol
0000027C  6700 BA98                296      beq key0pressed
00000280                           297  
Line 298 ERROR: Undefined symbol
00000280  4A39 004DBD16            298      tst.b   isPaused
Line 299 ERROR: Undefined symbol
00000286  6600 BA8E                299      bne     pausedInput
0000028A                           300  
Line 301 ERROR: Undefined symbol
0000028A  0C79 0003 005455B8       301      CMP.W   #3,lvlIndex
00000292  6700 000E                302      BEQ     COMPLETE_RESTART
00000296                           303  
00000296  4A39 00001E5B            304      TST.B   antsRemaining
0000029C  6F00 0004                305      BLE     COMPLETE_RESTART
000002A0                           306  
000002A0  4E75                     307      RTS                             ; Return to subroutine
000002A2                           308  
000002A2                           309  COMPLETE_RESTART:
000002A2  0CB9 00000052 00001E16   310      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
000002AC                           311      IF <EQ> THEN
Line 312 ERROR: Undefined symbol
000002B0  33FC 0001 005455B8       312          move.w #1, lvlType
000002B8                           313  
Line 314 ERROR: Undefined symbol
000002B8  223C 004DBD16            314          MOVE.L    #color5,D1
000002BE  243C 00015F90            315          MOVE.L  #00090000,D2
Line 316 ERROR: Undefined symbol
000002C4  103C 0016                316          MOVE.B  #tcFont,D0
000002C8  4E4F                     317          TRAP    #15
000002CA                           318          
Line 319 ERROR: Undefined symbol
000002CA  6000 BA4A                319          BRA     nextInit
000002CE                           320      ENDI
000002CE                           321  
000002CE  4E75                     322      RTS                             ; Return to subroutine
000002D0                           323  *----------
000002D0                           324  checkPaused:
Line 325 ERROR: Undefined symbol
000002D0  4A39 004DBD16            325      TST.B  isPaused
000002D6  6600 0004                326      BNE    stillPaused
000002DA  4E75                     327      RTS
000002DC                           328  
000002DC                           329  stillPaused:
000002DC  6100 0344                330      BSR    DRAWBATTLE
000002E0  6000 FEA8                331      BRA    GAMELOOP
000002E4                           332  *-----------------------------------------------------------
000002E4                           333  * Subroutine    : Update
000002E4                           334  * Description   : Main update loop update Player and Enemies
000002E4                           335  *-----------------------------------------------------------
000002E4                           336  UPDATE:
000002E4                           337      ; update player position
000002E4  6100 0A1C                338      BSR     UPDATE_PLAYER
000002E8  6100 0072                339      BSR     MOVE_THROW
000002EC                           340  
000002EC                           341      ; Move the Enemy
000002EC  4281                     342      CLR.L   D1                      ; Clear the contents of D0
000002EE  2239 00001E36            343      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
000002F4  B2BC 00000000            344      CMP.L   #00,        D1
000002FA  6F00 01BA                345      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
000002FE  6100 00F6                346      BSR     MOVE_ENEMY              ; Move the Enemy
00000302                           347  
00000302                           348      ; Move flying enemy
00000302                           349  
00000302  4281                     350      CLR.L   D1                      ; Clear the contents of D0
00000304  2239 00001E46            351      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
0000030A  B2BC 00000000            352      CMP.L   #00,        D1
00000310  6F00 01E6                353      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
00000314                           354  
00000314                           355  
00000314                           356      ; move health
00000314  6100 00C0                357      BSR     MOVE_HEALTHPACK
00000318  13FC 0001 00001DFD       358      MOVE.B  #1, healthCooldownOver
00000320  0C79 0000 00001F0E       359      CMP.W   #0,healthCooldown
00000328                           360      IF <GT> THEN
0000032C  5379 00001F0E            361          SUBI.W  #1, healthCooldown
00000332  13FC 0000 00001DFD       362          MOVE.B  #0, healthCooldownOver
0000033A                           363      ENDI
0000033A                           364      
0000033A                           365  
0000033A  6100 007C                366      BSR     CHECK_ATTACK_COOLDOWN
0000033E                           367  
0000033E  4A79 00001E60            368      TST.W   ATTACK_TIME
00000344  6600 0080                369      BNE     ATTACK_TIME_SUB
00000348  13FC 0000 00001E5D       370      MOVE.B  #00,        CURRENTLYATTACKING
00000350  23FC 000001E0 00001E66   371      MOVE.L  #480,        ATTACK_Y
0000035A                           372  
0000035A                           373      
0000035A                           374  
0000035A  4E75                     375      RTS                             ; Return to subroutine  
0000035C                           376  
0000035C                           377  MOVE_THROW:
0000035C                           378         ; Update the Players Positon based on Velocity and Gravity
0000035C  B381                     379      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
0000035E  2239 00001E78            380      MOVE.L  THROW_VELOCITY, D1       ; Fetch Player Velocity
00000364  2439 00001E7C            381      MOVE.L  THROW_GRAVITY, D2        ; Fetch Player Gravity
0000036A  D282                     382      ADD.L   D2,         D1          ; Add Gravity to Velocity
0000036C  23C1 00001E78            383      MOVE.L  D1,         THROW_VELOCITY ; Update Player Velocity
00000372  D2B9 00001E74            384      ADD.L   THROW_Y,   D1          ; Add Velocity to Player
00000378  23C1 00001E74            385      MOVE.L  D1,         THROW_Y    ; Update Players Y Position
0000037E                           386  
0000037E  58B9 00001E70            387      ADDI.L   #4,        THROW_X
00000384  6100 0004                388      BSR     CHECK_THROW_DONE
00000388                           389      
00000388  4E75                     390      RTS
0000038A                           391  
0000038A                           392  CHECK_THROW_DONE:
0000038A  0CB9 0000015E 00001E74   393      CMP.L    #350, THROW_Y
00000394  6E00 0004                394      BGT      RESET_THROW
00000398  4E75                     395      RTS
0000039A                           396  
0000039A                           397  RESET_THROW:
0000039A  13FC 0000 00001E6A       398      MOVE.B   #00, CURRENTLYTHROWING
000003A2  23FC FFFFFF9C 00001E70   399      MOVE.L   #-100, THROW_X
000003AC  23FC FFFFFF9C 00001E74   400      MOVE.L   #-100, THROW_Y
000003B6  4E75                     401      RTS
000003B8                           402  
000003B8                           403  CHECK_ATTACK_COOLDOWN:
000003B8  0C79 0000 00001E5E       404      CMP.W   #0, ATTACK_COOLDOWN
000003C0  6E00 000C                405      BGT     ATTACK_COOLDOWN_SUB
000003C4  4E75                     406      RTS
000003C6                           407  
000003C6                           408  ATTACK_TIME_SUB:
000003C6  5579 00001E60            409      SUB.W   #02,        ATTACK_TIME
000003CC  4E75                     410      RTS   
000003CE                           411  ATTACK_COOLDOWN_SUB:
000003CE  5579 00001E5E            412      SUB.W   #02,        ATTACK_COOLDOWN
000003D4  4E75                     413      RTS                            
000003D6                           414  
000003D6                           415  MOVE_HEALTHPACK:
000003D6                           416      ; check if health is meant to spawn
000003D6  4A39 00001DFC            417      TST.B   SPAWN_HEALTHPACKS
000003DC  6700 01AC                418      BEQ     CONTINUE
000003E0                           419      
000003E0                           420      ; check if health is on the
000003E0  0CB9 000000F0 00001E42   421      CMP.L   #240,       HEALTH_Y
000003EA  6C00 019E                422      BGE     CONTINUE
000003EE                           423  
000003EE                           424      ; else
000003EE  52B9 00001E42            425      ADD.L   #01,        HEALTH_Y
000003F4  4E75                     426      RTS
000003F6                           427  
000003F6                           428  *-----------------------------------------------------------
000003F6                           429  * Subroutine    : Move Enemy
000003F6                           430  * Description   : Move Enemy Right to Left
000003F6                           431  *-----------------------------------------------------------
000003F6                           432  MOVE_ENEMY:
Line 433 ERROR: Undefined symbol
000003F6  0C79 0003 005455B8       433      CMP.W   #3,lvlIndex
000003FE  6700 0094                434      BEQ     MOVE_ENEMY_L4
Line 435 ERROR: Undefined symbol
00000402  0C79 0002 005455B8       435      CMP.W   #2,lvlIndex
0000040A  6700 0066                436      BEQ     MOVE_ENEMY_L3
Line 437 ERROR: Undefined symbol
0000040E  0C79 0001 005455B8       437      CMP.W   #1,lvlIndex
00000416  6700 0024                438      BEQ     MOVE_ENEMY_L2
0000041A                           439  
0000041A  0CB9 000000B4 00001E46   440      CMP.L   #180,FLYINGENEMY_X
00000424                           441      IF <LE> THEN
00000428  52B9 00001E4A            442          ADD.L   #1,FLYINGENEMY_Y
0000042E                           443      ENDI
0000042E                           444  
0000042E  57B9 00001E46            445      SUB.L   #03,        FLYINGENEMY_X
00000434  55B9 00001E36            446      SUB.L   #02,        ENEMY_X     ; Move enemy by X Value
0000043A  4E75                     447      RTS
0000043C                           448  
0000043C                           449  MOVE_ENEMY_L2:
0000043C  55B9 00001E46            450      SUB.L   #02,        FLYINGENEMY_X
00000442  0CB9 0000017C 00001E4A   451      CMP.L   #380,       FLYINGENEMY_Y
0000044C                           452      IF <LE> THEN
00000450  55B9 00001E46            453          SUB.l   #02,    FLYINGENEMY_X
00000456                           454      ENDI
00000456                           455  
00000456  0CB9 00000082 00001E46   456      CMP.L   #130,      FLYINGENEMY_X
00000460                           457      IF <LE> THEN
00000464  52B9 00001E4A            458          ADD.L   #1,FLYINGENEMY_Y
0000046A                           459      ENDI
0000046A  59B9 00001E36            460      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
00000470  4E75                     461      RTS
00000472                           462  
00000472                           463  MOVE_ENEMY_L3:
00000472  0CB9 00000082 00001E46   464      CMP.L   #130,      FLYINGENEMY_X
0000047C                           465      IF <LE> THEN
00000480  56B9 00001E4A            466          ADD.L   #3,FLYINGENEMY_Y
00000486                           467      ENDI
00000486  5BB9 00001E46            468      SUB.L   #05,        FLYINGENEMY_X
0000048C  59B9 00001E36            469      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
00000492  4E75                     470      RTS
00000494                           471  
00000494                           472  MOVE_ENEMY_L4:
00000494  0CB9 00000082 00001E46   473      CMP.L   #130,      FLYINGENEMY_X
0000049E                           474      IF <LE> THEN
000004A2  58B9 00001E4A            475          ADD.L   #4,FLYINGENEMY_Y
000004A8                           476      ENDI
000004A8  5FB9 00001E46            477      SUB.L   #07,        FLYINGENEMY_X
000004AE  5BB9 00001E36            478      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
000004B4  4E75                     479      RTS
000004B6                           480  *-----------------------------------------------------------
000004B6                           481  * Subroutine    : Reset Enemy
000004B6                           482  * Description   : Reset Enemy if to passes 0 to Right of Screen
000004B6                           483  *-----------------------------------------------------------
000004B6                           484  RESET_ENEMY_POSITION:
000004B6  4281                     485      CLR.L   D1       
000004B8  3239 00001E14            486      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000004BE  82FC 0002                487      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000004C2  23C1 00001E3A            488      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
000004C8                           489  
000004C8  B381                     490      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
000004CA  3239 00001E12            491      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000004D0  0681 0000001B            492      ADD.L   #ENMY_W_INIT,D1
000004D6  23C1 00001E36            493      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000004DC                           494  
000004DC  4A39 00001E83            495      TST.B     ENEMY_HIT
000004E2                           496      IF <EQ> THEN        ; enemy has not been hit
000004E6  6100 0082                497          BSR   damage_hill
000004EA                           498      ENDI
000004EA  13FC 0000 00001E83       499      MOVE.B  #0,         ENEMY_HIT
000004F2  6100 005E                500      BSR     CHECK_WAVE_CLEARED
000004F6                           501  
000004F6  4E75                     502      RTS
000004F8                           503  
000004F8                           504  RESET_FLYENEMY_POSITION:
000004F8  B381                     505      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000004FA  3239 00001E14            506      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000500  82FC 0002                507      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000504  0441 003C                508      SUB.W   #60,        D1
00000508  23C1 00001E4A            509      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
0000050E                           510  
0000050E  4281                     511      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000510  3239 00001E12            512      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000516  0681 0000001E            513      ADD.L   #FLY_ENMY_W_INIT,D1
0000051C  23C1 00001E46            514      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
00000522                           515  
00000522  4A39 00001E84            516      TST.B     FLYENEMY_HIT
00000528                           517      IF <EQ> THEN        ; enemy has not been hit
0000052C  6100 003C                518          BSR   damage_hill
00000530                           519      ENDI
00000530  13FC 0000 00001E84       520      MOVE.B  #0,         FLYENEMY_HIT
00000538  6100 0018                521      BSR     CHECK_WAVE_CLEARED
0000053C                           522  
0000053C  4E75                     523      RTS
0000053E                           524      
0000053E                           525  RESET_HEALTH_POSITION:
0000053E  13FC 0001 00001DFB       526      MOVE.B  #01,        DRAW_HEALTHPACKS
00000546  23FC 0000005A 00001E42   527      MOVE.L  #90,        HEALTH_Y
00000550  4E75                     528      RTS
00000552                           529  
00000552                           530  CHECK_WAVE_CLEARED:
00000552  5239 00001E81            531      ADDI.B  #1,         enemiesPassed
00000558  1239 00001E81            532      MOVE.B  enemiesPassed,D1
0000055E  B239 00001E82            533      CMP.B   enemiesToDefeat,D1
00000564  6700 1518                534      BEQ     WAVE_DEFEATED
00000568  4E75                     535      RTS
0000056A                           536  
0000056A                           537  damage_hill:
0000056A  0439 000A 00001DF8       538      sub.b  #10,hillHP
Line 539 ERROR: Undefined symbol
00000572  04B9 0000000F 005455B8   539      sub.l   #15,currentHealth
0000057C  0C39 0000 00001DF8       540      CMP.b   #0,hillHP
00000584  6F00 12E2                541      BLE     HILL_LOST
00000588  4E75                     542      RTS
0000058A                           543  
0000058A                           544  CONTINUE:
0000058A  4E75                     545      RTS
0000058C                           546  
0000058C                           547  PERFORM_ATTACK:
Line 548 ERROR: Undefined symbol
0000058C  4A39 004DBD16            548      TST.B  isPaused
00000592                           549      IF <NE> THEN
00000596  4E75                     550          RTS
00000598                           551      ENDI
00000598  4A79 00001E5E            552      TST.W    ATTACK_COOLDOWN
0000059E  66EA                     553      BNE      CONTINUE
000005A0                           554      
000005A0  13FC 0001 00001E5D       555      MOVE.B   #01, CURRENTLYATTACKING
000005A8  33FC 0032 00001E60       556      MOVE.W   #50, ATTACK_TIME
000005B0  33FC 004C 00001E5E       557      MOVE.W   #76, ATTACK_COOLDOWN
000005B8                           558  
000005B8  23F9 00001E1C 00001E62   559      MOVE.L   PLAYER_X,ATTACK_X
000005C2  06B9 0000001B 00001E62   560      ADDI.L   #PLYR_W_INIT,ATTACK_X
000005CC  23F9 00001E20 00001E66   561      MOVE.L   PLAYER_Y,ATTACK_Y
000005D6  4E75                     562      RTS
000005D8                           563  
000005D8                           564  PERFORM_THROW:
Line 565 ERROR: Undefined symbol
000005D8  4A39 004DBD16            565      TST.B  isPaused
000005DE                           566      IF <NE> THEN
000005E2  4E75                     567          RTS
000005E4                           568      ENDI
000005E4  4A39 00001E6A            569      TST.B    CURRENTLYTHROWING
000005EA  669E                     570      BNE      CONTINUE
000005EC                           571      
000005EC  13FC 0001 00001E6A       572      MOVE.B   #01,CURRENTLYTHROWING
000005F4  23F9 00001E1C 00001E70   573      MOVE.L   PLAYER_X,THROW_X
000005FE  06B9 0000001B 00001E70   574      ADDI.L   #PLYR_W_INIT,THROW_X
00000608  23F9 00001E20 00001E74   575      MOVE.L   PLAYER_Y,THROW_Y
00000612  04B9 0000000D 00001E74   576      SUBI.L   #PLYR_H_INIT,THROW_Y
0000061C                           577  
0000061C  6100 0564                578      BSR     PERFORM_THROW_ARC
00000620  4E75                     579      RTS
00000622                           580  
00000622                           581  *-----------------------------------------------------------
00000622                           582  * Subroutine    : Draw
00000622                           583  * Description   : Draw Screen
00000622                           584  *-----------------------------------------------------------
00000622                           585  DRAWBATTLE: 
00000622                           586      ; Enable back buffer
00000622  103C 005E                587      MOVE.B  #TC_REDRAW,        D0
00000626  4E4F                     588      TRAP    #15
00000628                           589  
00000628                           590      ; Clear the screen
00000628  103C 000B                591      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000062C  323C FF00                592      MOVE.W  #$FF00,     D1          ; Clear contents
00000630  4E4F                     593      TRAP    #15                     ; Trap (Perform action)
00000632                           594  
00000632  123C 0001                595      MOVE.B  #1,D1
00000636  103C 005D                596      MOVE.B  #93,D0
0000063A  4E4F                     597      TRAP    #15
0000063C                           598  
0000063C  6100 01FE                599      BSR     DRAW_BACKGROUND        
00000640  6100 006A                600      BSR     DRAW_HILL 
00000644  6100 0378                601      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
00000648  6100 021C                602      BSR     DRAW_TREES
0000064C  6100 01BE                603      BSR     DRAW_ENTRANCE_HOLE
00000650  6100 09D8                604      BSR     DRAW_ENEMY              ; Draw Enemy
00000654  6100 0B12                605      BSR     DRAW_FLYENEMY
00000658  6100 0CBA                606      BSR     DRAW_HEALTHPACK
0000065C  6100 017E                607      BSR     DRAW_ENTRANCE
00000660  6100 071E                608      BSR     DRAW_PLAYER             ; Draw Player
00000664  6100 0D32                609      BSR     DRAW_FLOOR              ; Draw Floor
00000668  6100 0008                610      BSR     drawHillHealth         ; draw hill hp
Line 611 ERROR: Undefined symbol
0000066C  6100 B6A8                611      BSR     drawPause
00000670  4E75                     612      RTS                             ; Return to subroutine
00000672                           613  
00000672                           614  
00000672                           615  
00000672                           616  drawHillHealth:
Line 617 ERROR: Undefined symbol
00000672  6100 B6A2                617      BSR     drawHealth
00000676                           618          
Line 619 ERROR: Undefined symbol
00000676  223C 004DBD16            619      MOVE.L  #color5,D1
Line 620 ERROR: Undefined symbol
0000067C  103C 0016                620      MOVE.B  #tcFont,D0
00000680  243C 00015F90            621      MOVE.L  #00090000,D2
00000686  4E4F                     622      TRAP    #15
00000688                           623  
Line 624 ERROR: Undefined symbol
00000688  223C 004DBD16            624      MOVE.L  #BROWN,D1
Line 625 ERROR: Undefined symbol
0000068E  103C 0016                625      MOVE.B  #tcPenFil,D0
00000692  4E4F                     626      TRAP    #15
00000694                           627  
00000694  103C 000B                628      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000698  323C 041B                629      MOVE.W  #$041B,     D1          ; Col 02, Row 01
0000069C  4E4F                     630      TRAP    #15                     ; Trap (Perform action)
0000069E  43F9 00001DEA            631      LEA     hillHP_MSG,  A1          ; Score Message
000006A4  303C 000D                632      MOVE    #13,        D0          ; No Line feed
000006A8  4E4F                     633      TRAP    #15                     ; Trap (Perform action)
000006AA                           634  
000006AA  4E75                     635      RTS
000006AC                           636  
000006AC                           637  DRAW_HILL:
000006AC                           638  
000006AC                           639      ; Set Pixel Colors
Line 640 ERROR: Undefined symbol
000006AC  223C 004DBD16            640      MOVE.L  #DIRT,     D1          ; Set Background color
000006B2  103C 0050                641      MOVE.B  #80,        D0          ; Task for Background Color
000006B6  4E4F                     642      TRAP    #15                     ; Trap (Perform action)
000006B8                           643  
Line 644 ERROR: Undefined symbol
000006B8  223C 004DBD16            644      MOVE.L  #DIRT,     D1
000006BE  103C 0051                645      MOVE.B  #81,        D0
000006C2  4E4F                     646      TRAP    #15
000006C4                           647  
000006C4                           648      ; Set X, Y, X2, and Y2
000006C4  7200                     649      MOVE.L  #0,   D1          ; X
000006C6  243C 000000F1            650      MOVE.L  #241,  D2          ; Y
000006CC  761E                     651      MOVE.L  #30,   D3           
000006CE  7878                     652      MOVE.L  #120,   D4     
000006D0                           653      
000006D0  103C 0057                654      MOVE.B  #87,        D0          ; Draw 
000006D4  4E4F                     655      TRAP    #15                     ; Trap (Perform action)
000006D6                           656      
000006D6                           657       ; Set X, Y, X2, and Y2
000006D6  7200                     658      MOVE.L  #0,   D1          ; X
000006D8  243C 000000F1            659      MOVE.L  #241,  D2          ; Y
000006DE  763C                     660      MOVE.L  #60,   D3           
000006E0  283C 00000087            661      MOVE.L  #135,   D4 
000006E6                           662      
000006E6                           663      
000006E6  103C 0057                664      MOVE.B  #87,        D0          ; Draw
000006EA  4E4F                     665      TRAP    #15                     ; Trap (Perform action)
000006EC                           666  
000006EC                           667       ; Set X, Y, X2, and Y2
000006EC  7200                     668      MOVE.L  #0,   D1          ; X
000006EE  243C 000000F1            669      MOVE.L  #241,  D2          ; Y
000006F4  7650                     670      MOVE.L  #80,   D3           
000006F6  283C 00000096            671      MOVE.L  #150,   D4 
000006FC                           672      
000006FC                           673      
000006FC  103C 0057                674      MOVE.B  #87,        D0          ; Draw 
00000700  4E4F                     675      TRAP    #15                     ; Trap (Perform action)
00000702                           676  
00000702                           677       ; Set X, Y, X2, and Y2
00000702  7200                     678      MOVE.L  #0,   D1          ; X
00000704  243C 000000F1            679      MOVE.L  #241,  D2          ; Y
0000070A  7664                     680      MOVE.L  #100,   D3           
0000070C  283C 000000C8            681      MOVE.L  #200,   D4 
00000712                           682      
00000712                           683      
00000712  103C 0057                684      MOVE.B  #87,        D0          ; Draw 
00000716  4E4F                     685      TRAP    #15                     ; Trap (Perform action)
00000718                           686  
Line 687 ERROR: Undefined symbol
00000718  223C 004DBD16            687      MOVE.L  #BLACK,     D1
0000071E  103C 0051                688      MOVE.B  #81,        D0
00000722  4E4F                     689      TRAP    #15
Line 690 ERROR: Undefined symbol
00000724  223C 004DBD16            690      MOVE.L  #BLACK,     D1
0000072A  103C 0050                691      MOVE.B  #80,        D0
0000072E  4E4F                     692      TRAP    #15
00000730                           693  
00000730                           694      ; Set X, Y, X2, and Y2
00000730  7205                     695      MOVE.L  #5,   D1          ; X
00000732  243C 00000082            696      MOVE.L  #130,  D2          ; Y
00000738  7619                     697      MOVE.L  #25,   D3           
0000073A  7878                     698      MOVE.L  #120,   D4     
0000073C                           699  
0000073C                           700      
0000073C  103C 0057                701      MOVE.B  #87,        D0          ; Draw 
00000740  4E4F                     702      TRAP    #15                     ; Trap (Perform action)
00000742                           703  
00000742  4E75                     704      RTS
00000744                           705  
00000744                           706      ; Set Pixel Colors
Line 707 ERROR: Undefined symbol
00000744  223C 004DBD16            707      MOVE.L  #DIRT,     D1          ; Set Background color
0000074A  103C 0050                708      MOVE.B  #80,        D0          ; Task for Background Color
0000074E  4E4F                     709      TRAP    #15                     ; Trap (Perform action)
00000750                           710  
Line 711 ERROR: Undefined symbol
00000750  223C 004DBD16            711      MOVE.L  #DIRT,     D1
00000756  103C 0051                712      MOVE.B  #81,        D0
0000075A  4E4F                     713      TRAP    #15
0000075C                           714  
0000075C                           715      ; Set X, Y, X2, and Y2
0000075C  7200                     716      MOVE.L  #0,   D1          ; X
0000075E  243C 000000F1            717      MOVE.L  #241,  D2          ; Y
00000764  761E                     718      MOVE.L  #30,   D3           
00000766  7878                     719      MOVE.L  #120,   D4     
00000768                           720      
00000768  103C 0057                721      MOVE.B  #87,        D0          ; Draw 
0000076C  4E4F                     722      TRAP    #15                     ; Trap (Perform action)
0000076E                           723      
0000076E                           724       ; Set X, Y, X2, and Y2
0000076E  7200                     725      MOVE.L  #0,   D1          ; X
00000770  243C 000000F1            726      MOVE.L  #241,  D2          ; Y
00000776  763C                     727      MOVE.L  #60,   D3           
00000778  283C 00000087            728      MOVE.L  #135,   D4 
0000077E                           729      
0000077E                           730      
0000077E  103C 0057                731      MOVE.B  #87,        D0          ; Draw
00000782  4E4F                     732      TRAP    #15                     ; Trap (Perform action)
00000784                           733  
00000784                           734       ; Set X, Y, X2, and Y2
00000784  7200                     735      MOVE.L  #0,   D1          ; X
00000786  243C 000000F1            736      MOVE.L  #241,  D2          ; Y
0000078C  7650                     737      MOVE.L  #80,   D3           
0000078E  283C 00000096            738      MOVE.L  #150,   D4 
00000794                           739      
00000794                           740      
00000794  103C 0057                741      MOVE.B  #87,        D0          ; Draw 
00000798  4E4F                     742      TRAP    #15                     ; Trap (Perform action)
0000079A                           743  
0000079A                           744       ; Set X, Y, X2, and Y2
0000079A  7200                     745      MOVE.L  #0,   D1          ; X
0000079C  243C 000000F1            746      MOVE.L  #241,  D2          ; Y
000007A2  7664                     747      MOVE.L  #100,   D3           
000007A4  283C 000000C8            748      MOVE.L  #200,   D4 
000007AA                           749      
000007AA                           750      
000007AA  103C 0057                751      MOVE.B  #87,        D0          ; Draw 
000007AE  4E4F                     752      TRAP    #15                     ; Trap (Perform action)
000007B0                           753  
Line 754 ERROR: Undefined symbol
000007B0  223C 004DBD16            754      MOVE.L  #BLACK,     D1
000007B6  103C 0051                755      MOVE.B  #81,        D0
000007BA  4E4F                     756      TRAP    #15
Line 757 ERROR: Undefined symbol
000007BC  223C 004DBD16            757      MOVE.L  #BLACK,     D1
000007C2  103C 0050                758      MOVE.B  #80,        D0
000007C6  4E4F                     759      TRAP    #15
000007C8                           760  
000007C8                           761      ; Set X, Y, X2, and Y2
000007C8  7205                     762      MOVE.L  #5,   D1          ; X
000007CA  243C 00000082            763      MOVE.L  #130,  D2          ; Y
000007D0  7619                     764      MOVE.L  #25,   D3           
000007D2  7878                     765      MOVE.L  #120,   D4     
000007D4                           766  
000007D4                           767      
000007D4  103C 0057                768      MOVE.B  #87,        D0          ; Draw 
000007D8  4E4F                     769      TRAP    #15                     ; Trap (Perform action)
000007DA                           770  
000007DA  4E75                     771      RTS
000007DC                           772  
000007DC                           773  DRAW_ENTRANCE:
000007DC                           774      ; Set Pixel Colors
Line 775 ERROR: Undefined symbol
000007DC  223C 004DBD16            775      MOVE.L  #DIRT,     D1          ; Set Background color
000007E2  103C 0050                776      MOVE.B  #80,        D0          ; Task for Background Color
000007E6  4E4F                     777      TRAP    #15                     ; Trap (Perform action)
000007E8                           778  
Line 779 ERROR: Undefined symbol
000007E8  223C 004DBD16            779      MOVE.L  #DIRT,     D1
000007EE  103C 0051                780      MOVE.B  #81,        D0
000007F2  4E4F                     781      TRAP    #15
000007F4                           782  
000007F4                           783      ; Set X, Y, X2, and Y2
000007F4  7200                     784      MOVE.L  #0,   D1          ; X
000007F6  243C 000000F1            785      MOVE.L  #241,  D2          ; Y
000007FC  7605                     786      MOVE.L  #5,   D3           
000007FE  283C 000000B5            787      MOVE.L  #181,   D4     
00000804                           788      
00000804  103C 0057                789      MOVE.B  #87,        D0          ; Draw 
00000808  4E4F                     790      TRAP    #15                     ; Trap (Perform action)
0000080A                           791  
0000080A  4E75                     792      RTS
0000080C                           793  
0000080C                           794  DRAW_ENTRANCE_HOLE:
0000080C                           795      ; Set Pixel Colors
Line 796 ERROR: Undefined symbol
0000080C  223C 004DBD16            796      MOVE.L  #BLACK,     D1          ; Set Background color
00000812  103C 0050                797      MOVE.B  #80,        D0          ; Task for Background Color
00000816  4E4F                     798      TRAP    #15                     ; Trap (Perform action)
00000818                           799  
Line 800 ERROR: Undefined symbol
00000818  223C 004DBD16            800      MOVE.L  #BLACK,     D1
0000081E  103C 0051                801      MOVE.B  #81,        D0
00000822  4E4F                     802      TRAP    #15
00000824                           803  
00000824                           804      ; Set X, Y, X2, and Y2
00000824  7205                     805      MOVE.L  #5,   D1          ; X
00000826  243C 000000F1            806      MOVE.L  #241,  D2          ; Y
0000082C  7614                     807      MOVE.L  #20,   D3           
0000082E  283C 000000D3            808      MOVE.L  #211,   D4     
00000834                           809      
00000834  103C 0057                810      MOVE.B  #87,        D0          ; Draw 
00000838  4E4F                     811      TRAP    #15                     ; Trap (Perform action)
0000083A  4E75                     812      RTS
0000083C                           813  
0000083C                           814  DRAW_BACKGROUND:
0000083C  4281                     815      CLR.L       D1
Line 816 ERROR: Undefined symbol
0000083E  223C 004DBD16            816      MOVE.L      #SKY,D1
00000844  103C 0051                817      MOVE.B      #81,D0
00000848  4E4F                     818      TRAP        #15
0000084A                           819  
0000084A  7200                     820      MOVE.L      #00, D1
0000084C  7400                     821      MOVE.L      #00, D2
0000084E  7059                     822      MOVE.L      #89, D0
00000850  4E4F                     823      TRAP        #15
00000852                           824      
Line 825 ERROR: Undefined symbol
00000852  223C 004DBD16            825      MOVE.L     #BROWN,D1
00000858  243C 01110000            826      MOVE.L     #$01110000,D2
0000085E  103C 0015                827      MOVE.B     #21,D0
00000862  4E4F                     828      TRAP       #15
00000864                           829  
00000864  4E75                     830      RTS
00000866                           831  
00000866                           832  DRAW_TREES:
00000866                           833      
00000866  7204                     834      MOVE.L  #4,D1
00000868  705D                     835      MOVE.L  #93,D0
0000086A  4E4F                     836      TRAP    #15
0000086C                           837      
0000086C                           838      ; Set Pixel Colors
Line 839 ERROR: Undefined symbol
0000086C  223C 004DBD16            839      MOVE.L  #TRUNKO,     D1          ; Set Background color
00000872  103C 0050                840      MOVE.B  #80,        D0          ; Task for Background Color
00000876  4E4F                     841      TRAP    #15                     ; Trap (Perform action)
00000878                           842  
Line 843 ERROR: Undefined symbol
00000878  223C 004DBD16            843      MOVE.L  #TRUNKO,     D1
0000087E  103C 0051                844      MOVE.B  #81,        D0
00000882  4E4F                     845      TRAP    #15
00000884                           846      
00000884  223C 00000140            847      MOVE.L  #320,D1
0000088A  243C 000000F1            848      MOVE.L  #241,D2
00000890  263C 00000154            849      MOVE.L  #340,D3
00000896  283C 00000089            850      MOVE.L  #137,D4
0000089C                           851      
0000089C  103C 0054                852      MOVE.B  #84,D0
000008A0  4E4F                     853      TRAP    #15
000008A2                           854      
000008A2  223C 00000170            855      MOVE.L  #368,D1
000008A8  2404                     856      MOVE.L  D4,D2
000008AA  103C 0055                857      MOVE.B  #85,D0
000008AE  4E4F                     858      TRAP    #15
000008B0                           859      
000008B0  223C 00000181            860      MOVE.L  #385,D1
000008B6  243C 000000F1            861      MOVE.L  #241,D2
000008BC  103C 0055                862      MOVE.B  #85,D0
000008C0  4E4F                     863      TRAP    #15
000008C2                           864      
000008C2  223C 00000140            865      MOVE.L  #320,D1
000008C8  243C 000000F1            866      MOVE.L  #241,D2
000008CE  103C 0055                867      MOVE.B  #85,D0
000008D2  4E4F                     868      TRAP    #15
000008D4                           869      
Line 870 ERROR: Undefined symbol
000008D4  223C 004DBD16            870      MOVE.L  #TRUNKI,     D1
000008DA  103C 0051                871      MOVE.B  #81,        D0
000008DE  4E4F                     872      TRAP    #15
000008E0                           873      
000008E0  223C 00000154            874      MOVE.L  #340,D1
000008E6  243C 000000A0            875      MOVE.L  #160,D2
000008EC  103C 0059                876      MOVE.B  #89,D0
000008F0  4E4F                     877      TRAP    #15
000008F2                           878     
000008F2  7201                     879      MOVE.L  #1,D1
000008F4  705D                     880      MOVE.L  #93,D0
000008F6  4E4F                     881      TRAP    #15
000008F8                           882  
000008F8                           883     ; Set Pixel Colors
Line 884 ERROR: Undefined symbol
000008F8  223C 004DBD16            884      MOVE.L  #GREEN1,     D1          ; Set Background color
000008FE  103C 0050                885      MOVE.B  #80,        D0          ; Task for Background Color
00000902  4E4F                     886      TRAP    #15                     ; Trap (Perform action)
00000904                           887  
Line 888 ERROR: Undefined symbol
00000904  223C 004DBD16            888      MOVE.L  #GREEN1,     D1
0000090A  103C 0051                889      MOVE.B  #81,        D0
0000090E  4E4F                     890      TRAP    #15
00000910                           891  
00000910                           892  ; 88 for elipse
00000910  223C 0000012F            893      MOVE.L  #303,D1
00000916  7421                     894      MOVE.L  #33,D2
00000918  263C 00000187            895      MOVE.L  #391,D3
0000091E  7876                     896      MOVE.L  #118,D4
00000920  103C 0057                897      MOVE.B  #87,D0
00000924  4E4F                     898      TRAP    #15
00000926                           899     
00000926                           900        ; Set Pixel Colors
Line 901 ERROR: Undefined symbol
00000926  223C 004DBD16            901      MOVE.L  #GREEN2,     D1          ; Set Background color
0000092C  103C 0050                902      MOVE.B  #80,        D0          ; Task for Background Color
00000930  4E4F                     903      TRAP    #15                     ; Trap (Perform action)
00000932                           904  
Line 905 ERROR: Undefined symbol
00000932  223C 004DBD16            905      MOVE.L  #GREEN2,     D1
00000938  103C 0051                906      MOVE.B  #81,        D0
0000093C  4E4F                     907      TRAP    #15
0000093E                           908  
0000093E                           909  ; 88 for elipse
0000093E  223C 00000152            910      MOVE.L  #338,D1
00000944  742A                     911      MOVE.L  #42,D2
00000946  263C 000001AB            912      MOVE.L  #427,D3
0000094C  283C 00000085            913      MOVE.L  #133,D4
00000952  103C 0057                914      MOVE.B  #87,D0
00000956  4E4F                     915      TRAP    #15
00000958                           916      
00000958                           917            ; Set Pixel Colors
Line 918 ERROR: Undefined symbol
00000958  223C 004DBD16            918      MOVE.L  #GREEN3,     D1          ; Set Background color
0000095E  103C 0050                919      MOVE.B  #80,        D0          ; Task for Background Color
00000962  4E4F                     920      TRAP    #15                     ; Trap (Perform action)
00000964                           921  
Line 922 ERROR: Undefined symbol
00000964  223C 004DBD16            922      MOVE.L  #GREEN3,     D1
0000096A  103C 0051                923      MOVE.B  #81,        D0
0000096E  4E4F                     924      TRAP    #15
00000970                           925  
00000970                           926  ; 88 for elipse
00000970  223C 0000011C            927      MOVE.L  #284,D1
00000976  7441                     928      MOVE.L  #65,D2
00000978  263C 00000170            929      MOVE.L  #368,D3
0000097E  283C 00000096            930      MOVE.L  #150,D4
00000984  103C 0057                931      MOVE.B  #87,D0
00000988  4E4F                     932      TRAP    #15
0000098A                           933      
0000098A                           934            ; Set Pixel Colors
Line 935 ERROR: Undefined symbol
0000098A  223C 004DBD16            935      MOVE.L  #GREEN4,     D1          ; Set Background color
00000990  103C 0050                936      MOVE.B  #80,        D0          ; Task for Background Color
00000994  4E4F                     937      TRAP    #15                     ; Trap (Perform action)
00000996                           938  
Line 939 ERROR: Undefined symbol
00000996  223C 004DBD16            939      MOVE.L  #GREEN4,     D1
0000099C  103C 0051                940      MOVE.B  #81,        D0
000009A0  4E4F                     941      TRAP    #15
000009A2                           942  
000009A2                           943  ; 88 for elipse
000009A2  223C 00000154            944      MOVE.L  #340,D1
000009A8  744C                     945      MOVE.L  #76,D2
000009AA  263C 000001A7            946      MOVE.L  #423,D3
000009B0  283C 0000009E            947      MOVE.L  #158,D4
000009B6  103C 0057                948      MOVE.B  #87,D0
000009BA  4E4F                     949      TRAP    #15
000009BC                           950      
000009BC                           951  
000009BC                           952      
000009BC                           953  
000009BC  4E75                     954      RTS
000009BE                           955  *-----------------------------------------------------------
000009BE                           956  * Subroutine    : Draw game info
000009BE                           957  * Description   : Draw info about the current battle e.g. your hp, hill hp, ant remaining, etc.
000009BE                           958  *-----------------------------------------------------------
000009BE                           959  DRAW_PLYR_DATA:
000009BE  B381                     960      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
000009C0  B582                     961      EOR.L    D2,D2
000009C2                           962  
Line 963 ERROR: Undefined symbol
000009C2  223C 004DBD16            963      MOVE.L  #BLACK,     D1
000009C8  103C 0015                964      MOVE.B  #21,        D0          ; Set Text Color
000009CC  4E4F                     965      TRAP    #15                     ; Trap (Perform action)
000009CE                           966  
Line 967 ERROR: Undefined symbol
000009CE  223C 004DBD16            967      MOVE.L  #SKY,       D1          ; Set Text Color
000009D4  7051                     968      MOVE.L  #81,        D0          ; Set Text Color
000009D6  4E4F                     969      TRAP    #15                     ; Trap (Perform action)
000009D8                           970      ; Player 
000009D8  103C 000B                971      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009DC  323C 0203                972      MOVE.W  #$0203,     D1          ; Col 02, Row 03
000009E0  4E4F                     973      TRAP    #15                     ; Trap (Perform action)
000009E2  43F9 00001DD8            974      LEA     antsRem_MSG,      A1          ; Velocity Message
000009E8  303C 000D                975      MOVE    #13,        D0          ; No Line feed
000009EC  4E4F                     976      TRAP    #15                     ; Trap (Perform action)
000009EE                           977      
000009EE                           978      ; Player Velocity
000009EE  103C 000B                979      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009F2  323C 1303                980      MOVE.W  #$1303,     D1          ; Col 05, Row 03
000009F6  4E4F                     981      TRAP    #15                     ; Trap (Perform action)
000009F8  103C 0003                982      MOVE.B  #03,        D0          ; Display number at D1.L
000009FC  B381                     983      EOR.L   D1,D1
000009FE  1239 00001DFB            984      MOVE.B  DRAW_HEALTHPACKS,D1        ; Move X to D1.L
00000A04  4E4F                     985      TRAP    #15                     ; Trap (Perform action)
00000A06                           986  
00000A06                           987    ; Player 
00000A06  103C 000B                988      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A0A  323C 0201                989      MOVE.W  #$0201,     D1          ; Col 02, Row 03
00000A0E  4E4F                     990      TRAP    #15                     ; Trap (Perform action)
00000A10  43F9 00001C9C            991      LEA     SCORE_MSG,      A1          ; Velocity Message
00000A16  303C 000D                992      MOVE    #13,        D0          ; No Line feed
00000A1A  4E4F                     993      TRAP    #15                     ; Trap (Perform action)
00000A1C                           994      
00000A1C                           995      ; Player Velocity
00000A1C  103C 000B                996      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A20  323C 1301                997      MOVE.W  #$1301,     D1          ; Col 05, Row 03
00000A24  4E4F                     998      TRAP    #15                     ; Trap (Perform action)
00000A26  103C 0003                999      MOVE.B  #03,        D0          ; Display number at D1.L
00000A2A  B381                    1000      EOR.L   D1,D1
00000A2C  3239 00001F0E           1001      MOVE.W  healthCooldown,D1        ; Move X to D1.L
00000A32  4E4F                    1002      TRAP    #15                     ; Trap (Perform action)
00000A34                          1003  
00000A34                          1004      ; Player On Ground Message
00000A34  103C 000B               1005      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A38  323C 0204               1006      MOVE.W  #$0204,     D1          ; Col 10, Row 03
00000A3C  4E4F                    1007      TRAP    #15                     ; Trap (Perform action)
00000A3E  43F9 00001CE4           1008      LEA     ENEMIESDEAD_MSG,    A1          ; On Ground Message
00000A44  303C 000D               1009      MOVE    #13,        D0          ; No Line feed
00000A48  4E4F                    1010      TRAP    #15                     ; Trap (Perform action)
00000A4A                          1011      
00000A4A                          1012      ; Player On Ground
00000A4A  103C 000B               1013      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A4E  323C 1504               1014      MOVE.W  #$1504,     D1          ; Col 06, Row 04
00000A52  4E4F                    1015      TRAP    #15                     ; Trap (Perform action)
00000A54  103C 0003               1016      MOVE.B  #03,        D0          ; Display number at D1.L
00000A58  4281                    1017      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A5A  1239 00001DFC           1018      MOVE.B  SPAWN_HEALTHPACKS,     D1          ; Move Play on Ground ? to D1.L
00000A60  4E4F                    1019      TRAP    #15                     ; Trap (Perform action)
00000A62                          1020      
00000A62                          1021      ; number of enemies in wave msg
00000A62  103C 000B               1022      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A66  323C 0205               1023      MOVE.W  #$0205,     D1          ; Col 10, Row 03
00000A6A  4E4F                    1024      TRAP    #15                     ; Trap (Perform action)
00000A6C  43F9 00001CF6           1025      LEA     ENEMYCOUNT_MSG,    A1          ; On Ground Message
00000A72  303C 000D               1026      MOVE    #13,        D0          ; No Line feed
00000A76  4E4F                    1027      TRAP    #15                     ; Trap (Perform action)
00000A78                          1028      
00000A78                          1029      ; number of enemies in wave 
00000A78  103C 000B               1030      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A7C  323C 1705               1031      MOVE.W  #$1705,     D1          ; Col 06, Row 04
00000A80  4E4F                    1032      TRAP    #15                     ; Trap (Perform action)
00000A82  4281                    1033      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A84  1239 00001E82           1034      MOVE.B  enemiesToDefeat,     D1          ; Move Play on Ground ? to D1.L
00000A8A  103C 0003               1035      MOVE.B  #03,        D0          ; Display number at D1.L
00000A8E  4E4F                    1036      TRAP    #15                     ; Trap (Perform action)
00000A90                          1037  
00000A90                          1038      ; Show Keys Pressed
00000A90  103C 000B               1039      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A94  323C 2001               1040      MOVE.W  #$2001,     D1          ; Col 20, Row 1
00000A98  4E4F                    1041      TRAP    #15                     ; Trap (Perform action)
00000A9A  43F9 00001CA5           1042      LEA     KEYCODE_MSG, A1         ; Keycode
00000AA0  303C 000D               1043      MOVE    #13,        D0          ; No Line feed
00000AA4  4E4F                    1044      TRAP    #15                     ; Trap (Perform action)
00000AA6                          1045  
00000AA6                          1046      ; Show KeyCode
00000AA6  103C 000B               1047      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000AAA  323C 3001               1048      MOVE.W  #$3001,     D1          ; Col 30, Row 1
00000AAE  4E4F                    1049      TRAP    #15                     ; Trap (Perform action)    
00000AB0  2239 00001E16           1050      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
00000AB6  103C 0003               1051      MOVE.B  #03,        D0          ; Display the contents of D1
00000ABA  4E4F                    1052      TRAP    #15                     ; Trap (Perform action)
00000ABC                          1053  
00000ABC                          1054      
00000ABC                          1055      ; Show antHealth msg
00000ABC  103C 000B               1056      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000AC0  323C 0202               1057      MOVE.W  #$0202,     D1          ; Col 02, Row 06
00000AC4  4E4F                    1058      TRAP    #15                     ; Trap (Perform action)
00000AC6  43F9 00001DCE           1059      LEA     antHealth_MSG,   A1          ; Draw
00000ACC  303C 000D               1060      MOVE    #13,        D0          ; No Line feed
00000AD0  4E4F                    1061      TRAP    #15                     ; Trap (Perform action)  
00000AD2                          1062      
00000AD2                          1063      ; Show antHealth msg
00000AD2  103C 000B               1064      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000AD6  323C 0A02               1065      MOVE.W  #$0A02,     D1          ; Col 30, Row 1
00000ADA  4E4F                    1066      TRAP    #15                     ; Trap (Perform action)   
00000ADC  B381                    1067      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000ADE  1239 00001E5A           1068      MOVE.B  antHealth,      D1          ; Move Key Pressed to D1
00000AE4  103C 0003               1069      MOVE.B  #03,        D0          ; Display the contents of D1
00000AE8  4E4F                    1070      TRAP    #15                     ; Trap (Perform action)
00000AEA                          1071  
00000AEA  4E75                    1072      RTS
00000AEC                          1073  *-----------------------------------------------------------
00000AEC                          1074  * Subroutine    : Player is on Ground
00000AEC                          1075  * Description   : Check if the Player is on or off Ground
00000AEC                          1076  *-----------------------------------------------------------
00000AEC                          1077  IS_PLAYER_ON_GND:
00000AEC                          1078      ; Check if Player is on Ground
00000AEC  4281                    1079      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000AEE  4282                    1080      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
00000AF0  3239 00001E14           1081      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
00000AF6  82FC 0002               1082      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000AFA  2439 00001E20           1083      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
00000B00  B441                    1084      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
00000B02  6C00 0008               1085      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
00000B06  6D00 002C               1086      BLT     SET_OFF_GROUND          ; The Player is off the Ground
00000B0A  4E75                    1087      RTS                             ; Return to subroutine
00000B0C                          1088  
00000B0C                          1089  
00000B0C                          1090  *-----------------------------------------------------------
00000B0C                          1091  * Subroutine    : On Ground
00000B0C                          1092  * Description   : Set the Player On Ground
00000B0C                          1093  *-----------------------------------------------------------
00000B0C                          1094  SET_ON_GROUND:
00000B0C  4281                    1095      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000B0E  3239 00001E14           1096      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000B14  82FC 0002               1097      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000B18  23C1 00001E20           1098      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00000B1E  4281                    1099      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000B20  7200                    1100      MOVE.L  #00,        D1          ; Player Velocity
00000B22  23C1 00001E28           1101      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
00000B28  23FC 00000001 00001E30  1102      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
00000B32  4E75                    1103      RTS
00000B34                          1104  
00000B34                          1105  *-----------------------------------------------------------
00000B34                          1106  * Subroutine    : Off Ground
00000B34                          1107  * Description   : Set the Player Off Ground
00000B34                          1108  *-----------------------------------------------------------
00000B34                          1109  SET_OFF_GROUND:
00000B34  23FC 00000000 00001E30  1110      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00000B3E  4E75                    1111      RTS                             ; Return to subroutine
00000B40                          1112  *-----------------------------------------------------------
00000B40                          1113  * Subroutine    : Jump
00000B40                          1114  * Description   : Perform a Jump
00000B40                          1115  *-----------------------------------------------------------
00000B40                          1116  JUMP:
Line 1117 ERROR: Undefined symbol
00000B40  4A39 004DBD16           1117      TST.B  isPaused
00000B46                          1118      IF <NE> THEN
00000B4A  4E75                    1119          RTS
00000B4C                          1120      ENDI
00000B4C  0CB9 00000001 00001E30  1121      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000B56  6700 0006               1122      BEQ     PERFORM_JUMP            ; Do Jump
00000B5A  6000 0012               1123      BRA     JUMP_DONE               ;
00000B5E                          1124  PERFORM_JUMP:
00000B5E  6100 0066               1125      BSR     PLAY_JUMP               ; Play jump sound
00000B62  23FC FFFFFFED 00001E28  1126      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00000B6C  4E75                    1127      RTS                             ; Return to subroutine
00000B6E                          1128  JUMP_DONE:
00000B6E  4E75                    1129      RTS                             ; Return to subroutine
00000B70                          1130  
00000B70                          1131  *-----------------------------------------------------------
00000B70                          1132  * Subroutine    : Throw
00000B70                          1133  * Description   : Perform a Throw
00000B70                          1134  *-----------------------------------------------------------
00000B70                          1135  THROW_ARC:
00000B70  0CB9 00000001 00001E30  1136      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000B7A  6700 0006               1137      BEQ     PERFORM_THROW_ARC    ; Do Jump
00000B7E  6000 000E               1138      BRA     ARC_DONE               ;
00000B82                          1139  PERFORM_THROW_ARC:
00000B82                          1140      ;BSR     PLAY_JUMP               ; Play jump sound
00000B82  23FC FFFFFFF0 00001E78  1141      MOVE.L  #THRW_JUMP_V,THROW_VELOCITY ; Set the players velocity to true
00000B8C  4E75                    1142      RTS                             ; Return to subroutine
00000B8E                          1143  ARC_DONE:
00000B8E  4E75                    1144      RTS                             ; Return to subroutine
00000B90                          1145  
00000B90                          1146  *-----------------------------------------------------------
00000B90                          1147  * Subroutine    : Idle
00000B90                          1148  * Description   : Perform a Idle
00000B90                          1149  *----------------------------------------------------------- 
00000B90                          1150  IDLE:
00000B90  4E75                    1151      RTS                             ; Return to subroutine
00000B92                          1152  
00000B92                          1153  *-----------------------------------------------------------
00000B92                          1154  * Subroutines   : Sound Load and Play
00000B92                          1155  * Description   : Initialise game sounds into memory 
00000B92                          1156  * Current Sounds are RUN, JUMP and Opps for Collision
00000B92                          1157  *-----------------------------------------------------------
00000B92                          1158  GAMEOVER_LOAD:
00000B92  43F9 00001E99           1159      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00000B98  323C 0000               1160      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00000B9C  303C 004A               1161      MOVE    #74,        D0          ; Load into memory
00000BA0  4E4F                    1162      TRAP    #15                     ; Trap (Perform action)
00000BA2  4E75                    1163      RTS                             ; Return to subroutine
00000BA4                          1164  
00000BA4                          1165  PLAY_GAMEOVER:
00000BA4  6100 00E8               1166      bsr STOP_SONG
00000BA8  323C 0000               1167      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00000BAC  303C 004B               1168      MOVE    #75,        D0          ; Play Sound
00000BB0  4E4F                    1169      TRAP    #15                     ; Trap (Perform action)
00000BB2  4E75                    1170      RTS                             ; Return to subroutine
00000BB4                          1171  
00000BB4                          1172  JUMP_LOAD:
00000BB4  43F9 00001E90           1173      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
00000BBA  323C 0001               1174      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
00000BBE  303C 004A               1175      MOVE    #74,        D0          ; Load into memory
00000BC2  4E4F                    1176      TRAP    #15                     ; Trap (Perform action)
00000BC4  4E75                    1177      RTS                             ; Return to subroutine
00000BC6                          1178  
00000BC6                          1179  PLAY_JUMP:
00000BC6  323C 0001               1180      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
00000BCA  303C 004B               1181      MOVE    #75,        D0          ; Play Sound
00000BCE  4E4F                    1182      TRAP    #15                     ; Trap (Perform action)
00000BD0  4E75                    1183      RTS                             ; Return to subroutine
00000BD2                          1184  
00000BD2                          1185  HITHURT_LOAD:
00000BD2  43F9 00001EA6           1186      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
00000BD8  323C 0002               1187      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
00000BDC  303C 004A               1188      MOVE    #74,        D0          ; Load into memory
00000BE0  4E4F                    1189      TRAP    #15                     ; Trap (Perform action)
00000BE2  4E75                    1190      RTS                             ; Return to subroutine
00000BE4                          1191  
00000BE4                          1192  PLAY_HITHURT:
00000BE4  323C 0002               1193      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
00000BE8  303C 004B               1194      MOVE    #75,        D0          ; Play Sound
00000BEC  4E4F                    1195      TRAP    #15                     ; Trap (Perform action)
00000BEE  4E75                    1196      RTS                             ; Return to subroutine
00000BF0                          1197  
00000BF0                          1198  POWERUP_LOAD:
00000BF0  43F9 00001EBA           1199      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
00000BF6  323C 0003               1200      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
00000BFA  303C 004A               1201      MOVE    #74,        D0          ; Load into memory
00000BFE  4E4F                    1202      TRAP    #15                     ; Trap (Perform action)
00000C00  4E75                    1203      RTS                             ; Return to subroutine
00000C02                          1204  
00000C02                          1205  PLAY_POWERUP:
00000C02  323C 0003               1206      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
00000C06  303C 004B               1207      MOVE    #75,        D0          ; Play Sound
00000C0A  4E4F                    1208      TRAP    #15                     ; Trap (Perform action)
00000C0C  4E75                    1209      RTS                             ; Return to subroutine
00000C0E                          1210  
00000C0E                          1211  LVLCHANGE_LOAD:
00000C0E  43F9 00001EC6           1212      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
00000C14  323C 0004               1213      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
00000C18  303C 004A               1214      MOVE    #74,        D0          ; Load into memory
00000C1C  4E4F                    1215      TRAP    #15                     ; Trap (Perform action)
00000C1E  4E75                    1216      RTS                             ; Return to subroutine
00000C20                          1217  
00000C20                          1218  PLAY_LVLCHANGE:
00000C20  323C 0004               1219      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00000C24  303C 004B               1220      MOVE    #75,        D0          ; Play Sound
00000C28  4E4F                    1221      TRAP    #15                     ; Trap (Perform action)
00000C2A  4E75                    1222      RTS                             ; Return to subroutine
00000C2C                          1223  
00000C2C                          1224  HIT_LOAD:
00000C2C  43F9 00001EB2           1225      LEA     HIT_WAV,   A1          ; Load Wav File into A1
00000C32  323C 0005               1226      MOVE    #HIT_INDEX,D1          ; Assign it INDEX
00000C36  303C 004A               1227      MOVE    #74,        D0          ; Load into memory
00000C3A  4E4F                    1228      TRAP    #15                     ; Trap (Perform action)
00000C3C  4E75                    1229      RTS                             ; Return to subroutine
00000C3E                          1230  
00000C3E                          1231  PLAY_HIT:
00000C3E  323C 0005               1232      MOVE    #HIT_INDEX,D1          ; Load Sound INDEX
00000C42  303C 004B               1233      MOVE    #75,        D0          ; Play Sound
00000C46  4E4F                    1234      TRAP    #15                     ; Trap (Perform action)
00000C48  4E75                    1235      RTS                             ; Return to subroutine
00000C4A                          1236  
00000C4A                          1237  MAP_SONG_LOAD:
00000C4A  43F9 00001EE9           1238      LEA     MAP_SONG_WAV,   A1          ; Load Wav File into A1
00000C50  323C 0006               1239      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C54  303C 004A               1240      MOVE    #74,        D0          ; Load into memory
00000C58  4E4F                    1241      TRAP    #15                     ; Trap (Perform action)
00000C5A  4E75                    1242      RTS                             ; Return to subroutine
00000C5C                          1243  
00000C5C                          1244  BATTLE_SONG_LOAD:
00000C5C  43F9 00001ED6           1245      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000C62  323C 0006               1246      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C66  303C 004A               1247      MOVE    #74,        D0          ; Load into memory
00000C6A  4E4F                    1248      TRAP    #15                     ; Trap (Perform action)
00000C6C  4E75                    1249      RTS                             ; Return to subroutine
00000C6E                          1250  
00000C6E                          1251  MENU_SONG_LOAD:
00000C6E  43F9 00001EF9           1252      LEA     MENU_SONG_WAV,   A1          ; Load Wav File into A1
00000C74  323C 0006               1253      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C78  303C 004A               1254      MOVE    #74,        D0          ; Load into memory
00000C7C  4E4F                    1255      TRAP    #15                     ; Trap (Perform action)
00000C7E  4E75                    1256      RTS                             ; Return to subroutine
00000C80                          1257  
00000C80                          1258  ; special function to play song in song index
00000C80                          1259  PLAY_SONG:
00000C80  323C 0006               1260      MOVE    #SONG_INDEX,D1          ; Load Sound INDEX
00000C84  7401                    1261      move.l #1, d2
00000C86  303C 004D               1262      MOVE    #77,        D0          ; Play Sound
00000C8A  4E4F                    1263      TRAP    #15                     ; Trap (Perform action)
00000C8C  4E75                    1264      RTS                             ; Return to subroutine
00000C8E                          1265  
00000C8E                          1266  ; stop song playing
00000C8E                          1267  STOP_SONG:
00000C8E  323C 0006               1268      move #SONG_INDEX,d1
00000C92  7402                    1269      move.l #2, d2
00000C94  303C 004D               1270      move #77, d0
00000C98  4E4F                    1271      trap #15
00000C9A  4E75                    1272      rts
00000C9C                          1273  
00000C9C                          1274  *-----------------------------------------------------------
00000C9C                          1275  * Subroutine    : Draw Player
00000C9C                          1276  * Description   : Draw Player Ant
00000C9C                          1277  *-----------------------------------------------------------
00000C9C                          1278      include "battle/playerAnt.X68"
00000C9C                          1279  
00000C9C  =0000001B               1280  PLYR_W_INIT EQU         27          ; Players initial Width
00000C9C  =0000000D               1281  PLYR_H_INIT EQU         13          ; Players initial Height
00000C9C                          1282  
00000C9C  =00000000               1283  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00000C9C  =FFFFFFED               1284  PLYR_JUMP_V EQU         -19          ; Player Jump Velocity
00000C9C  =00000001               1285  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00000C9C                          1286  
00000C9C                          1287  INIT_PLAYER:
00000C9C                          1288  
00000C9C                          1289      ; Place the Player at the center of the screen
00000C9C  B381                    1290      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
00000C9E  3239 00001E12           1291      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000CA4  82FC 0002               1292      DIVU    #02,        D1          ; divide by 2 for center on X Axis
00000CA8  23C1 00001E1C           1293      MOVE.L  D1,         PLAYER_X    ; Players X Position
00000CAE                          1294  
00000CAE  B381                    1295      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CB0  3239 00001E14           1296      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000CB6  82FC 0002               1297      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000CBA  23C1 00001E20           1298      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000CC0                          1299  
00000CC0                          1300          ; Set the player starting width and height
00000CC0  13FC 001B 00001E85      1301      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
00000CC8  13FC 000D 00001E86      1302      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
00000CD0                          1303  
00000CD0  B381                    1304      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CD2  3239 00001E14           1305      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000CD8  82FC 0002               1306      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000CDC  23C1 00001E20           1307      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000CE2                          1308  
00000CE2                          1309      ; Initialise Player Velocity
00000CE2  B381                    1310      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CE4  123C 0000               1311      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
00000CE8  23C1 00001E28           1312      MOVE.L  D1,         PLYR_VELOCITY
00000CEE                          1313  
00000CEE                          1314      ; Initialise Player Gravity
00000CEE  B381                    1315      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CF0  7201                    1316      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
00000CF2  23C1 00001E2C           1317      MOVE.L  D1,         PLYR_GRAVITY
00000CF8                          1318  
00000CF8                          1319          ; Initialize Player on Ground
00000CF8  23FC 00000001 00001E30  1320      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
00000D02                          1321      
00000D02                          1322  
00000D02                          1323  UPDATE_PLAYER:
00000D02                          1324      ; Update the Players Positon based on Velocity and Gravity
00000D02  4281                    1325      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000D04  2239 00001E28           1326      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00000D0A  2439 00001E2C           1327      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
00000D10  D282                    1328      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000D12  23C1 00001E28           1329      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00000D18  D2B9 00001E20           1330      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
00000D1E  23C1 00001E20           1331      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
00000D24  23C1 00001E66           1332      MOVE.L  D1,         ATTACK_Y 
00000D2A                          1333  
00000D2A  4E75                    1334      RTS
00000D2C                          1335  
00000D2C                          1336  ; Move Player to the left
00000D2C                          1337  MOVE_PLAYER_LEFT:
Line 1338 ERROR: Undefined symbol
00000D2C  4A39 004DBD16           1338      TST.B  isPaused
00000D32                          1339      IF <NE> THEN
00000D36  4E75                    1340          RTS
00000D38                          1341      ENDI
00000D38                          1342  
00000D38  13FC 0001 00001E34      1343      MOVE.B  #LOOKLEFT,        PLAYER_DIR
00000D40  2239 00001E1C           1344      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000D46  5581                    1345      SUB.L   #02,        D1          ; Move Player Left
00000D48  23C1 00001E1C           1346      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000D4E  55B9 00001E62           1347      SUB.L   #02,        ATTACK_X
00000D54  4E75                    1348      RTS                             ; Return to subroutine    
00000D56                          1349  
00000D56                          1350  ; Move Player to the right
00000D56                          1351  MOVE_PLAYER_RIGHT:
Line 1352 ERROR: Undefined symbol
00000D56  4A39 004DBD16           1352      TST.B  isPaused
00000D5C                          1353      IF <NE> THEN
00000D60  4E75                    1354          RTS
00000D62                          1355      ENDI
00000D62  13FC 0002 00001E34      1356      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
00000D6A  2239 00001E1C           1357      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000D70  5481                    1358      ADD.L   #02,        D1          ; Move Player Right
00000D72  23C1 00001E1C           1359      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000D78  54B9 00001E62           1360      ADD.L   #02,        ATTACK_X
00000D7E  4E75                    1361      RTS                             ; Return to subroutine
00000D80                          1362  
00000D80                          1363  ; draw all player relevant data
00000D80                          1364  DRAW_PLAYER:
00000D80                          1365      ; Set Pixel Colors
Line 1366 ERROR: Undefined symbol
00000D80  223C 004DBD16           1366      MOVE.L  #BLACK,     D1          ; Set Background color
00000D86  103C 0050               1367      MOVE.B  #80,        D0          ; Task for Background Color
00000D8A  4E4F                    1368      TRAP    #15                     ; Trap (Perform action)
00000D8C                          1369      ; Reset Pixel Colors
Line 1370 ERROR: Undefined symbol
00000D8C  223C 004DBD16           1370      MOVE.L  #BLACK,     D1          ; Set Background color
00000D92  103C 0051               1371      MOVE.B  #81,        D0          ; Task for Background Color
00000D96  4E4F                    1372      TRAP    #15                     ; Trap (Perform action)
00000D98                          1373  
00000D98  2239 00001E1C           1374      MOVE.L  PLAYER_X,   D1          ; X
00000D9E  2439 00001E20           1375      MOVE.L  PLAYER_Y,   D2
00000DA4  5982                    1376      SUBQ.L  #4,D2
00000DA6                          1377  
00000DA6  2639 00001E1C           1378      MOVE.L  PLAYER_X,   D3
00000DAC  B984                    1379      EOR.L   D4,D4
00000DAE  1839 00001E85           1380      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000DB4  D684                    1381      ADD.L   D4,D3
00000DB6  2839 00001E20           1382      MOVE.L  PLAYER_Y,   D4
00000DBC  9839 00001E86           1383      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00000DC2                          1384      
00000DC2                          1385       ; Draw Player
00000DC2  103C 0057               1386      MOVE.B  #87,        D0          ; Draw Player
00000DC6  4E4F                    1387      TRAP    #15                     ; Trap (Perform action)
00000DC8                          1388  
00000DC8  2239 00001E1C           1389      MOVE.L  PLAYER_X,   D1          ; X
00000DCE  2439 00001E20           1390      MOVE.L  PLAYER_Y,   D2
00000DD4  5982                    1391      SUBQ.L  #4,D2
00000DD6  2639 00001E1C           1392      MOVE.L  PLAYER_X,   D3
00000DDC  B984                    1393      EOR.L   D4,D4
00000DDE  1839 00001E85           1394      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000DE4  0404 000C               1395      SUBI.B   #12,D4
00000DE8  D684                    1396      ADD.L   D4,D3
00000DEA  2839 00001E20           1397      MOVE.L  PLAYER_Y,   D4
00000DF0  9839 00001E86           1398      SUB.B   PLAYER_HEIGHT,   D4      ; Height
00000DF6  5704                    1399      SUB.B   #3,D4
00000DF8                          1400      
00000DF8                          1401      ; Draw Player
00000DF8  103C 0057               1402      MOVE.B  #87,        D0          ; Draw Player
00000DFC  4E4F                    1403      TRAP    #15                     ; Trap (Perform action)
00000DFE                          1404  
00000DFE                          1405      ; change thickness
00000DFE  7203                    1406      MOVE.l  #3,D1
00000E00  103C 005D               1407      MOVE.B  #93,D0
00000E04  4E4F                    1408      TRAP    #15
00000E06                          1409  
00000E06  2239 00001E1C           1410      MOVE.L  PLAYER_X,D1
00000E0C  0681 00000016           1411      ADD.L   #22,D1
00000E12  2439 00001E20           1412      MOVE.L  PLAYER_Y,D2
00000E18  0482 0000000D           1413      SUB.L   #PLYR_H_INIT,D2
00000E1E  2601                    1414      MOVE.L  D1,D3
00000E20  0683 0000000A           1415      ADD.L   #10,D3
00000E26  2802                    1416      MOVE.L  D2,D4
00000E28  5F84                    1417      SUBI.L  #7,D4
00000E2A                          1418  
00000E2A  103C 0054               1419      MOVE.B  #84,D0
00000E2E  4E4F                    1420      TRAP    #15
00000E30                          1421  
00000E30  2239 00001E1C           1422      MOVE.L  PLAYER_X,D1
00000E36  2439 00001E20           1423      MOVE.L  PLAYER_Y,D2
00000E3C  2601                    1424      MOVE.L  D1,D3
00000E3E  5883                    1425      ADD.L   #4,D3
00000E40  2802                    1426      MOVE.L  D2,D4
00000E42  5984                    1427      SUBI.L  #4,D4
00000E44                          1428  
00000E44  103C 0054               1429      MOVE.B  #84,D0
00000E48  4E4F                    1430      TRAP    #15
00000E4A                          1431  
00000E4A  2239 00001E1C           1432      MOVE.L  PLAYER_X,D1
00000E50  0681 0000000D           1433      ADD.L   #13,D1
00000E56  2439 00001E20           1434      MOVE.L  PLAYER_Y,D2
00000E5C  2601                    1435      MOVE.L  D1,D3
00000E5E  2802                    1436      MOVE.L  D2,D4
00000E60  5984                    1437      SUBI.L  #4,D4
00000E62                          1438  
00000E62  103C 0054               1439      MOVE.B  #84,D0
00000E66  4E4F                    1440      TRAP    #15
00000E68                          1441  
00000E68  2239 00001E1C           1442      MOVE.L  PLAYER_X,D1
00000E6E  0681 00000016           1443      ADD.L   #22,D1
00000E74  2839 00001E20           1444      MOVE.L  PLAYER_Y,D4
00000E7A  2601                    1445      MOVE.L  D1,D3
00000E7C  5683                    1446      ADD.L   #3,D3
00000E7E  2404                    1447      MOVE.L  D4,D2
00000E80  5982                    1448      SUBI.L  #4,D2
00000E82                          1449  
00000E82  103C 0054               1450      MOVE.B  #84,D0
00000E86  4E4F                    1451      TRAP    #15
00000E88                          1452  
00000E88                          1453      ; Set Pixel Colors
Line 1454 ERROR: Undefined symbol
00000E88  223C 004DBD16           1454      MOVE.L  #WHITE,     D1          ; Set Background color
00000E8E  103C 0050               1455      MOVE.B  #80,        D0          ; Task for Background Color
00000E92  4E4F                    1456      TRAP    #15                     ; Trap (Perform action)
00000E94                          1457  
00000E94  2239 00001E1C           1458      MOVE.L  PLAYER_X,D1
00000E9A  0681 00000016           1459      ADD.L   #22,D1
00000EA0  2439 00001E20           1460      MOVE.L  PLAYER_Y,D2
00000EA6  0482 0000000A           1461      SUB.L   #10,D2
00000EAC  2601                    1462      MOVE.L  D1,D3
00000EAE  2802                    1463      MOVE.L  D2,D4
00000EB0                          1464  
00000EB0  103C 0054               1465      MOVE.B  #84,D0
00000EB4  4E4F                    1466      TRAP    #15
00000EB6                          1467  
00000EB6  7201                    1468      MOVE.l  #1,D1
00000EB8  103C 005D               1469      MOVE.B  #93,D0
00000EBC  4E4F                    1470      TRAP    #15
00000EBE                          1471      
00000EBE  6100 0008               1472      BSR     IS_ATTACKING
00000EC2  6100 0054               1473      BSR     IS_THROWING
00000EC6                          1474  
00000EC6  4E75                    1475      RTS                             ; Return to subroutine
00000EC8                          1476  
00000EC8                          1477  IS_ATTACKING:
00000EC8  4A39 00001E5D           1478      TST.B   CURRENTLYATTACKING
00000ECE  6600 0004               1479      BNE     DRAW_ATTACK
00000ED2  4E75                    1480      RTS
00000ED4                          1481  DRAW_ATTACK:
00000ED4                          1482  
00000ED4                          1483      ; Set Pixel Colors
Line 1484 ERROR: Undefined symbol
00000ED4  223C 004DBD16           1484      MOVE.L  #WHITE,     D1          ; Set Background color
00000EDA  103C 0050               1485      MOVE.B  #80,        D0          ; Task for Background Color
00000EDE  4E4F                    1486      TRAP    #15                     ; Trap (Perform action)
00000EE0                          1487      ; Reset Pixel Colors
Line 1488 ERROR: Undefined symbol
00000EE0  223C 004DBD16           1488      MOVE.L  #WHITE,     D1          ; Set Background color
00000EE6  103C 0051               1489      MOVE.B  #81,        D0          ; Task for Background Color
00000EEA  4E4F                    1490      TRAP    #15                     ; Trap (Perform action)
00000EEC                          1491  
00000EEC  2239 00001E62           1492      MOVE.L  ATTACK_X,   D1          ; X
00000EF2  2439 00001E66           1493      MOVE.L  ATTACK_Y,   D2
00000EF8                          1494      
00000EF8  2639 00001E62           1495      MOVE.L  ATTACK_X,   D3
00000EFE  0683 00000023           1496      ADD.L   #ATTACK_WIDTH,   D3      ; Width
00000F04  2839 00001E66           1497      MOVE.L  ATTACK_Y,   D4 
00000F0A  0484 00000014           1498      SUB.L   #ATTACK_HEIGHT,   D4      ; Height          ; Y
00000F10                          1499      
00000F10                          1500      ; Draw Player
00000F10  103C 0057               1501      MOVE.B  #87,        D0          ; Draw Player
00000F14  4E4F                    1502      TRAP    #15                     ; Trap (Perform action)
00000F16  4E75                    1503      RTS                             ; Return to subroutine
00000F18                          1504  
00000F18                          1505  IS_THROWING:
00000F18  4A39 00001E6A           1506      TST.B   CURRENTLYTHROWING
00000F1E  6600 0004               1507      BNE     DRAW_THROW
00000F22  4E75                    1508      RTS
00000F24                          1509  DRAW_THROW:
00000F24                          1510  
00000F24                          1511      ; Set Pixel Colors
Line 1512 ERROR: Undefined symbol
00000F24  223C 004DBD16           1512      MOVE.L  #ACORN,     D1          ; Set Background color
00000F2A  103C 0050               1513      MOVE.B  #80,        D0          ; Task for Background Color
00000F2E  4E4F                    1514      TRAP    #15                     ; Trap (Perform action)
00000F30                          1515      ; Reset Pixel Colors
Line 1516 ERROR: Undefined symbol
00000F30  223C 004DBD16           1516      MOVE.L  #ACORN,     D1          ; Set Background color
00000F36  103C 0051               1517      MOVE.B  #81,        D0          ; Task for Background Color
00000F3A  4E4F                    1518      TRAP    #15                     ; Trap (Perform action)
00000F3C                          1519  
00000F3C  2239 00001E70           1520      MOVE.L  THROW_X,   D1          ; X
00000F42  2439 00001E74           1521      MOVE.L  THROW_Y,   D2
00000F48                          1522      
00000F48  2639 00001E70           1523      MOVE.L  THROW_X,   D3
00000F4E  0683 0000000F           1524      ADD.L   #THRW_W_INIT,   D3      ; Width
00000F54  2839 00001E74           1525      MOVE.L  THROW_Y,   D4 
00000F5A  0484 0000000F           1526      SUB.L   #THRW_H_INIT,   D4      ; Height          ; Y
00000F60                          1527      
00000F60                          1528      ; Draw Acorn
00000F60  103C 0057               1529      MOVE.B  #87,        D0          ; Draw Player
00000F64  4E4F                    1530      TRAP    #15                     ; Trap (Perform action)
00000F66                          1531      
00000F66                          1532      ; Set Pixel Colors
Line 1533 ERROR: Undefined symbol
00000F66  223C 004DBD16           1533      MOVE.L  #ACORNHAT,     D1          ; Set Background color
00000F6C  103C 0050               1534      MOVE.B  #80,        D0          ; Task for Background Color
00000F70  4E4F                    1535      TRAP    #15                     ; Trap (Perform action)
00000F72                          1536      ; Reset Pixel Colors
Line 1537 ERROR: Undefined symbol
00000F72  223C 004DBD16           1537      MOVE.L  #ACORNHAT,     D1          ; Set Background color
00000F78  103C 0051               1538      MOVE.B  #81,        D0          ; Task for Background Color
00000F7C  4E4F                    1539      TRAP    #15                     ; Trap (Perform action)
00000F7E                          1540  
00000F7E  2239 00001E70           1541      MOVE.L  THROW_X,D1
00000F84  5581                    1542      SUB.L   #2,D1
00000F86  5483                    1543      ADD.l   #2,D3
00000F88  5284                    1544      ADD.L   #1,D4
00000F8A  2404                    1545      MOVE.L  D4,D2
00000F8C  5D82                    1546      SUB.L   #6,D2
00000F8E                          1547  
00000F8E                          1548      ; Draw Acorn
00000F8E  103C 0057               1549      MOVE.B  #87,        D0          ; Draw Player
00000F92  4E4F                    1550      TRAP    #15                     ; Trap (Perform action)
00000F94                          1551  
00000F94  2239 00001E70           1552      MOVE.L  THROW_X,D1
00000F9A  5C81                    1553      ADD.L   #6,D1
00000F9C  2802                    1554      MOVE.L  D2,D4
00000F9E  5B82                    1555      SUB.l   #5,D2
00000FA0  2601                    1556      MOVE.L  D1,D3
00000FA2  5883                    1557      ADD.L   #4,D3
00000FA4                          1558  
00000FA4                          1559      ; Draw Acorn
00000FA4  103C 0057               1560      MOVE.B  #87,        D0          ; Draw Player
00000FA8  4E4F                    1561      TRAP    #15                     ; Trap (Perform action)
00000FAA                          1562  
00000FAA  4E75                    1563      RTS                             ; Return to subroutine
00000FAC                          1564  
00000FAC                          1565  DRAW_RESPAWN:
00000FAC  7A00                    1566      MOVEQ.L     #0,  D5
00000FAE  3A39 00001F0A           1567      MOVE.W      respawnTime,D5
00000FB4                          1568  
00000FB4  B381                    1569      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000FB6  3239 00001E14           1570      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000FBC  82FC 0002               1571      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000FC0  23C1 00001E20           1572      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000FC6                          1573  
00000FC6                          1574  MOVE_RESPAWNED:
00000FC6  23C5 00001E1C           1575      MOVE.L  D5, PLAYER_X
00000FCC                          1576  
00000FCC                          1577      ; Enable back buffer
00000FCC  103C 005E               1578      MOVE.B  #TC_REDRAW,        D0
00000FD0  4E4F                    1579      TRAP    #15
00000FD2                          1580  
00000FD2                          1581      ; Clear the screen
00000FD2  103C 000B               1582      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000FD6  323C FF00               1583      MOVE.W  #$FF00,     D1          ; Clear contents
00000FDA  4E4F                    1584      TRAP    #15                     ; Trap (Perform action)
00000FDC                          1585  
00000FDC  123C 0001               1586      MOVE.B  #1,D1
00000FE0  103C 005D               1587      MOVE.B  #93,D0
00000FE4  4E4F                    1588      TRAP    #15
00000FE6                          1589  
00000FE6  6100 F854               1590      BSR     DRAW_BACKGROUND        
00000FEA  6100 F6C0               1591      BSR     DRAW_HILL 
00000FEE  6100 F9CE               1592      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
00000FF2  6100 FD8C               1593      BSR     DRAW_PLAYER             ; Draw Player
00000FF6  6100 0032               1594      BSR     DRAW_ENEMY              ; Draw Enemy
00000FFA  6100 016C               1595      BSR     DRAW_FLYENEMY
00000FFE  6100 0314               1596      BSR     DRAW_HEALTHPACK
00001002  6100 0394               1597      BSR     DRAW_FLOOR              ; Draw Floor
Line 1598 ERROR: Undefined symbol
00001006  6100 AD0E               1598      BSR     drawPause        
0000100A                          1599  
0000100A                          1600  
0000100A  5279 00001F0A           1601      ADDQ.W      #1,respawnTime
00001010  3A39 00001F0A           1602      MOVE.W      respawnTime,D5
00001016  0C79 00C8 00001F0A      1603      CMP.W       #200,respawnTime
0000101E  66A6                    1604      BNE         MOVE_RESPAWNED
00001020  33FC 0000 00001F0A      1605      MOVE.W     #0,respawnTime
00001028                          1606      ;else
00001028  4E75                    1607      RTS
00001028  4E75                    1608  -------------------- end include --------------------
0000102A                          1609  *-----------------------------------------------------------
0000102A                          1610  * Subroutine    : Draw Enemy
0000102A                          1611  * Description   : Draw Enemy Ant
0000102A                          1612  *-----------------------------------------------------------
0000102A                          1613      include "battle/battleEnemy.X68"
0000102A                          1614  DRAW_ENEMY:
0000102A                          1615      ; Set Pixel Colors
Line 1616 ERROR: Undefined symbol
0000102A  223C 004DBD16           1616      MOVE.L  #RED,       D1          ; Set pen color
00001030  103C 0050               1617      MOVE.B  #80,        D0          ; Task for pen Color
00001034  4E4F                    1618      TRAP    #15                     ; Trap (Perform action)
00001036                          1619  
00001036                          1620      ; Reset Pixel Colors
Line 1621 ERROR: Undefined symbol
00001036  223C 004DBD16           1621      MOVE.L  #colorRed,     D1          ; Set Background color
0000103C  103C 0051               1622      MOVE.B  #81,        D0          ; Task for Background Color
00001040  4E4F                    1623      TRAP    #15                     ; Trap (Perform action)
00001042                          1624  
00001042                          1625      *-------------- draw ENEMY body -----------------*
00001042  2239 00001E36           1626      MOVE.L  ENEMY_X,   D1          ; X
00001048  2439 00001E3A           1627      MOVE.L  ENEMY_Y,   D2
0000104E  5982                    1628      SUBQ.L  #4,D2
00001050                          1629  
00001050  2639 00001E36           1630      MOVE.L  ENEMY_X,   D3
00001056  0683 0000001B           1631      ADD.L   #ENMY_W_INIT, D3  
0000105C  2839 00001E3A           1632      MOVE.L  ENEMY_Y,   D4
00001062  0484 0000000D           1633      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00001068                          1634      
00001068                          1635       ; Draw 
00001068  103C 0057               1636      MOVE.B  #87,        D0          ; Draw enemy
0000106C  4E4F                    1637      TRAP    #15                     ; Trap (Perform action)
0000106E                          1638  
0000106E  2239 00001E36           1639      MOVE.L  ENEMY_X,   D1          ; X
00001074  2601                    1640      MOVE.L  D1,   D3
00001076  0681 0000001B           1641      ADD.L   #ENMY_W_INIT,D1
0000107C  2439 00001E3A           1642      MOVE.L  ENEMY_Y,   D2
00001082  5982                    1643      SUBQ.L  #4,D2
00001084  2639 00001E36           1644      MOVE.L  ENEMY_X,   D3
0000108A  0683 0000000C           1645      ADDI.L   #12,D3
00001090                          1646      
00001090  2839 00001E3A           1647      MOVE.L  ENEMY_Y,   D4
00001096  0484 0000000D           1648      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
0000109C  5704                    1649      SUB.B   #3,D4
0000109E                          1650      
0000109E                          1651      ; Draw 
0000109E  103C 0057               1652      MOVE.B  #87,        D0          ; Draw enemy
000010A2  4E4F                    1653      TRAP    #15                     ; Trap (Perform action)
000010A4                          1654  
000010A4                          1655      ; change thickness
000010A4  7203                    1656      MOVE.l  #3,D1
000010A6  103C 005D               1657      MOVE.B  #93,D0
000010AA  4E4F                    1658      TRAP    #15
000010AC                          1659  
000010AC  2239 00001E36           1660      MOVE.L  ENEMY_X,D1
000010B2  5681                    1661      ADD.L   #3,D1
000010B4  2439 00001E3A           1662      MOVE.L  ENEMY_Y,D2
000010BA  0482 0000000D           1663      SUB.L   #ENMY_H_INIT,D2
000010C0  2601                    1664      MOVE.L  D1,D3
000010C2  0483 0000000A           1665      SUB.L   #10,D3
000010C8  2802                    1666      MOVE.L  D2,D4
000010CA  5F84                    1667      SUBI.L  #7,D4
000010CC                          1668  
000010CC  103C 0054               1669      MOVE.B  #84,D0
000010D0  4E4F                    1670      TRAP    #15
000010D2                          1671  
000010D2  2239 00001E36           1672      MOVE.L  ENEMY_X,D1
000010D8  2439 00001E3A           1673      MOVE.L  ENEMY_Y,D2
000010DE  2601                    1674      MOVE.L  D1,D3
000010E0  5883                    1675      ADD.L   #4,D3
000010E2  2802                    1676      MOVE.L  D2,D4
000010E4  5984                    1677      SUBI.L  #4,D4
000010E6                          1678  
000010E6  103C 0054               1679      MOVE.B  #84,D0
000010EA  4E4F                    1680      TRAP    #15
000010EC                          1681  
000010EC  2239 00001E36           1682      MOVE.L  ENEMY_X,D1
000010F2  0681 0000000D           1683      ADD.L   #13,D1
000010F8  2439 00001E3A           1684      MOVE.L  ENEMY_Y,D2
000010FE  2601                    1685      MOVE.L  D1,D3
00001100  2802                    1686      MOVE.L  D2,D4
00001102  5984                    1687      SUBI.L  #4,D4
00001104                          1688  
00001104  103C 0054               1689      MOVE.B  #84,D0
00001108  4E4F                    1690      TRAP    #15
0000110A                          1691  
0000110A  2239 00001E36           1692      MOVE.L  ENEMY_X,D1
00001110  0681 00000016           1693      ADD.L   #22,D1
00001116  2839 00001E3A           1694      MOVE.L  ENEMY_Y,D4
0000111C  2601                    1695      MOVE.L  D1,D3
0000111E  5683                    1696      ADD.L   #3,D3
00001120  2404                    1697      MOVE.L  D4,D2
00001122  5982                    1698      SUBI.L  #4,D2
00001124                          1699  
00001124  103C 0054               1700      MOVE.B  #84,D0
00001128  4E4F                    1701      TRAP    #15
0000112A                          1702  
0000112A                          1703      ; Set Pixel Colors
Line 1704 ERROR: Undefined symbol
0000112A  223C 004DBD16           1704      MOVE.L  #BLACK,     D1          ; Set Pen color
00001130  103C 0050               1705      MOVE.B  #80,        D0          ; Task for Pen Color
00001134  4E4F                    1706      TRAP    #15                     ; Trap (Perform action)
00001136                          1707  
00001136                          1708      ; change thickness
00001136  7203                    1709      MOVE.l  #3,D1
00001138  103C 005D               1710      MOVE.B  #93,D0
0000113C  4E4F                    1711      TRAP    #15
0000113E                          1712  
0000113E  2239 00001E36           1713      MOVE.L  ENEMY_X,D1
00001144  5681                    1714      ADD.L   #3,D1
00001146  2439 00001E3A           1715      MOVE.L  ENEMY_Y,D2
0000114C  0482 0000000A           1716      SUB.L   #10,D2
00001152  2601                    1717      MOVE.L  D1,D3
00001154  5283                    1718      ADDQ.L  #1,D3
00001156  2802                    1719      MOVE.L  D2,D4
00001158                          1720  
00001158  103C 0054               1721      MOVE.B  #84,D0
0000115C  4E4F                    1722      TRAP    #15
0000115E                          1723  
0000115E                          1724      ; reset pen
0000115E  7201                    1725      MOVE.l  #1,D1
00001160  103C 005D               1726      MOVE.B  #93,D0
00001164  4E4F                    1727      TRAP    #15
00001166                          1728  
00001166  4E75                    1729      RTS                             ; Return to subroutine
00001166  4E75                    1730  -------------------- end include --------------------
00001168                          1731  
00001168                          1732      
00001168                          1733  DRAW_FLYENEMY:
00001168                          1734      ; Set Pixel Colors
00001168  2239 00001E52           1735      MOVE.L  FLYENEMYCOLOR,       D1          ; Set Background color
0000116E  103C 0050               1736      MOVE.B  #80,        D0          ; Task for Background Color
00001172  4E4F                    1737      TRAP    #15                     ; Trap (Perform action)
00001174                          1738  
00001174                          1739      ; Reset Pixel Colors
00001174  2239 00001E52           1740      MOVE.L  FLYENEMYCOLOR,     D1          ; Set Background color
0000117A  103C 0051               1741      MOVE.B  #81,        D0          ; Task for Background Color
0000117E  4E4F                    1742      TRAP    #15                     ; Trap (Perform action)
00001180                          1743  
00001180                          1744          *-------------- draw FLYINGENEMY body -----------------*
00001180  2239 00001E46           1745      MOVE.L  FLYINGENEMY_X,   D1          ; X
00001186  2439 00001E4A           1746      MOVE.L  FLYINGENEMY_Y,   D2
0000118C  5982                    1747      SUBQ.L  #4,D2
0000118E                          1748  
0000118E  2639 00001E46           1749      MOVE.L  FLYINGENEMY_X,   D3
00001194  0683 0000001E           1750      ADD.L   #FLY_ENMY_W_INIT, D3  
0000119A  2839 00001E4A           1751      MOVE.L  FLYINGENEMY_Y,   D4
000011A0  0484 0000000D           1752      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
000011A6                          1753      
000011A6                          1754       ; Draw 
000011A6  103C 0057               1755      MOVE.B  #87,        D0          ; Draw enemy
000011AA  4E4F                    1756      TRAP    #15                     ; Trap (Perform action)
000011AC                          1757  
000011AC                          1758  *-------------- draw FLYINGENEMY abdomen -----------------*
000011AC  2239 00001E46           1759      MOVE.L  FLYINGENEMY_X,   D1          ; X
000011B2  2601                    1760      MOVE.L  D1,   D3
000011B4  0681 0000001E           1761      ADD.L   #FLY_ENMY_W_INIT,D1
000011BA  2439 00001E4A           1762      MOVE.L  FLYINGENEMY_Y,   D2
000011C0  5982                    1763      SUBQ.L  #4,D2
000011C2  2639 00001E46           1764      MOVE.L  FLYINGENEMY_X,   D3
000011C8  0683 0000000C           1765      ADDI.L   #12,D3
000011CE                          1766      
000011CE  2839 00001E4A           1767      MOVE.L  FLYINGENEMY_Y,   D4
000011D4  0484 0000000D           1768      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
000011DA  5704                    1769      SUB.B   #3,D4
000011DC                          1770      
000011DC                          1771      ; Draw 
000011DC  103C 0057               1772      MOVE.B  #87,        D0          ; Draw enemy
000011E0  4E4F                    1773      TRAP    #15                     ; Trap (Perform action)
000011E2                          1774  
000011E2                          1775  *-------------- draw FLYINGENEMY antena -----------------*    
000011E2                          1776      ; change thickness
000011E2  7203                    1777      MOVE.l  #3,D1
000011E4  103C 005D               1778      MOVE.B  #93,D0
000011E8  4E4F                    1779      TRAP    #15
000011EA                          1780  
000011EA  2239 00001E46           1781      MOVE.L  FLYINGENEMY_X,D1
000011F0  5681                    1782      ADD.L   #3,D1
000011F2  2439 00001E4A           1783      MOVE.L  FLYINGENEMY_Y,D2
000011F8  0482 0000000D           1784      SUB.L   #FLY_ENMY_H_INIT,D2
000011FE  2601                    1785      MOVE.L  D1,D3
00001200  0483 0000000A           1786      SUB.L   #10,D3
00001206  2802                    1787      MOVE.L  D2,D4
00001208  5F84                    1788      SUBI.L  #7,D4
0000120A                          1789  
0000120A  103C 0054               1790      MOVE.B  #84,D0
0000120E  4E4F                    1791      TRAP    #15
00001210                          1792  
00001210                          1793  *-------------- draw FLYINGENEMY leg 1 -----------------*
00001210  2239 00001E46           1794      MOVE.L  FLYINGENEMY_X,D1
00001216  2439 00001E4A           1795      MOVE.L  FLYINGENEMY_Y,D2
0000121C  2601                    1796      MOVE.L  D1,D3
0000121E  5883                    1797      ADD.L   #4,D3
00001220  2802                    1798      MOVE.L  D2,D4
00001222  5984                    1799      SUBI.L  #4,D4
00001224                          1800  
00001224  103C 0054               1801      MOVE.B  #84,D0
00001228  4E4F                    1802      TRAP    #15
0000122A                          1803  
0000122A                          1804  *-------------- draw FLYINGENEMY leg 2 -----------------*
0000122A  2239 00001E46           1805      MOVE.L  FLYINGENEMY_X,D1
00001230  0681 0000000D           1806      ADD.L   #13,D1
00001236  2439 00001E4A           1807      MOVE.L  FLYINGENEMY_Y,D2
0000123C  2601                    1808      MOVE.L  D1,D3
0000123E  2802                    1809      MOVE.L  D2,D4
00001240  5984                    1810      SUBI.L  #4,D4
00001242                          1811  
00001242  103C 0054               1812      MOVE.B  #84,D0
00001246  4E4F                    1813      TRAP    #15
00001248                          1814  
00001248                          1815  *-------------- draw FLYINGENEMY leg 3 -----------------*
00001248  2239 00001E46           1816      MOVE.L  FLYINGENEMY_X,D1
0000124E  0681 00000016           1817      ADD.L   #22,D1
00001254  2839 00001E4A           1818      MOVE.L  FLYINGENEMY_Y,D4
0000125A  2601                    1819      MOVE.L  D1,D3
0000125C  5683                    1820      ADD.L   #3,D3
0000125E  2404                    1821      MOVE.L  D4,D2
00001260  5982                    1822      SUBI.L  #4,D2
00001262                          1823  
00001262  103C 0054               1824      MOVE.B  #84,D0
00001266  4E4F                    1825      TRAP    #15
00001268                          1826  
00001268                          1827  *-------------- draw FLYINGENEMY Wing 1 -----------------*
00001268                          1828      ; Set Pixel Colors
Line 1829 ERROR: Undefined symbol
00001268  223C 004DBD16           1829      MOVE.L  #WING,     D1          ; Set Pen color
0000126E  103C 0050               1830      MOVE.B  #80,        D0          ; Task for Pen Color
00001272  4E4F                    1831      TRAP    #15                     ; Trap (Perform action)
00001274                          1832      
00001274                          1833      ; change thickness
00001274  7205                    1834      MOVE.l  #5,D1
00001276  103C 005D               1835      MOVE.B  #93,D0
0000127A  4E4F                    1836      TRAP    #15
0000127C                          1837  
0000127C  2239 00001E46           1838      MOVE.L  FLYINGENEMY_X,D1
00001282  0681 0000000F           1839      ADD.L   #15,D1
00001288  2439 00001E4A           1840      MOVE.L  FLYINGENEMY_Y,d2
0000128E  0482 0000000D           1841      SUB.L   #FLY_ENMY_H_INIT,D2
00001294  2601                    1842      MOVE.L  D1,D3
00001296  0483 00000009           1843      SUB.L   #9,D3
0000129C  2802                    1844      MOVE.L  D2,D4
0000129E  0484 0000000A           1845      SUB.L   #10,D4
000012A4                          1846  
000012A4  103C 0054               1847      MOVE.B  #84,D0
000012A8  4E4F                    1848      TRAP    #15
000012AA                          1849  
000012AA                          1850  *-------------- draw FLYINGENEMY Wing 2 -----------------*
000012AA  2239 00001E46           1851      MOVE.L  FLYINGENEMY_X,D1
000012B0  0681 0000000F           1852      ADD.L   #15,D1
000012B6  2439 00001E4A           1853      MOVE.L  FLYINGENEMY_Y,d2
000012BC  0482 0000000D           1854      SUB.L   #FLY_ENMY_H_INIT,D2
000012C2  2601                    1855      MOVE.L  D1,D3
000012C4  0683 00000009           1856      ADD.L   #9,D3
000012CA  2802                    1857      MOVE.L  D2,D4
000012CC  0484 0000000A           1858      SUB.L   #10,D4
000012D2                          1859  
000012D2  103C 0054               1860      MOVE.B  #84,D0
000012D6  4E4F                    1861      TRAP    #15
000012D8                          1862  
000012D8                          1863  
000012D8                          1864  *-------------- draw FLYINGENEMY eye -----------------*
000012D8                          1865      ; Set Pixel Colors
Line 1866 ERROR: Undefined symbol
000012D8  223C 004DBD16           1866      MOVE.L  #BLACK,     D1          ; Set Pen color
000012DE  103C 0050               1867      MOVE.B  #80,        D0          ; Task for Pen Color
000012E2  4E4F                    1868      TRAP    #15                     ; Trap (Perform action)
000012E4                          1869      
000012E4                          1870      ; change thickness
000012E4  7203                    1871      MOVE.l  #3,D1
000012E6  103C 005D               1872      MOVE.B  #93,D0
000012EA  4E4F                    1873      TRAP    #15
000012EC                          1874  
000012EC  2239 00001E46           1875      MOVE.L  FLYINGENEMY_X,D1
000012F2  5681                    1876      ADD.L   #3,D1
000012F4  2839 00001E4A           1877      MOVE.L  FLYINGENEMY_Y,   D4
000012FA  0484 0000000D           1878      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00001300  2601                    1879      MOVE.L  D1,D3
00001302  2802                    1880      MOVE.L  D2,D4
00001304                          1881  
00001304  103C 0054               1882      MOVE.B  #84,D0
00001308  4E4F                    1883      TRAP    #15
0000130A                          1884  
0000130A                          1885      ; reset pen
0000130A  7201                    1886      MOVE.l  #1,D1
0000130C  103C 005D               1887      MOVE.B  #93,D0
00001310  4E4F                    1888      TRAP    #15
00001312                          1889  
00001312  4E75                    1890      RTS  
00001314                          1891  
00001314                          1892  DRAW_HEALTHPACK:
00001314                          1893  
00001314  4A39 00001DFD           1894      TST.B   healthCooldownOver
0000131A  6700 005E               1895      BEQ     DRAW_HEALTHPACK_DONE
0000131E  0C39 0000 00001DFC      1896      CMP.B   #00,     SPAWN_HEALTHPACKS
00001326  6700 0052               1897      BEQ     DRAW_HEALTHPACK_DONE
0000132A  0C39 0000 00001DFB      1898      CMP.B   #00,     DRAW_HEALTHPACKS
00001332  6700 0046               1899      BEQ     DRAW_HEALTHPACK_DONE
00001336                          1900      
00001336                          1901      ; Set Pixel Colors
Line 1902 ERROR: Undefined symbol
00001336  223C 004DBD16           1902      MOVE.L  #BLACK,       D1          ; Set Background color
0000133C  103C 0050               1903      MOVE.B  #80,        D0          ; Task for Background Color
00001340  4E4F                    1904      TRAP    #15                     ; Trap (Perform action)
00001342                          1905  
00001342                          1906      ; Reset Pixel Colors
Line 1907 ERROR: Undefined symbol
00001342  223C 004DBD16           1907      MOVE.L  #LIFEGREEN,     D1          ; Set Background color
00001348  103C 0051               1908      MOVE.B  #81,        D0          ; Task for Background Color
0000134C  4E4F                    1909      TRAP    #15                     ; Trap (Perform action)
0000134E                          1910  
0000134E                          1911      ; Set X, Y, Width and Height
0000134E  2239 00001E3E           1912      MOVE.L  HEALTH_X,    D1          ; X
00001354  2439 00001E42           1913      MOVE.L  HEALTH_Y,    D2          ; Y
0000135A  2639 00001E3E           1914      MOVE.L  HEALTH_X,    D3
00001360  0683 0000000C           1915      ADD.L   #HEALTH_PACK_W,   D3      ; Width
00001366  2839 00001E42           1916      MOVE.L  HEALTH_Y,    D4 
0000136C  0484 0000000C           1917      SUB.L   #HEALTH_PACK_H,   D4      ; Height
00001372                          1918      
00001372                          1919      ; Draw Enemy    
00001372  103C 0057               1920      MOVE.B  #87,        D0          ; Draw Enemy
00001376  4E4F                    1921      TRAP    #15                     ; Trap (Perform action)
00001378  4E75                    1922      RTS                             ; Return to subroutine
0000137A                          1923  
0000137A                          1924  DRAW_HEALTHPACK_DONE:
0000137A  23FC FFFFFFFF 00001E42  1925      MOVE.L  #-1, HEALTH_Y
00001384  3439 00001F0E           1926      MOVE.W  healthCooldown,D2
0000138A  B47C 0000               1927      CMP.W   #0,  D2
0000138E                          1928      IF <EQ> THEN
00001392  6100 F1AA               1929          BSR     RESET_HEALTH_POSITION
00001396                          1930      ENDI
00001396  4E75                    1931      RTS
00001398                          1932  
00001398                          1933  DRAW_FLOOR:
00001398                          1934      ; Set Pixel Colors
Line 1935 ERROR: Undefined symbol
00001398  223C 004DBD16           1935      MOVE.L  #GREEN,     D1          ; Set Background color
0000139E  103C 0050               1936      MOVE.B  #80,        D0          ; Task for Background Color
000013A2  4E4F                    1937      TRAP    #15                     ; Trap (Perform action)
000013A4                          1938  
Line 1939 ERROR: Undefined symbol
000013A4  223C 004DBD16           1939      MOVE.L  #GREEN,     D1
000013AA  103C 0051               1940      MOVE.B  #81,        D0
000013AE  4E4F                    1941      TRAP    #15
000013B0                          1942  
000013B0                          1943      
000013B0                          1944      ; Set X, Y, X2, and Y2
000013B0  7200                    1945      MOVE.L  #0,   D1          ; X
000013B2  243C 000000F1           1946      MOVE.L  #241,  D2          ; Y
000013B8  263C 00000280           1947      MOVE.L  #640,   D3           
000013BE  283C 000001E0           1948      MOVE.L  #480,   D4 
000013C4                          1949      
000013C4                          1950      ; Draw grass
000013C4  103C 0057               1951      MOVE.B  #87,        D0          ; Draw Line
000013C8  4E4F                    1952      TRAP    #15                     ; Trap (Perform action)
000013CA                          1953  
000013CA                          1954      ; Set Pixel Colors
Line 1955 ERROR: Undefined symbol
000013CA  223C 004DBD16           1955      MOVE.L  #BROWN,     D1          ; Set Background color
000013D0  103C 0050               1956      MOVE.B  #80,        D0          ; Task for Background Color
000013D4  4E4F                    1957      TRAP    #15                     ; Trap (Perform action)
000013D6                          1958  
Line 1959 ERROR: Undefined symbol
000013D6  223C 004DBD16           1959      MOVE.L  #BROWN,     D1
000013DC  103C 0051               1960      MOVE.B  #81,        D0
000013E0  4E4F                    1961      TRAP    #15
000013E2                          1962  
000013E2                          1963  * -----------------------------------------------------------
000013E2                          1964  * Find level and draw dirt
000013E2                          1965  * -----------------------------------------------------------
000013E2  45F9 00001E02           1966      LEA     LEVELS,      A2
000013E8  2A39 00001E24           1967      MOVE.L  PLAYER_SCORE,   D5
000013EE  6000 0002               1968      BRA     DRAWDIRT
000013F2                          1969      
000013F2                          1970  DRAWDIRT:
000013F2                          1971      ; Set X, Y, X2, and Y2
000013F2  7200                    1972      MOVE.L  #0,   D1          ; X
000013F4  263C 00000280           1973      MOVE.L  #640,   D3  
000013FA  243C 00000115           1974      MOVE.L  #277,   D2         
00001400  283C 000001E0           1975      MOVE.L  #480,   D4 
00001406                          1976      
00001406                          1977      ; Draw Dirt
00001406  103C 0057               1978      MOVE.B  #87,        D0          ; Draw Line
0000140A  4E4F                    1979      TRAP    #15                     ; Trap (Perform action)
0000140C                          1980  
0000140C                          1981  
0000140C                          1982      ; Reset Pixel Colors
0000140C  7200                    1983      MOVE.L  #$00000000,     D1          ; Set Background color
0000140E  103C 0050               1984      MOVE.B  #80,        D0          ; Task for Background Color
00001412  4E4F                    1985      TRAP    #15                     ; Trap (Perform action)
00001414                          1986  
00001414                          1987      ; Reset Pixel Colors
00001414  7200                    1988      MOVE.L  #$00000000,     D1          ; Set Background color
00001416  103C 0051               1989      MOVE.B  #81,        D0          ; Task for Background Color
0000141A  4E4F                    1990      TRAP    #15                     ; Trap (Perform action)
0000141C                          1991  
0000141C  4E75                    1992      RTS                             ; Return to subroutine
0000141E                          1993      
0000141E                          1994  *-----------------------------------------------------------
0000141E                          1995  * Subroutine    : Collision Check
0000141E                          1996  * Description   : Axis-Aligned Bounding Box Collision Detection
0000141E                          1997  * Algorithm checks for overlap on the 4 sides of the Player and 
0000141E                          1998  * Enemy rectangles
0000141E                          1999  * PLAYER_X <= ENEMY_X + ENEMY_W &&
0000141E                          2000  * PLAYER_X + PLAYER_W >= ENEMY_X &&
0000141E                          2001  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
0000141E                          2002  * PLAYER_H + PLAYER_Y >= ENEMY_Y
0000141E                          2003  *-----------------------------------------------------------
0000141E                          2004  CHECK_COLLISIONS:
0000141E                          2005      include     "battle/battlecollisions.x68"     
0000141E  4281                    2006      CLR.L   D1                      ; Clear D1
00001420  4282                    2007      CLR.L   D2                      ; Clear D2
00001422                          2008  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
00001422  2239 00001E1C           2009      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001428  0681 0000001B           2010      ADD.L   #PLYR_W_INIT,D1          ; Move Player Width to D1
0000142E  2439 00001E36           2011      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
00001434  B481                    2012      CMP.L   D1,         D2          ; Do the Overlap ?
00001436  6F00 0006               2013      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
0000143A  6000 0048               2014      BRA     CHECK_FLYENEMY_COLLISIONS
0000143E                          2015  
0000143E                          2016  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
0000143E  2239 00001E1C           2017      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001444  2439 00001E36           2018      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
0000144A  D479 00001E88           2019      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
00001450  B481                    2020      CMP.L   D1,         D2          ; Do they OverLap ?
00001452  6C00 0006               2021      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001456  6000 002C               2022      BRA     CHECK_FLYENEMY_COLLISIONS  
0000145A                          2023  
0000145A                          2024  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
0000145A  2239 00001E20           2025      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001460  2439 00001E3A           2026      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001466  B481                    2027      CMP.L   D1,         D2          ; Do they Overlap ?
00001468  6F00 0006               2028      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
0000146C  6000 0016               2029      BRA     CHECK_FLYENEMY_COLLISIONS
00001470                          2030  
00001470                          2031  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
00001470  D238 000D               2032      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
00001474  2439 00001E3A           2033      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
0000147A  B481                    2034      CMP.L   D1,         D2          ; Do they OverLap ?
0000147C  6C00 0320               2035      BGE     ENEMYCOLLISION               ; Collision !
00001480  6000 0002               2036      BRA     CHECK_FLYENEMY_COLLISIONS
00001484                          2037  
00001484                          2038  CHECK_FLYENEMY_COLLISIONS:
00001484  4281                    2039      CLR.L   D1                      ; Clear D1
00001486  4282                    2040      CLR.L   D2                      ; Clear D2
00001488                          2041  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
00001488  2239 00001E1C           2042      MOVE.L  PLAYER_X,   D1
0000148E  0681 0000001B           2043      ADD.L   #PLYR_W_INIT,D1          ; Move Player Width to D1
00001494  2439 00001E46           2044      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
0000149A  B481                    2045      CMP.L   D1,         D2                          ; Do the Overlap ?
0000149C  6F00 0006               2046      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
000014A0  6000 0050               2047      BRA     CHECK_HEALTH_COLLISIONS
000014A4                          2048  
000014A4                          2049  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
000014A4  2239 00001E1C           2050      MOVE.L  PLAYER_X,   D1
000014AA  2439 00001E46           2051      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
000014B0  D479 00001E8C           2052      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000014B6  B481                    2053      CMP.L   D1,         D2                  ; Do they OverLap ?
000014B8  6C00 0006               2054      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
000014BC  6000 0034               2055      BRA     CHECK_HEALTH_COLLISIONS
000014C0                          2056  
000014C0                          2057  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
000014C0  2239 00001E20           2058      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
000014C6  2439 00001E4A           2059      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000014CC  D479 00001E8E           2060      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000014D2  B481                    2061      CMP.L   D1,         D2          ; Do they Overlap ?
000014D4  6C00 0006               2062      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000014D8  6000 0018               2063      BRA     CHECK_HEALTH_COLLISIONS
000014DC                          2064  
000014DC                          2065  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000014DC  D239 00001E86           2066      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
000014E2  2439 00001E4A           2067      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000014E8  B481                    2068      CMP.L   D1,         D2          ; Do they OverLap ?
000014EA  6F00 02B2               2069      BLE     ENEMYCOLLISION               ; Collision !
000014EE  6000 0002               2070      BRA     CHECK_HEALTH_COLLISIONS
000014F2                          2071  
000014F2                          2072  CHECK_HEALTH_COLLISIONS:
000014F2  4281                    2073      CLR.L   D1                      ; Clear D1
000014F4  4282                    2074      CLR.L   D2                      ; Clear D2
000014F6                          2075  PLX_LTE_TO_HEALTH_X_PLUS_W:
000014F6  2239 00001E1C           2076      MOVE.L  PLAYER_X,   D1
000014FC  D239 00001E85           2077      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001502  2439 00001E3E           2078      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
00001508  B481                    2079      CMP.L   D1,         D2                          ; Do the Overlap ?
0000150A  6F00 0006               2080      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
0000150E  6000 0050               2081      BRA     CHECK_ATTACK_COLLISIONS
00001512                          2082  
00001512                          2083  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
00001512  2239 00001E1C           2084      MOVE.L  PLAYER_X,   D1
00001518  2439 00001E3E           2085      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
0000151E  0682 0000000C           2086      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
00001524  B481                    2087      CMP.L   D1,         D2                  ; Do they OverLap ?
00001526  6C00 0006               2088      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
0000152A  6000 0034               2089      BRA     CHECK_ATTACK_COLLISIONS
0000152E                          2090  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
0000152E  2239 00001E20           2091      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001534  2439 00001E42           2092      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
0000153A  0682 0000000C           2093      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
00001540  B481                    2094      CMP.L   D1,         D2          ; Do they Overlap ?
00001542  6C00 0006               2095      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
00001546  6000 0018               2096      BRA     CHECK_ATTACK_COLLISIONS
0000154A                          2097  
0000154A                          2098  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
0000154A  D239 00001E86           2099      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001550  2439 00001E42           2100      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
00001556  B481                    2101      CMP.L   D1,         D2          ; Do they OverLap ?
00001558  6F00 02B0               2102      BLE     HEALTH_COLLISION               ; Collision !
0000155C  6000 0002               2103      BRA     CHECK_ATTACK_COLLISIONS
00001560                          2104  
00001560                          2105  CHECK_ATTACK_COLLISIONS:
00001560  4281                    2106      CLR.L   D1                      ; Clear D1
00001562  4282                    2107      CLR.L   D2                      ; Clear D2
00001564                          2108  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
00001564  2239 00001E62           2109      MOVE.L  ATTACK_X,   D1
0000156A  0681 00000023           2110      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001570  2439 00001E36           2111      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001576  B481                    2112      CMP.L   D1,         D2                          ; Do the Overlap ?
00001578  6F00 0006               2113      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
0000157C  6000 0050               2114      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001580                          2115  
00001580                          2116  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
00001580  2239 00001E62           2117      MOVE.L  ATTACK_X,   D1
00001586  2439 00001E36           2118      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
0000158C  D479 00001E88           2119      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001592  B481                    2120      CMP.L   D1,         D2                  ; Do they OverLap ?
00001594  6C00 0006               2121      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001598  6000 0034               2122      BRA     CHECK_ATTACK_FLY_COLLISIONS
0000159C                          2123  
0000159C                          2124  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
0000159C  2239 00001E66           2125      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
000015A2  2439 00001E3A           2126      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
000015A8  D479 00001E8A           2127      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000015AE  B481                    2128      CMP.L   D1,         D2          ; Do they Overlap ?
000015B0  6C00 0006               2129      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
000015B4  6000 0018               2130      BRA     CHECK_ATTACK_FLY_COLLISIONS
000015B8                          2131  
000015B8                          2132  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
000015B8  0681 00000014           2133      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
000015BE  2439 00001E3A           2134      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
000015C4  B481                    2135      CMP.L   D1,         D2          ; Do they OverLap ?
000015C6  6F00 0150               2136      BLE     ATTACK_COLLISION               ; Collision !
000015CA  6000 0002               2137      BRA     CHECK_ATTACK_FLY_COLLISIONS
000015CE                          2138  
000015CE                          2139  CHECK_ATTACK_FLY_COLLISIONS:
000015CE  4281                    2140      CLR.L   D1                      ; Clear D1
000015D0  4282                    2141      CLR.L   D2                      ; Clear D2
000015D2                          2142  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
000015D2  2239 00001E62           2143      MOVE.L  ATTACK_X,   D1
000015D8  0681 00000023           2144      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
000015DE  2439 00001E46           2145      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
000015E4  B481                    2146      CMP.L   D1,         D2                          ; Do the Overlap ?
000015E6  6F00 0006               2147      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
000015EA  6000 0050               2148      BRA     CHECK_THROW_COLLISION
000015EE                          2149  
000015EE                          2150  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
000015EE  2239 00001E62           2151      MOVE.L  ATTACK_X,   D1
000015F4  2439 00001E46           2152      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
000015FA  D479 00001E8C           2153      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001600  B481                    2154      CMP.L   D1,         D2                  ; Do they OverLap ?
00001602  6C00 0006               2155      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001606  6000 0034               2156      BRA     CHECK_THROW_COLLISION
0000160A                          2157  
0000160A                          2158  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
0000160A  2239 00001E66           2159      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001610  2439 00001E4A           2160      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001616  D479 00001E8E           2161      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000161C  B481                    2162      CMP.L   D1,         D2          ; Do they Overlap ?
0000161E  6C00 0006               2163      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001622  6000 0018               2164      BRA     CHECK_THROW_COLLISION
00001626                          2165  
00001626                          2166  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001626  0681 00000014           2167      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
0000162C  2439 00001E4A           2168      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001632  B481                    2169      CMP.L   D1,         D2          ; Do they OverLap ?
00001634  6F00 0108               2170      BLE     ATTACK_FLY_COLLISION               ; Collision !
00001638  6000 0002               2171      BRA     CHECK_THROW_COLLISION
0000163C                          2172  
0000163C                          2173  CHECK_THROW_COLLISION:
0000163C  4281                    2174      CLR.L   D1                      ; Clear D1
0000163E  4282                    2175      CLR.L   D2                      ; Clear D2
00001640                          2176  THROW_X_LTE_TO_ENEMY_X_PLUS_W:
00001640  2239 00001E70           2177      MOVE.L  THROW_X,   D1
00001646  0681 00000023           2178      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
0000164C  2439 00001E36           2179      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001652  B481                    2180      CMP.L   D1,         D2                          ; Do the Overlap ?
00001654  6F00 0006               2181      BLE     THROW_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
00001658  6000 0050               2182      BRA     CHECK_THROW_FLY_COLLISIONS
0000165C                          2183  
0000165C                          2184  THROW_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
0000165C  2239 00001E70           2185      MOVE.L  THROW_X,   D1
00001662  2439 00001E36           2186      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
00001668  D479 00001E88           2187      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
0000166E  B481                    2188      CMP.L   D1,         D2                  ; Do they OverLap ?
00001670  6C00 0006               2189      BGE     TRW_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001674  6000 0034               2190      BRA     CHECK_THROW_FLY_COLLISIONS
00001678                          2191  
00001678                          2192  TRW_LTE_TO_ENEMY_Y_PLUS_H:     
00001678  2239 00001E74           2193      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
0000167E  2439 00001E3A           2194      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001684  D479 00001E8A           2195      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000168A  B481                    2196      CMP.L   D1,         D2          ; Do they Overlap ?
0000168C  6C00 0006               2197      BGE     TRW_PLUS_H_LTE_TO_THROW_Y  ; Less than or Equal
00001690  6000 0018               2198      BRA     CHECK_THROW_FLY_COLLISIONS
00001694                          2199  
00001694                          2200  TRW_PLUS_H_LTE_TO_THROW_Y:     ; Less than or Equal ?
00001694  0681 0000000F           2201      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
0000169A  2439 00001E3A           2202      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
000016A0  B481                    2203      CMP.L   D1,         D2          ; Do they OverLap ?
000016A2  6F00 0074               2204      BLE     ATTACK_COLLISION               ; Collision !
000016A6  6000 0002               2205      BRA     CHECK_THROW_FLY_COLLISIONS
000016AA                          2206  
000016AA                          2207  CHECK_THROW_FLY_COLLISIONS:
000016AA  4281                    2208      CLR.L   D1                      ; Clear D1
000016AC  4282                    2209      CLR.L   D2                      ; Clear D2
000016AE                          2210  THROW_X_LTE_TO_FLYENEMY_X_PLUS_W:
000016AE  2239 00001E70           2211      MOVE.L  THROW_X,   D1
000016B4  0681 0000000F           2212      ADD.L   #THRW_W_INIT,D1          ; Move Player Width to D1
000016BA  2439 00001E46           2213      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
000016C0  B481                    2214      CMP.L   D1,         D2                          ; Do the Overlap ?
000016C2  6F00 0006               2215      BLE     THROW_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
000016C6  6000 00B4               2216      BRA     COLLISION_CHECK_DONE
000016CA                          2217  
000016CA                          2218  THROW_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
000016CA  2239 00001E70           2219      MOVE.L  THROW_X,   D1
000016D0  2439 00001E46           2220      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
000016D6  D479 00001E8C           2221      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000016DC  B481                    2222      CMP.L   D1,         D2                  ; Do they OverLap ?
000016DE  6C00 0006               2223      BGE     TRW_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
000016E2  6000 0098               2224      BRA     COLLISION_CHECK_DONE
000016E6                          2225  
000016E6                          2226  TRW_LTE_TO_FLYENEMY_Y_PLUS_H:     
000016E6  2239 00001E74           2227      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
000016EC  2439 00001E4A           2228      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000016F2  D479 00001E8E           2229      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000016F8  B481                    2230      CMP.L   D1,         D2          ; Do they Overlap ?
000016FA  6C00 0006               2231      BGE     TRW_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000016FE  6000 007C               2232      BRA     COLLISION_CHECK_DONE
00001702                          2233  
00001702                          2234  TRW_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001702  0681 0000000F           2235      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
00001708  2439 00001E4A           2236      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
0000170E  B481                    2237      CMP.L   D1,         D2          ; Do they OverLap ?
00001710  6F00 002C               2238      BLE     ATTACK_FLY_COLLISION               ; Collision !
00001714  6000 0066               2239      BRA     COLLISION_CHECK_DONE
00001718                          2240  
00001718                          2241  
00001718                          2242  
00001718                          2243  ATTACK_COLLISION:
00001718  4A39 00001E83           2244      TST.B   ENEMY_HIT
0000171E  6600 0146               2245      BNE     STILL_COLLIDED
00001722  6100 F51A               2246      BSR     PLAY_HIT
00001726  23FC 00000190 00001E3A  2247      MOVE.L  #400, ENEMY_Y
00001730  13FC 0001 00001E83      2248      MOVE.B  #01,  ENEMY_HIT
00001738  6100 002A               2249      BSR     CHECK_ENEMIES_CLEARED
0000173C  4E75                    2250      RTS
0000173E                          2251  
0000173E                          2252  ATTACK_FLY_COLLISION:
0000173E  4A39 00001E84           2253      TST.B   FLYENEMY_HIT
00001744  6600 0120               2254      BNE     STILL_COLLIDED
00001748  6100 F4F4               2255      BSR     PLAY_HIT
0000174C  23FC 00000190 00001E4A  2256      MOVE.L  #400, FLYINGENEMY_Y
00001756  13FC 0001 00001E84      2257      MOVE.B  #01,  FLYENEMY_HIT
0000175E  6100 0004               2258      BSR     CHECK_ENEMIES_CLEARED
00001762  4E75                    2259      RTS
00001764                          2260  
00001764                          2261  CHECK_ENEMIES_CLEARED:
00001764  5239 00001E80           2262      ADDI.B  #1,         ENEMIES_DEFEATED
0000176A  1239 00001E80           2263      MOVE.B  ENEMIES_DEFEATED,D1
00001770  B239 00001E82           2264      CMP.B   enemiesToDefeat,D1
00001776  6700 0306               2265      BEQ     WAVE_DEFEATED
0000177A  4E75                    2266      RTS
0000177C                          2267  
0000177C                          2268  COLLISION_CHECK_DONE:               ; No Collision Update points
0000177C  4239 00001DF9           2269      CLR.B   IN_ENEMY
00001782  4239 00001DFA           2270      CLR.B   IN_HPACK
00001788  4281                    2271      CLR.L   D1
0000178A  1239 00001E5C           2272      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
00001790  D2B9 00001E24           2273      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001796  23C1 00001E24           2274      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
0000179C  4E75                    2275      RTS                             ; Return to subroutine
0000179E                          2276  
0000179E                          2277  
0000179E                          2278  ENEMYCOLLISION:
0000179E  0C39 0001 00001DF9      2279      CMP.B     #$01, IN_ENEMY
000017A6  6700 00BE               2280      BEQ     STILL_COLLIDED
000017AA  5339 00001E5A           2281      SUB.B   #1, antHealth
000017B0  13FC 0001 00001DF9      2282      MOVE.B  #$01, IN_ENEMY
000017B8  4A39 00001E5A           2283      TST.B   antHealth
000017BE  6700 0028               2284      BEQ     antKilled
000017C2  6100 F420               2285      BSR     PLAY_HITHURT               ; Play Opps Wav
000017C6  0C39 0001 00001DFB      2286      CMP.B   #01, DRAW_HEALTHPACKS
000017CE                          2287      IF <NE> THEN    
000017D2  6100 ED6A               2288          BSR RESET_HEALTH_POSITION
000017D6                          2289      ENDI
000017D6                          2290  
000017D6  13FC 0001 00001DFB      2291      MOVE.B  #01, DRAW_HEALTHPACKS 
000017DE  13FC 0001 00001DFC      2292      MOVE.B  #01, SPAWN_HEALTHPACKS 
000017E6  4E75                    2293      RTS                             ; Return to subroutine
000017E8                          2294  
000017E8                          2295  antKilled:
000017E8  13FC 0003 00001E5A      2296      MOVE.B    #3, antHealth
000017F0  5339 00001E5B           2297      SUBQ.b    #1, antsRemaining
000017F6  4A39 00001E5B           2298      TST.b     antsRemaining
000017FC  6700 0192               2299      BEQ       GAME_OVER
00001800  6100 F3E2               2300      BSR     PLAY_HITHURT               ; Play Opps Wav
00001804  6100 F7A6               2301      BSR     DRAW_RESPAWN
00001808  4E75                    2302      RTS
0000180A                          2303  
0000180A                          2304  HEALTH_COLLISION:
0000180A                          2305      ; skip if still collided
0000180A  0C39 0001 00001DFA      2306      CMP.B     #$01, IN_HPACK
00001812  6700 0052               2307      BEQ     STILL_COLLIDED
00001816                          2308  
00001816  0C79 0000 00001F0E      2309      CMP.W   #0, healthCooldown
0000181E                          2310      IF <EQ> THEN
00001822  33FC 01F4 00001F0E      2311          MOVE.W  #500, healthCooldown
0000182A                          2312      ENDI
0000182A                          2313  
0000182A  6100 F3D6               2314      BSR     PLAY_POWERUP               ; Play Opps Wav
0000182E                          2315  
0000182E  5239 00001E5A           2316      ADD.B   #1, antHealth
00001834  0C39 0003 00001E5A      2317      CMP.B   #03, antHealth
0000183C  6C00 0016               2318      BGE     STOP_HPACK_SPAWN
00001840                          2319      
00001840  13FC 0001 00001DFA      2320      MOVE.B  #$01, IN_HPACK
00001848  23FC 0000005A 00001E42  2321      MOVE.L  #90, HEALTH_Y
00001852                          2322      
00001852  4E75                    2323      RTS
00001852  4E75                    2324  -------------------- end include --------------------
00001854                          2325  
00001854                          2326  STOP_HPACK_SPAWN:
00001854  13FC 0000 00001DFB      2327      MOVE.B  #00, DRAW_HEALTHPACKS
0000185C  13FC 0000 00001DFC      2328      MOVE.B  #00, SPAWN_HEALTHPACKS
00001864                          2329  
00001864  4E75                    2330      RTS
00001866                          2331  
00001866                          2332  STILL_COLLIDED:
00001866  4E75                    2333      RTS
00001868                          2334  *-----------------------------------------------------------
00001868                          2335  * Subroutine    : EXIT
00001868                          2336  * Description   : Exit message and End Game
00001868                          2337  *-----------------------------------------------------------
00001868                          2338  
00001868                          2339  HILL_LOST:
00001868                          2340  
Line 2341 ERROR: Undefined symbol
00001868  0C79 0003 005455B8      2341      CMP.W   #3,lvlIndex
00001870  6700 032E               2342      BEQ     WIN_SCREEN
00001874                          2343  
00001874  103C 000B               2344      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001878  323C FF00               2345      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
0000187C  4E4F                    2346      TRAP    #15                     ; Trap (Perform action)
0000187E  6100 F324               2347      BSR     PLAY_GAMEOVER
00001882                          2348  
00001882                          2349  *------------Set Colours--------------*
Line 2350 ERROR: Undefined symbol
00001882  223C 004DBD16           2350      MOVE.L  #color5,     D1
00001888  103C 0015               2351      MOVE.B  #21,        D0          ; Set Text Color
0000188C  243C 01130005           2352      MOVE.L  #$01130005, D2
00001892  4E4F                    2353      TRAP    #15                     ; Trap (Perform action)
00001894                          2354  
Line 2355 ERROR: Undefined symbol
00001894  223C 004DBD16           2355      MOVE.L  #color1,     D1
0000189A  103C 0051               2356      MOVE.B  #81,        D0          ; Set Text Color
0000189E  4E4F                    2357      TRAP    #15                     ; Trap (Perform action)
000018A0                          2358  
000018A0                          2359  *------------ fill background --------------*
000018A0  323C 0000               2360      MOVE.W      #0,D1
000018A4  343C 0000               2361      MOVE.W      #0,d2
000018A8  103C 0059               2362      MOVE.B      #89,D0
000018AC  4E4F                    2363      TRAP        #15
000018AE                          2364  
000018AE                          2365  *------------ Print hill lost message--------------*
000018AE                          2366  
000018AE  103C 000B               2367      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018B2  323C 0803               2368      MOVE.W  #$0803,     D1          ; Col 10, Row 03
000018B6  4E4F                    2369      TRAP    #15                     ; Trap (Perform action)
000018B8  43F9 00001D14           2370      LEA     HILLLOST_MSG,A1        ; Game Over Message
Line 2371 ERROR: Undefined symbol
000018BE  6100 A456               2371      BSR     print
000018C2                          2372  
000018C2                          2373  *------------print amount of enemies defeated--------------*
000018C2                          2374  
000018C2  103C 000B               2375      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018C6  323C 0606               2376      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000018CA  4E4F                    2377      TRAP    #15                     ; Trap (Perform action)
000018CC  43F9 00001CE4           2378      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2379 ERROR: Undefined symbol
000018D2  6100 A442               2379      BSR     print
000018D6                          2380  
000018D6  103C 000B               2381      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018DA  323C 1B06               2382      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
000018DE  4E4F                    2383      TRAP    #15                     ; Trap (Perform action)
000018E0  103C 0003               2384      MOVE.B  #03,        D0          ; Display number at D1.L
000018E4  7200                    2385      MOVEQ.L #0,D1
000018E6  1239 00001E80           2386      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000018EC  4E4F                    2387      TRAP    #15                     ; Trap (Perform action)
000018EE                          2388      
000018EE                          2389  *------------print hill health --------------*
000018EE                          2390  
000018EE  103C 000B               2391      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018F2  323C 0607               2392      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000018F6  4E4F                    2393      TRAP    #15                     ; Trap (Perform action)
000018F8  43F9 00001DEA           2394      LEA     hillHP_MSG,  A1          ; Score Message
Line 2395 ERROR: Undefined symbol
000018FE  6100 A416               2395      BSR     print
00001902                          2396  
00001902  103C 000B               2397      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001906  323C 1B07               2398      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
0000190A  4E4F                    2399      TRAP    #15                     ; Trap (Perform action)
0000190C  7200                    2400      MOVEQ.L #0,D1
0000190E  1239 00001DF8           2401      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001914  103C 0003               2402      MOVE.B  #03,        D0          ; Display number at D1.L
00001918  4E4F                    2403      TRAP    #15                     ; Trap (Perform action)
0000191A                          2404      
0000191A                          2405  *------------ print back to map--------------*
0000191A                          2406  
Line 2407 ERROR: Undefined symbol
0000191A  223C 004DBD16           2407      MOVE.L  #color5,     D1
00001920  103C 0015               2408      MOVE.B  #21,        D0          ; Set Text Color
00001924  243C 03140000           2409      MOVE.L  #$03140000, D2
0000192A  4E4F                    2410      TRAP    #15                     ; Trap (Perform action)
0000192C                          2411  
0000192C                          2412      ; Restart
0000192C  103C 000B               2413      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001930  323C 070C               2414      MOVE.W  #$070C,     D1          ; Col 09, Row 01
00001934  4E4F                    2415      TRAP    #15                     ; Trap (Perform action)
00001936  43F9 00001D82           2416      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
0000193C  303C 000D               2417      MOVE    #13,        D0          ; No Line feedF=
00001940  4E4F                    2418      TRAP    #15                     ; Trap (Perform action)
00001942                          2419  
00001942  103C 000B               2420      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001946  323C 1F0C               2421      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
0000194A  4E4F                    2422      TRAP    #15                     ; Trap (Perform action)
0000194C  7200                    2423      MOVEQ.L #0,D1
0000194E  1239 00001F0C           2424      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
00001954  103C 0003               2425      MOVE.B  #03,        D0          ; Display number at D1.L
00001958  4E4F                    2426      TRAP    #15                     ; Trap (Perform action)
0000195A                          2427  
0000195A                          2428      
0000195A  103C 005E               2429      MOVE.B  #TC_REDRAW,        D0
0000195E  4E4F                    2430      TRAP    #15
00001960                          2431     
00001960                          2432      ; delay by 1sec
00001960  103C 0017               2433      MOVE.b  #23,D0
00001964  7264                    2434      MOVE.L  #100,D1
00001966  4E4F                    2435      TRAP    #15
00001968                          2436  
00001968  5339 00001F0C           2437      SUB.B   #01,backToMapCount
0000196E  4A39 00001F0C           2438      TST.B   backToMapCount
Line 2439 ERROR: Undefined symbol
00001974  6700 A3A0               2439      BEQ     mapNotFirstInit
00001978                          2440  
Line 2441 ERROR: Undefined symbol
00001978  23FC 000000C8 005455B8  2441      MOVE.l  #200,currentHealth
Line 2442 ERROR: Undefined symbol
00001982  6100 A392               2442      bsr     initDraw
00001986                          2443      ; back to top
00001986  6000 FEE0               2444      BRA     HILL_LOST
0000198A                          2445  
0000198A                          2446  INPUTLOOP:
0000198A  6100 E82C               2447      BSR     BATTLEINPUT
0000198E  60FA                    2448      BRA     INPUTLOOP
00001990                          2449  
00001990                          2450  GAME_OVER:
00001990                          2451      
00001990  103C 000B               2452      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001994  323C FF00               2453      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001998  4E4F                    2454      TRAP    #15                     ; Trap (Perform action)
0000199A  6100 F208               2455      BSR     PLAY_GAMEOVER
0000199E                          2456  
0000199E                          2457  *------------Set Colours--------------*
Line 2458 ERROR: Undefined symbol
0000199E  223C 004DBD16           2458      MOVE.L  #color5,     D1
000019A4  103C 0015               2459      MOVE.B  #21,        D0          ; Set Text Color
000019A8  243C 01130005           2460      MOVE.L  #$01130005, D2
000019AE  4E4F                    2461      TRAP    #15                     ; Trap (Perform action)
000019B0                          2462  
Line 2463 ERROR: Undefined symbol
000019B0  223C 004DBD16           2463      MOVE.L  #color1,     D1
000019B6  103C 0051               2464      MOVE.B  #81,        D0          ; Set Text Color
000019BA  4E4F                    2465      TRAP    #15                     ; Trap (Perform action)
000019BC                          2466  
000019BC                          2467  *------------ fill background --------------*
000019BC  323C 0000               2468      MOVE.W      #0,D1
000019C0  343C 0000               2469      MOVE.W      #0,d2
000019C4  103C 0059               2470      MOVE.B      #89,D0
000019C8  4E4F                    2471      TRAP        #15
000019CA                          2472  
000019CA                          2473  *------------ Print gameover message--------------*
000019CA  103C 000B               2474      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019CE  323C 1001               2475      MOVE.W  #$1001,     D1          ; Col 10, Row 03
000019D2  4E4F                    2476      TRAP    #15                     ; Trap (Perform action)
000019D4  43F9 00001D78           2477      LEA     GAMEOVER_MSG,A1        ; Game Over Message
Line 2478 ERROR: Undefined symbol
000019DA  6100 A33A               2478      BSR     print
000019DE                          2479  
000019DE  103C 000B               2480      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019E2  323C 0703               2481      MOVE.W  #$0703,     D1          ; Col 10, Row 03
000019E6  4E4F                    2482      TRAP    #15                     ; Trap (Perform action)
000019E8  43F9 00001D5C           2483      LEA     FALLENKINGDOM_MSG,A1        ; Game Over Message
Line 2484 ERROR: Undefined symbol
000019EE  6100 A326               2484      BSR     print
000019F2                          2485  
000019F2                          2486  
000019F2                          2487  *------------ Print hills defended message--------------*
000019F2                          2488      ; TODO TODO hills defended msg
000019F2  103C 000B               2489      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019F6  323C 0606               2490      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000019FA  4E4F                    2491      TRAP    #15                     ; Trap (Perform action)
000019FC  43F9 00001CE4           2492      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2493 ERROR: Undefined symbol
00001A02  6100 A312               2493      BSR     print
00001A06                          2494  
00001A06  103C 000B               2495      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A0A  323C 1B06               2496      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001A0E  4E4F                    2497      TRAP    #15                     ; Trap (Perform action)
00001A10  103C 0003               2498      MOVE.B  #03,        D0          ; Display number at D1.L
00001A14  7200                    2499      MOVEQ.L #0,D1
00001A16  1239 00001E80           2500      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001A1C  4E4F                    2501      TRAP    #15                     ; Trap (Perform action)
00001A1E                          2502      
00001A1E                          2503  *------------ Print ants remaining message--------------*
00001A1E  103C 000B               2504      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A22  323C 0607               2505      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001A26  4E4F                    2506      TRAP    #15                     ; Trap (Perform action)
00001A28  43F9 00001DD8           2507      LEA     antsRem_MSG,  A1          ; Score Message
Line 2508 ERROR: Undefined symbol
00001A2E  6100 A2E6               2508      BSR     print
00001A32                          2509  
00001A32  103C 000B               2510      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A36  323C 1B07               2511      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001A3A  4E4F                    2512      TRAP    #15                     ; Trap (Perform action)
00001A3C  7200                    2513      MOVEQ.L #0,D1
00001A3E  1239 00001E5B           2514      MOVE.B  antsRemaining,D1         ; Move Score to D1.L
00001A44  103C 0003               2515      MOVE.B  #03,        D0          ; Display number at D1.L
00001A48  4E4F                    2516      TRAP    #15                     ; Trap (Perform action)
00001A4A                          2517      
00001A4A                          2518  *------------ change fonts --------------*
Line 2519 ERROR: Undefined symbol
00001A4A  223C 004DBD16           2519      MOVE.L  #color5,     D1
00001A50  103C 0015               2520      MOVE.B  #21,        D0          ; Set Text Color
00001A54  243C 03140000           2521      MOVE.L  #$03140000, D2
00001A5A  4E4F                    2522      TRAP    #15                     ; Trap (Perform action)
00001A5C                          2523  
00001A5C                          2524  *------------ Print restart message--------------*
00001A5C  103C 000B               2525      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A60  323C 0B09               2526      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001A64  4E4F                    2527      TRAP    #15                     ; Trap (Perform action)
00001A66  43F9 00001D9A           2528      LEA     RESTART_MSG,  A1          ; Score Message
00001A6C  303C 000D               2529      MOVE    #13,        D0          ; No Line feedF=
00001A70  4E4F                    2530      TRAP    #15                     ; Trap (Perform action)
00001A72                          2531  
00001A72                          2532      
00001A72  103C 005E               2533      MOVE.B  #TC_REDRAW,        D0
00001A76  4E4F                    2534      TRAP    #15
00001A78                          2535  
00001A78                          2536  LOSSINPUTLOOP:
00001A78  6100 E73E               2537      BSR     BATTLEINPUT
00001A7C  60FA                    2538      BRA     LOSSINPUTLOOP
00001A7E                          2539  
00001A7E                          2540  WAVE_DEFEATED:
00001A7E                          2541  
Line 2542 ERROR: Undefined symbol
00001A7E  0C79 0003 005455B8      2542      CMP.W   #3,lvlIndex
00001A86  6700 0118               2543      BEQ     WIN_SCREEN
00001A8A                          2544      
00001A8A  103C 000B               2545      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A8E  323C FF00               2546      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001A92  4E4F                    2547      TRAP    #15                     ; Trap (Perform action)
00001A94  6100 F10E               2548      BSR     PLAY_GAMEOVER
00001A98                          2549  
00001A98                          2550  *------------Set Colours--------------*
Line 2551 ERROR: Undefined symbol
00001A98  223C 004DBD16           2551      MOVE.L  #color5,     D1
00001A9E  103C 0015               2552      MOVE.B  #21,        D0          ; Set Text Color
00001AA2  243C 01130005           2553      MOVE.L  #$01130005, D2
00001AA8  4E4F                    2554      TRAP    #15                     ; Trap (Perform action)
00001AAA                          2555  
Line 2556 ERROR: Undefined symbol
00001AAA  223C 004DBD16           2556      MOVE.L  #color1,     D1
00001AB0  103C 0051               2557      MOVE.B  #81,        D0          ; Set Text Color
00001AB4  4E4F                    2558      TRAP    #15                     ; Trap (Perform action)
00001AB6                          2559  
00001AB6                          2560  *------------ fill background --------------*
00001AB6  323C 0000               2561      MOVE.W      #0,D1
00001ABA  343C 0000               2562      MOVE.W      #0,d2
00001ABE  103C 0059               2563      MOVE.B      #89,D0
00001AC2  4E4F                    2564      TRAP        #15
00001AC4                          2565  
00001AC4                          2566  *------------ Print wave defeated message--------------*
00001AC4                          2567  
00001AC4  103C 000B               2568      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AC8  323C 0E03               2569      MOVE.W  #$0E03,     D1          ; Col 10, Row 03
00001ACC  4E4F                    2570      TRAP    #15                     ; Trap (Perform action)
00001ACE  43F9 00001D4D           2571      LEA     HILLDEFENDED_MSG,A1        ; Game Over Message
Line 2572 ERROR: Undefined symbol
00001AD4  6100 A240               2572      BSR     print
00001AD8                          2573  
00001AD8                          2574  *------------print amount of enemies defeated--------------*
00001AD8                          2575  
00001AD8  103C 000B               2576      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001ADC  323C 0606               2577      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001AE0  4E4F                    2578      TRAP    #15                     ; Trap (Perform action)
00001AE2  43F9 00001CE4           2579      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2580 ERROR: Undefined symbol
00001AE8  6100 A22C               2580      BSR     print
00001AEC                          2581  
00001AEC  103C 000B               2582      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AF0  323C 1B06               2583      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001AF4  4E4F                    2584      TRAP    #15                     ; Trap (Perform action)
00001AF6  103C 0003               2585      MOVE.B  #03,        D0          ; Display number at D1.L
00001AFA  7200                    2586      MOVEQ.L #0,D1
00001AFC  1239 00001E80           2587      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001B02  4E4F                    2588      TRAP    #15                     ; Trap (Perform action)
00001B04                          2589      
00001B04                          2590  *------------print hill health --------------*
00001B04                          2591  
00001B04  103C 000B               2592      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B08  323C 0607               2593      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001B0C  4E4F                    2594      TRAP    #15                     ; Trap (Perform action)
00001B0E  43F9 00001DEA           2595      LEA     hillHP_MSG,  A1          ; Score Message
Line 2596 ERROR: Undefined symbol
00001B14  6100 A200               2596      BSR     print
00001B18                          2597  
00001B18  103C 000B               2598      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B1C  323C 1B07               2599      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001B20  4E4F                    2600      TRAP    #15                     ; Trap (Perform action)
00001B22  7200                    2601      MOVEQ.L #0,D1
00001B24  1239 00001DF8           2602      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001B2A  103C 0003               2603      MOVE.B  #03,        D0          ; Display number at D1.L
00001B2E  4E4F                    2604      TRAP    #15                     ; Trap (Perform action)
00001B30                          2605      
00001B30                          2606  *------------ print back to map--------------*
Line 2607 ERROR: Undefined symbol
00001B30  223C 004DBD16           2607      MOVE.L  #color5,     D1
00001B36  103C 0015               2608      MOVE.B  #21,        D0          ; Set Text Color
00001B3A  243C 03140000           2609      MOVE.L  #$03140000, D2
00001B40  4E4F                    2610      TRAP    #15                     ; Trap (Perform action)
00001B42                          2611  
00001B42                          2612  
00001B42                          2613      ; Restart
00001B42  103C 000B               2614      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B46  323C 070C               2615      MOVE.W  #$070C,     D1          ; Col 09, Row 01
00001B4A  4E4F                    2616      TRAP    #15                     ; Trap (Perform action)
00001B4C  43F9 00001D82           2617      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
00001B52  303C 000D               2618      MOVE    #13,        D0          ; No Line feedF=
00001B56  4E4F                    2619      TRAP    #15                     ; Trap (Perform action)
00001B58                          2620  
00001B58  103C 000B               2621      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B5C  323C 1F0C               2622      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
00001B60  4E4F                    2623      TRAP    #15                     ; Trap (Perform action)
00001B62  7200                    2624      MOVEQ.L #0,D1
00001B64  1239 00001F0C           2625      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
00001B6A  103C 0003               2626      MOVE.B  #03,        D0          ; Display number at D1.L
00001B6E  4E4F                    2627      TRAP    #15                     ; Trap (Perform action)
00001B70                          2628  
00001B70                          2629  
00001B70                          2630      
00001B70  103C 005E               2631      MOVE.B  #TC_REDRAW,        D0
00001B74  4E4F                    2632      TRAP    #15
00001B76                          2633     
00001B76                          2634      ; delay by 1sec
00001B76  103C 0017               2635      MOVE.b  #23,D0
00001B7A  7264                    2636      MOVE.L  #100,D1
00001B7C  4E4F                    2637      TRAP    #15
00001B7E                          2638  
00001B7E  5339 00001F0C           2639      SUB.B   #01,backToMapCount
00001B84  4A39 00001F0C           2640      TST.B   backToMapCount
Line 2641 ERROR: Undefined symbol
00001B8A  6700 A18A               2641      BEQ     mapNotFirstInit
00001B8E                          2642  
Line 2643 ERROR: Undefined symbol
00001B8E  6100 A186               2643      bsr     initDraw
Line 2644 ERROR: Undefined symbol
00001B92  23FC 000000C8 005455B8  2644      MOVE.l  #200,currentHealth
00001B9C                          2645      ; back to top
00001B9C  6000 FEE0               2646      BRA     WAVE_DEFEATED
00001BA0                          2647  
00001BA0                          2648  
00001BA0                          2649  WIN_SCREEN:
Line 2650 ERROR: Undefined symbol
00001BA0  13FC 0001 005455B8      2650      move.b #1, isWin
00001BA8  103C 000B               2651      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BAC  323C FF00               2652      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001BB0  4E4F                    2653      TRAP    #15                     ; Trap (Perform action)
00001BB2  6100 EFF0               2654      BSR     PLAY_GAMEOVER
00001BB6                          2655  
00001BB6                          2656  *------------Set Colours--------------*
Line 2657 ERROR: Undefined symbol
00001BB6  223C 004DBD16           2657      MOVE.L  #color5,     D1
00001BBC  103C 0015               2658      MOVE.B  #21,        D0          ; Set Text Color
00001BC0  243C 01130005           2659      MOVE.L  #$01130005, D2
00001BC6  4E4F                    2660      TRAP    #15                     ; Trap (Perform action)
00001BC8                          2661  
Line 2662 ERROR: Undefined symbol
00001BC8  223C 004DBD16           2662      MOVE.L  #color1,     D1
00001BCE  103C 0051               2663      MOVE.B  #81,        D0          ; Set Text Color
00001BD2  4E4F                    2664      TRAP    #15                     ; Trap (Perform action)
00001BD4                          2665  
00001BD4                          2666  *------------ fill background --------------*
00001BD4  323C 0000               2667      MOVE.W      #0,D1
00001BD8  343C 0000               2668      MOVE.W      #0,d2
00001BDC  103C 0059               2669      MOVE.B      #89,D0
00001BE0  4E4F                    2670      TRAP        #15
00001BE2                          2671  
00001BE2                          2672  *------------ Print wave defeated message--------------*
00001BE2                          2673  
00001BE2  103C 000B               2674      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BE6  323C 0703               2675      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001BEA  4E4F                    2676      TRAP    #15                     ; Trap (Perform action)
00001BEC  43F9 00001D2F           2677      LEA     WIN_MSG,A1        ; Game Over Message
Line 2678 ERROR: Undefined symbol
00001BF2  6100 A122               2678      BSR     print
00001BF6                          2679  
00001BF6                          2680  *------------print amount of enemies defeated--------------*
00001BF6                          2681  
00001BF6  103C 000B               2682      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BFA  323C 0606               2683      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001BFE  4E4F                    2684      TRAP    #15                     ; Trap (Perform action)
00001C00  43F9 00001CE4           2685      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2686 ERROR: Undefined symbol
00001C06  6100 A10E               2686      BSR     print
00001C0A                          2687  
00001C0A  103C 000B               2688      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C0E  323C 1B06               2689      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001C12  4E4F                    2690      TRAP    #15                     ; Trap (Perform action)
00001C14  103C 0003               2691      MOVE.B  #03,        D0          ; Display number at D1.L
00001C18  7200                    2692      MOVEQ.L #0,D1
00001C1A  1239 00001E80           2693      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001C20  4E4F                    2694      TRAP    #15                     ; Trap (Perform action)
00001C22                          2695      
00001C22                          2696  *------------print hill health --------------*
00001C22                          2697  
00001C22  103C 000B               2698      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C26  323C 0607               2699      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001C2A  4E4F                    2700      TRAP    #15                     ; Trap (Perform action)
00001C2C  43F9 00001DEA           2701      LEA     hillHP_MSG,  A1          ; Score Message
Line 2702 ERROR: Undefined symbol
00001C32  6100 A0E2               2702      BSR     print
00001C36                          2703  
00001C36  103C 000B               2704      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C3A  323C 1B07               2705      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001C3E  4E4F                    2706      TRAP    #15                     ; Trap (Perform action)
00001C40  7200                    2707      MOVEQ.L #0,D1
00001C42  1239 00001DF8           2708      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001C48  103C 0003               2709      MOVE.B  #03,        D0          ; Display number at D1.L
00001C4C  4E4F                    2710      TRAP    #15                     ; Trap (Perform action)
00001C4E                          2711      
00001C4E                          2712  *------------ print restart --------------*
Line 2713 ERROR: Undefined symbol
00001C4E  223C 004DBD16           2713      MOVE.L  #color5,     D1
00001C54  103C 0015               2714      MOVE.B  #21,        D0          ; Set Text Color
00001C58  243C 03140000           2715      MOVE.L  #$03140000, D2
00001C5E  4E4F                    2716      TRAP    #15                     ; Trap (Perform action)
00001C60                          2717  
00001C60                          2718  
00001C60                          2719      ; Restart
00001C60  103C 000B               2720      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C64  323C 0B09               2721      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001C68  4E4F                    2722      TRAP    #15                     ; Trap (Perform action)
00001C6A  43F9 00001D9A           2723      LEA     RESTART_MSG,  A1          ; Score Message
00001C70  303C 000D               2724      MOVE    #13,        D0          ; No Line feedF=
00001C74  4E4F                    2725      TRAP    #15                     ; Trap (Perform action)
00001C76                          2726  
00001C76                          2727      
00001C76  103C 005E               2728      MOVE.B  #TC_REDRAW,        D0
00001C7A  4E4F                    2729      TRAP    #15
00001C7C                          2730  
00001C7C                          2731  WININPUTLOOP:
00001C7C  6100 E53A               2732      BSR     BATTLEINPUT
00001C80  60FA                    2733      BRA     WININPUTLOOP
00001C82                          2734  
00001C82                          2735  
00001C82                          2736  EXIT:
00001C82                          2737      
00001C82  103C 000B               2738      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C86  323C FF00               2739      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001C8A  4E4F                    2740      TRAP    #15                     ; Trap (Perform action)
00001C8C                          2741  
00001C8C  103C 005E               2742      MOVE.B  #TC_REDRAW,        D0
00001C90  4E4F                    2743      TRAP    #15
00001C92                          2744  
00001C92  103C 0009               2745      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001C96  4E4F                    2746      TRAP    #15                     ; Trap (Perform action)
00001C98  FFFF FFFF               2747      SIMHALT
00001C9C                          2748  
00001C9C                          2749  *-----------------------------------------------------------
00001C9C                          2750  * Section       : Messages
00001C9C                          2751  * Description   : Messages to Print on Console, names should be
00001C9C                          2752  * self documenting
00001C9C                          2753  *-----------------------------------------------------------
00001C9C= 53 63 6F 72 65 20 ...   2754  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00001CA5= 4B 65 79 43 6F 64 ...   2755  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
00001CB0= 4A 75 6D 70 2E 2E ...   2756  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001CB9                          2757  
00001CB9= 49 64 6C 65 2E 2E ...   2758  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00001CC2= 55 70 64 61 74 65 ...   2759  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001CCD= 44 72 61 77 2E 2E ...   2760  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001CD6                          2761  
00001CD6= 58 3A 00                2762  X_MSG           DC.B    'X:', 0             ; X Position Message
00001CD9= 59 3A 00                2763  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001CDC= 56 3A 00                2764  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
00001CDF= 44 52 41 57 00          2765  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00001CE4= 45 6E 65 6D 69 65 ...   2766  ENEMIESDEAD_MSG         DC.B    'Enemies Defeated:', 0           
00001CF6= 57 61 76 65 20 65 ...   2767  ENEMYCOUNT_MSG         DC.B    'Wave enemy count:', 0           
00001D08                          2768  
00001D08= 45 78 69 74 69 6E ...   2769  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00001D14= 41 4E 54 20 48 49 ...   2770  HILLLOST_MSG    DC.B    'ANT HILL HAS BEEN OVERRUN!', 0      ; Game Over Message
00001D2F= 45 4E 45 4D 59 20 ...   2771  WIN_MSG    DC.B    'ENEMY ARMY HAS BEEN DEFEATED!', 0      ; Game Over Message
00001D4D= 57 41 56 45 20 43 ...   2772  HILLDEFENDED_MSG    DC.B    'WAVE COMPLETE!', 0      ; Game Over Message
00001D5C= 59 4F 55 52 20 41 ...   2773  FALLENKINGDOM_MSG    DC.B    'YOUR ANT KINGDOM HAS FALLEN', 0      ; Game Over Message
00001D78= 47 41 4D 45 20 4F ...   2774  GAMEOVER_MSG    DC.B    'GAME OVER', 0      ; Game Over Message
00001D82= 52 65 74 75 72 6E ...   2775  BACK_TO_MAP_MSG    DC.B    'Returning to map in ...', 0      ; Game Over Message
00001D9A= 50 72 65 73 73 20 ...   2776  RESTART_MSG    DC.B    'Press R to restart', 0      ; Game Over Message
00001DAD= 23 23 00                2777  TREET          DC.B     '##',0
00001DB0                          2778  
00001DB0= 45 6E 74 65 72 20 ...   2779  PRESSSTART      DC.B    'Enter 1 to start',0
00001DC1= 41 4E 54 20 44 45 ...   2780  TITLEMSG        DC.B    'ANT DEFENDER',0
00001DCE= 48 65 61 6C 74 68 ...   2781  antHealth_MSG       DC.B    'Health : ',0        ; health message
00001DD8= 41 6E 74 73 20 52 ...   2782  antsRem_MSG       DC.B    'Ants Remaining : ',0        ; health message
00001DEA= 48 69 6C 6C 20 48 ...   2783  hillHP_MSG       DC.B    'Hill Health: ',0        ; health message
00001DF8= 0A                      2784  hillHP          DC.B      10
00001DF9                          2785  
00001DF9= 00                      2786  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
00001DFA= 00                      2787  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00001DFB= 00                      2788  DRAW_HEALTHPACKS   DC.B     $00                  ; marker for if the healthpacks are showing
00001DFC= 00                      2789  SPAWN_HEALTHPACKS   DC.B    $00                  ; marker for if the healthpacks are spawning
00001DFD= 00                      2790  healthCooldownOver  DC.B    $00
00001DFE                          2791  
00001DFE= 07D0                    2792  LEVEL_02        DC.W    2000
00001E00= 2710                    2793  LEVEL_03        DC.W    10000
00001E02                          2794  
00001E02= 00001B58 00000FA0 ...   2795  LEVELS:         DC.L    7000,4000,2000,1000
00001E12                          2796  
00001E12                          2797  *-----------------------------------------------------------
00001E12                          2798  * Section       : Screen Size
00001E12                          2799  * Description   : Screen Width and Height
00001E12                          2800  *-----------------------------------------------------------
00001E12                          2801  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001E14                          2802  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001E16                          2803  
00001E16                          2804  *-----------------------------------------------------------
00001E16                          2805  * Section       : Keyboard Input
00001E16                          2806  * Description   : Used for storing Keypresses
00001E16                          2807  *-----------------------------------------------------------
00001E16                          2808  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001E1A                          2809  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00001E1C                          2810  
00001E1C                          2811  *-----------------------------------------------------------
00001E1C                          2812  * Section       : Character Data
00001E1C                          2813  * Description   : Player and Enemy Position Memory Locations
00001E1C                          2814  *-----------------------------------------------------------
00001E1C                          2815  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001E20                          2816  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001E24                          2817  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001E28                          2818  
00001E28                          2819  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001E2C                          2820  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001E30                          2821  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001E34                          2822  
00001E34                          2823  ; 1, = left, 0 = right
00001E34                          2824  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
00001E35                          2825  
00001E36                          2826  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001E3A                          2827  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001E3E                          2828  
00001E3E                          2829  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
00001E42                          2830  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
00001E46                          2831  
00001E46                          2832  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
00001E4A                          2833  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
00001E4E                          2834  
00001E4E= 000000FF                2835  ENEMYCOLOR        DC.L        $000000FF
00001E52= 00FF0000                2836  FLYENEMYCOLOR     DC.L        $00FF0000
00001E56                          2837  
00001E56                          2838  RANDOM            DS.L        01  ; Reserve Space for Random Number
00001E5A= 03                      2839  antHealth         DC.B        03  ; reserves space for antHealth
00001E5B= 05                      2840  antsRemaining     DC.B        05  ; reserves space for ants
00001E5C                          2841  
00001E5C                          2842   
00001E5C= 02                      2843  POINTS            DC.B        02          ; Points added
00001E5D                          2844  
00001E5D= 00                      2845  CURRENTLYATTACKING   DC.B    00
00001E5E= 0000                    2846  ATTACK_COOLDOWN      DC.W    00
00001E60= 0000                    2847  ATTACK_TIME          DC.W    00
00001E62= 00000000                2848  ATTACK_X             DC.L    00
00001E66= 00000000                2849  ATTACK_Y             DC.L    00
00001E6A  =00000014               2850  ATTACK_HEIGHT        EQU     20
00001E6A  =00000023               2851  ATTACK_WIDTH         EQU     35 
00001E6A                          2852  
00001E6A= 00                      2853  CURRENTLYTHROWING   DC.B    00
00001E6C= 0000                    2854  THROW_COOLDOWN      DC.W    00
00001E6E= 0000                    2855  THROW_TIME          DC.W    00
00001E70= 00000000                2856  THROW_X             DC.L    00
00001E74= 00000000                2857  THROW_Y             DC.L    00
00001E78  =00000014               2858  THROW_HEIGHT        EQU     20
00001E78  =00000023               2859  THROW_WIDTH         EQU     35 
00001E78                          2860  THROW_VELOCITY      DS.L    01  
00001E7C                          2861  THROW_GRAVITY       DS.L    01  
00001E80                          2862  
00001E80= 13                      2863  ENEMIES_DEFEATED    DC.B    19
00001E81= 00                      2864  enemiesPassed       DC.b    00
00001E82= 00                      2865  enemiesToDefeat     DC.B    00
00001E83                          2866  
00001E83= 00                      2867  ENEMY_HIT           DC.B    00
00001E84= 00                      2868  FLYENEMY_HIT        DC.B    00
00001E85                          2869  
00001E85                          2870  
00001E85                          2871  * Widths and heights of player, enemy and healthpack
00001E85                          2872  *-----------------------------------------------------------
00001E85= 0C                      2873  PLAYER_WIDTH      DC.B        12          ; Player Width
00001E86= 0C                      2874  PLAYER_HEIGHT     DC.B        12          ; Player Height
00001E87                          2875  
00001E88= 000C                    2876  ENEMY_WIDTH       DC.W        12          ; Enemy Width
00001E8A= 000C                    2877  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00001E8C                          2878  
00001E8C= 0014                    2879  FLYENEMY_WIDTH    DC.W        20 
00001E8E= 000C                    2880  FLYENEMY_HEIGHT   DC.W        12 
00001E90                          2881  
00001E90                          2882          
00001E90                          2883  *-----------------------------------------------------------
00001E90                          2884  * Section       : Sounds
00001E90                          2885  * Description   : Sound files, which are then loaded and given
00001E90                          2886  * an address in memory, they take a longtime to process and play
00001E90                          2887  * so keep the files small.
00001E90                          2888  *-----------------------------------------------------------
00001E90= 6A 75 6D 70 2E 77 ...   2889  JUMP_WAV        DC.B    'jump.wav',0        ; Jump Sound
00001E99= 67 61 6D 65 4F 76 ...   2890  GAMEOVER_WAV    DC.B    'gameOver.wav',0    ; Run Sound
00001EA6= 68 69 74 48 75 72 ...   2891  HITHURT_WAV     DC.B    'hitHurt.wav',0     ; Collision Opps
00001EB2= 68 69 74 2E 77 61 ...   2892  HIT_WAV         DC.B    'hit.wav',0         ; Collision Opps
00001EBA= 70 6F 77 65 72 55 ...   2893  POWERUP_WAV     DC.B    'powerUP.wav',0     ; Collision Opps
00001EC6= 6C 65 76 65 6C 43 ...   2894  LEVELCHANGE_WAV DC.B    'levelChange.wav',0 ; Collision Opps
00001ED6                          2895  
00001ED6= 61 6E 74 6F 70 69 ...   2896  BATTLE_SONG_WAV DC.B    'antopia-battle.wav',0
00001EE9= 61 6E 74 6F 70 69 ...   2897  MAP_SONG_WAV    DC.B    'antopia-map.wav',0
00001EF9= 61 6E 74 6F 70 69 ...   2898  MENU_SONG_WAV   dc.B    'antopia-menu.wav',0
00001F0A                          2899  
00001F0A                          2900  
00001F0A= 0000                    2901  respawnTime         dc.W        0
00001F0C= 03                      2902  backToMapCount      dc.b        3
00001F0E= 0000                    2903  healthCooldown      DC.W        0
00001F10                          2904  *---*
00001F10= 00000000                2905  timer           DC.L    0
00001F14                          2906  
00001F14                          2907  ;    END    START        ; last line of source
00001F14                          2908  
00001F14                          2909  
Line 2910 WARNING: END directive missing, starting address not set

118 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ANTHEALTH           1E5A
ANTHEALTH_MSG       1DCE
ANTKILLED           17E8
ANTSREMAINING       1E5B
ANTSREM_MSG         1DD8
ARC_DONE            B8E
ATK_LTE_TO_ENEMY_Y_PLUS_H  159C
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  160A
ATK_PLUS_H_LTE_TO_ATTACK_Y  15B8
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  1626
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  15D2
ATTACK_COLLISION    1718
ATTACK_COOLDOWN     1E5E
ATTACK_COOLDOWN_SUB  3CE
ATTACK_FLY_COLLISION  173E
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_ENMY_X  1580
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  15EE
ATTACK_TIME         1E60
ATTACK_TIME_SUB     3C6
ATTACK_WIDTH        23
ATTACK_X            1E62
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  1564
ATTACK_Y            1E66
BACKTOMAPCOUNT      1F0C
BACK_TO_MAP_MSG     1D82
BATTLEINPUT         1B8
BATTLE_SONG_LOAD    C5C
BATTLE_SONG_WAV     1ED6
BIGENMY_H_INIT      12
BIGENMY_W_INIT      23
CHECKPAUSED         2D0
CHECK_ATTACK_COLLISIONS  1560
CHECK_ATTACK_COOLDOWN  3B8
CHECK_ATTACK_FLY_COLLISIONS  15CE
CHECK_COLLISIONS    141E
CHECK_ENEMIES_CLEARED  1764
CHECK_FLYENEMY_COLLISIONS  1484
CHECK_HEALTH_COLLISIONS  14F2
CHECK_THROW_COLLISION  163C
CHECK_THROW_DONE    38A
CHECK_THROW_FLY_COLLISIONS  16AA
CHECK_WAVE_CLEARED  552
COLLISION_CHECK_DONE  177C
COMPLETE_RESTART    2A2
CONTINUE            58A
CURRENTLYATTACKING  1E5D
CURRENTLYTHROWING   1E6A
CURRENT_KEY         1E16
DAMAGE_HILL         56A
DKEY                44
DRAWBATTLE          622
DRAWDIRT            13F2
DRAWHILLHEALTH      672
DRAW_ATTACK         ED4
DRAW_BACKGROUND     83C
DRAW_ENEMY          102A
DRAW_ENTRANCE       7DC
DRAW_ENTRANCE_HOLE  80C
DRAW_FLOOR          1398
DRAW_FLYENEMY       1168
DRAW_HEALTHPACK     1314
DRAW_HEALTHPACKS    1DFB
DRAW_HEALTHPACK_DONE  137A
DRAW_HILL           6AC
DRAW_MSG            1CCD
DRAW_PLAYER         D80
DRAW_PLYR_DATA      9BE
DRAW_RESPAWN        FAC
DRAW_THROW          F24
DRAW_TREES          866
ENEMIESDEAD_MSG     1CE4
ENEMIESPASSED       1E81
ENEMIESTODEFEAT     1E82
ENEMIES_DEFEATED    1E80
ENEMYCOLLISION      179E
ENEMYCOLOR          1E4E
ENEMYCOUNT_MSG      1CF6
ENEMY_HEIGHT        1E8A
ENEMY_HIT           1E83
ENEMY_WIDTH         1E88
ENEMY_X             1E36
ENEMY_Y             1E3A
ENMY_H_INIT         D
ENMY_W_INIT         1B
ESCAPE              1B
EXIT                1C82
EXIT_MSG            1D08
FALLENKINGDOM_MSG   1D5C
FLYENEMYCOLOR       1E52
FLYENEMY_HEIGHT     1E8E
FLYENEMY_HIT        1E84
FLYENEMY_WIDTH      1E8C
FLYINGENEMY_X       1E46
FLYINGENEMY_Y       1E4A
FLY_ENMY_H_INIT     D
FLY_ENMY_W_INIT     1E
GAME                18A
GAMELOOP            18A
GAMEOVER_INDEX      0
GAMEOVER_LOAD       B92
GAMEOVER_MSG        1D78
GAMEOVER_WAV        1E99
GAME_OVER           1990
GND_FALSE           0
GND_TRUE            1
HEALTHCOOLDOWN      1F0E
HEALTHCOOLDOWNOVER  1DFD
HEALTH_COLLISION    180A
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            1E3E
HEALTH_Y            1E42
HILLDEFENDED_MSG    1D4D
HILLHP              1DF8
HILLHP_MSG          1DEA
HILLLOST_MSG        1D14
HILL_LOST           1868
HITHURT_INDEX       2
HITHURT_LOAD        BD2
HITHURT_WAV         1EA6
HIT_INDEX           5
HIT_LOAD            C2C
HIT_WAV             1EB2
IDLE                B90
IDLE_MSG            1CB9
INITRUN             0
INIT_PLAYER         C9C
INPUTLOOP           198A
IN_ENEMY            1DF9
IN_HPACK            1DFA
IS_ATTACKING        EC8
IS_PLAYER_ON_GND    AEC
IS_THROWING         F18
JMP_INDEX           1
JUMP                B40
JUMP_DONE           B6E
JUMP_LOAD           BB4
JUMP_MSG            1CB0
JUMP_WAV            1E90
KEYCODE_MSG         1CA5
KKEY                4B
LAST_KEY            1E1A
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     1EC6
LEVELS              1E02
LEVEL_02            1DFE
LEVEL_03            1E00
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LOSSINPUTLOOP       1A78
LVLCHANGE_LOAD      C0E
MAP_SONG_LOAD       C4A
MAP_SONG_WAV        1EE9
MENU_SONG_LOAD      C6E
MENU_SONG_WAV       1EF9
MOVE_ENEMY          3F6
MOVE_ENEMY_L2       43C
MOVE_ENEMY_L3       472
MOVE_ENEMY_L4       494
MOVE_HEALTHPACK     3D6
MOVE_PLAYER_LEFT    D2C
MOVE_PLAYER_RIGHT   D56
MOVE_RESPAWNED      FC6
MOVE_THROW          35C
PERFORM_ATTACK      58C
PERFORM_JUMP        B5E
PERFORM_THROW       5D8
PERFORM_THROW_ARC   B82
PLAYER_DIR          1E34
PLAYER_HEIGHT       1E86
PLAYER_SCORE        1E24
PLAYER_WIDTH        1E85
PLAYER_X            1E1C
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  1422
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  143E
PLAYER_Y            1E20
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  145A
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  1470
PLAY_GAMEOVER       BA4
PLAY_HIT            C3E
PLAY_HITHURT        BE4
PLAY_JUMP           BC6
PLAY_LVLCHANGE      C20
PLAY_POWERUP        C02
PLAY_SONG           C80
PLX_LTE_TO_FLYENEMY_X_PLUS_W  1488
PLX_LTE_TO_HEALTH_X_PLUS_W  14F6
PLX_PLUS_W_LTE_TO_FLYENEMY_X  14A4
PLX_PLUS_W_LTE_TO_HEALTH_X  1512
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1E2C
PLYR_H_INIT         D
PLYR_JUMP_V         FFFFFFED
PLYR_ON_GND         1E30
PLYR_VELOCITY       1E28
PLYR_W_INIT         1B
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  14C0
PLY_LTE_TO_HEALTH_Y_PLUS_H  152E
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  14DC
PLY_PLUS_H_LTE_TO_HEALTH_Y  154A
POINTS              1E5C
POWERUP_INDEX       3
POWERUP_LOAD        BF0
POWERUP_WAV         1EBA
PRESSSTART          1DB0
PROCESS_INPUT       25C
RANDOM              1E56
RESET_ENEMY_POSITION  4B6
RESET_FLYENEMY_POSITION  4F8
RESET_HEALTH_POSITION  53E
RESET_THROW         39A
RESPAWNTIME         1F0A
RESTART_MSG         1D9A
RKEY                52
SCORE_MSG           1C9C
SCREEN_H            1E14
SCREEN_W            1E12
SET_OFF_GROUND      B34
SET_ON_GROUND       B0C
SKEY                53
SONG_INDEX          6
SPACEBAR            20
SPAWN_HEALTHPACKS   1DFC
STILLPAUSED         2DC
STILL_COLLIDED      1866
STOP_HPACK_SPAWN    1854
STOP_SONG           C8E
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
THROW_ARC           B70
THROW_COOLDOWN      1E6C
THROW_GRAVITY       1E7C
THROW_HEIGHT        14
THROW_PLUS_W_LTE_TO_ENMY_X  165C
THROW_PLUS_W_LTE_TO_FLYENMY_X  16CA
THROW_TIME          1E6E
THROW_VELOCITY      1E78
THROW_WIDTH         23
THROW_X             1E70
THROW_X_LTE_TO_ENEMY_X_PLUS_W  1640
THROW_X_LTE_TO_FLYENEMY_X_PLUS_W  16AE
THROW_Y             1E74
THRW_DFLT_G         1
THRW_DFLT_V         0
THRW_H_INIT         F
THRW_JUMP_V         FFFFFFF0
THRW_W_INIT         F
TIMER               1F10
TITLEMSG            1DC1
TREET               1DAD
TRW_LTE_TO_ENEMY_Y_PLUS_H  1678
TRW_LTE_TO_FLYENEMY_Y_PLUS_H  16E6
TRW_PLUS_H_LTE_TO_FLYENEMY_Y  1702
TRW_PLUS_H_LTE_TO_THROW_Y  1694
UPDATE              2E4
UPDATE_MSG          1CC2
UPDATE_PLAYER       D02
VARMSG              1CDF
V_MSG               1CDC
WAIT_100MS          192
WAVE_DEFEATED       1A7E
WININPUTLOOP        1C7C
WIN_MSG             1D2F
WIN_SCREEN          1BA0
X_MSG               1CD6
Y_MSG               1CD9
_00000000           1E2
_00000001           1F4
_00000002           206
_00000003           218
_00000004           23C
_00000005           2CE
_00000006           33A
_00000007           42E
_00000008           456
_00000009           46A
_0000000A           486
_0000000B           4A8
_0000000C           4EA
_0000000D           530
_0000000E           598
_0000000F           5E4
_00000010           B4C
_00000011           D38
_00000012           D62
_00000013           1396
_00000014           17D6
_00000015           182A
