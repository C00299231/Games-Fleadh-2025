00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 28/02/2025 15:32:34

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Oliwier Jakubiec
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *-----------------------------------------------------------
00000000                            10  * Section       : Trap Codes
00000000                            11  * Description   : Trap Codes used throughout StarterKit
00000000                            12  *-----------------------------------------------------------
00000000                            13  * Trap CODES
00000000  =00000021                 14  TC_SCREEN   EQU         33          ; Screen size information trap code
00000000  =00000000                 15  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00000000                            16                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00000000  =00000013                 17  TC_KEYCODE  EQU         19          ; Check for pressed keys
00000000  =0000005C                 18  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00000000  =0000000B                 19  TC_CURSR_P  EQU         11          ; Trap code cursor position
00000000                            20  
00000000  =0000005E                 21  TC_REDRAW   EQU         94          ; Redraw Screen
00000000  =00000009                 22  TC_EXIT     EQU         09          ; Exit Trapcode
00000000                            23  
00000000                            24  *-----------------------------------------------------------
00000000                            25  * Section       : Charater Setup
00000000                            26  * Description   : Size of Player and Enemy and properties
00000000                            27  * of these characters e.g Starting Positions and Sizes
00000000                            28  *-----------------------------------------------------------
00000000                            29  
00000000  =0000000F                 30  THRW_W_INIT EQU         15          ; Players initial Width
00000000  =0000000F                 31  THRW_H_INIT EQU         15          ; Players initial Height
00000000                            32  
00000000  =00000000                 33  THRW_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFF0                 34  THRW_JUMP_V EQU         -16          ; Player Jump Velocity
00000000  =00000001                 35  THRW_DFLT_G EQU         01          ; Player Default Gravity
00000000                            36  
00000000  =00000001                 37  GND_TRUE    EQU         01          ; Player on Ground True
00000000  =00000000                 38  GND_FALSE   EQU         00          ; Player on Ground False
00000000                            39  
00000000  =00000000                 40  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00000000  =00000001                 41  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00000000  =00000002                 42  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00000000  =00000003                 43  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00000000  =00000004                 44  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00000000  =00000005                 45  HIT_INDEX  EQU              05  
00000000                            46  
00000000  =00000006                 47  SONG_INDEX equ          06
00000000                            48  
00000000  =0000001B                 49  ENMY_W_INIT EQU         27          ; Enemy initial Width
00000000  =0000000D                 50  ENMY_H_INIT EQU         13          ; Enemy initial Height
00000000                            51  
00000000  =00000023                 52  BIGENMY_W_INIT EQU         35          ; BRute Enemy initial Width
00000000  =00000012                 53  BIGENMY_H_INIT EQU         18          ; Brute Enemy initial Height
00000000                            54  
00000000  =0000001E                 55  FLY_ENMY_W_INIT  EQU         30          ; Enemy initial Width
00000000  =0000000D                 56  FLY_ENMY_H_INIT  EQU         13          ; Enemy initial Height
00000000                            57  
00000000  =0000000C                 58  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00000000  =0000000C                 59  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00000000                            60  
00000000  =00000002                 61  LOOKRIGHT   EQU         02          ; Look Right
00000000  =00000001                 62  LOOKLEFT    EQU         01          ; Look Left
00000000                            63  
00000000                            64  *-----------------------------------------------------------
00000000                            65  * Section       : Keyboard Keys
00000000                            66  * Description   : Spacebar and Escape or two functioning keys
00000000                            67  * Spacebar to JUMP and Escape to Exit Game
00000000                            68  *-----------------------------------------------------------
00000000  =00000020                 69  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00000000  =0000001B                 70  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00000000  =00000052                 71  Rkey           EQU         $52         ; R ASCII Keycode
00000000  =00000041                 72  Akey           EQU         $41         ; A ASCII Keycode
00000000  =00000053                 73  Skey           EQU         $53         ; S ASCII Keycode
00000000  =00000044                 74  Dkey           EQU         $44         ; D ASCII Keycode
00000000  =0000004C                 75  Lkey           EQU         $4C         ; L ASCII Keycode
00000000  =0000004B                 76  Kkey           EQU         $4B         ; K ASCII Keycode
00000000                            77  
00000000                            78  *-----------------------------------------------------------
00000000                            79  * Subroutine    : Initialise
00000000                            80  * Description   : Initialise game data into memory such as 
00000000                            81  * sounds and screen size
00000000                            82  *-----------------------------------------------------------
00000000                            83  INITRUN:
Line 84 ERROR: Undefined symbol
00000000  33FC 0002 005455B8        84      move.w #2, lvlType
00000008                            85      ; Initialise Sounds
00000008  6100 0B7A                 86      BSR     JUMP_LOAD               ; Load Jump Sound into Memory
0000000C  6100 0B54                 87      BSR     GAMEOVER_LOAD                ; Load Run Sound into Memory
00000010  6100 0B90                 88      BSR     HITHURT_LOAD               ; Load Opps (Collision) Sound into Memory
00000014  6100 0BAA                 89      BSR     POWERUP_LOAD               ; Load Opps (Collision) Sound into Memory
00000018  6100 0BC4                 90      BSR     LVLCHANGE_LOAD               ; Load Opps (Collision) Sound into Memory
0000001C  6100 0BDE                 91      BSR     HIT_LOAD
00000020                            92  
00000020  6100 0C3C                 93      BSR     stop_song
00000024  6100 0C06                 94      BSR     BATTLE_SONG_LOAD
00000028                            95  
00000028  6100 0C26                 96      bsr PLAY_SONG
0000002C                            97  
0000002C                            98      ; Screen Size
0000002C  103C 0021                 99      MOVE.B  #TC_SCREEN, D0          ; access screen information
00000030  7200                     100      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
00000032  4E4F                     101      TRAP    #15                     ; interpret D0 and D1 for screen size
00000034  33C1 00001DCE            102      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
0000003A  4841                     103      SWAP    D1                      ; Swap top and bottom word to retrive screen size
0000003C  33C1 00001DCC            104      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
00000042                           105  
00000042  6100 0C28                106      BSR     INIT_PLAYER
00000046                           107      
00000046                           108      ; Initialise Player Velocity
00000046  B381                     109      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000048  123C 0000                110      MOVE.B  #THRW_DFLT_V,D1         ; Init Player Velocity
0000004C  23C1 00001E32            111      MOVE.L  D1,         THROW_VELOCITY
00000052                           112  
00000052                           113      ; Initialise Player Gravity
00000052  B381                     114      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000054  7201                     115      MOVE.L  #THRW_DFLT_G,D1         ; Init Player Gravity
00000056  23C1 00001E36            116      MOVE.L  D1,         THROW_GRAVITY
0000005C                           117  
0000005C                           118      ; Initial Position for Enemy
0000005C  B381                     119      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000005E  3239 00001DCC            120      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000064  23C1 00001DF0            121      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
0000006A                           122  
0000006A  B381                     123      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000006C  3239 00001DCE            124      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000072  82FC 0002                125      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000076  23C1 00001DF4            126      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
0000007C                           127  
0000007C                           128      ; Initial Position for Flying Enemy
0000007C  B381                     129      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000007E  3239 00001DCC            130      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000084  23C1 00001E00            131      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
0000008A                           132  
0000008A  B381                     133      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000008C  3239 00001DCE            134      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000092  82FC 0002                135      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000096  0441 003C                136      SUB.W   #60,        D1
0000009A  23C1 00001E04            137      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
000000A0                           138      
000000A0                           139      ; Initial Position for Health pack
000000A0  23FC 0000017C 00001DF8   140      MOVE.L  #380,         HEALTH_X     ; Enemy X Position
000000AA  23FC 0000005A 00001DFC   141      MOVE.L  #90,         HEALTH_Y     ; Enemy Y Position
000000B4                           142  
000000B4  13FC 0064 00001DB2       143      MOVE.B     #100,    hillHP
000000BC                           144  
000000BC  45F9 00001DBC            145      LEA    LEVELS,      A2
000000C2  13FC 0003 00001E14       146      MOVE.B  #03,        antHealth
000000CA                           147  
Line 148 ERROR: Undefined symbol
000000CA  23FC 00000096 005455B8   148      MOVE.L  #150,       currentHealth
Line 149 ERROR: Undefined symbol
000000D4  23FC 00000014 005455B8   149      move.l  #20,        healthTlX
Line 150 ERROR: Undefined symbol
000000DE  23FC 000001A9 005455B8   150      move.l  #425,       healthTlY
Line 151 ERROR: Undefined symbol
000000E8  23FC 000000AA 005455B8   151      move.l  #170,       healthBrX
Line 152 ERROR: Undefined symbol
000000F2  23FC 000001B8 005455B8   152      move.l  #440,       healthBrY
000000FC                           153  
000000FC  13FC 0002 00001E16       154      MOVE.B  #02,        POINTS
00000104  13FC 0000 00001DB5       155      MOVE.B  #00,        DRAW_HEALTHPACKS
0000010C  13FC 0000 00001DB6       156      MOVE.B  #00,        SPAWN_HEALTHPACKS
00000114                           157  
00000114  23FC 00000000 00001E1C   158      MOVE.L  #0,         ATTACK_X
0000011E  23FC 00000000 00001E20   159      MOVE.L  #0,         ATTACK_Y
00000128  23FC FFFFFF9C 00001E2A   160      MOVE.L  #-100,      THROW_X
00000132  23FC FFFFFF9C 00001E2E   161      MOVE.L  #-100,      THROW_Y
0000013C                           162      
0000013C  13FC 0000 00001E17       163      MOVE.B  #00,        CURRENTLYATTACKING
00000144  13FC 0000 00001E24       164      MOVE.B  #00,        CURRENTLYTHROWING
0000014C                           165      
0000014C  13FC 0000 00001E3D       166      MOVE.B  #00,        ENEMY_HIT
00000154  13FC 0000 00001E3E       167      MOVE.B  #00,        FLYENEMY_HIT
0000015C                           168  
0000015C  0639 000A 00001E3C       169      ADD.B   #10,        enemiesToDefeat
00000164  13FC 0000 00001E3A       170      MOVE.B  #0,         ENEMIES_DEFEATED
0000016C  13FC 0000 00001E3B       171      MOVE.B  #0,         enemiesPassed
00000174  13FC 0004 00001ECA       172      MOVE.B  #4,         backToMapCount
0000017C  4281                     173      CLR.L   D1
0000017E                           174   
0000017E                           175  
0000017E                           176      ; Enable the screen back buffer(see easy 68k help)
0000017E  103C 005C                177      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
00000182  123C 0011                178      MOVE.B  #17,        D1          ; Combine Tasks
00000186  4E4F                     179      TRAP    #15                     ; Trap (Perform action)
00000188                           180          
00000188                           181      ; Clear the screen (see easy 68k help)
00000188  103C 000B                182      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000018C  323C FF00                183      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00000190  4E4F                     184      TRAP    #15                     ; Trap (Perform action)
00000192                           185  
00000192  6000 0002                186      bra gameloop
00000196                           187  
00000196                           188  *-----------------------------------------------------------
00000196                           189  * Subroutine    : Game
00000196                           190  * Description   : Game including main GameLoop. GameLoop is like
00000196                           191  * a while loop in that it runs forever until interupted
00000196                           192  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
00000196                           193  *-----------------------------------------------------------
00000196                           194  GAME:
00000196                           195  
00000196                           196      
00000196                           197  GAMELOOP:
00000196                           198      ; Main Gameloop
00000196  23FC 00000BB8 00001ECC   199      MOVE.L      #3000,timer
000001A0  7200                     200      MOVE.L      #0,D1
000001A2  103C 0017                201      MOVE.B      #23,D0
000001A6  4E4F                     202      TRAP        #15
000001A8                           203  DELAY:     
000001A8                           204  
000001A8  53B9 00001ECC            205      SUBI.L      #1,timer            ; decrement timer by 1 to simulate a delay
000001AE  4AB9 00001ECC            206      TST.L       timer            ; compare 0 to the value of timer
000001B4  66F2                     207      BNE         DELAY               ; branch back to DELAY if the previous compare was not equal
000001B6                           208  
000001B6  6100 0018                209      BSR     BATTLEINPUT                   ; Check Keyboard Input
000001BA  6100 012C                210      BSR     checkPaused
000001BE  6100 013C                211      BSR     UPDATE                  ; Update positions and points
000001C2  6100 08F8                212      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
000001C6  6100 1228                213      BSR     CHECK_COLLISIONS        ; Check for Collisions
000001CA  6100 0454                214      BSR     DRAWBATTLE                  ; Draw the Scene
000001CE                           215                  ; Loop back to GameLoop
000001CE  60C6                     216      BRA     GAMELOOP    
000001D0                           217      
000001D0                           218  *-----------------------------------------------------------
000001D0                           219  * Subroutine    : Input
000001D0                           220  * Description   : Process Keyboard Input
000001D0                           221  *-----------------------------------------------------------
000001D0                           222  BATTLEINPUT:
000001D0  2039 00001DD0            223      move.l CURRENT_KEY, D0
Line 224 ERROR: Undefined symbol
000001D6  13C0 005455B8            224      move.b D0,lastkey 
000001DC                           225  
000001DC  103C 0013                226      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000001E0                           227      ;MOVE.L  #$41444C20, D1          
Line 228 ERROR: Undefined symbol
000001E0  223C 004DBD16            228      MOVE.L  #runActionKeys, D1          ; Check for A, D, L, and Spacebar
000001E6  4E4F                     229      TRAP    #15                         ; Trap (Perform action)
000001E8  23C1 00001DD0            230      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
000001EE                           231  
000001EE  0801 0018                232      BTST.L  #24,D1
000001F2                           233      IF <NE> THEN
000001F6  6100 0B04                234          BSR    MOVE_PLAYER_LEFT
000001FA                           235      ENDI
000001FA                           236  
000001FA  2239 00001DD0            237      MOVE.L  CURRENT_KEY, D1
00000200  0801 0010                238      BTST.L  #16,D1
00000204                           239      IF <NE> THEN
00000208  6100 0B1C                240          BSR    MOVE_PLAYER_RIGHT
0000020C                           241      ENDI
0000020C                           242  
0000020C  2239 00001DD0            243      MOVE.L  CURRENT_KEY, D1
00000212  0801 0008                244      BTST.L  #8,D1
00000216                           245      IF <NE> THEN
0000021A  6100 036E                246          BSR    PERFORM_ATTACK
0000021E                           247      ENDI
0000021E                           248  
0000021E  2239 00001DD0            249      MOVE.L  CURRENT_KEY, D1
00000224  0801 0000                250      BTST.L  #0,D1
00000228                           251      IF <NE> THEN
0000022C  6100 08E2                252          BSR    JUMP
00000230                           253      ENDI
00000230                           254  
00000230  103C 0013                255      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
00000234  223C 00001B4B            256      MOVE.L  #$1B4B, D1                 ; check K and escape
0000023A  4E4F                     257      TRAP    #15                     ; Trap (Perform action)
0000023C  23C1 00001DD0            258      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
00000242                           259  
00000242  2239 00001DD0            260      MOVE.L  CURRENT_KEY, D1
00000248  0801 0000                261      BTST.L  #0,D1
0000024C                           262      IF <NE> THEN
00000250  6100 0384                263          BSR    PERFORM_THROW
00000254                           264      ENDI
00000254                           265  
00000254                           266  
00000254                           267  
00000254                           268      ; Process Input
00000254  4281                     269      CLR.L   D1                      ; Clear Data Register
00000256  4282                     270      CLR.L   D2
00000258  103C 0013                271      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
0000025C  4E4F                     272      TRAP    #15                     ; Trap (Perform action)
0000025E  1401                     273      MOVE.B  D1,         D2          ; Move last key D1 to D2
00000260  B43C 0000                274      CMP.B   #00,        D2          ; Key is pressed
00000264  6700 000E                275      BEQ     PROCESS_INPUT           ; Process Key
00000268  4E4F                     276      TRAP    #15                     ; Trap for Last Key
0000026A                           277      ; Check if key still pressed
0000026A  B23C 00FF                278      CMP.B   #$FF,       D1          ; Is it still pressed
0000026E  6700 0004                279      BEQ     PROCESS_INPUT           ; Process Last Key
00000272  4E75                     280      RTS                             ; Return to subroutine
00000274                           281  *-----------------------------------------------------------
00000274                           282  * Subroutine    : Process Input
00000274                           283  * Description   : Branch based on keys pressed
00000274                           284  *-----------------------------------------------------------
00000274                           285  PROCESS_INPUT:
00000274  23C2 00001DD0            286      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
0000027A                           287  
0000027A                           288  ; pause
Line 289 ERROR: Undefined symbol
0000027A  13C2 005455B8            289      move.b  d2,         currentKey
Line 290 ERROR: Undefined symbol
00000280  0C39 0016 005455CC       290      CMP.b   #escapekey,    currentKey ; Is Current Key Escape
Line 291 ERROR: Undefined symbol
00000288  6700 BA8C                291      BEQ     escapePressed
0000028C                           292  
Line 293 ERROR: Undefined symbol
0000028C  0C39 0016 005455C0       293      cmpi.b #key0, currentKey ; fullscreen
Line 294 ERROR: Undefined symbol
00000294  6700 BA80                294      beq key0pressed
00000298                           295  
Line 296 ERROR: Undefined symbol
00000298  4A39 004DBD16            296      tst.b   isPaused
Line 297 ERROR: Undefined symbol
0000029E  6600 BA76                297      bne     pausedInput
000002A2                           298  
Line 299 ERROR: Undefined symbol
000002A2  0C79 0003 005455B8       299      CMP.W   #3,lvlIndex
000002AA  6700 000E                300      BEQ     COMPLETE_RESTART
000002AE                           301  
000002AE  4A39 00001E15            302      TST.B   antsRemaining
000002B4  6F00 0004                303      BLE     COMPLETE_RESTART
000002B8                           304  
000002B8  4E75                     305      RTS                             ; Return to subroutine
000002BA                           306  
000002BA                           307  COMPLETE_RESTART:
000002BA  0CB9 00000052 00001DD0   308      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
000002C4                           309      IF <EQ> THEN
Line 310 ERROR: Undefined symbol
000002C8  33FC 0001 005455B8       310          move.w #1, lvlType
000002D0                           311  
Line 312 ERROR: Undefined symbol
000002D0  223C 004DBD16            312          MOVE.L    #color5,D1
000002D6  243C 00015F90            313          MOVE.L  #00090000,D2
Line 314 ERROR: Undefined symbol
000002DC  103C 0016                314          MOVE.B  #tcFont,D0
000002E0  4E4F                     315          TRAP    #15
000002E2                           316          
Line 317 ERROR: Undefined symbol
000002E2  6000 BA32                317          BRA     nextInit
000002E6                           318      ENDI
000002E6                           319  
000002E6  4E75                     320      RTS                             ; Return to subroutine
000002E8                           321  *----------
000002E8                           322  checkPaused:
Line 323 ERROR: Undefined symbol
000002E8  4A39 004DBD16            323      TST.B  isPaused
000002EE  6600 0004                324      BNE    stillPaused
000002F2  4E75                     325      RTS
000002F4                           326  
000002F4                           327  stillPaused:
000002F4  6100 032A                328      BSR    DRAWBATTLE
000002F8  6000 FE9C                329      BRA    GAMELOOP
000002FC                           330  *-----------------------------------------------------------
000002FC                           331  * Subroutine    : Update
000002FC                           332  * Description   : Main update loop update Player and Enemies
000002FC                           333  *-----------------------------------------------------------
000002FC                           334  UPDATE:
000002FC                           335      ; update player position
000002FC  6100 09D4                336      BSR     UPDATE_PLAYER
00000300  6100 0050                337      BSR     MOVE_THROW
00000304                           338  
00000304                           339      ; Move the Enemy
00000304  4281                     340      CLR.L   D1                      ; Clear the contents of D0
00000306  2239 00001DF0            341      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
0000030C  B2BC 00000000            342      CMP.L   #00,        D1
00000312  6F00 019C                343      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
00000316  6100 00D4                344      BSR     MOVE_ENEMY              ; Move the Enemy
0000031A                           345  
0000031A                           346      ; Move flying enemy
0000031A                           347  
0000031A  4281                     348      CLR.L   D1                      ; Clear the contents of D0
0000031C  2239 00001E00            349      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
00000322  B2BC 00000000            350      CMP.L   #00,        D1
00000328  6F00 01C8                351      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
0000032C                           352  
0000032C                           353      ; move health
0000032C  6100 009E                354      BSR     MOVE_HEALTHPACK
00000330                           355  
00000330                           356    
00000330  6100 007C                357      BSR     CHECK_ATTACK_COOLDOWN
00000334                           358  
00000334  4A79 00001E1A            359      TST.W   ATTACK_TIME
0000033A  6600 0080                360      BNE     ATTACK_TIME_SUB
0000033E  13FC 0000 00001E17       361      MOVE.B  #00,        CURRENTLYATTACKING
00000346  23FC 000001E0 00001E20   362      MOVE.L  #480,        ATTACK_Y
00000350                           363  
00000350                           364      
00000350                           365  
00000350  4E75                     366      RTS                             ; Return to subroutine  
00000352                           367  
00000352                           368  MOVE_THROW:
00000352                           369         ; Update the Players Positon based on Velocity and Gravity
00000352  B381                     370      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000354  2239 00001E32            371      MOVE.L  THROW_VELOCITY, D1       ; Fetch Player Velocity
0000035A  2439 00001E36            372      MOVE.L  THROW_GRAVITY, D2        ; Fetch Player Gravity
00000360  D282                     373      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000362  23C1 00001E32            374      MOVE.L  D1,         THROW_VELOCITY ; Update Player Velocity
00000368  D2B9 00001E2E            375      ADD.L   THROW_Y,   D1          ; Add Velocity to Player
0000036E  23C1 00001E2E            376      MOVE.L  D1,         THROW_Y    ; Update Players Y Position
00000374                           377  
00000374  58B9 00001E2A            378      ADDI.L   #4,        THROW_X
0000037A  6100 0004                379      BSR     CHECK_THROW_DONE
0000037E                           380      
0000037E  4E75                     381      RTS
00000380                           382  
00000380                           383  CHECK_THROW_DONE:
00000380  0CB9 0000015E 00001E2E   384      CMP.L    #350, THROW_Y
0000038A  6E00 0004                385      BGT      RESET_THROW
0000038E  4E75                     386      RTS
00000390                           387  
00000390                           388  RESET_THROW:
00000390  13FC 0000 00001E24       389      MOVE.B   #00, CURRENTLYTHROWING
00000398  23FC FFFFFF9C 00001E2A   390      MOVE.L   #-100, THROW_X
000003A2  23FC FFFFFF9C 00001E2E   391      MOVE.L   #-100, THROW_Y
000003AC  4E75                     392      RTS
000003AE                           393  
000003AE                           394  CHECK_ATTACK_COOLDOWN:
000003AE  0C79 0000 00001E18       395      CMP.W   #0, ATTACK_COOLDOWN
000003B6  6E00 000C                396      BGT     ATTACK_COOLDOWN_SUB
000003BA  4E75                     397      RTS
000003BC                           398  
000003BC                           399  ATTACK_TIME_SUB:
000003BC  5579 00001E1A            400      SUB.W   #02,        ATTACK_TIME
000003C2  4E75                     401      RTS   
000003C4                           402  ATTACK_COOLDOWN_SUB:
000003C4  5579 00001E18            403      SUB.W   #02,        ATTACK_COOLDOWN
000003CA  4E75                     404      RTS                            
000003CC                           405  
000003CC                           406  MOVE_HEALTHPACK:
000003CC                           407      ; check if health is meant to spawn
000003CC  4A39 00001DB6            408      TST.B   SPAWN_HEALTHPACKS
000003D2  6700 01B4                409      BEQ     CONTINUE
000003D6                           410      
000003D6                           411      ; check if health is on the
000003D6  0CB9 000000F0 00001DFC   412      CMP.L   #240,       HEALTH_Y
000003E0  6700 01A6                413      BEQ     CONTINUE
000003E4                           414  
000003E4                           415      ; else
000003E4  53B9 00001DFC            416      SUB.L   #01,        HEALTH_Y
000003EA  4E75                     417      RTS
000003EC                           418  
000003EC                           419  *-----------------------------------------------------------
000003EC                           420  * Subroutine    : Move Enemy
000003EC                           421  * Description   : Move Enemy Right to Left
000003EC                           422  *-----------------------------------------------------------
000003EC                           423  MOVE_ENEMY:
Line 424 ERROR: Undefined symbol
000003EC  0C79 0003 005455B8       424      CMP.W   #3,lvlIndex
000003F4  6700 0090                425      BEQ     MOVE_ENEMY_L4
Line 426 ERROR: Undefined symbol
000003F8  0C79 0002 005455B8       426      CMP.W   #2,lvlIndex
00000400  6700 005A                427      BEQ     MOVE_ENEMY_L3
Line 428 ERROR: Undefined symbol
00000404  0C79 0001 005455B8       428      CMP.W   #1,lvlIndex
0000040C  6700 0024                429      BEQ     MOVE_ENEMY_L2
00000410                           430  
00000410  0CB9 000000B4 00001E00   431      CMP.L   #180,FLYINGENEMY_X
0000041A                           432      IF <LE> THEN
0000041E  52B9 00001E04            433          ADD.L   #1,FLYINGENEMY_Y
00000424                           434      ENDI
00000424                           435  
00000424  59B9 00001E00            436      SUB.L   #04,        FLYINGENEMY_X
0000042A  57B9 00001DF0            437      SUB.L   #03,        ENEMY_X     ; Move enemy by X Value
00000430  4E75                     438      RTS
00000432                           439  
00000432                           440  MOVE_ENEMY_L2:
00000432  57B9 00001E00            441      SUB.L   #03,        FLYINGENEMY_X
00000438  0CB9 00000082 00001E00   442       CMP.L   #130,      FLYINGENEMY_X
00000442                           443      IF <LE> THEN
00000446  52B9 00001E04            444          ADD.L   #1,FLYINGENEMY_Y
0000044C                           445      ENDI
0000044C  5BB9 00001DF0            446      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
00000452  13FC 0004 00001E16       447      MOVE.B  #04,        POINTS
0000045A  4E75                     448      RTS
0000045C                           449  
0000045C                           450  MOVE_ENEMY_L3:
0000045C  0CB9 00000082 00001E00   451      CMP.L   #130,      FLYINGENEMY_X
00000466                           452      IF <LE> THEN
0000046A  56B9 00001E04            453          ADD.L   #3,FLYINGENEMY_Y
00000470                           454      ENDI
00000470  5FB9 00001E00            455      SUB.L   #07,        FLYINGENEMY_X
00000476  5BB9 00001DF0            456      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
0000047C  13FC 0005 00001E16       457      MOVE.B  #05,        POINTS
00000484  4E75                     458      RTS
00000486                           459  
00000486                           460  MOVE_ENEMY_L4:
00000486  0CB9 00000082 00001E00   461      CMP.L   #130,      FLYINGENEMY_X
00000490                           462      IF <LE> THEN
00000494  58B9 00001E04            463          ADD.L   #4,FLYINGENEMY_Y
0000049A                           464      ENDI
0000049A  51B9 00001E00            465      SUB.L   #08,        FLYINGENEMY_X
000004A0  5DB9 00001DF0            466      SUB.L   #06,        ENEMY_X     ; Move enemy by X Value
000004A6  13FC 000A 00001E16       467      MOVE.B  #10,        POINTS
000004AE  4E75                     468      RTS
000004B0                           469  *-----------------------------------------------------------
000004B0                           470  * Subroutine    : Reset Enemy
000004B0                           471  * Description   : Reset Enemy if to passes 0 to Right of Screen
000004B0                           472  *-----------------------------------------------------------
000004B0                           473  RESET_ENEMY_POSITION:
000004B0  4281                     474      CLR.L   D1       
000004B2  3239 00001DCE            475      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000004B8  82FC 0002                476      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000004BC  23C1 00001DF4            477      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
000004C2                           478  
000004C2  B381                     479      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
000004C4  3239 00001DCC            480      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000004CA  0681 0000001B            481      ADD.L   #ENMY_W_INIT,D1
000004D0  23C1 00001DF0            482      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000004D6                           483  
000004D6  4A39 00001E3D            484      TST.B     ENEMY_HIT
000004DC                           485      IF <EQ> THEN        ; enemy has not been hit
000004E0  6100 0086                486          BSR   damage_hill
000004E4                           487      ENDI
000004E4  13FC 0000 00001E3D       488      MOVE.B  #0,         ENEMY_HIT
000004EC  6100 0062                489      BSR     CHECK_WAVE_CLEARED
000004F0                           490  
000004F0  4E75                     491      RTS
000004F2                           492  
000004F2                           493  RESET_FLYENEMY_POSITION:
000004F2  B381                     494      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000004F4  3239 00001DCE            495      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000004FA  82FC 0002                496      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000004FE  0441 003C                497      SUB.W   #60,        D1
00000502  23C1 00001E04            498      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000508                           499  
00000508  4281                     500      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000050A  3239 00001DCC            501      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000510  0681 0000001E            502      ADD.L   #FLY_ENMY_W_INIT,D1
00000516  23C1 00001E00            503      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
0000051C                           504  
0000051C  4A39 00001E3E            505      TST.B     FLYENEMY_HIT
00000522                           506      IF <EQ> THEN        ; enemy has not been hit
00000526  6100 0040                507          BSR   damage_hill
0000052A                           508      ENDI
0000052A  13FC 0000 00001E3E       509      MOVE.B  #0,         FLYENEMY_HIT
00000532  6100 001C                510      BSR     CHECK_WAVE_CLEARED
00000536                           511  
00000536  4E75                     512      RTS
00000538                           513      
00000538                           514  RESET_HEALTH_POSITION:
00000538  13FC 0001 00001DB5       515      MOVE.B  #01,        DRAW_HEALTHPACKS
00000540  4281                     516      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000542  3239 00001DCC            517      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000548  23C1 00001DF8            518      MOVE.L  D1,         HEALTH_X     ; healthpack X Position
0000054E  4E75                     519      RTS
00000550                           520  
00000550                           521  CHECK_WAVE_CLEARED:
00000550  5239 00001E3B            522      ADDI.B  #1,         enemiesPassed
00000556  1239 00001E3B            523      MOVE.B  enemiesPassed,D1
0000055C  B239 00001E3C            524      CMP.B   enemiesToDefeat,D1
00000562  6700 14D4                525      BEQ     WAVE_DEFEATED
00000566  4E75                     526      RTS
00000568                           527  
00000568                           528  damage_hill:
00000568  0439 000A 00001DB2       529      sub.b  #10,hillHP
Line 530 ERROR: Undefined symbol
00000570  04B9 0000000F 005455B8   530      sub.l   #15,currentHealth
0000057A  0C39 0000 00001DB2       531      CMP.b   #0,hillHP
00000582  6F00 129E                532      BLE     HILL_LOST
00000586  4E75                     533      RTS
00000588                           534  
00000588                           535  CONTINUE:
00000588  4E75                     536      RTS
0000058A                           537  
0000058A                           538  PERFORM_ATTACK:
Line 539 ERROR: Undefined symbol
0000058A  4A39 004DBD16            539      TST.B  isPaused
00000590                           540      IF <NE> THEN
00000594  4E75                     541          RTS
00000596                           542      ENDI
00000596  4A79 00001E18            543      TST.W    ATTACK_COOLDOWN
0000059C  66EA                     544      BNE      CONTINUE
0000059E                           545      
0000059E  13FC 0001 00001E17       546      MOVE.B   #01, CURRENTLYATTACKING
000005A6  33FC 0032 00001E1A       547      MOVE.W   #50, ATTACK_TIME
000005AE  33FC 004C 00001E18       548      MOVE.W   #76, ATTACK_COOLDOWN
000005B6                           549  
000005B6  23F9 00001DD6 00001E1C   550      MOVE.L   PLAYER_X,ATTACK_X
000005C0  06B9 0000001B 00001E1C   551      ADDI.L   #PLYR_W_INIT,ATTACK_X
000005CA  23F9 00001DDA 00001E20   552      MOVE.L   PLAYER_Y,ATTACK_Y
000005D4  4E75                     553      RTS
000005D6                           554  
000005D6                           555  PERFORM_THROW:
Line 556 ERROR: Undefined symbol
000005D6  4A39 004DBD16            556      TST.B  isPaused
000005DC                           557      IF <NE> THEN
000005E0  4E75                     558          RTS
000005E2                           559      ENDI
000005E2  4A39 00001E24            560      TST.B    CURRENTLYTHROWING
000005E8  669E                     561      BNE      CONTINUE
000005EA                           562      
000005EA  13FC 0001 00001E24       563      MOVE.B   #01,CURRENTLYTHROWING
000005F2  23F9 00001DD6 00001E2A   564      MOVE.L   PLAYER_X,THROW_X
000005FC  06B9 0000001B 00001E2A   565      ADDI.L   #PLYR_W_INIT,THROW_X
00000606  23F9 00001DDA 00001E2E   566      MOVE.L   PLAYER_Y,THROW_Y
00000610  04B9 0000000D 00001E2E   567      SUBI.L   #PLYR_H_INIT,THROW_Y
0000061A                           568  
0000061A  6100 0536                569      BSR     PERFORM_THROW_ARC
0000061E  4E75                     570      RTS
00000620                           571  
00000620                           572  *-----------------------------------------------------------
00000620                           573  * Subroutine    : Draw
00000620                           574  * Description   : Draw Screen
00000620                           575  *-----------------------------------------------------------
00000620                           576  DRAWBATTLE: 
00000620                           577      ; Enable back buffer
00000620  103C 005E                578      MOVE.B  #TC_REDRAW,        D0
00000624  4E4F                     579      TRAP    #15
00000626                           580  
00000626                           581      ; Clear the screen
00000626  103C 000B                582      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000062A  323C FF00                583      MOVE.W  #$FF00,     D1          ; Clear contents
0000062E  4E4F                     584      TRAP    #15                     ; Trap (Perform action)
00000630                           585  
00000630  123C 0001                586      MOVE.B  #1,D1
00000634  103C 005D                587      MOVE.B  #93,D0
00000638  4E4F                     588      TRAP    #15
0000063A                           589  
0000063A  6100 01FE                590      BSR     DRAW_BACKGROUND        
0000063E  6100 006A                591      BSR     DRAW_HILL 
00000642  6100 0378                592      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
00000646  6100 021C                593      BSR     DRAW_TREES
0000064A  6100 01BE                594      BSR     DRAW_ENTRANCE_HOLE
0000064E  6100 09AA                595      BSR     DRAW_ENEMY              ; Draw Enemy
00000652  6100 0AE4                596      BSR     DRAW_FLYENEMY
00000656  6100 0C8C                597      BSR     DRAW_HEALTHPACK
0000065A  6100 017E                598      BSR     DRAW_ENTRANCE
0000065E  6100 06F0                599      BSR     DRAW_PLAYER             ; Draw Player
00000662  6100 0D06                600      BSR     DRAW_FLOOR              ; Draw Floor
00000666  6100 0008                601      BSR     drawHillHealth         ; draw hill hp
Line 602 ERROR: Undefined symbol
0000066A  6100 B6AA                602      BSR     drawPause
0000066E  4E75                     603      RTS                             ; Return to subroutine
00000670                           604  
00000670                           605  
00000670                           606  
00000670                           607  drawHillHealth:
Line 608 ERROR: Undefined symbol
00000670  6100 B6A4                608      BSR     drawHealth
00000674                           609          
Line 610 ERROR: Undefined symbol
00000674  223C 004DBD16            610      MOVE.L  #color5,D1
Line 611 ERROR: Undefined symbol
0000067A  103C 0016                611      MOVE.B  #tcFont,D0
0000067E  243C 00015F90            612      MOVE.L  #00090000,D2
00000684  4E4F                     613      TRAP    #15
00000686                           614  
Line 615 ERROR: Undefined symbol
00000686  223C 004DBD16            615      MOVE.L  #BROWN,D1
Line 616 ERROR: Undefined symbol
0000068C  103C 0016                616      MOVE.B  #tcPenFil,D0
00000690  4E4F                     617      TRAP    #15
00000692                           618  
00000692  103C 000B                619      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000696  323C 041B                620      MOVE.W  #$041B,     D1          ; Col 02, Row 01
0000069A  4E4F                     621      TRAP    #15                     ; Trap (Perform action)
0000069C  43F9 00001DA4            622      LEA     hillHP_MSG,  A1          ; Score Message
000006A2  303C 000D                623      MOVE    #13,        D0          ; No Line feed
000006A6  4E4F                     624      TRAP    #15                     ; Trap (Perform action)
000006A8                           625  
000006A8  4E75                     626      RTS
000006AA                           627  
000006AA                           628  DRAW_HILL:
000006AA                           629  
000006AA                           630      ; Set Pixel Colors
Line 631 ERROR: Undefined symbol
000006AA  223C 004DBD16            631      MOVE.L  #DIRT,     D1          ; Set Background color
000006B0  103C 0050                632      MOVE.B  #80,        D0          ; Task for Background Color
000006B4  4E4F                     633      TRAP    #15                     ; Trap (Perform action)
000006B6                           634  
Line 635 ERROR: Undefined symbol
000006B6  223C 004DBD16            635      MOVE.L  #DIRT,     D1
000006BC  103C 0051                636      MOVE.B  #81,        D0
000006C0  4E4F                     637      TRAP    #15
000006C2                           638  
000006C2                           639      ; Set X, Y, X2, and Y2
000006C2  7200                     640      MOVE.L  #0,   D1          ; X
000006C4  243C 000000F1            641      MOVE.L  #241,  D2          ; Y
000006CA  761E                     642      MOVE.L  #30,   D3           
000006CC  7878                     643      MOVE.L  #120,   D4     
000006CE                           644      
000006CE  103C 0057                645      MOVE.B  #87,        D0          ; Draw 
000006D2  4E4F                     646      TRAP    #15                     ; Trap (Perform action)
000006D4                           647      
000006D4                           648       ; Set X, Y, X2, and Y2
000006D4  7200                     649      MOVE.L  #0,   D1          ; X
000006D6  243C 000000F1            650      MOVE.L  #241,  D2          ; Y
000006DC  763C                     651      MOVE.L  #60,   D3           
000006DE  283C 00000087            652      MOVE.L  #135,   D4 
000006E4                           653      
000006E4                           654      
000006E4  103C 0057                655      MOVE.B  #87,        D0          ; Draw
000006E8  4E4F                     656      TRAP    #15                     ; Trap (Perform action)
000006EA                           657  
000006EA                           658       ; Set X, Y, X2, and Y2
000006EA  7200                     659      MOVE.L  #0,   D1          ; X
000006EC  243C 000000F1            660      MOVE.L  #241,  D2          ; Y
000006F2  7650                     661      MOVE.L  #80,   D3           
000006F4  283C 00000096            662      MOVE.L  #150,   D4 
000006FA                           663      
000006FA                           664      
000006FA  103C 0057                665      MOVE.B  #87,        D0          ; Draw 
000006FE  4E4F                     666      TRAP    #15                     ; Trap (Perform action)
00000700                           667  
00000700                           668       ; Set X, Y, X2, and Y2
00000700  7200                     669      MOVE.L  #0,   D1          ; X
00000702  243C 000000F1            670      MOVE.L  #241,  D2          ; Y
00000708  7664                     671      MOVE.L  #100,   D3           
0000070A  283C 000000C8            672      MOVE.L  #200,   D4 
00000710                           673      
00000710                           674      
00000710  103C 0057                675      MOVE.B  #87,        D0          ; Draw 
00000714  4E4F                     676      TRAP    #15                     ; Trap (Perform action)
00000716                           677  
Line 678 ERROR: Undefined symbol
00000716  223C 004DBD16            678      MOVE.L  #BLACK,     D1
0000071C  103C 0051                679      MOVE.B  #81,        D0
00000720  4E4F                     680      TRAP    #15
Line 681 ERROR: Undefined symbol
00000722  223C 004DBD16            681      MOVE.L  #BLACK,     D1
00000728  103C 0050                682      MOVE.B  #80,        D0
0000072C  4E4F                     683      TRAP    #15
0000072E                           684  
0000072E                           685      ; Set X, Y, X2, and Y2
0000072E  7205                     686      MOVE.L  #5,   D1          ; X
00000730  243C 00000082            687      MOVE.L  #130,  D2          ; Y
00000736  7619                     688      MOVE.L  #25,   D3           
00000738  7878                     689      MOVE.L  #120,   D4     
0000073A                           690  
0000073A                           691      
0000073A  103C 0057                692      MOVE.B  #87,        D0          ; Draw 
0000073E  4E4F                     693      TRAP    #15                     ; Trap (Perform action)
00000740                           694  
00000740  4E75                     695      RTS
00000742                           696  
00000742                           697      ; Set Pixel Colors
Line 698 ERROR: Undefined symbol
00000742  223C 004DBD16            698      MOVE.L  #DIRT,     D1          ; Set Background color
00000748  103C 0050                699      MOVE.B  #80,        D0          ; Task for Background Color
0000074C  4E4F                     700      TRAP    #15                     ; Trap (Perform action)
0000074E                           701  
Line 702 ERROR: Undefined symbol
0000074E  223C 004DBD16            702      MOVE.L  #DIRT,     D1
00000754  103C 0051                703      MOVE.B  #81,        D0
00000758  4E4F                     704      TRAP    #15
0000075A                           705  
0000075A                           706      ; Set X, Y, X2, and Y2
0000075A  7200                     707      MOVE.L  #0,   D1          ; X
0000075C  243C 000000F1            708      MOVE.L  #241,  D2          ; Y
00000762  761E                     709      MOVE.L  #30,   D3           
00000764  7878                     710      MOVE.L  #120,   D4     
00000766                           711      
00000766  103C 0057                712      MOVE.B  #87,        D0          ; Draw 
0000076A  4E4F                     713      TRAP    #15                     ; Trap (Perform action)
0000076C                           714      
0000076C                           715       ; Set X, Y, X2, and Y2
0000076C  7200                     716      MOVE.L  #0,   D1          ; X
0000076E  243C 000000F1            717      MOVE.L  #241,  D2          ; Y
00000774  763C                     718      MOVE.L  #60,   D3           
00000776  283C 00000087            719      MOVE.L  #135,   D4 
0000077C                           720      
0000077C                           721      
0000077C  103C 0057                722      MOVE.B  #87,        D0          ; Draw
00000780  4E4F                     723      TRAP    #15                     ; Trap (Perform action)
00000782                           724  
00000782                           725       ; Set X, Y, X2, and Y2
00000782  7200                     726      MOVE.L  #0,   D1          ; X
00000784  243C 000000F1            727      MOVE.L  #241,  D2          ; Y
0000078A  7650                     728      MOVE.L  #80,   D3           
0000078C  283C 00000096            729      MOVE.L  #150,   D4 
00000792                           730      
00000792                           731      
00000792  103C 0057                732      MOVE.B  #87,        D0          ; Draw 
00000796  4E4F                     733      TRAP    #15                     ; Trap (Perform action)
00000798                           734  
00000798                           735       ; Set X, Y, X2, and Y2
00000798  7200                     736      MOVE.L  #0,   D1          ; X
0000079A  243C 000000F1            737      MOVE.L  #241,  D2          ; Y
000007A0  7664                     738      MOVE.L  #100,   D3           
000007A2  283C 000000C8            739      MOVE.L  #200,   D4 
000007A8                           740      
000007A8                           741      
000007A8  103C 0057                742      MOVE.B  #87,        D0          ; Draw 
000007AC  4E4F                     743      TRAP    #15                     ; Trap (Perform action)
000007AE                           744  
Line 745 ERROR: Undefined symbol
000007AE  223C 004DBD16            745      MOVE.L  #BLACK,     D1
000007B4  103C 0051                746      MOVE.B  #81,        D0
000007B8  4E4F                     747      TRAP    #15
Line 748 ERROR: Undefined symbol
000007BA  223C 004DBD16            748      MOVE.L  #BLACK,     D1
000007C0  103C 0050                749      MOVE.B  #80,        D0
000007C4  4E4F                     750      TRAP    #15
000007C6                           751  
000007C6                           752      ; Set X, Y, X2, and Y2
000007C6  7205                     753      MOVE.L  #5,   D1          ; X
000007C8  243C 00000082            754      MOVE.L  #130,  D2          ; Y
000007CE  7619                     755      MOVE.L  #25,   D3           
000007D0  7878                     756      MOVE.L  #120,   D4     
000007D2                           757  
000007D2                           758      
000007D2  103C 0057                759      MOVE.B  #87,        D0          ; Draw 
000007D6  4E4F                     760      TRAP    #15                     ; Trap (Perform action)
000007D8                           761  
000007D8  4E75                     762      RTS
000007DA                           763  
000007DA                           764  DRAW_ENTRANCE:
000007DA                           765      ; Set Pixel Colors
Line 766 ERROR: Undefined symbol
000007DA  223C 004DBD16            766      MOVE.L  #DIRT,     D1          ; Set Background color
000007E0  103C 0050                767      MOVE.B  #80,        D0          ; Task for Background Color
000007E4  4E4F                     768      TRAP    #15                     ; Trap (Perform action)
000007E6                           769  
Line 770 ERROR: Undefined symbol
000007E6  223C 004DBD16            770      MOVE.L  #DIRT,     D1
000007EC  103C 0051                771      MOVE.B  #81,        D0
000007F0  4E4F                     772      TRAP    #15
000007F2                           773  
000007F2                           774      ; Set X, Y, X2, and Y2
000007F2  7200                     775      MOVE.L  #0,   D1          ; X
000007F4  243C 000000F1            776      MOVE.L  #241,  D2          ; Y
000007FA  7605                     777      MOVE.L  #5,   D3           
000007FC  283C 000000B5            778      MOVE.L  #181,   D4     
00000802                           779      
00000802  103C 0057                780      MOVE.B  #87,        D0          ; Draw 
00000806  4E4F                     781      TRAP    #15                     ; Trap (Perform action)
00000808                           782  
00000808  4E75                     783      RTS
0000080A                           784  
0000080A                           785  DRAW_ENTRANCE_HOLE:
0000080A                           786      ; Set Pixel Colors
Line 787 ERROR: Undefined symbol
0000080A  223C 004DBD16            787      MOVE.L  #BLACK,     D1          ; Set Background color
00000810  103C 0050                788      MOVE.B  #80,        D0          ; Task for Background Color
00000814  4E4F                     789      TRAP    #15                     ; Trap (Perform action)
00000816                           790  
Line 791 ERROR: Undefined symbol
00000816  223C 004DBD16            791      MOVE.L  #BLACK,     D1
0000081C  103C 0051                792      MOVE.B  #81,        D0
00000820  4E4F                     793      TRAP    #15
00000822                           794  
00000822                           795      ; Set X, Y, X2, and Y2
00000822  7205                     796      MOVE.L  #5,   D1          ; X
00000824  243C 000000F1            797      MOVE.L  #241,  D2          ; Y
0000082A  7614                     798      MOVE.L  #20,   D3           
0000082C  283C 000000D3            799      MOVE.L  #211,   D4     
00000832                           800      
00000832  103C 0057                801      MOVE.B  #87,        D0          ; Draw 
00000836  4E4F                     802      TRAP    #15                     ; Trap (Perform action)
00000838  4E75                     803      RTS
0000083A                           804  
0000083A                           805  DRAW_BACKGROUND:
0000083A  4281                     806      CLR.L       D1
Line 807 ERROR: Undefined symbol
0000083C  223C 004DBD16            807      MOVE.L      #SKY,D1
00000842  103C 0051                808      MOVE.B      #81,D0
00000846  4E4F                     809      TRAP        #15
00000848                           810  
00000848  7200                     811      MOVE.L      #00, D1
0000084A  7400                     812      MOVE.L      #00, D2
0000084C  7059                     813      MOVE.L      #89, D0
0000084E  4E4F                     814      TRAP        #15
00000850                           815      
Line 816 ERROR: Undefined symbol
00000850  223C 004DBD16            816      MOVE.L     #BROWN,D1
00000856  243C 01110000            817      MOVE.L     #$01110000,D2
0000085C  103C 0015                818      MOVE.B     #21,D0
00000860  4E4F                     819      TRAP       #15
00000862                           820  
00000862  4E75                     821      RTS
00000864                           822  
00000864                           823  DRAW_TREES:
00000864                           824      
00000864  7204                     825      MOVE.L  #4,D1
00000866  705D                     826      MOVE.L  #93,D0
00000868  4E4F                     827      TRAP    #15
0000086A                           828      
0000086A                           829      ; Set Pixel Colors
Line 830 ERROR: Undefined symbol
0000086A  223C 004DBD16            830      MOVE.L  #TRUNKO,     D1          ; Set Background color
00000870  103C 0050                831      MOVE.B  #80,        D0          ; Task for Background Color
00000874  4E4F                     832      TRAP    #15                     ; Trap (Perform action)
00000876                           833  
Line 834 ERROR: Undefined symbol
00000876  223C 004DBD16            834      MOVE.L  #TRUNKO,     D1
0000087C  103C 0051                835      MOVE.B  #81,        D0
00000880  4E4F                     836      TRAP    #15
00000882                           837      
00000882  223C 00000140            838      MOVE.L  #320,D1
00000888  243C 000000F1            839      MOVE.L  #241,D2
0000088E  263C 00000154            840      MOVE.L  #340,D3
00000894  283C 00000089            841      MOVE.L  #137,D4
0000089A                           842      
0000089A  103C 0054                843      MOVE.B  #84,D0
0000089E  4E4F                     844      TRAP    #15
000008A0                           845      
000008A0  223C 00000170            846      MOVE.L  #368,D1
000008A6  2404                     847      MOVE.L  D4,D2
000008A8  103C 0055                848      MOVE.B  #85,D0
000008AC  4E4F                     849      TRAP    #15
000008AE                           850      
000008AE  223C 00000181            851      MOVE.L  #385,D1
000008B4  243C 000000F1            852      MOVE.L  #241,D2
000008BA  103C 0055                853      MOVE.B  #85,D0
000008BE  4E4F                     854      TRAP    #15
000008C0                           855      
000008C0  223C 00000140            856      MOVE.L  #320,D1
000008C6  243C 000000F1            857      MOVE.L  #241,D2
000008CC  103C 0055                858      MOVE.B  #85,D0
000008D0  4E4F                     859      TRAP    #15
000008D2                           860      
Line 861 ERROR: Undefined symbol
000008D2  223C 004DBD16            861      MOVE.L  #TRUNKI,     D1
000008D8  103C 0051                862      MOVE.B  #81,        D0
000008DC  4E4F                     863      TRAP    #15
000008DE                           864      
000008DE  223C 00000154            865      MOVE.L  #340,D1
000008E4  243C 000000A0            866      MOVE.L  #160,D2
000008EA  103C 0059                867      MOVE.B  #89,D0
000008EE  4E4F                     868      TRAP    #15
000008F0                           869     
000008F0  7201                     870      MOVE.L  #1,D1
000008F2  705D                     871      MOVE.L  #93,D0
000008F4  4E4F                     872      TRAP    #15
000008F6                           873  
000008F6                           874     ; Set Pixel Colors
Line 875 ERROR: Undefined symbol
000008F6  223C 004DBD16            875      MOVE.L  #GREEN1,     D1          ; Set Background color
000008FC  103C 0050                876      MOVE.B  #80,        D0          ; Task for Background Color
00000900  4E4F                     877      TRAP    #15                     ; Trap (Perform action)
00000902                           878  
Line 879 ERROR: Undefined symbol
00000902  223C 004DBD16            879      MOVE.L  #GREEN1,     D1
00000908  103C 0051                880      MOVE.B  #81,        D0
0000090C  4E4F                     881      TRAP    #15
0000090E                           882  
0000090E                           883  ; 88 for elipse
0000090E  223C 0000012F            884      MOVE.L  #303,D1
00000914  7421                     885      MOVE.L  #33,D2
00000916  263C 00000187            886      MOVE.L  #391,D3
0000091C  7876                     887      MOVE.L  #118,D4
0000091E  103C 0058                888      MOVE.B  #88,D0
00000922  4E4F                     889      TRAP    #15
00000924                           890     
00000924                           891        ; Set Pixel Colors
Line 892 ERROR: Undefined symbol
00000924  223C 004DBD16            892      MOVE.L  #GREEN2,     D1          ; Set Background color
0000092A  103C 0050                893      MOVE.B  #80,        D0          ; Task for Background Color
0000092E  4E4F                     894      TRAP    #15                     ; Trap (Perform action)
00000930                           895  
Line 896 ERROR: Undefined symbol
00000930  223C 004DBD16            896      MOVE.L  #GREEN2,     D1
00000936  103C 0051                897      MOVE.B  #81,        D0
0000093A  4E4F                     898      TRAP    #15
0000093C                           899  
0000093C                           900  ; 88 for elipse
0000093C  223C 00000152            901      MOVE.L  #338,D1
00000942  742A                     902      MOVE.L  #42,D2
00000944  263C 000001AB            903      MOVE.L  #427,D3
0000094A  283C 00000085            904      MOVE.L  #133,D4
00000950  103C 0058                905      MOVE.B  #88,D0
00000954  4E4F                     906      TRAP    #15
00000956                           907      
00000956                           908            ; Set Pixel Colors
Line 909 ERROR: Undefined symbol
00000956  223C 004DBD16            909      MOVE.L  #GREEN3,     D1          ; Set Background color
0000095C  103C 0050                910      MOVE.B  #80,        D0          ; Task for Background Color
00000960  4E4F                     911      TRAP    #15                     ; Trap (Perform action)
00000962                           912  
Line 913 ERROR: Undefined symbol
00000962  223C 004DBD16            913      MOVE.L  #GREEN3,     D1
00000968  103C 0051                914      MOVE.B  #81,        D0
0000096C  4E4F                     915      TRAP    #15
0000096E                           916  
0000096E                           917  ; 88 for elipse
0000096E  223C 0000011C            918      MOVE.L  #284,D1
00000974  7441                     919      MOVE.L  #65,D2
00000976  263C 00000170            920      MOVE.L  #368,D3
0000097C  283C 00000096            921      MOVE.L  #150,D4
00000982  103C 0058                922      MOVE.B  #88,D0
00000986  4E4F                     923      TRAP    #15
00000988                           924      
00000988                           925            ; Set Pixel Colors
Line 926 ERROR: Undefined symbol
00000988  223C 004DBD16            926      MOVE.L  #GREEN4,     D1          ; Set Background color
0000098E  103C 0050                927      MOVE.B  #80,        D0          ; Task for Background Color
00000992  4E4F                     928      TRAP    #15                     ; Trap (Perform action)
00000994                           929  
Line 930 ERROR: Undefined symbol
00000994  223C 004DBD16            930      MOVE.L  #GREEN4,     D1
0000099A  103C 0051                931      MOVE.B  #81,        D0
0000099E  4E4F                     932      TRAP    #15
000009A0                           933  
000009A0                           934  ; 88 for elipse
000009A0  223C 00000151            935      MOVE.L  #337,D1
000009A6  744A                     936      MOVE.L  #74,D2
000009A8  263C 000001AC            937      MOVE.L  #428,D3
000009AE  283C 0000009E            938      MOVE.L  #158,D4
000009B4  103C 0058                939      MOVE.B  #88,D0
000009B8  4E4F                     940      TRAP    #15
000009BA                           941      
000009BA                           942  
000009BA                           943      
000009BA                           944  
000009BA  4E75                     945      RTS
000009BC                           946  *-----------------------------------------------------------
000009BC                           947  * Subroutine    : Draw game info
000009BC                           948  * Description   : Draw info about the current battle e.g. your hp, hill hp, ant remaining, etc.
000009BC                           949  *-----------------------------------------------------------
000009BC                           950  DRAW_PLYR_DATA:
000009BC  B381                     951      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
000009BE  B582                     952      EOR.L    D2,D2
000009C0                           953  
Line 954 ERROR: Undefined symbol
000009C0  223C 004DBD16            954      MOVE.L  #BLACK,     D1
000009C6  103C 0015                955      MOVE.B  #21,        D0          ; Set Text Color
000009CA  4E4F                     956      TRAP    #15                     ; Trap (Perform action)
000009CC                           957  
Line 958 ERROR: Undefined symbol
000009CC  223C 004DBD16            958      MOVE.L  #SKY,       D1          ; Set Text Color
000009D2  7051                     959      MOVE.L  #81,        D0          ; Set Text Color
000009D4  4E4F                     960      TRAP    #15                     ; Trap (Perform action)
000009D6                           961      ; Player 
000009D6  103C 000B                962      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009DA  323C 0203                963      MOVE.W  #$0203,     D1          ; Col 02, Row 03
000009DE  4E4F                     964      TRAP    #15                     ; Trap (Perform action)
000009E0  43F9 00001D92            965      LEA     antsRem_MSG,      A1          ; Velocity Message
000009E6  303C 000D                966      MOVE    #13,        D0          ; No Line feed
000009EA  4E4F                     967      TRAP    #15                     ; Trap (Perform action)
000009EC                           968      
000009EC                           969      ; Player Velocity
000009EC  103C 000B                970      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009F0  323C 1303                971      MOVE.W  #$1303,     D1          ; Col 05, Row 03
000009F4  4E4F                     972      TRAP    #15                     ; Trap (Perform action)
000009F6  103C 0003                973      MOVE.B  #03,        D0          ; Display number at D1.L
000009FA  B381                     974      EOR.L   D1,D1
000009FC  1239 00001E15            975      MOVE.B  antsRemaining,D1        ; Move X to D1.L
00000A02  4E4F                     976      TRAP    #15                     ; Trap (Perform action)
00000A04                           977  
00000A04                           978      ; Player On Ground Message
00000A04  103C 000B                979      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A08  323C 0204                980      MOVE.W  #$0204,     D1          ; Col 10, Row 03
00000A0C  4E4F                     981      TRAP    #15                     ; Trap (Perform action)
00000A0E  43F9 00001C9E            982      LEA     ENEMIESDEAD_MSG,    A1          ; On Ground Message
00000A14  303C 000D                983      MOVE    #13,        D0          ; No Line feed
00000A18  4E4F                     984      TRAP    #15                     ; Trap (Perform action)
00000A1A                           985      
00000A1A                           986      ; Player On Ground
00000A1A  103C 000B                987      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A1E  323C 1504                988      MOVE.W  #$1504,     D1          ; Col 06, Row 04
00000A22  4E4F                     989      TRAP    #15                     ; Trap (Perform action)
00000A24  103C 0003                990      MOVE.B  #03,        D0          ; Display number at D1.L
00000A28  4281                     991      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A2A  1239 00001E3A            992      MOVE.B  ENEMIES_DEFEATED,     D1          ; Move Play on Ground ? to D1.L
00000A30  4E4F                     993      TRAP    #15                     ; Trap (Perform action)
00000A32                           994      
00000A32                           995      ; number of enemies in wave msg
00000A32  103C 000B                996      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A36  323C 0205                997      MOVE.W  #$0205,     D1          ; Col 10, Row 03
00000A3A  4E4F                     998      TRAP    #15                     ; Trap (Perform action)
00000A3C  43F9 00001CB0            999      LEA     ENEMYCOUNT_MSG,    A1          ; On Ground Message
00000A42  303C 000D               1000      MOVE    #13,        D0          ; No Line feed
00000A46  4E4F                    1001      TRAP    #15                     ; Trap (Perform action)
00000A48                          1002      
00000A48                          1003      ; number of enemies in wave 
00000A48  103C 000B               1004      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A4C  323C 1705               1005      MOVE.W  #$1705,     D1          ; Col 06, Row 04
00000A50  4E4F                    1006      TRAP    #15                     ; Trap (Perform action)
00000A52  4281                    1007      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A54  1239 00001E3C           1008      MOVE.B  enemiesToDefeat,     D1          ; Move Play on Ground ? to D1.L
00000A5A  103C 0003               1009      MOVE.B  #03,        D0          ; Display number at D1.L
00000A5E  4E4F                    1010      TRAP    #15                     ; Trap (Perform action)
00000A60                          1011  
00000A60                          1012      ; Show Keys Pressed
00000A60  103C 000B               1013      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A64  323C 2001               1014      MOVE.W  #$2001,     D1          ; Col 20, Row 1
00000A68  4E4F                    1015      TRAP    #15                     ; Trap (Perform action)
00000A6A  43F9 00001C5F           1016      LEA     KEYCODE_MSG, A1         ; Keycode
00000A70  303C 000D               1017      MOVE    #13,        D0          ; No Line feed
00000A74  4E4F                    1018      TRAP    #15                     ; Trap (Perform action)
00000A76                          1019  
00000A76                          1020      ; Show KeyCode
00000A76  103C 000B               1021      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A7A  323C 3001               1022      MOVE.W  #$3001,     D1          ; Col 30, Row 1
00000A7E  4E4F                    1023      TRAP    #15                     ; Trap (Perform action)    
00000A80  2239 00001DD0           1024      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
00000A86  103C 0003               1025      MOVE.B  #03,        D0          ; Display the contents of D1
00000A8A  4E4F                    1026      TRAP    #15                     ; Trap (Perform action)
00000A8C                          1027  
00000A8C                          1028      
00000A8C                          1029      ; Show antHealth msg
00000A8C  103C 000B               1030      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A90  323C 0202               1031      MOVE.W  #$0202,     D1          ; Col 02, Row 06
00000A94  4E4F                    1032      TRAP    #15                     ; Trap (Perform action)
00000A96  43F9 00001D88           1033      LEA     antHealth_MSG,   A1          ; Draw
00000A9C  303C 000D               1034      MOVE    #13,        D0          ; No Line feed
00000AA0  4E4F                    1035      TRAP    #15                     ; Trap (Perform action)  
00000AA2                          1036      
00000AA2                          1037      ; Show antHealth msg
00000AA2  103C 000B               1038      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000AA6  323C 0A02               1039      MOVE.W  #$0A02,     D1          ; Col 30, Row 1
00000AAA  4E4F                    1040      TRAP    #15                     ; Trap (Perform action)   
00000AAC  B381                    1041      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000AAE  1239 00001E14           1042      MOVE.B  antHealth,      D1          ; Move Key Pressed to D1
00000AB4  103C 0003               1043      MOVE.B  #03,        D0          ; Display the contents of D1
00000AB8  4E4F                    1044      TRAP    #15                     ; Trap (Perform action)
00000ABA                          1045  
00000ABA  4E75                    1046      RTS
00000ABC                          1047  *-----------------------------------------------------------
00000ABC                          1048  * Subroutine    : Player is on Ground
00000ABC                          1049  * Description   : Check if the Player is on or off Ground
00000ABC                          1050  *-----------------------------------------------------------
00000ABC                          1051  IS_PLAYER_ON_GND:
00000ABC                          1052      ; Check if Player is on Ground
00000ABC  4281                    1053      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000ABE  4282                    1054      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
00000AC0  3239 00001DCE           1055      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
00000AC6  82FC 0002               1056      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000ACA  2439 00001DDA           1057      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
00000AD0  B441                    1058      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
00000AD2  6C00 0008               1059      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
00000AD6  6D00 002C               1060      BLT     SET_OFF_GROUND          ; The Player is off the Ground
00000ADA  4E75                    1061      RTS                             ; Return to subroutine
00000ADC                          1062  
00000ADC                          1063  
00000ADC                          1064  *-----------------------------------------------------------
00000ADC                          1065  * Subroutine    : On Ground
00000ADC                          1066  * Description   : Set the Player On Ground
00000ADC                          1067  *-----------------------------------------------------------
00000ADC                          1068  SET_ON_GROUND:
00000ADC  4281                    1069      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000ADE  3239 00001DCE           1070      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000AE4  82FC 0002               1071      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000AE8  23C1 00001DDA           1072      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00000AEE  4281                    1073      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000AF0  7200                    1074      MOVE.L  #00,        D1          ; Player Velocity
00000AF2  23C1 00001DE2           1075      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
00000AF8  23FC 00000001 00001DEA  1076      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
00000B02  4E75                    1077      RTS
00000B04                          1078  
00000B04                          1079  *-----------------------------------------------------------
00000B04                          1080  * Subroutine    : Off Ground
00000B04                          1081  * Description   : Set the Player Off Ground
00000B04                          1082  *-----------------------------------------------------------
00000B04                          1083  SET_OFF_GROUND:
00000B04  23FC 00000000 00001DEA  1084      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00000B0E  4E75                    1085      RTS                             ; Return to subroutine
00000B10                          1086  *-----------------------------------------------------------
00000B10                          1087  * Subroutine    : Jump
00000B10                          1088  * Description   : Perform a Jump
00000B10                          1089  *-----------------------------------------------------------
00000B10                          1090  JUMP:
Line 1091 ERROR: Undefined symbol
00000B10  4A39 004DBD16           1091      TST.B  isPaused
00000B16                          1092      IF <NE> THEN
00000B1A  4E75                    1093          RTS
00000B1C                          1094      ENDI
00000B1C  0CB9 00000001 00001DEA  1095      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000B26  6700 0006               1096      BEQ     PERFORM_JUMP            ; Do Jump
00000B2A  6000 0012               1097      BRA     JUMP_DONE               ;
00000B2E                          1098  PERFORM_JUMP:
00000B2E  6100 0066               1099      BSR     PLAY_JUMP               ; Play jump sound
00000B32  23FC FFFFFFED 00001DE2  1100      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00000B3C  4E75                    1101      RTS                             ; Return to subroutine
00000B3E                          1102  JUMP_DONE:
00000B3E  4E75                    1103      RTS                             ; Return to subroutine
00000B40                          1104  
00000B40                          1105  *-----------------------------------------------------------
00000B40                          1106  * Subroutine    : Throw
00000B40                          1107  * Description   : Perform a Throw
00000B40                          1108  *-----------------------------------------------------------
00000B40                          1109  THROW_ARC:
00000B40  0CB9 00000001 00001DEA  1110      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000B4A  6700 0006               1111      BEQ     PERFORM_THROW_ARC    ; Do Jump
00000B4E  6000 000E               1112      BRA     ARC_DONE               ;
00000B52                          1113  PERFORM_THROW_ARC:
00000B52                          1114      ;BSR     PLAY_JUMP               ; Play jump sound
00000B52  23FC FFFFFFF0 00001E32  1115      MOVE.L  #THRW_JUMP_V,THROW_VELOCITY ; Set the players velocity to true
00000B5C  4E75                    1116      RTS                             ; Return to subroutine
00000B5E                          1117  ARC_DONE:
00000B5E  4E75                    1118      RTS                             ; Return to subroutine
00000B60                          1119  
00000B60                          1120  *-----------------------------------------------------------
00000B60                          1121  * Subroutine    : Idle
00000B60                          1122  * Description   : Perform a Idle
00000B60                          1123  *----------------------------------------------------------- 
00000B60                          1124  IDLE:
00000B60  4E75                    1125      RTS                             ; Return to subroutine
00000B62                          1126  
00000B62                          1127  *-----------------------------------------------------------
00000B62                          1128  * Subroutines   : Sound Load and Play
00000B62                          1129  * Description   : Initialise game sounds into memory 
00000B62                          1130  * Current Sounds are RUN, JUMP and Opps for Collision
00000B62                          1131  *-----------------------------------------------------------
00000B62                          1132  GAMEOVER_LOAD:
00000B62  43F9 00001E53           1133      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00000B68  323C 0000               1134      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00000B6C  303C 004A               1135      MOVE    #74,        D0          ; Load into memory
00000B70  4E4F                    1136      TRAP    #15                     ; Trap (Perform action)
00000B72  4E75                    1137      RTS                             ; Return to subroutine
00000B74                          1138  
00000B74                          1139  PLAY_GAMEOVER:
00000B74  6100 00E8               1140      bsr STOP_SONG
00000B78  323C 0000               1141      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00000B7C  303C 004B               1142      MOVE    #75,        D0          ; Play Sound
00000B80  4E4F                    1143      TRAP    #15                     ; Trap (Perform action)
00000B82  4E75                    1144      RTS                             ; Return to subroutine
00000B84                          1145  
00000B84                          1146  JUMP_LOAD:
00000B84  43F9 00001E4A           1147      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
00000B8A  323C 0001               1148      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
00000B8E  303C 004A               1149      MOVE    #74,        D0          ; Load into memory
00000B92  4E4F                    1150      TRAP    #15                     ; Trap (Perform action)
00000B94  4E75                    1151      RTS                             ; Return to subroutine
00000B96                          1152  
00000B96                          1153  PLAY_JUMP:
00000B96  323C 0001               1154      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
00000B9A  303C 004B               1155      MOVE    #75,        D0          ; Play Sound
00000B9E  4E4F                    1156      TRAP    #15                     ; Trap (Perform action)
00000BA0  4E75                    1157      RTS                             ; Return to subroutine
00000BA2                          1158  
00000BA2                          1159  HITHURT_LOAD:
00000BA2  43F9 00001E60           1160      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
00000BA8  323C 0002               1161      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
00000BAC  303C 004A               1162      MOVE    #74,        D0          ; Load into memory
00000BB0  4E4F                    1163      TRAP    #15                     ; Trap (Perform action)
00000BB2  4E75                    1164      RTS                             ; Return to subroutine
00000BB4                          1165  
00000BB4                          1166  PLAY_HITHURT:
00000BB4  323C 0002               1167      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
00000BB8  303C 004B               1168      MOVE    #75,        D0          ; Play Sound
00000BBC  4E4F                    1169      TRAP    #15                     ; Trap (Perform action)
00000BBE  4E75                    1170      RTS                             ; Return to subroutine
00000BC0                          1171  
00000BC0                          1172  POWERUP_LOAD:
00000BC0  43F9 00001E74           1173      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
00000BC6  323C 0003               1174      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
00000BCA  303C 004A               1175      MOVE    #74,        D0          ; Load into memory
00000BCE  4E4F                    1176      TRAP    #15                     ; Trap (Perform action)
00000BD0  4E75                    1177      RTS                             ; Return to subroutine
00000BD2                          1178  
00000BD2                          1179  PLAY_POWERUP:
00000BD2  323C 0003               1180      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
00000BD6  303C 004B               1181      MOVE    #75,        D0          ; Play Sound
00000BDA  4E4F                    1182      TRAP    #15                     ; Trap (Perform action)
00000BDC  4E75                    1183      RTS                             ; Return to subroutine
00000BDE                          1184  
00000BDE                          1185  LVLCHANGE_LOAD:
00000BDE  43F9 00001E80           1186      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
00000BE4  323C 0004               1187      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
00000BE8  303C 004A               1188      MOVE    #74,        D0          ; Load into memory
00000BEC  4E4F                    1189      TRAP    #15                     ; Trap (Perform action)
00000BEE  4E75                    1190      RTS                             ; Return to subroutine
00000BF0                          1191  
00000BF0                          1192  PLAY_LVLCHANGE:
00000BF0  323C 0004               1193      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00000BF4  303C 004B               1194      MOVE    #75,        D0          ; Play Sound
00000BF8  4E4F                    1195      TRAP    #15                     ; Trap (Perform action)
00000BFA  4E75                    1196      RTS                             ; Return to subroutine
00000BFC                          1197  
00000BFC                          1198  HIT_LOAD:
00000BFC  43F9 00001E6C           1199      LEA     HIT_WAV,   A1          ; Load Wav File into A1
00000C02  323C 0005               1200      MOVE    #HIT_INDEX,D1          ; Assign it INDEX
00000C06  303C 004A               1201      MOVE    #74,        D0          ; Load into memory
00000C0A  4E4F                    1202      TRAP    #15                     ; Trap (Perform action)
00000C0C  4E75                    1203      RTS                             ; Return to subroutine
00000C0E                          1204  
00000C0E                          1205  PLAY_HIT:
00000C0E  323C 0005               1206      MOVE    #HIT_INDEX,D1          ; Load Sound INDEX
00000C12  303C 004B               1207      MOVE    #75,        D0          ; Play Sound
00000C16  4E4F                    1208      TRAP    #15                     ; Trap (Perform action)
00000C18  4E75                    1209      RTS                             ; Return to subroutine
00000C1A                          1210  
00000C1A                          1211  MAP_SONG_LOAD:
00000C1A  43F9 00001EA4           1212      LEA     MAP_SONG_WAV,   A1          ; Load Wav File into A1
00000C20  323C 0006               1213      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C24  303C 004A               1214      MOVE    #74,        D0          ; Load into memory
00000C28  4E4F                    1215      TRAP    #15                     ; Trap (Perform action)
00000C2A  4E75                    1216      RTS                             ; Return to subroutine
00000C2C                          1217  
00000C2C                          1218  BATTLE_SONG_LOAD:
00000C2C  43F9 00001E90           1219      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000C32  323C 0006               1220      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C36  303C 004A               1221      MOVE    #74,        D0          ; Load into memory
00000C3A  4E4F                    1222      TRAP    #15                     ; Trap (Perform action)
00000C3C  4E75                    1223      RTS                             ; Return to subroutine
00000C3E                          1224  
00000C3E                          1225  MENU_SONG_LOAD:
00000C3E  43F9 00001EB5           1226      LEA     MENU_SONG_WAV,   A1          ; Load Wav File into A1
00000C44  323C 0006               1227      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C48  303C 004A               1228      MOVE    #74,        D0          ; Load into memory
00000C4C  4E4F                    1229      TRAP    #15                     ; Trap (Perform action)
00000C4E  4E75                    1230      RTS                             ; Return to subroutine
00000C50                          1231  
00000C50                          1232  ; special function to play song in song index
00000C50                          1233  PLAY_SONG:
00000C50  323C 0006               1234      MOVE    #SONG_INDEX,D1          ; Load Sound INDEX
00000C54  7401                    1235      move.l #1, d2
00000C56  303C 004D               1236      MOVE    #77,        D0          ; Play Sound
00000C5A  4E4F                    1237      TRAP    #15                     ; Trap (Perform action)
00000C5C  4E75                    1238      RTS                             ; Return to subroutine
00000C5E                          1239  
00000C5E                          1240  ; stop song playing
00000C5E                          1241  STOP_SONG:
00000C5E  323C 0006               1242      move #SONG_INDEX,d1
00000C62  7402                    1243      move.l #2, d2
00000C64  303C 004D               1244      move #77, d0
00000C68  4E4F                    1245      trap #15
00000C6A  4E75                    1246      rts
00000C6C                          1247  
00000C6C                          1248  *-----------------------------------------------------------
00000C6C                          1249  * Subroutine    : Draw Player
00000C6C                          1250  * Description   : Draw Player Ant
00000C6C                          1251  *-----------------------------------------------------------
00000C6C                          1252      include "battle/playerAnt.X68"
00000C6C                          1253  
00000C6C  =0000001B               1254  PLYR_W_INIT EQU         27          ; Players initial Width
00000C6C  =0000000D               1255  PLYR_H_INIT EQU         13          ; Players initial Height
00000C6C                          1256  
00000C6C  =00000000               1257  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00000C6C  =FFFFFFED               1258  PLYR_JUMP_V EQU         -19          ; Player Jump Velocity
00000C6C  =00000001               1259  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00000C6C                          1260  
00000C6C                          1261  INIT_PLAYER:
00000C6C                          1262  
00000C6C                          1263      ; Place the Player at the center of the screen
00000C6C  B381                    1264      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
00000C6E  3239 00001DCC           1265      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000C74  82FC 0002               1266      DIVU    #02,        D1          ; divide by 2 for center on X Axis
00000C78  23C1 00001DD6           1267      MOVE.L  D1,         PLAYER_X    ; Players X Position
00000C7E                          1268  
00000C7E  B381                    1269      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000C80  3239 00001DCE           1270      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000C86  82FC 0002               1271      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000C8A  23C1 00001DDA           1272      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000C90                          1273  
00000C90                          1274          ; Set the player starting width and height
00000C90  13FC 001B 00001E3F      1275      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
00000C98  13FC 000D 00001E40      1276      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
00000CA0                          1277  
00000CA0  B381                    1278      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CA2  3239 00001DCE           1279      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000CA8  82FC 0002               1280      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000CAC  23C1 00001DDA           1281      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000CB2                          1282  
00000CB2                          1283      ; Initialise Player Velocity
00000CB2  B381                    1284      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CB4  123C 0000               1285      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
00000CB8  23C1 00001DE2           1286      MOVE.L  D1,         PLYR_VELOCITY
00000CBE                          1287  
00000CBE                          1288      ; Initialise Player Gravity
00000CBE  B381                    1289      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CC0  7201                    1290      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
00000CC2  23C1 00001DE6           1291      MOVE.L  D1,         PLYR_GRAVITY
00000CC8                          1292  
00000CC8                          1293          ; Initialize Player on Ground
00000CC8  23FC 00000001 00001DEA  1294      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
00000CD2                          1295      
00000CD2                          1296  
00000CD2                          1297  UPDATE_PLAYER:
00000CD2                          1298      ; Update the Players Positon based on Velocity and Gravity
00000CD2  4281                    1299      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000CD4  2239 00001DE2           1300      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00000CDA  2439 00001DE6           1301      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
00000CE0  D282                    1302      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000CE2  23C1 00001DE2           1303      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00000CE8  D2B9 00001DDA           1304      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
00000CEE  23C1 00001DDA           1305      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
00000CF4  23C1 00001E20           1306      MOVE.L  D1,         ATTACK_Y 
00000CFA                          1307  
00000CFA  4E75                    1308      RTS
00000CFC                          1309  
00000CFC                          1310  ; Move Player to the left
00000CFC                          1311  MOVE_PLAYER_LEFT:
Line 1312 ERROR: Undefined symbol
00000CFC  4A39 004DBD16           1312      TST.B  isPaused
00000D02                          1313      IF <NE> THEN
00000D06  4E75                    1314          RTS
00000D08                          1315      ENDI
00000D08                          1316  
00000D08  13FC 0001 00001DEE      1317      MOVE.B  #LOOKLEFT,        PLAYER_DIR
00000D10  2239 00001DD6           1318      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000D16  5581                    1319      SUB.L   #02,        D1          ; Move Player Left
00000D18  23C1 00001DD6           1320      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000D1E  55B9 00001E1C           1321      SUB.L   #02,        ATTACK_X
00000D24  4E75                    1322      RTS                             ; Return to subroutine    
00000D26                          1323  
00000D26                          1324  ; Move Player to the right
00000D26                          1325  MOVE_PLAYER_RIGHT:
Line 1326 ERROR: Undefined symbol
00000D26  4A39 004DBD16           1326      TST.B  isPaused
00000D2C                          1327      IF <NE> THEN
00000D30  4E75                    1328          RTS
00000D32                          1329      ENDI
00000D32  13FC 0002 00001DEE      1330      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
00000D3A  2239 00001DD6           1331      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000D40  5481                    1332      ADD.L   #02,        D1          ; Move Player Right
00000D42  23C1 00001DD6           1333      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000D48  54B9 00001E1C           1334      ADD.L   #02,        ATTACK_X
00000D4E  4E75                    1335      RTS                             ; Return to subroutine
00000D50                          1336  
00000D50                          1337  ; draw all player relevant data
00000D50                          1338  DRAW_PLAYER:
00000D50                          1339      ; Set Pixel Colors
Line 1340 ERROR: Undefined symbol
00000D50  223C 004DBD16           1340      MOVE.L  #BLACK,     D1          ; Set Background color
00000D56  103C 0050               1341      MOVE.B  #80,        D0          ; Task for Background Color
00000D5A  4E4F                    1342      TRAP    #15                     ; Trap (Perform action)
00000D5C                          1343      ; Reset Pixel Colors
Line 1344 ERROR: Undefined symbol
00000D5C  223C 004DBD16           1344      MOVE.L  #BLACK,     D1          ; Set Background color
00000D62  103C 0051               1345      MOVE.B  #81,        D0          ; Task for Background Color
00000D66  4E4F                    1346      TRAP    #15                     ; Trap (Perform action)
00000D68                          1347  
00000D68  2239 00001DD6           1348      MOVE.L  PLAYER_X,   D1          ; X
00000D6E  2439 00001DDA           1349      MOVE.L  PLAYER_Y,   D2
00000D74  5982                    1350      SUBQ.L  #4,D2
00000D76                          1351  
00000D76  2639 00001DD6           1352      MOVE.L  PLAYER_X,   D3
00000D7C  B984                    1353      EOR.L   D4,D4
00000D7E  1839 00001E3F           1354      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000D84  D684                    1355      ADD.L   D4,D3
00000D86  2839 00001DDA           1356      MOVE.L  PLAYER_Y,   D4
00000D8C  9839 00001E40           1357      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00000D92                          1358      
00000D92                          1359       ; Draw Player
00000D92  103C 0057               1360      MOVE.B  #87,        D0          ; Draw Player
00000D96  4E4F                    1361      TRAP    #15                     ; Trap (Perform action)
00000D98                          1362  
00000D98  2239 00001DD6           1363      MOVE.L  PLAYER_X,   D1          ; X
00000D9E  2439 00001DDA           1364      MOVE.L  PLAYER_Y,   D2
00000DA4  5982                    1365      SUBQ.L  #4,D2
00000DA6  2639 00001DD6           1366      MOVE.L  PLAYER_X,   D3
00000DAC  B984                    1367      EOR.L   D4,D4
00000DAE  1839 00001E3F           1368      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000DB4  0404 000C               1369      SUBI.B   #12,D4
00000DB8  D684                    1370      ADD.L   D4,D3
00000DBA  2839 00001DDA           1371      MOVE.L  PLAYER_Y,   D4
00000DC0  9839 00001E40           1372      SUB.B   PLAYER_HEIGHT,   D4      ; Height
00000DC6  5704                    1373      SUB.B   #3,D4
00000DC8                          1374      
00000DC8                          1375      ; Draw Player
00000DC8  103C 0057               1376      MOVE.B  #87,        D0          ; Draw Player
00000DCC  4E4F                    1377      TRAP    #15                     ; Trap (Perform action)
00000DCE                          1378  
00000DCE                          1379      ; change thickness
00000DCE  7203                    1380      MOVE.l  #3,D1
00000DD0  103C 005D               1381      MOVE.B  #93,D0
00000DD4  4E4F                    1382      TRAP    #15
00000DD6                          1383  
00000DD6  2239 00001DD6           1384      MOVE.L  PLAYER_X,D1
00000DDC  0681 00000016           1385      ADD.L   #22,D1
00000DE2  2439 00001DDA           1386      MOVE.L  PLAYER_Y,D2
00000DE8  0482 0000000D           1387      SUB.L   #PLYR_H_INIT,D2
00000DEE  2601                    1388      MOVE.L  D1,D3
00000DF0  0683 0000000A           1389      ADD.L   #10,D3
00000DF6  2802                    1390      MOVE.L  D2,D4
00000DF8  5F84                    1391      SUBI.L  #7,D4
00000DFA                          1392  
00000DFA  103C 0054               1393      MOVE.B  #84,D0
00000DFE  4E4F                    1394      TRAP    #15
00000E00                          1395  
00000E00  2239 00001DD6           1396      MOVE.L  PLAYER_X,D1
00000E06  2439 00001DDA           1397      MOVE.L  PLAYER_Y,D2
00000E0C  2601                    1398      MOVE.L  D1,D3
00000E0E  5883                    1399      ADD.L   #4,D3
00000E10  2802                    1400      MOVE.L  D2,D4
00000E12  5984                    1401      SUBI.L  #4,D4
00000E14                          1402  
00000E14  103C 0054               1403      MOVE.B  #84,D0
00000E18  4E4F                    1404      TRAP    #15
00000E1A                          1405  
00000E1A  2239 00001DD6           1406      MOVE.L  PLAYER_X,D1
00000E20  0681 0000000D           1407      ADD.L   #13,D1
00000E26  2439 00001DDA           1408      MOVE.L  PLAYER_Y,D2
00000E2C  2601                    1409      MOVE.L  D1,D3
00000E2E  2802                    1410      MOVE.L  D2,D4
00000E30  5984                    1411      SUBI.L  #4,D4
00000E32                          1412  
00000E32  103C 0054               1413      MOVE.B  #84,D0
00000E36  4E4F                    1414      TRAP    #15
00000E38                          1415  
00000E38  2239 00001DD6           1416      MOVE.L  PLAYER_X,D1
00000E3E  0681 00000016           1417      ADD.L   #22,D1
00000E44  2839 00001DDA           1418      MOVE.L  PLAYER_Y,D4
00000E4A  2601                    1419      MOVE.L  D1,D3
00000E4C  5683                    1420      ADD.L   #3,D3
00000E4E  2404                    1421      MOVE.L  D4,D2
00000E50  5982                    1422      SUBI.L  #4,D2
00000E52                          1423  
00000E52  103C 0054               1424      MOVE.B  #84,D0
00000E56  4E4F                    1425      TRAP    #15
00000E58                          1426  
00000E58                          1427      ; Set Pixel Colors
Line 1428 ERROR: Undefined symbol
00000E58  223C 004DBD16           1428      MOVE.L  #WHITE,     D1          ; Set Background color
00000E5E  103C 0050               1429      MOVE.B  #80,        D0          ; Task for Background Color
00000E62  4E4F                    1430      TRAP    #15                     ; Trap (Perform action)
00000E64                          1431  
00000E64  2239 00001DD6           1432      MOVE.L  PLAYER_X,D1
00000E6A  0681 00000016           1433      ADD.L   #22,D1
00000E70  2439 00001DDA           1434      MOVE.L  PLAYER_Y,D2
00000E76  0482 0000000A           1435      SUB.L   #10,D2
00000E7C  2601                    1436      MOVE.L  D1,D3
00000E7E  2802                    1437      MOVE.L  D2,D4
00000E80                          1438  
00000E80  103C 0054               1439      MOVE.B  #84,D0
00000E84  4E4F                    1440      TRAP    #15
00000E86                          1441  
00000E86  7201                    1442      MOVE.l  #1,D1
00000E88  103C 005D               1443      MOVE.B  #93,D0
00000E8C  4E4F                    1444      TRAP    #15
00000E8E                          1445      
00000E8E  6100 0008               1446      BSR     IS_ATTACKING
00000E92  6100 0054               1447      BSR     IS_THROWING
00000E96                          1448  
00000E96  4E75                    1449      RTS                             ; Return to subroutine
00000E98                          1450  
00000E98                          1451  IS_ATTACKING:
00000E98  4A39 00001E17           1452      TST.B   CURRENTLYATTACKING
00000E9E  6600 0004               1453      BNE     DRAW_ATTACK
00000EA2  4E75                    1454      RTS
00000EA4                          1455  DRAW_ATTACK:
00000EA4                          1456  
00000EA4                          1457      ; Set Pixel Colors
Line 1458 ERROR: Undefined symbol
00000EA4  223C 004DBD16           1458      MOVE.L  #WHITE,     D1          ; Set Background color
00000EAA  103C 0050               1459      MOVE.B  #80,        D0          ; Task for Background Color
00000EAE  4E4F                    1460      TRAP    #15                     ; Trap (Perform action)
00000EB0                          1461      ; Reset Pixel Colors
Line 1462 ERROR: Undefined symbol
00000EB0  223C 004DBD16           1462      MOVE.L  #WHITE,     D1          ; Set Background color
00000EB6  103C 0051               1463      MOVE.B  #81,        D0          ; Task for Background Color
00000EBA  4E4F                    1464      TRAP    #15                     ; Trap (Perform action)
00000EBC                          1465  
00000EBC  2239 00001E1C           1466      MOVE.L  ATTACK_X,   D1          ; X
00000EC2  2439 00001E20           1467      MOVE.L  ATTACK_Y,   D2
00000EC8                          1468      
00000EC8  2639 00001E1C           1469      MOVE.L  ATTACK_X,   D3
00000ECE  0683 00000023           1470      ADD.L   #ATTACK_WIDTH,   D3      ; Width
00000ED4  2839 00001E20           1471      MOVE.L  ATTACK_Y,   D4 
00000EDA  0484 00000014           1472      SUB.L   #ATTACK_HEIGHT,   D4      ; Height          ; Y
00000EE0                          1473      
00000EE0                          1474      ; Draw Player
00000EE0  103C 0057               1475      MOVE.B  #87,        D0          ; Draw Player
00000EE4  4E4F                    1476      TRAP    #15                     ; Trap (Perform action)
00000EE6  4E75                    1477      RTS                             ; Return to subroutine
00000EE8                          1478  
00000EE8                          1479  IS_THROWING:
00000EE8  4A39 00001E24           1480      TST.B   CURRENTLYTHROWING
00000EEE  6600 0004               1481      BNE     DRAW_THROW
00000EF2  4E75                    1482      RTS
00000EF4                          1483  DRAW_THROW:
00000EF4                          1484  
00000EF4                          1485      ; Set Pixel Colors
Line 1486 ERROR: Undefined symbol
00000EF4  223C 004DBD16           1486      MOVE.L  #ACORN,     D1          ; Set Background color
00000EFA  103C 0050               1487      MOVE.B  #80,        D0          ; Task for Background Color
00000EFE  4E4F                    1488      TRAP    #15                     ; Trap (Perform action)
00000F00                          1489      ; Reset Pixel Colors
Line 1490 ERROR: Undefined symbol
00000F00  223C 004DBD16           1490      MOVE.L  #ACORN,     D1          ; Set Background color
00000F06  103C 0051               1491      MOVE.B  #81,        D0          ; Task for Background Color
00000F0A  4E4F                    1492      TRAP    #15                     ; Trap (Perform action)
00000F0C                          1493  
00000F0C  2239 00001E2A           1494      MOVE.L  THROW_X,   D1          ; X
00000F12  2439 00001E2E           1495      MOVE.L  THROW_Y,   D2
00000F18                          1496      
00000F18  2639 00001E2A           1497      MOVE.L  THROW_X,   D3
00000F1E  0683 0000000F           1498      ADD.L   #THRW_W_INIT,   D3      ; Width
00000F24  2839 00001E2E           1499      MOVE.L  THROW_Y,   D4 
00000F2A  0484 0000000F           1500      SUB.L   #THRW_H_INIT,   D4      ; Height          ; Y
00000F30                          1501      
00000F30                          1502      ; Draw Acorn
00000F30  103C 0057               1503      MOVE.B  #87,        D0          ; Draw Player
00000F34  4E4F                    1504      TRAP    #15                     ; Trap (Perform action)
00000F36                          1505      
00000F36                          1506      ; Set Pixel Colors
Line 1507 ERROR: Undefined symbol
00000F36  223C 004DBD16           1507      MOVE.L  #ACORNHAT,     D1          ; Set Background color
00000F3C  103C 0050               1508      MOVE.B  #80,        D0          ; Task for Background Color
00000F40  4E4F                    1509      TRAP    #15                     ; Trap (Perform action)
00000F42                          1510      ; Reset Pixel Colors
Line 1511 ERROR: Undefined symbol
00000F42  223C 004DBD16           1511      MOVE.L  #ACORNHAT,     D1          ; Set Background color
00000F48  103C 0051               1512      MOVE.B  #81,        D0          ; Task for Background Color
00000F4C  4E4F                    1513      TRAP    #15                     ; Trap (Perform action)
00000F4E                          1514  
00000F4E  2239 00001E2A           1515      MOVE.L  THROW_X,D1
00000F54  5581                    1516      SUB.L   #2,D1
00000F56  5483                    1517      ADD.l   #2,D3
00000F58  5284                    1518      ADD.L   #1,D4
00000F5A  2404                    1519      MOVE.L  D4,D2
00000F5C  5D82                    1520      SUB.L   #6,D2
00000F5E                          1521  
00000F5E                          1522      ; Draw Acorn
00000F5E  103C 0057               1523      MOVE.B  #87,        D0          ; Draw Player
00000F62  4E4F                    1524      TRAP    #15                     ; Trap (Perform action)
00000F64                          1525  
00000F64  2239 00001E2A           1526      MOVE.L  THROW_X,D1
00000F6A  5C81                    1527      ADD.L   #6,D1
00000F6C  2802                    1528      MOVE.L  D2,D4
00000F6E  5B82                    1529      SUB.l   #5,D2
00000F70  2601                    1530      MOVE.L  D1,D3
00000F72  5883                    1531      ADD.L   #4,D3
00000F74                          1532  
00000F74                          1533      ; Draw Acorn
00000F74  103C 0057               1534      MOVE.B  #87,        D0          ; Draw Player
00000F78  4E4F                    1535      TRAP    #15                     ; Trap (Perform action)
00000F7A                          1536  
00000F7A  4E75                    1537      RTS                             ; Return to subroutine
00000F7C                          1538  
00000F7C                          1539  DRAW_RESPAWN:
00000F7C  7A00                    1540      MOVEQ.L     #0,  D5
00000F7E  3A39 00001EC8           1541      MOVE.W      respawnTime,D5
00000F84                          1542  
00000F84  B381                    1543      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000F86  3239 00001DCE           1544      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000F8C  82FC 0002               1545      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000F90  23C1 00001DDA           1546      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000F96                          1547  
00000F96                          1548  MOVE_RESPAWNED:
00000F96  23C5 00001DD6           1549      MOVE.L  D5, PLAYER_X
00000F9C                          1550  
00000F9C                          1551      ; Enable back buffer
00000F9C  103C 005E               1552      MOVE.B  #TC_REDRAW,        D0
00000FA0  4E4F                    1553      TRAP    #15
00000FA2                          1554  
00000FA2                          1555      ; Clear the screen
00000FA2  103C 000B               1556      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000FA6  323C FF00               1557      MOVE.W  #$FF00,     D1          ; Clear contents
00000FAA  4E4F                    1558      TRAP    #15                     ; Trap (Perform action)
00000FAC                          1559  
00000FAC  123C 0001               1560      MOVE.B  #1,D1
00000FB0  103C 005D               1561      MOVE.B  #93,D0
00000FB4  4E4F                    1562      TRAP    #15
00000FB6                          1563  
00000FB6  6100 F882               1564      BSR     DRAW_BACKGROUND        
00000FBA  6100 F6EE               1565      BSR     DRAW_HILL 
00000FBE  6100 F9FC               1566      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
00000FC2  6100 FD8C               1567      BSR     DRAW_PLAYER             ; Draw Player
00000FC6  6100 0032               1568      BSR     DRAW_ENEMY              ; Draw Enemy
00000FCA  6100 016C               1569      BSR     DRAW_FLYENEMY
00000FCE  6100 0314               1570      BSR     DRAW_HEALTHPACK
00000FD2  6100 0396               1571      BSR     DRAW_FLOOR              ; Draw Floor
Line 1572 ERROR: Undefined symbol
00000FD6  6100 AD3E               1572      BSR     drawPause        
00000FDA                          1573  
00000FDA                          1574  
00000FDA  5279 00001EC8           1575      ADDQ.W      #1,respawnTime
00000FE0  3A39 00001EC8           1576      MOVE.W      respawnTime,D5
00000FE6  0C79 00C8 00001EC8      1577      CMP.W       #200,respawnTime
00000FEE  66A6                    1578      BNE         MOVE_RESPAWNED
00000FF0  33FC 0000 00001EC8      1579      MOVE.W     #0,respawnTime
00000FF8                          1580      ;else
00000FF8  4E75                    1581      RTS
00000FF8  4E75                    1582  -------------------- end include --------------------
00000FFA                          1583  *-----------------------------------------------------------
00000FFA                          1584  * Subroutine    : Draw Enemy
00000FFA                          1585  * Description   : Draw Enemy Ant
00000FFA                          1586  *-----------------------------------------------------------
00000FFA                          1587      include "battle/battleEnemy.X68"
00000FFA                          1588  DRAW_ENEMY:
00000FFA                          1589      ; Set Pixel Colors
00000FFA  2239 00001E08           1590      MOVE.L  ENEMYCOLOR,       D1          ; Set pen color
00001000  103C 0050               1591      MOVE.B  #80,        D0          ; Task for pen Color
00001004  4E4F                    1592      TRAP    #15                     ; Trap (Perform action)
00001006                          1593  
00001006                          1594      ; Reset Pixel Colors
00001006  2239 00001E08           1595      MOVE.L  ENEMYCOLOR,     D1          ; Set Background color
0000100C  103C 0051               1596      MOVE.B  #81,        D0          ; Task for Background Color
00001010  4E4F                    1597      TRAP    #15                     ; Trap (Perform action)
00001012                          1598  
00001012                          1599      *-------------- draw ENEMY body -----------------*
00001012  2239 00001DF0           1600      MOVE.L  ENEMY_X,   D1          ; X
00001018  2439 00001DF4           1601      MOVE.L  ENEMY_Y,   D2
0000101E  5982                    1602      SUBQ.L  #4,D2
00001020                          1603  
00001020  2639 00001DF0           1604      MOVE.L  ENEMY_X,   D3
00001026  0683 0000001B           1605      ADD.L   #ENMY_W_INIT, D3  
0000102C  2839 00001DF4           1606      MOVE.L  ENEMY_Y,   D4
00001032  0484 0000000D           1607      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00001038                          1608      
00001038                          1609       ; Draw 
00001038  103C 0057               1610      MOVE.B  #87,        D0          ; Draw enemy
0000103C  4E4F                    1611      TRAP    #15                     ; Trap (Perform action)
0000103E                          1612  
0000103E  2239 00001DF0           1613      MOVE.L  ENEMY_X,   D1          ; X
00001044  2601                    1614      MOVE.L  D1,   D3
00001046  0681 0000001B           1615      ADD.L   #ENMY_W_INIT,D1
0000104C  2439 00001DF4           1616      MOVE.L  ENEMY_Y,   D2
00001052  5982                    1617      SUBQ.L  #4,D2
00001054  2639 00001DF0           1618      MOVE.L  ENEMY_X,   D3
0000105A  0683 0000000C           1619      ADDI.L   #12,D3
00001060                          1620      
00001060  2839 00001DF4           1621      MOVE.L  ENEMY_Y,   D4
00001066  0484 0000000D           1622      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
0000106C  5704                    1623      SUB.B   #3,D4
0000106E                          1624      
0000106E                          1625      ; Draw 
0000106E  103C 0057               1626      MOVE.B  #87,        D0          ; Draw enemy
00001072  4E4F                    1627      TRAP    #15                     ; Trap (Perform action)
00001074                          1628  
00001074                          1629      ; change thickness
00001074  7203                    1630      MOVE.l  #3,D1
00001076  103C 005D               1631      MOVE.B  #93,D0
0000107A  4E4F                    1632      TRAP    #15
0000107C                          1633  
0000107C  2239 00001DF0           1634      MOVE.L  ENEMY_X,D1
00001082  5681                    1635      ADD.L   #3,D1
00001084  2439 00001DF4           1636      MOVE.L  ENEMY_Y,D2
0000108A  0482 0000000D           1637      SUB.L   #ENMY_H_INIT,D2
00001090  2601                    1638      MOVE.L  D1,D3
00001092  0483 0000000A           1639      SUB.L   #10,D3
00001098  2802                    1640      MOVE.L  D2,D4
0000109A  5F84                    1641      SUBI.L  #7,D4
0000109C                          1642  
0000109C  103C 0054               1643      MOVE.B  #84,D0
000010A0  4E4F                    1644      TRAP    #15
000010A2                          1645  
000010A2  2239 00001DF0           1646      MOVE.L  ENEMY_X,D1
000010A8  2439 00001DF4           1647      MOVE.L  ENEMY_Y,D2
000010AE  2601                    1648      MOVE.L  D1,D3
000010B0  5883                    1649      ADD.L   #4,D3
000010B2  2802                    1650      MOVE.L  D2,D4
000010B4  5984                    1651      SUBI.L  #4,D4
000010B6                          1652  
000010B6  103C 0054               1653      MOVE.B  #84,D0
000010BA  4E4F                    1654      TRAP    #15
000010BC                          1655  
000010BC  2239 00001DF0           1656      MOVE.L  ENEMY_X,D1
000010C2  0681 0000000D           1657      ADD.L   #13,D1
000010C8  2439 00001DF4           1658      MOVE.L  ENEMY_Y,D2
000010CE  2601                    1659      MOVE.L  D1,D3
000010D0  2802                    1660      MOVE.L  D2,D4
000010D2  5984                    1661      SUBI.L  #4,D4
000010D4                          1662  
000010D4  103C 0054               1663      MOVE.B  #84,D0
000010D8  4E4F                    1664      TRAP    #15
000010DA                          1665  
000010DA  2239 00001DF0           1666      MOVE.L  ENEMY_X,D1
000010E0  0681 00000016           1667      ADD.L   #22,D1
000010E6  2839 00001DF4           1668      MOVE.L  ENEMY_Y,D4
000010EC  2601                    1669      MOVE.L  D1,D3
000010EE  5683                    1670      ADD.L   #3,D3
000010F0  2404                    1671      MOVE.L  D4,D2
000010F2  5982                    1672      SUBI.L  #4,D2
000010F4                          1673  
000010F4  103C 0054               1674      MOVE.B  #84,D0
000010F8  4E4F                    1675      TRAP    #15
000010FA                          1676  
000010FA                          1677      ; Set Pixel Colors
Line 1678 ERROR: Undefined symbol
000010FA  223C 004DBD16           1678      MOVE.L  #BLACK,     D1          ; Set Pen color
00001100  103C 0050               1679      MOVE.B  #80,        D0          ; Task for Pen Color
00001104  4E4F                    1680      TRAP    #15                     ; Trap (Perform action)
00001106                          1681  
00001106                          1682      ; change thickness
00001106  7203                    1683      MOVE.l  #3,D1
00001108  103C 005D               1684      MOVE.B  #93,D0
0000110C  4E4F                    1685      TRAP    #15
0000110E                          1686  
0000110E  2239 00001DF0           1687      MOVE.L  ENEMY_X,D1
00001114  5681                    1688      ADD.L   #3,D1
00001116  2439 00001DF4           1689      MOVE.L  ENEMY_Y,D2
0000111C  0482 0000000A           1690      SUB.L   #10,D2
00001122  2601                    1691      MOVE.L  D1,D3
00001124  5283                    1692      ADDQ.L  #1,D3
00001126  2802                    1693      MOVE.L  D2,D4
00001128                          1694  
00001128  103C 0054               1695      MOVE.B  #84,D0
0000112C  4E4F                    1696      TRAP    #15
0000112E                          1697  
0000112E                          1698      ; reset pen
0000112E  7201                    1699      MOVE.l  #1,D1
00001130  103C 005D               1700      MOVE.B  #93,D0
00001134  4E4F                    1701      TRAP    #15
00001136                          1702  
00001136  4E75                    1703      RTS                             ; Return to subroutine
00001136  4E75                    1704  -------------------- end include --------------------
00001138                          1705  
00001138                          1706      
00001138                          1707  DRAW_FLYENEMY:
00001138                          1708      ; Set Pixel Colors
00001138  2239 00001E0C           1709      MOVE.L  FLYENEMYCOLOR,       D1          ; Set Background color
0000113E  103C 0050               1710      MOVE.B  #80,        D0          ; Task for Background Color
00001142  4E4F                    1711      TRAP    #15                     ; Trap (Perform action)
00001144                          1712  
00001144                          1713      ; Reset Pixel Colors
00001144  2239 00001E0C           1714      MOVE.L  FLYENEMYCOLOR,     D1          ; Set Background color
0000114A  103C 0051               1715      MOVE.B  #81,        D0          ; Task for Background Color
0000114E  4E4F                    1716      TRAP    #15                     ; Trap (Perform action)
00001150                          1717  
00001150                          1718          *-------------- draw FLYINGENEMY body -----------------*
00001150  2239 00001E00           1719      MOVE.L  FLYINGENEMY_X,   D1          ; X
00001156  2439 00001E04           1720      MOVE.L  FLYINGENEMY_Y,   D2
0000115C  5982                    1721      SUBQ.L  #4,D2
0000115E                          1722  
0000115E  2639 00001E00           1723      MOVE.L  FLYINGENEMY_X,   D3
00001164  0683 0000001E           1724      ADD.L   #FLY_ENMY_W_INIT, D3  
0000116A  2839 00001E04           1725      MOVE.L  FLYINGENEMY_Y,   D4
00001170  0484 0000000D           1726      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00001176                          1727      
00001176                          1728       ; Draw 
00001176  103C 0057               1729      MOVE.B  #87,        D0          ; Draw enemy
0000117A  4E4F                    1730      TRAP    #15                     ; Trap (Perform action)
0000117C                          1731  
0000117C                          1732  *-------------- draw FLYINGENEMY abdomen -----------------*
0000117C  2239 00001E00           1733      MOVE.L  FLYINGENEMY_X,   D1          ; X
00001182  2601                    1734      MOVE.L  D1,   D3
00001184  0681 0000001E           1735      ADD.L   #FLY_ENMY_W_INIT,D1
0000118A  2439 00001E04           1736      MOVE.L  FLYINGENEMY_Y,   D2
00001190  5982                    1737      SUBQ.L  #4,D2
00001192  2639 00001E00           1738      MOVE.L  FLYINGENEMY_X,   D3
00001198  0683 0000000C           1739      ADDI.L   #12,D3
0000119E                          1740      
0000119E  2839 00001E04           1741      MOVE.L  FLYINGENEMY_Y,   D4
000011A4  0484 0000000D           1742      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
000011AA  5704                    1743      SUB.B   #3,D4
000011AC                          1744      
000011AC                          1745      ; Draw 
000011AC  103C 0057               1746      MOVE.B  #87,        D0          ; Draw enemy
000011B0  4E4F                    1747      TRAP    #15                     ; Trap (Perform action)
000011B2                          1748  
000011B2                          1749  *-------------- draw FLYINGENEMY antena -----------------*    
000011B2                          1750      ; change thickness
000011B2  7203                    1751      MOVE.l  #3,D1
000011B4  103C 005D               1752      MOVE.B  #93,D0
000011B8  4E4F                    1753      TRAP    #15
000011BA                          1754  
000011BA  2239 00001E00           1755      MOVE.L  FLYINGENEMY_X,D1
000011C0  5681                    1756      ADD.L   #3,D1
000011C2  2439 00001E04           1757      MOVE.L  FLYINGENEMY_Y,D2
000011C8  0482 0000000D           1758      SUB.L   #FLY_ENMY_H_INIT,D2
000011CE  2601                    1759      MOVE.L  D1,D3
000011D0  0483 0000000A           1760      SUB.L   #10,D3
000011D6  2802                    1761      MOVE.L  D2,D4
000011D8  5F84                    1762      SUBI.L  #7,D4
000011DA                          1763  
000011DA  103C 0054               1764      MOVE.B  #84,D0
000011DE  4E4F                    1765      TRAP    #15
000011E0                          1766  
000011E0                          1767  *-------------- draw FLYINGENEMY leg 1 -----------------*
000011E0  2239 00001E00           1768      MOVE.L  FLYINGENEMY_X,D1
000011E6  2439 00001E04           1769      MOVE.L  FLYINGENEMY_Y,D2
000011EC  2601                    1770      MOVE.L  D1,D3
000011EE  5883                    1771      ADD.L   #4,D3
000011F0  2802                    1772      MOVE.L  D2,D4
000011F2  5984                    1773      SUBI.L  #4,D4
000011F4                          1774  
000011F4  103C 0054               1775      MOVE.B  #84,D0
000011F8  4E4F                    1776      TRAP    #15
000011FA                          1777  
000011FA                          1778  *-------------- draw FLYINGENEMY leg 2 -----------------*
000011FA  2239 00001E00           1779      MOVE.L  FLYINGENEMY_X,D1
00001200  0681 0000000D           1780      ADD.L   #13,D1
00001206  2439 00001E04           1781      MOVE.L  FLYINGENEMY_Y,D2
0000120C  2601                    1782      MOVE.L  D1,D3
0000120E  2802                    1783      MOVE.L  D2,D4
00001210  5984                    1784      SUBI.L  #4,D4
00001212                          1785  
00001212  103C 0054               1786      MOVE.B  #84,D0
00001216  4E4F                    1787      TRAP    #15
00001218                          1788  
00001218                          1789  *-------------- draw FLYINGENEMY leg 3 -----------------*
00001218  2239 00001E00           1790      MOVE.L  FLYINGENEMY_X,D1
0000121E  0681 00000016           1791      ADD.L   #22,D1
00001224  2839 00001E04           1792      MOVE.L  FLYINGENEMY_Y,D4
0000122A  2601                    1793      MOVE.L  D1,D3
0000122C  5683                    1794      ADD.L   #3,D3
0000122E  2404                    1795      MOVE.L  D4,D2
00001230  5982                    1796      SUBI.L  #4,D2
00001232                          1797  
00001232  103C 0054               1798      MOVE.B  #84,D0
00001236  4E4F                    1799      TRAP    #15
00001238                          1800  
00001238                          1801  *-------------- draw FLYINGENEMY Wing 1 -----------------*
00001238                          1802      ; Set Pixel Colors
Line 1803 ERROR: Undefined symbol
00001238  223C 004DBD16           1803      MOVE.L  #WING,     D1          ; Set Pen color
0000123E  103C 0050               1804      MOVE.B  #80,        D0          ; Task for Pen Color
00001242  4E4F                    1805      TRAP    #15                     ; Trap (Perform action)
00001244                          1806      
00001244                          1807      ; change thickness
00001244  7205                    1808      MOVE.l  #5,D1
00001246  103C 005D               1809      MOVE.B  #93,D0
0000124A  4E4F                    1810      TRAP    #15
0000124C                          1811  
0000124C  2239 00001E00           1812      MOVE.L  FLYINGENEMY_X,D1
00001252  0681 0000000F           1813      ADD.L   #15,D1
00001258  2439 00001E04           1814      MOVE.L  FLYINGENEMY_Y,d2
0000125E  0482 0000000D           1815      SUB.L   #FLY_ENMY_H_INIT,D2
00001264  2601                    1816      MOVE.L  D1,D3
00001266  0483 00000009           1817      SUB.L   #9,D3
0000126C  2802                    1818      MOVE.L  D2,D4
0000126E  0484 0000000A           1819      SUB.L   #10,D4
00001274                          1820  
00001274  103C 0054               1821      MOVE.B  #84,D0
00001278  4E4F                    1822      TRAP    #15
0000127A                          1823  
0000127A                          1824  *-------------- draw FLYINGENEMY Wing 2 -----------------*
0000127A  2239 00001E00           1825      MOVE.L  FLYINGENEMY_X,D1
00001280  0681 0000000F           1826      ADD.L   #15,D1
00001286  2439 00001E04           1827      MOVE.L  FLYINGENEMY_Y,d2
0000128C  0482 0000000D           1828      SUB.L   #FLY_ENMY_H_INIT,D2
00001292  2601                    1829      MOVE.L  D1,D3
00001294  0683 00000009           1830      ADD.L   #9,D3
0000129A  2802                    1831      MOVE.L  D2,D4
0000129C  0484 0000000A           1832      SUB.L   #10,D4
000012A2                          1833  
000012A2  103C 0054               1834      MOVE.B  #84,D0
000012A6  4E4F                    1835      TRAP    #15
000012A8                          1836  
000012A8                          1837  
000012A8                          1838  *-------------- draw FLYINGENEMY eye -----------------*
000012A8                          1839      ; Set Pixel Colors
Line 1840 ERROR: Undefined symbol
000012A8  223C 004DBD16           1840      MOVE.L  #BLACK,     D1          ; Set Pen color
000012AE  103C 0050               1841      MOVE.B  #80,        D0          ; Task for Pen Color
000012B2  4E4F                    1842      TRAP    #15                     ; Trap (Perform action)
000012B4                          1843      
000012B4                          1844      ; change thickness
000012B4  7203                    1845      MOVE.l  #3,D1
000012B6  103C 005D               1846      MOVE.B  #93,D0
000012BA  4E4F                    1847      TRAP    #15
000012BC                          1848  
000012BC  2239 00001E00           1849      MOVE.L  FLYINGENEMY_X,D1
000012C2  5681                    1850      ADD.L   #3,D1
000012C4  2839 00001E04           1851      MOVE.L  FLYINGENEMY_Y,   D4
000012CA  0484 0000000D           1852      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
000012D0  2601                    1853      MOVE.L  D1,D3
000012D2  2802                    1854      MOVE.L  D2,D4
000012D4                          1855  
000012D4  103C 0054               1856      MOVE.B  #84,D0
000012D8  4E4F                    1857      TRAP    #15
000012DA                          1858  
000012DA                          1859      ; reset pen
000012DA  7201                    1860      MOVE.l  #1,D1
000012DC  103C 005D               1861      MOVE.B  #93,D0
000012E0  4E4F                    1862      TRAP    #15
000012E2                          1863  
000012E2  4E75                    1864      RTS  
000012E4                          1865  
000012E4                          1866  DRAW_HEALTHPACK:
000012E4                          1867  
000012E4  0C39 0000 00001DB6      1868      CMP.B   #00,     SPAWN_HEALTHPACKS
000012EC  6700 0070               1869      BEQ     DRAW_HEALTHPACK_DONE
000012F0  0C39 0000 00001DB5      1870      CMP.B   #00,     DRAW_HEALTHPACKS
000012F8  6700 0064               1871      BEQ     DRAW_HEALTHPACK_DONE
000012FC                          1872      
000012FC                          1873      ;BSR     RANDOM_NUMBER
000012FC                          1874      ;CMP.L   #$80,  D1
000012FC                          1875      ;BGT     DRAW_HEALTHPACK_DONE
000012FC                          1876  
000012FC  13FC 0001 00001DB5      1877      MOVE.B  #01,        DRAW_HEALTHPACKS
00001304  3239 00001DCE           1878      MOVE.W  SCREEN_H,     D1
0000130A  82FC 0002               1879      DIVU.W    #02,        D1
0000130E  C2BC 0000FFFF           1880      AND.L   #$0000FFFF,   D1
00001314  23C1 00001DFC           1881      MOVE.L  D1,         HEALTH_Y
0000131A                          1882      ; Set Pixel Colors
Line 1883 ERROR: Undefined symbol
0000131A  223C 004DBD16           1883      MOVE.L  #BLACK,       D1          ; Set Background color
00001320  103C 0050               1884      MOVE.B  #80,        D0          ; Task for Background Color
00001324  4E4F                    1885      TRAP    #15                     ; Trap (Perform action)
00001326                          1886  
00001326                          1887      ; Reset Pixel Colors
Line 1888 ERROR: Undefined symbol
00001326  223C 004DBD16           1888      MOVE.L  #LIFEGREEN,     D1          ; Set Background color
0000132C  103C 0051               1889      MOVE.B  #81,        D0          ; Task for Background Color
00001330  4E4F                    1890      TRAP    #15                     ; Trap (Perform action)
00001332                          1891  
00001332                          1892      ; Set X, Y, Width and Height
00001332  2239 00001DF8           1893      MOVE.L  HEALTH_X,    D1          ; X
00001338  2439 00001DFC           1894      MOVE.L  HEALTH_Y,    D2          ; Y
0000133E  2639 00001DF8           1895      MOVE.L  HEALTH_X,    D3
00001344  0683 0000000C           1896      ADD.L   #HEALTH_PACK_W,   D3      ; Width
0000134A  2839 00001DFC           1897      MOVE.L  HEALTH_Y,    D4 
00001350  0484 0000000C           1898      SUB.L   #HEALTH_PACK_H,   D4      ; Height
00001356                          1899      
00001356                          1900      ; Draw Enemy    
00001356  103C 0057               1901      MOVE.B  #87,        D0          ; Draw Enemy
0000135A  4E4F                    1902      TRAP    #15                     ; Trap (Perform action)
0000135C  4E75                    1903      RTS                             ; Return to subroutine
0000135E                          1904  
0000135E                          1905  DRAW_HEALTHPACK_DONE:
0000135E  23FC FFFFFFFF 00001DFC  1906      MOVE.L  #-1, HEALTH_Y
00001368  4E75                    1907      RTS
0000136A                          1908  
0000136A                          1909  DRAW_FLOOR:
0000136A                          1910      ; Set Pixel Colors
Line 1911 ERROR: Undefined symbol
0000136A  223C 004DBD16           1911      MOVE.L  #GREEN,     D1          ; Set Background color
00001370  103C 0050               1912      MOVE.B  #80,        D0          ; Task for Background Color
00001374  4E4F                    1913      TRAP    #15                     ; Trap (Perform action)
00001376                          1914  
Line 1915 ERROR: Undefined symbol
00001376  223C 004DBD16           1915      MOVE.L  #GREEN,     D1
0000137C  103C 0051               1916      MOVE.B  #81,        D0
00001380  4E4F                    1917      TRAP    #15
00001382                          1918  
00001382                          1919      
00001382                          1920      ; Set X, Y, X2, and Y2
00001382  7200                    1921      MOVE.L  #0,   D1          ; X
00001384  243C 000000F1           1922      MOVE.L  #241,  D2          ; Y
0000138A  263C 00000280           1923      MOVE.L  #640,   D3           
00001390  283C 000001E0           1924      MOVE.L  #480,   D4 
00001396                          1925      
00001396                          1926      ; Draw grass
00001396  103C 0057               1927      MOVE.B  #87,        D0          ; Draw Line
0000139A  4E4F                    1928      TRAP    #15                     ; Trap (Perform action)
0000139C                          1929  
0000139C                          1930      ; Set Pixel Colors
Line 1931 ERROR: Undefined symbol
0000139C  223C 004DBD16           1931      MOVE.L  #BROWN,     D1          ; Set Background color
000013A2  103C 0050               1932      MOVE.B  #80,        D0          ; Task for Background Color
000013A6  4E4F                    1933      TRAP    #15                     ; Trap (Perform action)
000013A8                          1934  
Line 1935 ERROR: Undefined symbol
000013A8  223C 004DBD16           1935      MOVE.L  #BROWN,     D1
000013AE  103C 0051               1936      MOVE.B  #81,        D0
000013B2  4E4F                    1937      TRAP    #15
000013B4                          1938  
000013B4                          1939  * -----------------------------------------------------------
000013B4                          1940  * Find level and draw dirt
000013B4                          1941  * -----------------------------------------------------------
000013B4  45F9 00001DBC           1942      LEA     LEVELS,      A2
000013BA  2A39 00001DDE           1943      MOVE.L  PLAYER_SCORE,   D5
000013C0  6000 0002               1944      BRA     DRAWDIRT
000013C4                          1945      
000013C4                          1946  DRAWDIRT:
000013C4                          1947      ; Set X, Y, X2, and Y2
000013C4  7200                    1948      MOVE.L  #0,   D1          ; X
000013C6  263C 00000280           1949      MOVE.L  #640,   D3  
000013CC  243C 00000115           1950      MOVE.L  #277,   D2         
000013D2  283C 000001E0           1951      MOVE.L  #480,   D4 
000013D8                          1952      
000013D8                          1953      ; Draw Dirt
000013D8  103C 0057               1954      MOVE.B  #87,        D0          ; Draw Line
000013DC  4E4F                    1955      TRAP    #15                     ; Trap (Perform action)
000013DE                          1956  
000013DE                          1957  
000013DE                          1958      ; Reset Pixel Colors
000013DE  7200                    1959      MOVE.L  #$00000000,     D1          ; Set Background color
000013E0  103C 0050               1960      MOVE.B  #80,        D0          ; Task for Background Color
000013E4  4E4F                    1961      TRAP    #15                     ; Trap (Perform action)
000013E6                          1962  
000013E6                          1963      ; Reset Pixel Colors
000013E6  7200                    1964      MOVE.L  #$00000000,     D1          ; Set Background color
000013E8  103C 0051               1965      MOVE.B  #81,        D0          ; Task for Background Color
000013EC  4E4F                    1966      TRAP    #15                     ; Trap (Perform action)
000013EE                          1967  
000013EE  4E75                    1968      RTS                             ; Return to subroutine
000013F0                          1969      
000013F0                          1970  *-----------------------------------------------------------
000013F0                          1971  * Subroutine    : Collision Check
000013F0                          1972  * Description   : Axis-Aligned Bounding Box Collision Detection
000013F0                          1973  * Algorithm checks for overlap on the 4 sides of the Player and 
000013F0                          1974  * Enemy rectangles
000013F0                          1975  * PLAYER_X <= ENEMY_X + ENEMY_W &&
000013F0                          1976  * PLAYER_X + PLAYER_W >= ENEMY_X &&
000013F0                          1977  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
000013F0                          1978  * PLAYER_H + PLAYER_Y >= ENEMY_Y
000013F0                          1979  *-----------------------------------------------------------
000013F0                          1980  CHECK_COLLISIONS:
000013F0                          1981      include     "battle/battlecollisions.x68"     
000013F0  4281                    1982      CLR.L   D1                      ; Clear D1
000013F2  4282                    1983      CLR.L   D2                      ; Clear D2
000013F4                          1984  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
000013F4  2239 00001DD6           1985      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
000013FA  D239 00001E3F           1986      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001400  2439 00001DF0           1987      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
00001406  B481                    1988      CMP.L   D1,         D2          ; Do the Overlap ?
00001408  6F00 0006               1989      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
0000140C  6000 0048               1990      BRA     CHECK_FLYENEMY_COLLISIONS
00001410                          1991  
00001410                          1992  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
00001410  2239 00001DD6           1993      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
00001416  2439 00001DF0           1994      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
0000141C  D479 00001E42           1995      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
00001422  B481                    1996      CMP.L   D1,         D2          ; Do they OverLap ?
00001424  6C00 0006               1997      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001428  6000 002C               1998      BRA     CHECK_FLYENEMY_COLLISIONS  
0000142C                          1999  
0000142C                          2000  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
0000142C  2239 00001DDA           2001      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001432  2439 00001DF4           2002      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001438                          2003      ;ADD.W   ENMY_H_INIT,D2          ; Set Enemy Height to D2
00001438  B481                    2004      CMP.L   D1,         D2          ; Do they Overlap ?
0000143A  6F00 0006               2005      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
0000143E  6000 0016               2006      BRA     CHECK_FLYENEMY_COLLISIONS
00001442                          2007  
00001442                          2008  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
00001442  D238 000D               2009      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
00001446  2439 00001DF4           2010      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
0000144C  B481                    2011      CMP.L   D1,         D2          ; Do they OverLap ?
0000144E  6C00 0320               2012      BGE     ENEMYCOLLISION               ; Collision !
00001452  6000 0002               2013      BRA     CHECK_FLYENEMY_COLLISIONS
00001456                          2014  
00001456                          2015  CHECK_FLYENEMY_COLLISIONS:
00001456  4281                    2016      CLR.L   D1                      ; Clear D1
00001458  4282                    2017      CLR.L   D2                      ; Clear D2
0000145A                          2018  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
0000145A  2239 00001DD6           2019      MOVE.L  PLAYER_X,   D1
00001460  D239 00001E3F           2020      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001466  2439 00001E00           2021      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
0000146C  B481                    2022      CMP.L   D1,         D2                          ; Do the Overlap ?
0000146E  6F00 0006               2023      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
00001472  6000 0050               2024      BRA     CHECK_HEALTH_COLLISIONS
00001476                          2025  
00001476                          2026  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
00001476  2239 00001DD6           2027      MOVE.L  PLAYER_X,   D1
0000147C  2439 00001E00           2028      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001482  D479 00001E46           2029      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001488  B481                    2030      CMP.L   D1,         D2                  ; Do they OverLap ?
0000148A  6C00 0006               2031      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
0000148E  6000 0034               2032      BRA     CHECK_HEALTH_COLLISIONS
00001492                          2033  
00001492                          2034  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001492  2239 00001DDA           2035      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001498  2439 00001E04           2036      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
0000149E  D479 00001E48           2037      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000014A4  B481                    2038      CMP.L   D1,         D2          ; Do they Overlap ?
000014A6  6C00 0006               2039      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000014AA  6000 0018               2040      BRA     CHECK_HEALTH_COLLISIONS
000014AE                          2041  
000014AE                          2042  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000014AE  D239 00001E40           2043      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
000014B4  2439 00001E04           2044      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000014BA  B481                    2045      CMP.L   D1,         D2          ; Do they OverLap ?
000014BC  6F00 02B2               2046      BLE     ENEMYCOLLISION               ; Collision !
000014C0  6000 0002               2047      BRA     CHECK_HEALTH_COLLISIONS
000014C4                          2048  
000014C4                          2049  CHECK_HEALTH_COLLISIONS:
000014C4  4281                    2050      CLR.L   D1                      ; Clear D1
000014C6  4282                    2051      CLR.L   D2                      ; Clear D2
000014C8                          2052  PLX_LTE_TO_HEALTH_X_PLUS_W:
000014C8  2239 00001DD6           2053      MOVE.L  PLAYER_X,   D1
000014CE  D239 00001E3F           2054      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
000014D4  2439 00001DF8           2055      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
000014DA  B481                    2056      CMP.L   D1,         D2                          ; Do the Overlap ?
000014DC  6F00 0006               2057      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
000014E0  6000 0050               2058      BRA     CHECK_ATTACK_COLLISIONS
000014E4                          2059  
000014E4                          2060  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
000014E4  2239 00001DD6           2061      MOVE.L  PLAYER_X,   D1
000014EA  2439 00001DF8           2062      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
000014F0  0682 0000000C           2063      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
000014F6  B481                    2064      CMP.L   D1,         D2                  ; Do they OverLap ?
000014F8  6C00 0006               2065      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
000014FC  6000 0034               2066      BRA     CHECK_ATTACK_COLLISIONS
00001500                          2067  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
00001500  2239 00001DDA           2068      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001506  2439 00001DFC           2069      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
0000150C  0682 0000000C           2070      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
00001512  B481                    2071      CMP.L   D1,         D2          ; Do they Overlap ?
00001514  6C00 0006               2072      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
00001518  6000 0018               2073      BRA     CHECK_ATTACK_COLLISIONS
0000151C                          2074  
0000151C                          2075  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
0000151C  D239 00001E40           2076      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001522  2439 00001DFC           2077      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
00001528  B481                    2078      CMP.L   D1,         D2          ; Do they OverLap ?
0000152A  6F00 02AC               2079      BLE     HEALTH_COLLISION               ; Collision !
0000152E  6000 0002               2080      BRA     CHECK_ATTACK_COLLISIONS
00001532                          2081  
00001532                          2082  CHECK_ATTACK_COLLISIONS:
00001532  4281                    2083      CLR.L   D1                      ; Clear D1
00001534  4282                    2084      CLR.L   D2                      ; Clear D2
00001536                          2085  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
00001536  2239 00001E1C           2086      MOVE.L  ATTACK_X,   D1
0000153C  0681 00000023           2087      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001542  2439 00001DF0           2088      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001548  B481                    2089      CMP.L   D1,         D2                          ; Do the Overlap ?
0000154A  6F00 0006               2090      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
0000154E  6000 0050               2091      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001552                          2092  
00001552                          2093  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
00001552  2239 00001E1C           2094      MOVE.L  ATTACK_X,   D1
00001558  2439 00001DF0           2095      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
0000155E  D479 00001E42           2096      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001564  B481                    2097      CMP.L   D1,         D2                  ; Do they OverLap ?
00001566  6C00 0006               2098      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
0000156A  6000 0034               2099      BRA     CHECK_ATTACK_FLY_COLLISIONS
0000156E                          2100  
0000156E                          2101  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
0000156E  2239 00001E20           2102      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001574  2439 00001DF4           2103      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
0000157A  D479 00001E44           2104      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001580  B481                    2105      CMP.L   D1,         D2          ; Do they Overlap ?
00001582  6C00 0006               2106      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
00001586  6000 0018               2107      BRA     CHECK_ATTACK_FLY_COLLISIONS
0000158A                          2108  
0000158A                          2109  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
0000158A  0681 00000014           2110      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001590  2439 00001DF4           2111      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001596  B481                    2112      CMP.L   D1,         D2          ; Do they OverLap ?
00001598  6F00 0150               2113      BLE     ATTACK_COLLISION               ; Collision !
0000159C  6000 0002               2114      BRA     CHECK_ATTACK_FLY_COLLISIONS
000015A0                          2115  
000015A0                          2116  CHECK_ATTACK_FLY_COLLISIONS:
000015A0  4281                    2117      CLR.L   D1                      ; Clear D1
000015A2  4282                    2118      CLR.L   D2                      ; Clear D2
000015A4                          2119  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
000015A4  2239 00001E1C           2120      MOVE.L  ATTACK_X,   D1
000015AA  0681 00000023           2121      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
000015B0  2439 00001E00           2122      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
000015B6  B481                    2123      CMP.L   D1,         D2                          ; Do the Overlap ?
000015B8  6F00 0006               2124      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
000015BC  6000 0050               2125      BRA     CHECK_THROW_COLLISION
000015C0                          2126  
000015C0                          2127  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
000015C0  2239 00001E1C           2128      MOVE.L  ATTACK_X,   D1
000015C6  2439 00001E00           2129      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
000015CC  D479 00001E46           2130      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000015D2  B481                    2131      CMP.L   D1,         D2                  ; Do they OverLap ?
000015D4  6C00 0006               2132      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
000015D8  6000 0034               2133      BRA     CHECK_THROW_COLLISION
000015DC                          2134  
000015DC                          2135  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
000015DC  2239 00001E20           2136      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
000015E2  2439 00001E04           2137      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000015E8  D479 00001E48           2138      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000015EE  B481                    2139      CMP.L   D1,         D2          ; Do they Overlap ?
000015F0  6C00 0006               2140      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000015F4  6000 0018               2141      BRA     CHECK_THROW_COLLISION
000015F8                          2142  
000015F8                          2143  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000015F8  0681 00000014           2144      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
000015FE  2439 00001E04           2145      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001604  B481                    2146      CMP.L   D1,         D2          ; Do they OverLap ?
00001606  6F00 0108               2147      BLE     ATTACK_FLY_COLLISION               ; Collision !
0000160A  6000 0002               2148      BRA     CHECK_THROW_COLLISION
0000160E                          2149  
0000160E                          2150  CHECK_THROW_COLLISION:
0000160E  4281                    2151      CLR.L   D1                      ; Clear D1
00001610  4282                    2152      CLR.L   D2                      ; Clear D2
00001612                          2153  THROW_X_LTE_TO_ENEMY_X_PLUS_W:
00001612  2239 00001E2A           2154      MOVE.L  THROW_X,   D1
00001618  0681 00000023           2155      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
0000161E  2439 00001DF0           2156      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001624  B481                    2157      CMP.L   D1,         D2                          ; Do the Overlap ?
00001626  6F00 0006               2158      BLE     THROW_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
0000162A  6000 0050               2159      BRA     CHECK_THROW_FLY_COLLISIONS
0000162E                          2160  
0000162E                          2161  THROW_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
0000162E  2239 00001E2A           2162      MOVE.L  THROW_X,   D1
00001634  2439 00001DF0           2163      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
0000163A  D479 00001E42           2164      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001640  B481                    2165      CMP.L   D1,         D2                  ; Do they OverLap ?
00001642  6C00 0006               2166      BGE     TRW_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001646  6000 0034               2167      BRA     CHECK_THROW_FLY_COLLISIONS
0000164A                          2168  
0000164A                          2169  TRW_LTE_TO_ENEMY_Y_PLUS_H:     
0000164A  2239 00001E2E           2170      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001650  2439 00001DF4           2171      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001656  D479 00001E44           2172      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000165C  B481                    2173      CMP.L   D1,         D2          ; Do they Overlap ?
0000165E  6C00 0006               2174      BGE     TRW_PLUS_H_LTE_TO_THROW_Y  ; Less than or Equal
00001662  6000 0018               2175      BRA     CHECK_THROW_FLY_COLLISIONS
00001666                          2176  
00001666                          2177  TRW_PLUS_H_LTE_TO_THROW_Y:     ; Less than or Equal ?
00001666  0681 0000000F           2178      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
0000166C  2439 00001DF4           2179      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001672  B481                    2180      CMP.L   D1,         D2          ; Do they OverLap ?
00001674  6F00 0074               2181      BLE     ATTACK_COLLISION               ; Collision !
00001678  6000 0002               2182      BRA     CHECK_THROW_FLY_COLLISIONS
0000167C                          2183  
0000167C                          2184  CHECK_THROW_FLY_COLLISIONS:
0000167C  4281                    2185      CLR.L   D1                      ; Clear D1
0000167E  4282                    2186      CLR.L   D2                      ; Clear D2
00001680                          2187  THROW_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001680  2239 00001E2A           2188      MOVE.L  THROW_X,   D1
00001686  0681 0000000F           2189      ADD.L   #THRW_W_INIT,D1          ; Move Player Width to D1
0000168C  2439 00001E00           2190      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001692  B481                    2191      CMP.L   D1,         D2                          ; Do the Overlap ?
00001694  6F00 0006               2192      BLE     THROW_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001698  6000 00B4               2193      BRA     COLLISION_CHECK_DONE
0000169C                          2194  
0000169C                          2195  THROW_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
0000169C  2239 00001E2A           2196      MOVE.L  THROW_X,   D1
000016A2  2439 00001E00           2197      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
000016A8  D479 00001E46           2198      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000016AE  B481                    2199      CMP.L   D1,         D2                  ; Do they OverLap ?
000016B0  6C00 0006               2200      BGE     TRW_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
000016B4  6000 0098               2201      BRA     COLLISION_CHECK_DONE
000016B8                          2202  
000016B8                          2203  TRW_LTE_TO_FLYENEMY_Y_PLUS_H:     
000016B8  2239 00001E2E           2204      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
000016BE  2439 00001E04           2205      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000016C4  D479 00001E48           2206      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000016CA  B481                    2207      CMP.L   D1,         D2          ; Do they Overlap ?
000016CC  6C00 0006               2208      BGE     TRW_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000016D0  6000 007C               2209      BRA     COLLISION_CHECK_DONE
000016D4                          2210  
000016D4                          2211  TRW_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000016D4  0681 0000000F           2212      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
000016DA  2439 00001E04           2213      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000016E0  B481                    2214      CMP.L   D1,         D2          ; Do they OverLap ?
000016E2  6F00 002C               2215      BLE     ATTACK_FLY_COLLISION               ; Collision !
000016E6  6000 0066               2216      BRA     COLLISION_CHECK_DONE
000016EA                          2217  
000016EA                          2218  
000016EA                          2219  
000016EA                          2220  ATTACK_COLLISION:
000016EA  4A39 00001E3D           2221      TST.B   ENEMY_HIT
000016F0  6600 012E               2222      BNE     STILL_COLLIDED
000016F4  6100 F518               2223      BSR     PLAY_HIT
000016F8  23FC 00000190 00001DF4  2224      MOVE.L  #400, ENEMY_Y
00001702  13FC 0001 00001E3D      2225      MOVE.B  #01,  ENEMY_HIT
0000170A  6100 002A               2226      BSR     CHECK_ENEMIES_CLEARED
0000170E  4E75                    2227      RTS
00001710                          2228  
00001710                          2229  ATTACK_FLY_COLLISION:
00001710  4A39 00001E3E           2230      TST.B   FLYENEMY_HIT
00001716  6600 0108               2231      BNE     STILL_COLLIDED
0000171A  6100 F4F2               2232      BSR     PLAY_HIT
0000171E  23FC 00000190 00001E04  2233      MOVE.L  #400, FLYINGENEMY_Y
00001728  13FC 0001 00001E3E      2234      MOVE.B  #01,  FLYENEMY_HIT
00001730  6100 0004               2235      BSR     CHECK_ENEMIES_CLEARED
00001734  4E75                    2236      RTS
00001736                          2237  
00001736                          2238  CHECK_ENEMIES_CLEARED:
00001736  5239 00001E3A           2239      ADDI.B  #1,         ENEMIES_DEFEATED
0000173C  1239 00001E3A           2240      MOVE.B  ENEMIES_DEFEATED,D1
00001742  B239 00001E3C           2241      CMP.B   enemiesToDefeat,D1
00001748  6700 02EE               2242      BEQ     WAVE_DEFEATED
0000174C  4E75                    2243      RTS
0000174E                          2244  
0000174E                          2245  COLLISION_CHECK_DONE:               ; No Collision Update points
0000174E  4239 00001DB3           2246      CLR.B   IN_ENEMY
00001754  4239 00001DB4           2247      CLR.B   IN_HPACK
0000175A  4281                    2248      CLR.L   D1
0000175C  1239 00001E16           2249      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
00001762  D2B9 00001DDE           2250      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001768  23C1 00001DDE           2251      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
0000176E  4E75                    2252      RTS                             ; Return to subroutine
00001770                          2253  
00001770                          2254  
00001770                          2255  ENEMYCOLLISION:
00001770  0C39 0001 00001DB3      2256      CMP.B     #$01, IN_ENEMY
00001778  6700 00A6               2257      BEQ     STILL_COLLIDED
0000177C  0C39 0001 00001DB5      2258      CMP.B   #01, DRAW_HEALTHPACKS
00001784  6600 EDB2               2259      BNE     RESET_HEALTH_POSITION
00001788  13FC 0001 00001DB5      2260      MOVE.B  #01, DRAW_HEALTHPACKS 
00001790  13FC 0001 00001DB6      2261      MOVE.B  #01, SPAWN_HEALTHPACKS 
00001798  5339 00001E14           2262      SUB.B   #1, antHealth
0000179E  13FC 0001 00001DB3      2263      MOVE.B  #$01, IN_ENEMY
000017A6  4A39 00001E14           2264      TST.B   antHealth
000017AC  6700 0008               2265      BEQ     antKilled
000017B0  6100 F402               2266      BSR     PLAY_HITHURT               ; Play Opps Wav
000017B4  4E75                    2267      RTS                             ; Return to subroutine
000017B6                          2268  
000017B6                          2269  antKilled:
000017B6  13FC 0003 00001E14      2270      MOVE.B    #3, antHealth
000017BE  5339 00001E15           2271      SUBQ.b    #1, antsRemaining
000017C4  4A39 00001E15           2272      TST.b     antsRemaining
000017CA  6700 017E               2273      BEQ       GAME_OVER
000017CE  6100 F3E4               2274      BSR     PLAY_HITHURT               ; Play Opps Wav
000017D2  6100 F7A8               2275      BSR     DRAW_RESPAWN
000017D6  4E75                    2276      RTS
000017D8                          2277  
000017D8                          2278  HEALTH_COLLISION:
000017D8  0C39 0001 00001DB4      2279      CMP.B     #$01, IN_HPACK
000017E0  6700 003E               2280      BEQ     STILL_COLLIDED
000017E4  13FC 0000 00001DB5      2281      MOVE.B  #00, DRAW_HEALTHPACKS
000017EC  6100 F3E4               2282      BSR     PLAY_POWERUP               ; Play Opps Wav
000017F0  5239 00001E14           2283      ADD.B   #1, antHealth
000017F6  0C39 0003 00001E14      2284      CMP.B   #03, antHealth
000017FE  6C00 0016               2285      BGE     STOP_HPACK_SPAWN
00001802  13FC 0001 00001DB4      2286      MOVE.B  #$01, IN_HPACK
0000180A  23FC 0000005A 00001DFC  2287      MOVE.L  #90, HEALTH_Y
00001814  4E75                    2288      RTS
00001814  4E75                    2289  -------------------- end include --------------------
00001816                          2290  
00001816                          2291  STOP_HPACK_SPAWN:
00001816  13FC 0000 00001DB6      2292      MOVE.B  #00, SPAWN_HEALTHPACKS
0000181E  4E75                    2293      RTS
00001820                          2294  
00001820                          2295  STILL_COLLIDED:
00001820  4E75                    2296      RTS
00001822                          2297  *-----------------------------------------------------------
00001822                          2298  * Subroutine    : EXIT
00001822                          2299  * Description   : Exit message and End Game
00001822                          2300  *-----------------------------------------------------------
00001822                          2301  
00001822                          2302  HILL_LOST:
00001822                          2303  
Line 2304 ERROR: Undefined symbol
00001822  0C79 0003 005455B8      2304      CMP.W   #3,lvlIndex
0000182A  6700 032E               2305      BEQ     WIN_SCREEN
0000182E                          2306  
0000182E  103C 000B               2307      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001832  323C FF00               2308      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001836  4E4F                    2309      TRAP    #15                     ; Trap (Perform action)
00001838  6100 F33A               2310      BSR     PLAY_GAMEOVER
0000183C                          2311  
0000183C                          2312  *------------Set Colours--------------*
Line 2313 ERROR: Undefined symbol
0000183C  223C 004DBD16           2313      MOVE.L  #color5,     D1
00001842  103C 0015               2314      MOVE.B  #21,        D0          ; Set Text Color
00001846  243C 01130005           2315      MOVE.L  #$01130005, D2
0000184C  4E4F                    2316      TRAP    #15                     ; Trap (Perform action)
0000184E                          2317  
Line 2318 ERROR: Undefined symbol
0000184E  223C 004DBD16           2318      MOVE.L  #color1,     D1
00001854  103C 0051               2319      MOVE.B  #81,        D0          ; Set Text Color
00001858  4E4F                    2320      TRAP    #15                     ; Trap (Perform action)
0000185A                          2321  
0000185A                          2322  *------------ fill background --------------*
0000185A  323C 0000               2323      MOVE.W      #0,D1
0000185E  343C 0000               2324      MOVE.W      #0,d2
00001862  103C 0059               2325      MOVE.B      #89,D0
00001866  4E4F                    2326      TRAP        #15
00001868                          2327  
00001868                          2328  *------------ Print hill lost message--------------*
00001868                          2329  
00001868  103C 000B               2330      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000186C  323C 0803               2331      MOVE.W  #$0803,     D1          ; Col 10, Row 03
00001870  4E4F                    2332      TRAP    #15                     ; Trap (Perform action)
00001872  43F9 00001CCE           2333      LEA     HILLLOST_MSG,A1        ; Game Over Message
Line 2334 ERROR: Undefined symbol
00001878  6100 A49C               2334      BSR     print
0000187C                          2335  
0000187C                          2336  *------------print amount of enemies defeated--------------*
0000187C                          2337  
0000187C  103C 000B               2338      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001880  323C 0606               2339      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001884  4E4F                    2340      TRAP    #15                     ; Trap (Perform action)
00001886  43F9 00001C9E           2341      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2342 ERROR: Undefined symbol
0000188C  6100 A488               2342      BSR     print
00001890                          2343  
00001890  103C 000B               2344      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001894  323C 1B06               2345      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001898  4E4F                    2346      TRAP    #15                     ; Trap (Perform action)
0000189A  103C 0003               2347      MOVE.B  #03,        D0          ; Display number at D1.L
0000189E  7200                    2348      MOVEQ.L #0,D1
000018A0  1239 00001E3A           2349      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000018A6  4E4F                    2350      TRAP    #15                     ; Trap (Perform action)
000018A8                          2351      
000018A8                          2352  *------------print hill health --------------*
000018A8                          2353  
000018A8  103C 000B               2354      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018AC  323C 0607               2355      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000018B0  4E4F                    2356      TRAP    #15                     ; Trap (Perform action)
000018B2  43F9 00001DA4           2357      LEA     hillHP_MSG,  A1          ; Score Message
Line 2358 ERROR: Undefined symbol
000018B8  6100 A45C               2358      BSR     print
000018BC                          2359  
000018BC  103C 000B               2360      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018C0  323C 1B07               2361      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000018C4  4E4F                    2362      TRAP    #15                     ; Trap (Perform action)
000018C6  7200                    2363      MOVEQ.L #0,D1
000018C8  1239 00001DB2           2364      MOVE.B  hillHP,D1         ; Move Score to D1.L
000018CE  103C 0003               2365      MOVE.B  #03,        D0          ; Display number at D1.L
000018D2  4E4F                    2366      TRAP    #15                     ; Trap (Perform action)
000018D4                          2367      
000018D4                          2368  *------------ print back to map--------------*
000018D4                          2369  
Line 2370 ERROR: Undefined symbol
000018D4  223C 004DBD16           2370      MOVE.L  #color5,     D1
000018DA  103C 0015               2371      MOVE.B  #21,        D0          ; Set Text Color
000018DE  243C 03140000           2372      MOVE.L  #$03140000, D2
000018E4  4E4F                    2373      TRAP    #15                     ; Trap (Perform action)
000018E6                          2374  
000018E6                          2375      ; Restart
000018E6  103C 000B               2376      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018EA  323C 070C               2377      MOVE.W  #$070C,     D1          ; Col 09, Row 01
000018EE  4E4F                    2378      TRAP    #15                     ; Trap (Perform action)
000018F0  43F9 00001D3C           2379      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
000018F6  303C 000D               2380      MOVE    #13,        D0          ; No Line feedF=
000018FA  4E4F                    2381      TRAP    #15                     ; Trap (Perform action)
000018FC                          2382  
000018FC  103C 000B               2383      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001900  323C 1F0C               2384      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
00001904  4E4F                    2385      TRAP    #15                     ; Trap (Perform action)
00001906  7200                    2386      MOVEQ.L #0,D1
00001908  1239 00001ECA           2387      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
0000190E  103C 0003               2388      MOVE.B  #03,        D0          ; Display number at D1.L
00001912  4E4F                    2389      TRAP    #15                     ; Trap (Perform action)
00001914                          2390  
00001914                          2391      
00001914  103C 005E               2392      MOVE.B  #TC_REDRAW,        D0
00001918  4E4F                    2393      TRAP    #15
0000191A                          2394     
0000191A                          2395      ; delay by 1sec
0000191A  103C 0017               2396      MOVE.b  #23,D0
0000191E  7264                    2397      MOVE.L  #100,D1
00001920  4E4F                    2398      TRAP    #15
00001922                          2399  
00001922  5339 00001ECA           2400      SUB.B   #01,backToMapCount
00001928  4A39 00001ECA           2401      TST.B   backToMapCount
Line 2402 ERROR: Undefined symbol
0000192E  6700 A3E6               2402      BEQ     mapNotFirstInit
00001932                          2403  
Line 2404 ERROR: Undefined symbol
00001932  23FC 000000C8 005455B8  2404      MOVE.l  #200,currentHealth
Line 2405 ERROR: Undefined symbol
0000193C  6100 A3D8               2405      bsr     initDraw
00001940                          2406      ; back to top
00001940  6000 FEE0               2407      BRA     HILL_LOST
00001944                          2408  
00001944                          2409  INPUTLOOP:
00001944  6100 E88A               2410      BSR     BATTLEINPUT
00001948  60FA                    2411      BRA     INPUTLOOP
0000194A                          2412  
0000194A                          2413  GAME_OVER:
0000194A                          2414      
0000194A  103C 000B               2415      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000194E  323C FF00               2416      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001952  4E4F                    2417      TRAP    #15                     ; Trap (Perform action)
00001954  6100 F21E               2418      BSR     PLAY_GAMEOVER
00001958                          2419  
00001958                          2420  *------------Set Colours--------------*
Line 2421 ERROR: Undefined symbol
00001958  223C 004DBD16           2421      MOVE.L  #color5,     D1
0000195E  103C 0015               2422      MOVE.B  #21,        D0          ; Set Text Color
00001962  243C 01130005           2423      MOVE.L  #$01130005, D2
00001968  4E4F                    2424      TRAP    #15                     ; Trap (Perform action)
0000196A                          2425  
Line 2426 ERROR: Undefined symbol
0000196A  223C 004DBD16           2426      MOVE.L  #color1,     D1
00001970  103C 0051               2427      MOVE.B  #81,        D0          ; Set Text Color
00001974  4E4F                    2428      TRAP    #15                     ; Trap (Perform action)
00001976                          2429  
00001976                          2430  *------------ fill background --------------*
00001976  323C 0000               2431      MOVE.W      #0,D1
0000197A  343C 0000               2432      MOVE.W      #0,d2
0000197E  103C 0059               2433      MOVE.B      #89,D0
00001982  4E4F                    2434      TRAP        #15
00001984                          2435  
00001984                          2436  *------------ Print gameover message--------------*
00001984  103C 000B               2437      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001988  323C 1001               2438      MOVE.W  #$1001,     D1          ; Col 10, Row 03
0000198C  4E4F                    2439      TRAP    #15                     ; Trap (Perform action)
0000198E  43F9 00001D32           2440      LEA     GAMEOVER_MSG,A1        ; Game Over Message
Line 2441 ERROR: Undefined symbol
00001994  6100 A380               2441      BSR     print
00001998                          2442  
00001998  103C 000B               2443      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000199C  323C 0703               2444      MOVE.W  #$0703,     D1          ; Col 10, Row 03
000019A0  4E4F                    2445      TRAP    #15                     ; Trap (Perform action)
000019A2  43F9 00001D16           2446      LEA     FALLENKINGDOM_MSG,A1        ; Game Over Message
Line 2447 ERROR: Undefined symbol
000019A8  6100 A36C               2447      BSR     print
000019AC                          2448  
000019AC                          2449  
000019AC                          2450  *------------ Print hills defended message--------------*
000019AC                          2451      ; TODO TODO hills defended msg
000019AC  103C 000B               2452      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019B0  323C 0606               2453      MOVE.W  #$0606,     D1          ; Col 02, Row 01
000019B4  4E4F                    2454      TRAP    #15                     ; Trap (Perform action)
000019B6  43F9 00001C9E           2455      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2456 ERROR: Undefined symbol
000019BC  6100 A358               2456      BSR     print
000019C0                          2457  
000019C0  103C 000B               2458      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019C4  323C 1B06               2459      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
000019C8  4E4F                    2460      TRAP    #15                     ; Trap (Perform action)
000019CA  103C 0003               2461      MOVE.B  #03,        D0          ; Display number at D1.L
000019CE  7200                    2462      MOVEQ.L #0,D1
000019D0  1239 00001E3A           2463      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
000019D6  4E4F                    2464      TRAP    #15                     ; Trap (Perform action)
000019D8                          2465      
000019D8                          2466  *------------ Print ants remaining message--------------*
000019D8  103C 000B               2467      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019DC  323C 0607               2468      MOVE.W  #$0607,     D1          ; Col 02, Row 01
000019E0  4E4F                    2469      TRAP    #15                     ; Trap (Perform action)
000019E2  43F9 00001D92           2470      LEA     antsRem_MSG,  A1          ; Score Message
Line 2471 ERROR: Undefined symbol
000019E8  6100 A32C               2471      BSR     print
000019EC                          2472  
000019EC  103C 000B               2473      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019F0  323C 1B07               2474      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000019F4  4E4F                    2475      TRAP    #15                     ; Trap (Perform action)
000019F6  7200                    2476      MOVEQ.L #0,D1
000019F8  1239 00001E15           2477      MOVE.B  antsRemaining,D1         ; Move Score to D1.L
000019FE  103C 0003               2478      MOVE.B  #03,        D0          ; Display number at D1.L
00001A02  4E4F                    2479      TRAP    #15                     ; Trap (Perform action)
00001A04                          2480      
00001A04                          2481  *------------ change fonts --------------*
Line 2482 ERROR: Undefined symbol
00001A04  223C 004DBD16           2482      MOVE.L  #color5,     D1
00001A0A  103C 0015               2483      MOVE.B  #21,        D0          ; Set Text Color
00001A0E  243C 03140000           2484      MOVE.L  #$03140000, D2
00001A14  4E4F                    2485      TRAP    #15                     ; Trap (Perform action)
00001A16                          2486  
00001A16                          2487  *------------ Print restart message--------------*
00001A16  103C 000B               2488      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A1A  323C 0B09               2489      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001A1E  4E4F                    2490      TRAP    #15                     ; Trap (Perform action)
00001A20  43F9 00001D54           2491      LEA     RESTART_MSG,  A1          ; Score Message
00001A26  303C 000D               2492      MOVE    #13,        D0          ; No Line feedF=
00001A2A  4E4F                    2493      TRAP    #15                     ; Trap (Perform action)
00001A2C                          2494  
00001A2C                          2495      
00001A2C  103C 005E               2496      MOVE.B  #TC_REDRAW,        D0
00001A30  4E4F                    2497      TRAP    #15
00001A32                          2498  
00001A32                          2499  LOSSINPUTLOOP:
00001A32  6100 E79C               2500      BSR     BATTLEINPUT
00001A36  60FA                    2501      BRA     LOSSINPUTLOOP
00001A38                          2502  
00001A38                          2503  WAVE_DEFEATED:
00001A38                          2504  
Line 2505 ERROR: Undefined symbol
00001A38  0C79 0003 005455B8      2505      CMP.W   #3,lvlIndex
00001A40  6700 0118               2506      BEQ     WIN_SCREEN
00001A44                          2507      
00001A44  103C 000B               2508      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A48  323C FF00               2509      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001A4C  4E4F                    2510      TRAP    #15                     ; Trap (Perform action)
00001A4E  6100 F124               2511      BSR     PLAY_GAMEOVER
00001A52                          2512  
00001A52                          2513  *------------Set Colours--------------*
Line 2514 ERROR: Undefined symbol
00001A52  223C 004DBD16           2514      MOVE.L  #color5,     D1
00001A58  103C 0015               2515      MOVE.B  #21,        D0          ; Set Text Color
00001A5C  243C 01130005           2516      MOVE.L  #$01130005, D2
00001A62  4E4F                    2517      TRAP    #15                     ; Trap (Perform action)
00001A64                          2518  
Line 2519 ERROR: Undefined symbol
00001A64  223C 004DBD16           2519      MOVE.L  #color1,     D1
00001A6A  103C 0051               2520      MOVE.B  #81,        D0          ; Set Text Color
00001A6E  4E4F                    2521      TRAP    #15                     ; Trap (Perform action)
00001A70                          2522  
00001A70                          2523  *------------ fill background --------------*
00001A70  323C 0000               2524      MOVE.W      #0,D1
00001A74  343C 0000               2525      MOVE.W      #0,d2
00001A78  103C 0059               2526      MOVE.B      #89,D0
00001A7C  4E4F                    2527      TRAP        #15
00001A7E                          2528  
00001A7E                          2529  *------------ Print wave defeated message--------------*
00001A7E                          2530  
00001A7E  103C 000B               2531      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A82  323C 0E03               2532      MOVE.W  #$0E03,     D1          ; Col 10, Row 03
00001A86  4E4F                    2533      TRAP    #15                     ; Trap (Perform action)
00001A88  43F9 00001D07           2534      LEA     HILLDEFENDED_MSG,A1        ; Game Over Message
Line 2535 ERROR: Undefined symbol
00001A8E  6100 A286               2535      BSR     print
00001A92                          2536  
00001A92                          2537  *------------print amount of enemies defeated--------------*
00001A92                          2538  
00001A92  103C 000B               2539      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A96  323C 0606               2540      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001A9A  4E4F                    2541      TRAP    #15                     ; Trap (Perform action)
00001A9C  43F9 00001C9E           2542      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2543 ERROR: Undefined symbol
00001AA2  6100 A272               2543      BSR     print
00001AA6                          2544  
00001AA6  103C 000B               2545      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AAA  323C 1B06               2546      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001AAE  4E4F                    2547      TRAP    #15                     ; Trap (Perform action)
00001AB0  103C 0003               2548      MOVE.B  #03,        D0          ; Display number at D1.L
00001AB4  7200                    2549      MOVEQ.L #0,D1
00001AB6  1239 00001E3A           2550      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001ABC  4E4F                    2551      TRAP    #15                     ; Trap (Perform action)
00001ABE                          2552      
00001ABE                          2553  *------------print hill health --------------*
00001ABE                          2554  
00001ABE  103C 000B               2555      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AC2  323C 0607               2556      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001AC6  4E4F                    2557      TRAP    #15                     ; Trap (Perform action)
00001AC8  43F9 00001DA4           2558      LEA     hillHP_MSG,  A1          ; Score Message
Line 2559 ERROR: Undefined symbol
00001ACE  6100 A246               2559      BSR     print
00001AD2                          2560  
00001AD2  103C 000B               2561      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AD6  323C 1B07               2562      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001ADA  4E4F                    2563      TRAP    #15                     ; Trap (Perform action)
00001ADC  7200                    2564      MOVEQ.L #0,D1
00001ADE  1239 00001DB2           2565      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001AE4  103C 0003               2566      MOVE.B  #03,        D0          ; Display number at D1.L
00001AE8  4E4F                    2567      TRAP    #15                     ; Trap (Perform action)
00001AEA                          2568      
00001AEA                          2569  *------------ print back to map--------------*
Line 2570 ERROR: Undefined symbol
00001AEA  223C 004DBD16           2570      MOVE.L  #color5,     D1
00001AF0  103C 0015               2571      MOVE.B  #21,        D0          ; Set Text Color
00001AF4  243C 03140000           2572      MOVE.L  #$03140000, D2
00001AFA  4E4F                    2573      TRAP    #15                     ; Trap (Perform action)
00001AFC                          2574  
00001AFC                          2575  
00001AFC                          2576      ; Restart
00001AFC  103C 000B               2577      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B00  323C 070C               2578      MOVE.W  #$070C,     D1          ; Col 09, Row 01
00001B04  4E4F                    2579      TRAP    #15                     ; Trap (Perform action)
00001B06  43F9 00001D3C           2580      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
00001B0C  303C 000D               2581      MOVE    #13,        D0          ; No Line feedF=
00001B10  4E4F                    2582      TRAP    #15                     ; Trap (Perform action)
00001B12                          2583  
00001B12  103C 000B               2584      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B16  323C 1F0C               2585      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
00001B1A  4E4F                    2586      TRAP    #15                     ; Trap (Perform action)
00001B1C  7200                    2587      MOVEQ.L #0,D1
00001B1E  1239 00001ECA           2588      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
00001B24  103C 0003               2589      MOVE.B  #03,        D0          ; Display number at D1.L
00001B28  4E4F                    2590      TRAP    #15                     ; Trap (Perform action)
00001B2A                          2591  
00001B2A                          2592  
00001B2A                          2593      
00001B2A  103C 005E               2594      MOVE.B  #TC_REDRAW,        D0
00001B2E  4E4F                    2595      TRAP    #15
00001B30                          2596     
00001B30                          2597      ; delay by 1sec
00001B30  103C 0017               2598      MOVE.b  #23,D0
00001B34  7264                    2599      MOVE.L  #100,D1
00001B36  4E4F                    2600      TRAP    #15
00001B38                          2601  
00001B38  5339 00001ECA           2602      SUB.B   #01,backToMapCount
00001B3E  4A39 00001ECA           2603      TST.B   backToMapCount
Line 2604 ERROR: Undefined symbol
00001B44  6700 A1D0               2604      BEQ     mapNotFirstInit
00001B48                          2605  
Line 2606 ERROR: Undefined symbol
00001B48  6100 A1CC               2606      bsr     initDraw
Line 2607 ERROR: Undefined symbol
00001B4C  23FC 000000C8 005455B8  2607      MOVE.l  #200,currentHealth
00001B56                          2608      ; back to top
00001B56  6000 FEE0               2609      BRA     WAVE_DEFEATED
00001B5A                          2610  
00001B5A                          2611  
00001B5A                          2612  WIN_SCREEN:
Line 2613 ERROR: Undefined symbol
00001B5A  13FC 0001 005455B8      2613      move.b #1, isWin
00001B62  103C 000B               2614      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B66  323C FF00               2615      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001B6A  4E4F                    2616      TRAP    #15                     ; Trap (Perform action)
00001B6C  6100 F006               2617      BSR     PLAY_GAMEOVER
00001B70                          2618  
00001B70                          2619  *------------Set Colours--------------*
Line 2620 ERROR: Undefined symbol
00001B70  223C 004DBD16           2620      MOVE.L  #color5,     D1
00001B76  103C 0015               2621      MOVE.B  #21,        D0          ; Set Text Color
00001B7A  243C 01130005           2622      MOVE.L  #$01130005, D2
00001B80  4E4F                    2623      TRAP    #15                     ; Trap (Perform action)
00001B82                          2624  
Line 2625 ERROR: Undefined symbol
00001B82  223C 004DBD16           2625      MOVE.L  #color1,     D1
00001B88  103C 0051               2626      MOVE.B  #81,        D0          ; Set Text Color
00001B8C  4E4F                    2627      TRAP    #15                     ; Trap (Perform action)
00001B8E                          2628  
00001B8E                          2629  *------------ fill background --------------*
00001B8E  323C 0000               2630      MOVE.W      #0,D1
00001B92  343C 0000               2631      MOVE.W      #0,d2
00001B96  103C 0059               2632      MOVE.B      #89,D0
00001B9A  4E4F                    2633      TRAP        #15
00001B9C                          2634  
00001B9C                          2635  *------------ Print wave defeated message--------------*
00001B9C                          2636  
00001B9C  103C 000B               2637      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BA0  323C 0703               2638      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001BA4  4E4F                    2639      TRAP    #15                     ; Trap (Perform action)
00001BA6  43F9 00001CE9           2640      LEA     WIN_MSG,A1        ; Game Over Message
Line 2641 ERROR: Undefined symbol
00001BAC  6100 A168               2641      BSR     print
00001BB0                          2642  
00001BB0                          2643  *------------print amount of enemies defeated--------------*
00001BB0                          2644  
00001BB0  103C 000B               2645      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BB4  323C 0606               2646      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001BB8  4E4F                    2647      TRAP    #15                     ; Trap (Perform action)
00001BBA  43F9 00001C9E           2648      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2649 ERROR: Undefined symbol
00001BC0  6100 A154               2649      BSR     print
00001BC4                          2650  
00001BC4  103C 000B               2651      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BC8  323C 1B06               2652      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001BCC  4E4F                    2653      TRAP    #15                     ; Trap (Perform action)
00001BCE  103C 0003               2654      MOVE.B  #03,        D0          ; Display number at D1.L
00001BD2  7200                    2655      MOVEQ.L #0,D1
00001BD4  1239 00001E3A           2656      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001BDA  4E4F                    2657      TRAP    #15                     ; Trap (Perform action)
00001BDC                          2658      
00001BDC                          2659  *------------print hill health --------------*
00001BDC                          2660  
00001BDC  103C 000B               2661      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BE0  323C 0607               2662      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001BE4  4E4F                    2663      TRAP    #15                     ; Trap (Perform action)
00001BE6  43F9 00001DA4           2664      LEA     hillHP_MSG,  A1          ; Score Message
Line 2665 ERROR: Undefined symbol
00001BEC  6100 A128               2665      BSR     print
00001BF0                          2666  
00001BF0  103C 000B               2667      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BF4  323C 1B07               2668      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001BF8  4E4F                    2669      TRAP    #15                     ; Trap (Perform action)
00001BFA  7200                    2670      MOVEQ.L #0,D1
00001BFC  1239 00001DB2           2671      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001C02  103C 0003               2672      MOVE.B  #03,        D0          ; Display number at D1.L
00001C06  4E4F                    2673      TRAP    #15                     ; Trap (Perform action)
00001C08                          2674      
00001C08                          2675  *------------ print restart --------------*
Line 2676 ERROR: Undefined symbol
00001C08  223C 004DBD16           2676      MOVE.L  #color5,     D1
00001C0E  103C 0015               2677      MOVE.B  #21,        D0          ; Set Text Color
00001C12  243C 03140000           2678      MOVE.L  #$03140000, D2
00001C18  4E4F                    2679      TRAP    #15                     ; Trap (Perform action)
00001C1A                          2680  
00001C1A                          2681  
00001C1A                          2682      ; Restart
00001C1A  103C 000B               2683      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C1E  323C 0B09               2684      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001C22  4E4F                    2685      TRAP    #15                     ; Trap (Perform action)
00001C24  43F9 00001D54           2686      LEA     RESTART_MSG,  A1          ; Score Message
00001C2A  303C 000D               2687      MOVE    #13,        D0          ; No Line feedF=
00001C2E  4E4F                    2688      TRAP    #15                     ; Trap (Perform action)
00001C30                          2689  
00001C30                          2690      
00001C30  103C 005E               2691      MOVE.B  #TC_REDRAW,        D0
00001C34  4E4F                    2692      TRAP    #15
00001C36                          2693  
00001C36                          2694  WININPUTLOOP:
00001C36  6100 E598               2695      BSR     BATTLEINPUT
00001C3A  60FA                    2696      BRA     WININPUTLOOP
00001C3C                          2697  
00001C3C                          2698  
00001C3C                          2699  EXIT:
00001C3C                          2700      
00001C3C  103C 000B               2701      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001C40  323C FF00               2702      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001C44  4E4F                    2703      TRAP    #15                     ; Trap (Perform action)
00001C46                          2704  
00001C46  103C 005E               2705      MOVE.B  #TC_REDRAW,        D0
00001C4A  4E4F                    2706      TRAP    #15
00001C4C                          2707  
00001C4C  103C 0009               2708      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001C50  4E4F                    2709      TRAP    #15                     ; Trap (Perform action)
00001C52  FFFF FFFF               2710      SIMHALT
00001C56                          2711  
00001C56                          2712  *-----------------------------------------------------------
00001C56                          2713  * Section       : Messages
00001C56                          2714  * Description   : Messages to Print on Console, names should be
00001C56                          2715  * self documenting
00001C56                          2716  *-----------------------------------------------------------
00001C56= 53 63 6F 72 65 20 ...   2717  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00001C5F= 4B 65 79 43 6F 64 ...   2718  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
00001C6A= 4A 75 6D 70 2E 2E ...   2719  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001C73                          2720  
00001C73= 49 64 6C 65 2E 2E ...   2721  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00001C7C= 55 70 64 61 74 65 ...   2722  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001C87= 44 72 61 77 2E 2E ...   2723  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001C90                          2724  
00001C90= 58 3A 00                2725  X_MSG           DC.B    'X:', 0             ; X Position Message
00001C93= 59 3A 00                2726  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001C96= 56 3A 00                2727  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
00001C99= 44 52 41 57 00          2728  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00001C9E= 45 6E 65 6D 69 65 ...   2729  ENEMIESDEAD_MSG         DC.B    'Enemies Defeated:', 0           
00001CB0= 57 61 76 65 20 65 ...   2730  ENEMYCOUNT_MSG         DC.B    'Wave enemy count:', 0           
00001CC2                          2731  
00001CC2= 45 78 69 74 69 6E ...   2732  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00001CCE= 41 4E 54 20 48 49 ...   2733  HILLLOST_MSG    DC.B    'ANT HILL HAS BEEN OVERRUN!', 0      ; Game Over Message
00001CE9= 45 4E 45 4D 59 20 ...   2734  WIN_MSG    DC.B    'ENEMY ARMY HAS BEEN DEFEATED!', 0      ; Game Over Message
00001D07= 57 41 56 45 20 43 ...   2735  HILLDEFENDED_MSG    DC.B    'WAVE COMPLETE!', 0      ; Game Over Message
00001D16= 59 4F 55 52 20 41 ...   2736  FALLENKINGDOM_MSG    DC.B    'YOUR ANT KINGDOM HAS FALLEN', 0      ; Game Over Message
00001D32= 47 41 4D 45 20 4F ...   2737  GAMEOVER_MSG    DC.B    'GAME OVER', 0      ; Game Over Message
00001D3C= 52 65 74 75 72 6E ...   2738  BACK_TO_MAP_MSG    DC.B    'Returning to map in ...', 0      ; Game Over Message
00001D54= 50 72 65 73 73 20 ...   2739  RESTART_MSG    DC.B    'Press R to restart', 0      ; Game Over Message
00001D67= 23 23 00                2740  TREET          DC.B     '##',0
00001D6A                          2741  
00001D6A= 45 6E 74 65 72 20 ...   2742  PRESSSTART      DC.B    'Enter 1 to start',0
00001D7B= 41 4E 54 20 44 45 ...   2743  TITLEMSG        DC.B    'ANT DEFENDER',0
00001D88= 48 65 61 6C 74 68 ...   2744  antHealth_MSG       DC.B    'Health : ',0        ; health message
00001D92= 41 6E 74 73 20 52 ...   2745  antsRem_MSG       DC.B    'Ants Remaining : ',0        ; health message
00001DA4= 48 69 6C 6C 20 48 ...   2746  hillHP_MSG       DC.B    'Hill Health: ',0        ; health message
00001DB2= 0A                      2747  hillHP          DC.B      10
00001DB3                          2748  
00001DB3= 00                      2749  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
00001DB4= 00                      2750  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00001DB5= 00                      2751  DRAW_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are showing
00001DB6= 00                      2752  SPAWN_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are spawning
00001DB7                          2753  
00001DB8= 07D0                    2754  LEVEL_02        DC.W    2000
00001DBA= 2710                    2755  LEVEL_03        DC.W    10000
00001DBC                          2756  
00001DBC= 00001B58 00000FA0 ...   2757  LEVELS:         DC.L    7000,4000,2000,1000
00001DCC                          2758  
00001DCC                          2759  *-----------------------------------------------------------
00001DCC                          2760  * Section       : Screen Size
00001DCC                          2761  * Description   : Screen Width and Height
00001DCC                          2762  *-----------------------------------------------------------
00001DCC                          2763  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001DCE                          2764  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001DD0                          2765  
00001DD0                          2766  *-----------------------------------------------------------
00001DD0                          2767  * Section       : Keyboard Input
00001DD0                          2768  * Description   : Used for storing Keypresses
00001DD0                          2769  *-----------------------------------------------------------
00001DD0                          2770  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001DD4                          2771  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00001DD6                          2772  
00001DD6                          2773  *-----------------------------------------------------------
00001DD6                          2774  * Section       : Character Data
00001DD6                          2775  * Description   : Player and Enemy Position Memory Locations
00001DD6                          2776  *-----------------------------------------------------------
00001DD6                          2777  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001DDA                          2778  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001DDE                          2779  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001DE2                          2780  
00001DE2                          2781  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001DE6                          2782  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001DEA                          2783  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001DEE                          2784  
00001DEE                          2785  ; 1, = left, 0 = right
00001DEE                          2786  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
00001DEF                          2787  
00001DF0                          2788  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001DF4                          2789  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001DF8                          2790  
00001DF8                          2791  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
00001DFC                          2792  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
00001E00                          2793  
00001E00                          2794  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
00001E04                          2795  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
00001E08                          2796  
00001E08= 000000FF                2797  ENEMYCOLOR        DC.L        $000000FF
00001E0C= 00FF0000                2798  FLYENEMYCOLOR     DC.L        $00FF0000
00001E10                          2799  
00001E10                          2800  RANDOM            DS.L        01  ; Reserve Space for Random Number
00001E14= 03                      2801  antHealth         DC.B        03  ; reserves space for antHealth
00001E15= 05                      2802  antsRemaining     DC.B        05  ; reserves space for ants
00001E16                          2803  
00001E16                          2804   
00001E16= 02                      2805  POINTS            DC.B        02          ; Points added
00001E17                          2806  
00001E17= 00                      2807  CURRENTLYATTACKING   DC.B    00
00001E18= 0000                    2808  ATTACK_COOLDOWN      DC.W    00
00001E1A= 0000                    2809  ATTACK_TIME          DC.W    00
00001E1C= 00000000                2810  ATTACK_X             DC.L    00
00001E20= 00000000                2811  ATTACK_Y             DC.L    00
00001E24  =00000014               2812  ATTACK_HEIGHT        EQU     20
00001E24  =00000023               2813  ATTACK_WIDTH         EQU     35 
00001E24                          2814  
00001E24= 00                      2815  CURRENTLYTHROWING   DC.B    00
00001E26= 0000                    2816  THROW_COOLDOWN      DC.W    00
00001E28= 0000                    2817  THROW_TIME          DC.W    00
00001E2A= 00000000                2818  THROW_X             DC.L    00
00001E2E= 00000000                2819  THROW_Y             DC.L    00
00001E32  =00000014               2820  THROW_HEIGHT        EQU     20
00001E32  =00000023               2821  THROW_WIDTH         EQU     35 
00001E32                          2822  THROW_VELOCITY      DS.L    01  
00001E36                          2823  THROW_GRAVITY       DS.L    01  
00001E3A                          2824  
00001E3A= 13                      2825  ENEMIES_DEFEATED    DC.B    19
00001E3B= 00                      2826  enemiesPassed       DC.b    00
00001E3C= 00                      2827  enemiesToDefeat     DC.B    00
00001E3D                          2828  
00001E3D= 00                      2829  ENEMY_HIT           DC.B    00
00001E3E= 00                      2830  FLYENEMY_HIT        DC.B    00
00001E3F                          2831  
00001E3F                          2832  
00001E3F                          2833  * Widths and heights of player, enemy and healthpack
00001E3F                          2834  *-----------------------------------------------------------
00001E3F= 0C                      2835  PLAYER_WIDTH      DC.B        12          ; Player Width
00001E40= 0C                      2836  PLAYER_HEIGHT     DC.B        12          ; Player Height
00001E41                          2837  
00001E42= 000C                    2838  ENEMY_WIDTH       DC.W        12          ; Enemy Width
00001E44= 000C                    2839  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00001E46                          2840  
00001E46= 0014                    2841  FLYENEMY_WIDTH    DC.W        20 
00001E48= 000C                    2842  FLYENEMY_HEIGHT   DC.W        12 
00001E4A                          2843  
00001E4A                          2844          
00001E4A                          2845  *-----------------------------------------------------------
00001E4A                          2846  * Section       : Sounds
00001E4A                          2847  * Description   : Sound files, which are then loaded and given
00001E4A                          2848  * an address in memory, they take a longtime to process and play
00001E4A                          2849  * so keep the files small.
00001E4A                          2850  *-----------------------------------------------------------
00001E4A= 6A 75 6D 70 2E 77 ...   2851  JUMP_WAV        DC.B    'jump.wav',0        ; Jump Sound
00001E53= 67 61 6D 65 4F 76 ...   2852  GAMEOVER_WAV    DC.B    'gameOver.wav',0    ; Run Sound
00001E60= 68 69 74 48 75 72 ...   2853  HITHURT_WAV     DC.B    'hitHurt.wav',0     ; Collision Opps
00001E6C= 68 69 74 2E 77 61 ...   2854  HIT_WAV         DC.B    'hit.wav',0         ; Collision Opps
00001E74= 70 6F 77 65 72 55 ...   2855  POWERUP_WAV     DC.B    'powerUP.wav',0     ; Collision Opps
00001E80= 6C 65 76 65 6C 43 ...   2856  LEVELCHANGE_WAV DC.B    'levelChange.wav',0 ; Collision Opps
00001E90                          2857  
00001E90= 61 6E 74 6F 70 69 ...   2858  BATTLE_SONG_WAV DC.B    'antopia-battle.wav1',0
00001EA4= 61 6E 74 6F 70 69 ...   2859  MAP_SONG_WAV    DC.B    'antopia-map.wav1',0
00001EB5= 61 6E 74 6F 70 69 ...   2860  MENU_SONG_WAV   dc.B    'antopia-menu.wav1',0
00001EC7                          2861  
00001EC7                          2862  
00001EC8= 0000                    2863  respawnTime         dc.W        0
00001ECA= 03                      2864  backToMapCount      dc.b        3
00001ECB                          2865  *---*
00001ECC= 00000000                2866  timer           DC.L    0
00001ED0                          2867  
00001ED0                          2868  ;    END    START        ; last line of source
00001ED0                          2869  
Line 2870 WARNING: END directive missing, starting address not set

116 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ANTHEALTH           1E14
ANTHEALTH_MSG       1D88
ANTKILLED           17B6
ANTSREMAINING       1E15
ANTSREM_MSG         1D92
ARC_DONE            B5E
ATK_LTE_TO_ENEMY_Y_PLUS_H  156E
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  15DC
ATK_PLUS_H_LTE_TO_ATTACK_Y  158A
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  15F8
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  15A4
ATTACK_COLLISION    16EA
ATTACK_COOLDOWN     1E18
ATTACK_COOLDOWN_SUB  3C4
ATTACK_FLY_COLLISION  1710
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_ENMY_X  1552
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  15C0
ATTACK_TIME         1E1A
ATTACK_TIME_SUB     3BC
ATTACK_WIDTH        23
ATTACK_X            1E1C
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  1536
ATTACK_Y            1E20
BACKTOMAPCOUNT      1ECA
BACK_TO_MAP_MSG     1D3C
BATTLEINPUT         1D0
BATTLE_SONG_LOAD    C2C
BATTLE_SONG_WAV     1E90
BIGENMY_H_INIT      12
BIGENMY_W_INIT      23
CHECKPAUSED         2E8
CHECK_ATTACK_COLLISIONS  1532
CHECK_ATTACK_COOLDOWN  3AE
CHECK_ATTACK_FLY_COLLISIONS  15A0
CHECK_COLLISIONS    13F0
CHECK_ENEMIES_CLEARED  1736
CHECK_FLYENEMY_COLLISIONS  1456
CHECK_HEALTH_COLLISIONS  14C4
CHECK_THROW_COLLISION  160E
CHECK_THROW_DONE    380
CHECK_THROW_FLY_COLLISIONS  167C
CHECK_WAVE_CLEARED  550
COLLISION_CHECK_DONE  174E
COMPLETE_RESTART    2BA
CONTINUE            588
CURRENTLYATTACKING  1E17
CURRENTLYTHROWING   1E24
CURRENT_KEY         1DD0
DAMAGE_HILL         568
DELAY               1A8
DKEY                44
DRAWBATTLE          620
DRAWDIRT            13C4
DRAWHILLHEALTH      670
DRAW_ATTACK         EA4
DRAW_BACKGROUND     83A
DRAW_ENEMY          FFA
DRAW_ENTRANCE       7DA
DRAW_ENTRANCE_HOLE  80A
DRAW_FLOOR          136A
DRAW_FLYENEMY       1138
DRAW_HEALTHPACK     12E4
DRAW_HEALTHPACKS    1DB5
DRAW_HEALTHPACK_DONE  135E
DRAW_HILL           6AA
DRAW_MSG            1C87
DRAW_PLAYER         D50
DRAW_PLYR_DATA      9BC
DRAW_RESPAWN        F7C
DRAW_THROW          EF4
DRAW_TREES          864
ENEMIESDEAD_MSG     1C9E
ENEMIESPASSED       1E3B
ENEMIESTODEFEAT     1E3C
ENEMIES_DEFEATED    1E3A
ENEMYCOLLISION      1770
ENEMYCOLOR          1E08
ENEMYCOUNT_MSG      1CB0
ENEMY_HEIGHT        1E44
ENEMY_HIT           1E3D
ENEMY_WIDTH         1E42
ENEMY_X             1DF0
ENEMY_Y             1DF4
ENMY_H_INIT         D
ENMY_W_INIT         1B
ESCAPE              1B
EXIT                1C3C
EXIT_MSG            1CC2
FALLENKINGDOM_MSG   1D16
FLYENEMYCOLOR       1E0C
FLYENEMY_HEIGHT     1E48
FLYENEMY_HIT        1E3E
FLYENEMY_WIDTH      1E46
FLYINGENEMY_X       1E00
FLYINGENEMY_Y       1E04
FLY_ENMY_H_INIT     D
FLY_ENMY_W_INIT     1E
GAME                196
GAMELOOP            196
GAMEOVER_INDEX      0
GAMEOVER_LOAD       B62
GAMEOVER_MSG        1D32
GAMEOVER_WAV        1E53
GAME_OVER           194A
GND_FALSE           0
GND_TRUE            1
HEALTH_COLLISION    17D8
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            1DF8
HEALTH_Y            1DFC
HILLDEFENDED_MSG    1D07
HILLHP              1DB2
HILLHP_MSG          1DA4
HILLLOST_MSG        1CCE
HILL_LOST           1822
HITHURT_INDEX       2
HITHURT_LOAD        BA2
HITHURT_WAV         1E60
HIT_INDEX           5
HIT_LOAD            BFC
HIT_WAV             1E6C
IDLE                B60
IDLE_MSG            1C73
INITRUN             0
INIT_PLAYER         C6C
INPUTLOOP           1944
IN_ENEMY            1DB3
IN_HPACK            1DB4
IS_ATTACKING        E98
IS_PLAYER_ON_GND    ABC
IS_THROWING         EE8
JMP_INDEX           1
JUMP                B10
JUMP_DONE           B3E
JUMP_LOAD           B84
JUMP_MSG            1C6A
JUMP_WAV            1E4A
KEYCODE_MSG         1C5F
KKEY                4B
LAST_KEY            1DD4
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     1E80
LEVELS              1DBC
LEVEL_02            1DB8
LEVEL_03            1DBA
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LOSSINPUTLOOP       1A32
LVLCHANGE_LOAD      BDE
MAP_SONG_LOAD       C1A
MAP_SONG_WAV        1EA4
MENU_SONG_LOAD      C3E
MENU_SONG_WAV       1EB5
MOVE_ENEMY          3EC
MOVE_ENEMY_L2       432
MOVE_ENEMY_L3       45C
MOVE_ENEMY_L4       486
MOVE_HEALTHPACK     3CC
MOVE_PLAYER_LEFT    CFC
MOVE_PLAYER_RIGHT   D26
MOVE_RESPAWNED      F96
MOVE_THROW          352
PERFORM_ATTACK      58A
PERFORM_JUMP        B2E
PERFORM_THROW       5D6
PERFORM_THROW_ARC   B52
PLAYER_DIR          1DEE
PLAYER_HEIGHT       1E40
PLAYER_SCORE        1DDE
PLAYER_WIDTH        1E3F
PLAYER_X            1DD6
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  13F4
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  1410
PLAYER_Y            1DDA
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  142C
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  1442
PLAY_GAMEOVER       B74
PLAY_HIT            C0E
PLAY_HITHURT        BB4
PLAY_JUMP           B96
PLAY_LVLCHANGE      BF0
PLAY_POWERUP        BD2
PLAY_SONG           C50
PLX_LTE_TO_FLYENEMY_X_PLUS_W  145A
PLX_LTE_TO_HEALTH_X_PLUS_W  14C8
PLX_PLUS_W_LTE_TO_FLYENEMY_X  1476
PLX_PLUS_W_LTE_TO_HEALTH_X  14E4
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1DE6
PLYR_H_INIT         D
PLYR_JUMP_V         FFFFFFED
PLYR_ON_GND         1DEA
PLYR_VELOCITY       1DE2
PLYR_W_INIT         1B
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  1492
PLY_LTE_TO_HEALTH_Y_PLUS_H  1500
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  14AE
PLY_PLUS_H_LTE_TO_HEALTH_Y  151C
POINTS              1E16
POWERUP_INDEX       3
POWERUP_LOAD        BC0
POWERUP_WAV         1E74
PRESSSTART          1D6A
PROCESS_INPUT       274
RANDOM              1E10
RESET_ENEMY_POSITION  4B0
RESET_FLYENEMY_POSITION  4F2
RESET_HEALTH_POSITION  538
RESET_THROW         390
RESPAWNTIME         1EC8
RESTART_MSG         1D54
RKEY                52
SCORE_MSG           1C56
SCREEN_H            1DCE
SCREEN_W            1DCC
SET_OFF_GROUND      B04
SET_ON_GROUND       ADC
SKEY                53
SONG_INDEX          6
SPACEBAR            20
SPAWN_HEALTHPACKS   1DB6
STILLPAUSED         2F4
STILL_COLLIDED      1820
STOP_HPACK_SPAWN    1816
STOP_SONG           C5E
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
THROW_ARC           B40
THROW_COOLDOWN      1E26
THROW_GRAVITY       1E36
THROW_HEIGHT        14
THROW_PLUS_W_LTE_TO_ENMY_X  162E
THROW_PLUS_W_LTE_TO_FLYENMY_X  169C
THROW_TIME          1E28
THROW_VELOCITY      1E32
THROW_WIDTH         23
THROW_X             1E2A
THROW_X_LTE_TO_ENEMY_X_PLUS_W  1612
THROW_X_LTE_TO_FLYENEMY_X_PLUS_W  1680
THROW_Y             1E2E
THRW_DFLT_G         1
THRW_DFLT_V         0
THRW_H_INIT         F
THRW_JUMP_V         FFFFFFF0
THRW_W_INIT         F
TIMER               1ECC
TITLEMSG            1D7B
TREET               1D67
TRW_LTE_TO_ENEMY_Y_PLUS_H  164A
TRW_LTE_TO_FLYENEMY_Y_PLUS_H  16B8
TRW_PLUS_H_LTE_TO_FLYENEMY_Y  16D4
TRW_PLUS_H_LTE_TO_THROW_Y  1666
UPDATE              2FC
UPDATE_MSG          1C7C
UPDATE_PLAYER       CD2
VARMSG              1C99
V_MSG               1C96
WAVE_DEFEATED       1A38
WININPUTLOOP        1C36
WIN_MSG             1CE9
WIN_SCREEN          1B5A
X_MSG               1C90
Y_MSG               1C93
_00000000           1FA
_00000001           20C
_00000002           21E
_00000003           230
_00000004           254
_00000005           2E6
_00000006           424
_00000007           44C
_00000008           470
_00000009           49A
_0000000A           4E4
_0000000B           52A
_0000000C           596
_0000000D           5E2
_0000000E           B1C
_0000000F           D08
_00000010           D32
