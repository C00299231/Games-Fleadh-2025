00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 01/03/2025 21:30:14

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Oliwier Jakubiec
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *-----------------------------------------------------------
00000000                            10  * Section       : Trap Codes
00000000                            11  * Description   : Trap Codes used throughout StarterKit
00000000                            12  *-----------------------------------------------------------
00000000                            13  * Trap CODES
00000000  =00000021                 14  TC_SCREEN   EQU         33          ; Screen size information trap code
00000000  =00000000                 15  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00000000                            16                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00000000  =00000013                 17  TC_KEYCODE  EQU         19          ; Check for pressed keys
00000000  =0000005C                 18  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00000000  =0000000B                 19  TC_CURSR_P  EQU         11          ; Trap code cursor position
00000000                            20  
00000000  =0000005E                 21  TC_REDRAW   EQU         94          ; Redraw Screen
00000000  =00000009                 22  TC_EXIT     EQU         09          ; Exit Trapcode
00000000                            23  
00000000                            24  *-----------------------------------------------------------
00000000                            25  * Section       : Charater Setup
00000000                            26  * Description   : Size of Player and Enemy and properties
00000000                            27  * of these characters e.g Starting Positions and Sizes
00000000                            28  *-----------------------------------------------------------
00000000                            29  
00000000  =0000000F                 30  THRW_W_INIT EQU         15          ; Players initial Width
00000000  =0000000F                 31  THRW_H_INIT EQU         15          ; Players initial Height
00000000                            32  
00000000  =00000000                 33  THRW_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFF0                 34  THRW_JUMP_V EQU         -16          ; Player Jump Velocity
00000000  =00000001                 35  THRW_DFLT_G EQU         01          ; Player Default Gravity
00000000                            36  
00000000  =00000001                 37  GND_TRUE    EQU         01          ; Player on Ground True
00000000  =00000000                 38  GND_FALSE   EQU         00          ; Player on Ground False
00000000                            39  
00000000  =00000000                 40  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00000000  =00000001                 41  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00000000  =00000002                 42  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00000000  =00000003                 43  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00000000  =00000004                 44  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00000000  =00000005                 45  HIT_INDEX  EQU              05  
00000000  =00000007                 46  ROAR_INDEX  EQU              07  
00000000  =00000008                 47  HILLHURT_INDEX  EQU              08  
00000000                            48  
00000000  =00000006                 49  SONG_INDEX equ          06
00000000                            50  
00000000  =0000001B                 51  ENMY_W_INIT EQU         27          ; Enemy initial Width
00000000  =0000000D                 52  ENMY_H_INIT EQU         13          ; Enemy initial Height
00000000                            53  
00000000  =00000032                 54  BRUTE_W_INIT EQU         50          ; BRute Enemy initial Width
00000000  =00000019                 55  BRUTE_H_INIT EQU         25          ; Brute Enemy initial Height
00000000                            56  
00000000  =0000001E                 57  FLY_ENMY_W_INIT  EQU         30          ; Enemy initial Width
00000000  =0000000D                 58  FLY_ENMY_H_INIT  EQU         13          ; Enemy initial Height
00000000                            59  
00000000  =0000000C                 60  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00000000  =0000000C                 61  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00000000                            62  
00000000  =00000002                 63  LOOKRIGHT   EQU         02          ; Look Right
00000000  =00000001                 64  LOOKLEFT    EQU         01          ; Look Left
00000000                            65  
00000000                            66  *-----------------------------------------------------------
00000000                            67  * Section       : Keyboard Keys
00000000                            68  * Description   : Spacebar and Escape or two functioning keys
00000000                            69  * Spacebar to JUMP and Escape to Exit Game
00000000                            70  *-----------------------------------------------------------
00000000  =00000020                 71  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00000000  =0000001B                 72  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00000000  =00000052                 73  Rkey           EQU         $52         ; R ASCII Keycode
00000000  =00000041                 74  Akey           EQU         $41         ; A ASCII Keycode
00000000  =00000053                 75  Skey           EQU         $53         ; S ASCII Keycode
00000000  =00000044                 76  Dkey           EQU         $44         ; D ASCII Keycode
00000000  =0000004C                 77  Lkey           EQU         $4C         ; L ASCII Keycode
00000000  =0000004B                 78  Kkey           EQU         $4B         ; K ASCII Keycode
00000000                            79  
00000000                            80  *-----------------------------------------------------------
00000000                            81  * Subroutine    : Initialise
00000000                            82  * Description   : Initialise game data into memory such as 
00000000                            83  * sounds and screen size
00000000                            84  *-----------------------------------------------------------
00000000                            85  INITRUN:
Line 86 ERROR: Undefined symbol
00000000  33FC 0002 005455B8        86      move.w #2, lvlType
00000008                            87      
00000008  6100 0D7A                 88      BSR     stop_song
0000000C  6100 0D44                 89      BSR     BATTLE_SONG_LOAD
00000010                            90  
00000010  6100 0D64                 91      bsr PLAY_SONG
00000014                            92  
00000014                            93      ; Screen Size
00000014  103C 0021                 94      MOVE.B  #TC_SCREEN, D0          ; access screen information
00000018  7200                      95      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
0000001A  4E4F                      96      TRAP    #15                     ; interpret D0 and D1 for screen size
0000001C  33C1 0000237A             97      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
00000022  4841                      98      SWAP    D1                      ; Swap top and bottom word to retrive screen size
00000024  33C1 00002378             99      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
0000002A                           100  
0000002A  6100 0D66                101      BSR     INIT_PLAYER
0000002E                           102      
0000002E                           103      ; Initialise Player Velocity
0000002E  B381                     104      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000030  123C 0000                105      MOVE.B  #THRW_DFLT_V,D1         ; Init Player Velocity
00000034  23C1 000023EA            106      MOVE.L  D1,         THROW_VELOCITY
0000003A                           107  
0000003A                           108      ; Initialise Player Gravity
0000003A  B381                     109      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000003C  7201                     110      MOVE.L  #THRW_DFLT_G,D1         ; Init Player Gravity
0000003E  23C1 000023EE            111      MOVE.L  D1,         THROW_GRAVITY
00000044                           112  
00000044                           113      ; Initial Position for Enemy
00000044  B381                     114      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000046  3239 00002378            115      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000004C  0681 00000064            116      ADD.L   #100,D1
00000052  23C1 0000239C            117      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
00000058                           118  
00000058  B381                     119      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000005A  3239 0000237A            120      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000060  82FC 0002                121      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000064  23C1 000023A0            122      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
0000006A                           123  
0000006A                           124      ; Initial Position for Flying Enemy
0000006A  B381                     125      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000006C  3239 00002378            126      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000072  0681 00000064            127      ADD.L   #100,D1
00000078  23C1 000023AC            128      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
0000007E                           129  
0000007E  B381                     130      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000080  3239 0000237A            131      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000086  82FC 0002                132      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000008A  0441 003C                133      SUB.W   #60,        D1
0000008E  23C1 000023B0            134      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000094                           135      
00000094                           136      ; Initial Position for Health pack
00000094  23FC 0000017C 000023A4   137      MOVE.L  #380,         HEALTH_X     ; Enemy X Position
0000009E  23FC 0000005A 000023A8   138      MOVE.L  #90,         HEALTH_Y     ; Enemy Y Position
000000A8                           139  
000000A8  13FC 0064 0000235D       140      MOVE.B     #100,    hillHP
000000B0                           141  
000000B0  45F9 00002368            142      LEA    LEVELS,      A2
000000B6  13FC 0003 000023C8       143      MOVE.B  #03,        antHealth
000000BE                           144  
Line 145 ERROR: Undefined symbol
000000BE  23FC 00000096 005455B8   145      MOVE.L  #150,       currentHealth
000000C8                           146  
000000C8  13FC 0002 000023CD       147      MOVE.B  #02,        POINTS
000000D0  13FC 0000 00002360       148      MOVE.B  #00,        DRAW_HEALTHPACKS
000000D8  13FC 0000 00002361       149      MOVE.B  #00,        SPAWN_HEALTHPACKS
000000E0                           150  
000000E0  23FC 00000000 000023D4   151      MOVE.L  #0,         ATTACK_X
000000EA  23FC 00000000 000023D8   152      MOVE.L  #0,         ATTACK_Y
000000F4  23FC FFFFFF9C 000023E2   153      MOVE.L  #-100,      THROW_X
000000FE  23FC FFFFFF9C 000023E6   154      MOVE.L  #-100,      THROW_Y
00000108                           155      
00000108  13FC 0000 000023CE       156      MOVE.B  #00,        CURRENTLYATTACKING
00000110  13FC 0000 000023DC       157      MOVE.B  #00,        CURRENTLYTHROWING
00000118                           158      
00000118  13FC 0000 000023F5       159      MOVE.B  #00,        ENEMY_HIT
00000120  13FC 0000 000023F6       160      MOVE.B  #00,        FLYENEMY_HIT
00000128                           161  
00000128  0639 0014 000023F4       162      ADD.B   #20,        enemiesToDefeat
00000130  13FC 0000 000023F2       163      MOVE.B  #0,         ENEMIES_DEFEATED
00000138  13FC 0000 000023F3       164      MOVE.B  #0,         enemiesPassed
00000140  13FC 0004 000024A0       165      MOVE.B  #4,         backToMapCount
00000148  4281                     166      CLR.L   D1
0000014A                           167      
0000014A  13D6 0000235D            168      MOVE.B  (a6),   hillHP
00000150                           169      ; Init brute
00000150                           170      ; Initial Position for BRUTE
00000150  B381                     171      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000152  3239 00002378            172      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000158  0681 00000064            173      ADD.L   #100,D1
0000015E  23C1 000023B4            174      MOVE.L  D1,         BRUTE_X     
00000164                           175  
00000164  B381                     176      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000166  3239 0000237A            177      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000016C  82FC 0002                178      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000170  23C1 000023B8            179      MOVE.L  D1,         BRUTE_Y     
00000176                           180  
00000176  13FC 0000 000023F7       181      MOVE.B      #0,     BRUTE_DEAD          
0000017E  13FC 0000 000023F8       182      MOVE.B      #0,     BRUTE_HIT           
00000186  13FC 0003 000023F9       183      MOVE.B      #3,     BRUTE_HP            
0000018E                           184  
0000018E                           185      ; Enable the screen back buffer(see easy 68k help)
0000018E  103C 005C                186      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
00000192  123C 0011                187      MOVE.B  #17,        D1          ; Combine Tasks
00000196  4E4F                     188      TRAP    #15                     ; Trap (Perform action)
00000198                           189          
00000198                           190      ; Clear the screen (see easy 68k help)
00000198  103C 000B                191      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000019C  323C FF00                192      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000001A0  4E4F                     193      TRAP    #15                     ; Trap (Perform action)
000001A2                           194  
000001A2  6000 0002                195      bra gameloop
000001A6                           196  
000001A6                           197  *-----------------------------------------------------------
000001A6                           198  * Subroutine    : Game
000001A6                           199  * Description   : Game including main GameLoop. GameLoop is like
000001A6                           200  * a while loop in that it runs forever until interupted
000001A6                           201  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
000001A6                           202  *-----------------------------------------------------------
000001A6                           203  GAME:
000001A6                           204  
000001A6                           205      
000001A6                           206  GAMELOOP:
000001A6                           207  
000001A6  7008                     208      MOVEQ       #8,d0               * get time in 1/100 ths seconds
000001A8  4E4F                     209      TRAP        #15
000001AA                           210  
000001AA  2F01                     211      MOVE.l  d1,-(sp)            * push time on the stack
000001AC  2E1F                     212      MOVE.l  (sp)+,d7            * restore time in 1/100 ths from stack
000001AE  4EB9 000001B8            213      jsr wait_100ms
000001B4  6000 0010                214      bra continueLoop
000001B8                           215  
000001B8                           216  wait_100ms:
000001B8  7008                     217      MOVEQ       #8,d0               * get time in 1/100 ths seconds
000001BA  4E4F                     218      TRAP        #15
000001BC                           219  
000001BC  9287                     220      SUB.l       d7,d1               * subtract previous time from current time
000001BE  B23C 0002                221      CMP.b       #$02,d1         * compare with 9/100ths
000001C2  6BF4                     222      BMI.s       wait_100ms          * loop if time not up yet
000001C4  4E75                     223      rts
000001C6                           224  
000001C6                           225  continueLoop:   ; after wait is done
000001C6  6100 0018                226      BSR     BATTLEINPUT                   ; Check Keyboard Input
000001CA  6100 012C                227      BSR     checkPaused
000001CE  6100 013C                228      BSR     UPDATE                  ; Update positions and points
000001D2  6100 0A02                229      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
000001D6  6100 15FE                230      BSR     CHECK_COLLISIONS        ; Check for Collisions
000001DA  6100 0512                231      BSR     DRAWBATTLE                  ; Draw the Scene
000001DE                           232                  ; Loop back to GameLoop
000001DE  60C6                     233      BRA     GAMELOOP    
000001E0                           234      
000001E0                           235  *-----------------------------------------------------------
000001E0                           236  * Subroutine    : Input
000001E0                           237  * Description   : Process Keyboard Input
000001E0                           238  *-----------------------------------------------------------
000001E0                           239  BATTLEINPUT:
000001E0  2039 0000237C            240      move.l CURRENT_KEY, D0
Line 241 ERROR: Undefined symbol
000001E6  13C0 005455B8            241      move.b D0,lastkey 
000001EC                           242  
000001EC  103C 0013                243      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000001F0                           244      ;MOVE.L  #$41444C20, D1          
Line 245 ERROR: Undefined symbol
000001F0  223C 004DBD16            245      MOVE.L  #runActionKeys, D1          ; Check for A, D, L, and Spacebar
000001F6  4E4F                     246      TRAP    #15                         ; Trap (Perform action)
000001F8  23C1 0000237C            247      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
000001FE                           248  
000001FE  0801 0018                249      BTST.L  #24,D1
00000202                           250      IF <NE> THEN
00000206  6100 0C1A                251          BSR    MOVE_PLAYER_LEFT
0000020A                           252      ENDI
0000020A                           253  
0000020A  2239 0000237C            254      MOVE.L  CURRENT_KEY, D1
00000210  0801 0010                255      BTST.L  #16,D1
00000214                           256      IF <NE> THEN
00000218  6100 0C32                257          BSR    MOVE_PLAYER_RIGHT
0000021C                           258      ENDI
0000021C                           259  
0000021C  2239 0000237C            260      MOVE.L  CURRENT_KEY, D1
00000222  0801 0008                261      BTST.L  #8,D1
00000226                           262      IF <NE> THEN
0000022A  6100 042C                263          BSR    PERFORM_ATTACK
0000022E                           264      ENDI
0000022E                           265  
0000022E  2239 0000237C            266      MOVE.L  CURRENT_KEY, D1
00000234  0801 0000                267      BTST.L  #0,D1
00000238                           268      IF <NE> THEN
0000023C  6100 0C38                269          BSR    JUMP
00000240                           270      ENDI
00000240                           271  
00000240  103C 0013                272      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
00000244  223C 00001B4B            273      MOVE.L  #$1B4B, D1                 ; check K and escape
0000024A  4E4F                     274      TRAP    #15                     ; Trap (Perform action)
0000024C  23C1 0000237C            275      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
00000252                           276  
00000252  2239 0000237C            277      MOVE.L  CURRENT_KEY, D1
00000258  0801 0000                278      BTST.L  #0,D1
0000025C                           279      IF <NE> THEN
00000260  6100 0442                280          BSR    PERFORM_THROW
00000264                           281      ENDI
00000264                           282  
00000264                           283  
00000264                           284  
00000264                           285      ; Process Input
00000264  4281                     286      CLR.L   D1                      ; Clear Data Register
00000266  4282                     287      CLR.L   D2
00000268  103C 0013                288      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
0000026C  4E4F                     289      TRAP    #15                     ; Trap (Perform action)
0000026E  1401                     290      MOVE.B  D1,         D2          ; Move last key D1 to D2
00000270  B43C 0000                291      CMP.B   #00,        D2          ; Key is pressed
00000274  6700 000E                292      BEQ     PROCESS_INPUT           ; Process Key
00000278  4E4F                     293      TRAP    #15                     ; Trap for Last Key
0000027A                           294      ; Check if key still pressed
0000027A  B23C 00FF                295      CMP.B   #$FF,       D1          ; Is it still pressed
0000027E  6700 0004                296      BEQ     PROCESS_INPUT           ; Process Last Key
00000282  4E75                     297      RTS                             ; Return to subroutine
00000284                           298  *-----------------------------------------------------------
00000284                           299  * Subroutine    : Process Input
00000284                           300  * Description   : Branch based on keys pressed
00000284                           301  *-----------------------------------------------------------
00000284                           302  PROCESS_INPUT:
00000284  23C2 0000237C            303      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
0000028A                           304  
0000028A                           305  ; pause
Line 306 ERROR: Undefined symbol
0000028A  13C2 005455B8            306      move.b  d2,         currentKey
Line 307 ERROR: Undefined symbol
00000290  0C39 0016 005455CC       307      CMP.b   #escapekey,    currentKey ; Is Current Key Escape
Line 308 ERROR: Undefined symbol
00000298  6700 BA7C                308      BEQ     escapePressed
0000029C                           309  
Line 310 ERROR: Undefined symbol
0000029C  0C39 0016 005455C0       310      cmpi.b #key0, currentKey ; fullscreen
Line 311 ERROR: Undefined symbol
000002A4  6700 BA70                311      beq key0pressed
000002A8                           312  
Line 313 ERROR: Undefined symbol
000002A8  4A39 004DBD16            313      tst.b   isPaused
Line 314 ERROR: Undefined symbol
000002AE  6600 BA66                314      bne     pausedInput
000002B2                           315  
Line 316 ERROR: Undefined symbol
000002B2  0C79 0003 005455B8       316      CMP.W   #3,lvlIndex
000002BA  6700 000E                317      BEQ     COMPLETE_RESTART
000002BE                           318  
000002BE  4A39 000023C9            319      TST.B   antsRemaining
000002C4  6F00 0004                320      BLE     COMPLETE_RESTART
000002C8                           321  
000002C8  4E75                     322      RTS                             ; Return to subroutine
000002CA                           323  
000002CA                           324  COMPLETE_RESTART:
000002CA  0CB9 00000052 0000237C   325      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
000002D4                           326      IF <EQ> THEN
Line 327 ERROR: Undefined symbol
000002D8  33FC 0001 005455B8       327          move.w #1, lvlType
000002E0                           328  
Line 329 ERROR: Undefined symbol
000002E0  223C 004DBD16            329          MOVE.L    #color5,D1
000002E6  243C 00015F90            330          MOVE.L  #00090000,D2
Line 331 ERROR: Undefined symbol
000002EC  103C 0016                331          MOVE.B  #tcFont,D0
000002F0  4E4F                     332          TRAP    #15
000002F2                           333          
Line 334 ERROR: Undefined symbol
000002F2  6000 BA22                334          BRA     nextInit
000002F6                           335      ENDI
000002F6                           336  
000002F6  4E75                     337      RTS                             ; Return to subroutine
000002F8                           338  *----------
000002F8                           339  checkPaused:
Line 340 ERROR: Undefined symbol
000002F8  4A39 004DBD16            340      TST.B  isPaused
000002FE  6600 0004                341      BNE    stillPaused
00000302  4E75                     342      RTS
00000304                           343  
00000304                           344  stillPaused:
00000304  6100 03E8                345      BSR    DRAWBATTLE
00000308  6000 FE9C                346      BRA    GAMELOOP
0000030C                           347  *-----------------------------------------------------------
0000030C                           348  * Subroutine    : Update
0000030C                           349  * Description   : Main update loop update Player and Enemies
0000030C                           350  *-----------------------------------------------------------
0000030C                           351  UPDATE:
0000030C                           352      ; update player position
0000030C  6100 0AEA                353      BSR     UPDATE_PLAYER
00000310  6100 00A2                354      BSR     MOVE_THROW
00000314                           355  
00000314                           356      ; Move the Enemy
00000314  4281                     357      CLR.L   D1                      ; Clear the contents of D0
00000316  2239 0000239C            358      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
0000031C  B2BC 00000000            359      CMP.L   #00,        D1
00000322  6F00 01FC                360      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
00000326  6100 0126                361      BSR     MOVE_ENEMY              ; Move the Enemy
0000032A                           362  
0000032A                           363      ; Move flying enemy
0000032A  4281                     364      CLR.L   D1                      ; Clear the contents of D0
0000032C  2239 000023AC            365      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
00000332  B2BC 00000000            366      CMP.L   #00,        D1
00000338  6F00 0228                367      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
0000033C                           368      
0000033C                           369      ; Move Brute enemy
0000033C  4281                     370      CLR.L   D1                      ; Clear the contents of D0
0000033E  2239 000023B4            371      MOVE.L  BRUTE_X,    D1          ; Move the Enemy X Position to D0
00000344  B2BC 00000000            372      CMP.L   #00,        D1
0000034A  6F00 025C                373      BLE     RESET_BRUTE_POSITION    ; Reset Enemy if off Screen
0000034E  B2BC 00000294            374      CMP.L   #660,D1
00000354                           375      IF <EQ> THEN
00000358  6100 09BC                376          BSR     PLAY_ROAR
0000035C                           377      ENDI
0000035C                           378  
0000035C                           379  
0000035C                           380      ; move health
0000035C  6100 00D0                381      BSR     MOVE_HEALTHPACK
00000360  13FC 0001 00002362       382      MOVE.B  #1, healthCooldownOver
00000368  0C79 0000 000024A2       383      CMP.W   #0,healthCooldown
00000370                           384      IF <GT> THEN
00000374  5379 000024A2            385          SUBI.W  #1, healthCooldown
0000037A  13FC 0000 00002362       386          MOVE.B  #0, healthCooldownOver
00000382                           387      ENDI
00000382                           388  
00000382  6100 008C                389      BSR     CHECK_ATTACK_COOLDOWN
00000386                           390  
00000386  4A79 000023D2            391      TST.W   ATTACK_TIME
0000038C  6600 0090                392      BNE     ATTACK_TIME_SUB
00000390  13FC 0000 000023CE       393      MOVE.B  #00,        CURRENTLYATTACKING
00000398  23FC 000001E0 000023D8   394      MOVE.L  #480,        ATTACK_Y
000003A2                           395  
000003A2  4A39 000024A4            396      TST.B   hillHurtTimer
000003A8                           397      IF <NE> THEN
000003AC  5339 000024A4            398          SUB.B   #1,hillHurtTimer
000003B2                           399      ENDI
000003B2                           400  
000003B2  4E75                     401      RTS                             ; Return to subroutine  
000003B4                           402  
000003B4                           403  MOVE_THROW:
000003B4                           404         ; Update the Players Positon based on Velocity and Gravity
000003B4  B381                     405      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
000003B6  2239 000023EA            406      MOVE.L  THROW_VELOCITY, D1       ; Fetch Player Velocity
000003BC  2439 000023EE            407      MOVE.L  THROW_GRAVITY, D2        ; Fetch Player Gravity
000003C2  D282                     408      ADD.L   D2,         D1          ; Add Gravity to Velocity
000003C4  23C1 000023EA            409      MOVE.L  D1,         THROW_VELOCITY ; Update Player Velocity
000003CA  D2B9 000023E6            410      ADD.L   THROW_Y,   D1          ; Add Velocity to Player
000003D0  23C1 000023E6            411      MOVE.L  D1,         THROW_Y    ; Update Players Y Position
000003D6                           412  
000003D6  58B9 000023E2            413      ADDI.L   #4,        THROW_X
000003DC  6100 0004                414      BSR     CHECK_THROW_DONE
000003E0                           415      
000003E0  4E75                     416      RTS
000003E2                           417  
000003E2                           418  CHECK_THROW_DONE:
000003E2  0CB9 0000015E 000023E6   419      CMP.L    #350, THROW_Y
000003EC  6E00 0004                420      BGT      RESET_THROW
000003F0  4E75                     421      RTS
000003F2                           422  
000003F2                           423  RESET_THROW:
000003F2  13FC 0000 000023DC       424      MOVE.B   #00, CURRENTLYTHROWING
000003FA  23FC FFFFFF9C 000023E2   425      MOVE.L   #-100, THROW_X
00000404  23FC FFFFFF9C 000023E6   426      MOVE.L   #-100, THROW_Y
0000040E  4E75                     427      RTS
00000410                           428  
00000410                           429  CHECK_ATTACK_COOLDOWN:
00000410  0C79 0000 000023D0       430      CMP.W   #0, ATTACK_COOLDOWN
00000418  6E00 000C                431      BGT     ATTACK_COOLDOWN_SUB
0000041C  4E75                     432      RTS
0000041E                           433  
0000041E                           434  ATTACK_TIME_SUB:
0000041E  5579 000023D2            435      SUB.W   #02,        ATTACK_TIME
00000424  4E75                     436      RTS   
00000426                           437  ATTACK_COOLDOWN_SUB:
00000426  5579 000023D0            438      SUB.W   #02,        ATTACK_COOLDOWN
0000042C  4E75                     439      RTS                            
0000042E                           440  
0000042E                           441  MOVE_HEALTHPACK:
0000042E                           442      ; check if health is meant to spawn
0000042E  4A39 00002361            443      TST.B   SPAWN_HEALTHPACKS
00000434  6700 0220                444      BEQ     CONTINUE
00000438                           445      
00000438                           446      ; check if health is on the
00000438  0CB9 000000F0 000023A8   447      CMP.L   #240,       HEALTH_Y
00000442  6C00 0212                448      BGE     CONTINUE
00000446                           449  
00000446                           450      ; else
00000446  52B9 000023A8            451      ADD.L   #01,        HEALTH_Y
0000044C  4E75                     452      RTS
0000044E                           453  
0000044E                           454  *-----------------------------------------------------------
0000044E                           455  * Subroutine    : Move Enemy
0000044E                           456  * Description   : Move Enemy Right to Left
0000044E                           457  *-----------------------------------------------------------
0000044E                           458  MOVE_ENEMY:
Line 459 ERROR: Undefined symbol
0000044E  0C79 0003 005455B8       459      CMP.W   #3,lvlIndex
00000456  6700 00A0                460      BEQ     MOVE_ENEMY_L4
Line 461 ERROR: Undefined symbol
0000045A  0C79 0002 005455B8       461      CMP.W   #2,lvlIndex
00000462  6700 006C                462      BEQ     MOVE_ENEMY_L3
Line 463 ERROR: Undefined symbol
00000466  0C79 0001 005455B8       463      CMP.W   #1,lvlIndex
0000046E  6700 0024                464      BEQ     MOVE_ENEMY_L2
00000472                           465  
00000472  0CB9 000000B4 000023AC   466      CMP.L   #180,FLYINGENEMY_X
0000047C                           467      IF <LE> THEN
00000480  52B9 000023B0            468          ADD.L   #1,FLYINGENEMY_Y
00000486                           469      ENDI
00000486                           470  
00000486  57B9 000023AC            471      SUB.L   #03,        FLYINGENEMY_X
0000048C  55B9 0000239C            472      SUB.L   #02,        ENEMY_X     ; Move enemy by X Value
00000492  4E75                     473      RTS
00000494                           474  
00000494                           475  MOVE_ENEMY_L2:
00000494  55B9 000023AC            476      SUB.L   #02,        FLYINGENEMY_X
0000049A  0CB9 0000017C 000023B0   477      CMP.L   #380,       FLYINGENEMY_Y
000004A4                           478      IF <GE> THEN
000004A8  55B9 000023AC            479          SUB.l   #02,    FLYINGENEMY_X
000004AE                           480      ENDI
000004AE                           481  
000004AE  0CB9 00000082 000023AC   482      CMP.L   #130,      FLYINGENEMY_X
000004B8                           483      IF <LE> THEN
000004BC  52B9 000023B0            484          ADD.L   #1,FLYINGENEMY_Y
000004C2                           485      ENDI
000004C2  59B9 0000239C            486      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
000004C8  53B9 000023B4            487      SUB.L   #1,         BRUTE_X
000004CE  4E75                     488      RTS
000004D0                           489  
000004D0                           490  MOVE_ENEMY_L3:
000004D0  0CB9 00000082 000023AC   491      CMP.L   #130,      FLYINGENEMY_X
000004DA                           492      IF <LE> THEN
000004DE  56B9 000023B0            493          ADD.L   #3,FLYINGENEMY_Y
000004E4                           494      ENDI
000004E4  5BB9 000023AC            495      SUB.L   #05,        FLYINGENEMY_X
000004EA  59B9 0000239C            496      SUB.L   #04,        ENEMY_X     ; Move enemy by X Value
000004F0  55B9 000023B4            497      SUB.L   #2,         BRUTE_X
000004F6  4E75                     498      RTS
000004F8                           499  
000004F8                           500  MOVE_ENEMY_L4:
000004F8  0CB9 00000082 000023AC   501      CMP.L   #130,      FLYINGENEMY_X
00000502                           502      IF <LE> THEN
00000506  58B9 000023B0            503          ADD.L   #4,FLYINGENEMY_Y
0000050C                           504      ENDI
0000050C  5FB9 000023AC            505      SUB.L   #07,        FLYINGENEMY_X
00000512  5BB9 0000239C            506      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
00000518  55B9 000023B4            507      SUB.L   #2,         BRUTE_X
0000051E  4E75                     508      RTS
00000520                           509  *-----------------------------------------------------------
00000520                           510  * Subroutine    : Reset Enemy
00000520                           511  * Description   : Reset Enemy if to passes 0 to Right of Screen
00000520                           512  *-----------------------------------------------------------
00000520                           513  RESET_ENEMY_POSITION:
00000520  4281                     514      CLR.L   D1       
00000522  3239 0000237A            515      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000528  82FC 0002                516      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000052C  23C1 000023A0            517      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
00000532                           518  
00000532  B381                     519      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
00000534  3239 00002378            520      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
0000053A  0681 0000001B            521      ADD.L   #ENMY_W_INIT,D1
00000540  23C1 0000239C            522      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
00000546                           523  
00000546  4A39 000023F5            524      TST.B     ENEMY_HIT
0000054C                           525      IF <EQ> THEN        ; enemy has not been hit
00000550  6100 00D8                526          BSR   damage_hill
00000554                           527      ENDI
00000554  13FC 0000 000023F5       528      MOVE.B  #0,         ENEMY_HIT
0000055C  6100 00B4                529      BSR     CHECK_WAVE_CLEARED
00000560                           530  
00000560  4E75                     531      RTS
00000562                           532  
00000562                           533  RESET_FLYENEMY_POSITION:
00000562  B381                     534      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000564  3239 0000237A            535      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
0000056A  82FC 0002                536      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
0000056E  0441 003C                537      SUB.W   #60,        D1
00000572  23C1 000023B0            538      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000578                           539  
00000578  4281                     540      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000057A  3239 00002378            541      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000580  0681 0000001E            542      ADD.L   #FLY_ENMY_W_INIT,D1
00000586  23C1 000023AC            543      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
0000058C                           544  
0000058C  4A39 000023F6            545      TST.B     FLYENEMY_HIT
00000592                           546      IF <EQ> THEN        ; enemy has not been hit
00000596  6100 0092                547          BSR   damage_hill
0000059A                           548      ENDI
0000059A  13FC 0000 000023F6       549      MOVE.B  #0,         FLYENEMY_HIT
000005A2  6100 006E                550      BSR     CHECK_WAVE_CLEARED
000005A6                           551  
000005A6  4E75                     552      RTS
000005A8                           553  
000005A8                           554  RESET_BRUTE_POSITION:
000005A8  4281                     555      CLR.L   D1       
000005AA  3239 0000237A            556      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000005B0  82FC 0002                557      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000005B4  23C1 000023B8            558      MOVE.L  D1,         BRUTE_Y     ; brute Enemy Y Position
000005BA                           559  
000005BA  B381                     560      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
000005BC  3239 00002378            561      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000005C2  0681 00000064            562      ADD.L   #100,D1
000005C8  23C1 000023B4            563      MOVE.L  D1,         BRUTE_X     ; Enemy X Position
000005CE                           564  
000005CE  4A39 000023F7            565      TST.B     BRUTE_DEAD
000005D4                           566      IF <EQ> THEN        ; big enemy has not been killed
000005D8  6100 0050                567          BSR   damage_hill
000005DC  6100 004C                568          BSR   damage_hill        
000005E0                           569      ENDI
000005E0  13FC 0003 000023F9       570      MOVE.B  #3,         BRUTE_HP
000005E8  13FC 0000 000023F8       571      MOVE.B  #0,         BRUTE_HIT
000005F0  13FC 0000 000023F7       572      MOVE.B  #0,         BRUTE_DEAD
000005F8                           573  
000005F8  6100 0018                574      BSR     CHECK_WAVE_CLEARED
000005FC                           575  
000005FC  4E75                     576      RTS
000005FE                           577  
000005FE                           578  RESET_HEALTH_POSITION:
000005FE  13FC 0001 00002360       579      MOVE.B  #01,        DRAW_HEALTHPACKS
00000606  23FC 0000005A 000023A8   580      MOVE.L  #90,        HEALTH_Y
00000610  4E75                     581      RTS
00000612                           582  
00000612                           583  CHECK_WAVE_CLEARED:
00000612  5239 000023F3            584      ADDI.B  #1,         enemiesPassed
00000618  1239 000023F3            585      MOVE.B  enemiesPassed,D1
0000061E  B239 000023F4            586      CMP.B   enemiesToDefeat,D1
00000624  6700 19B6                587      BEQ     WAVE_DEFEATED
00000628  4E75                     588      RTS
0000062A                           589  
0000062A                           590  damage_hill:
0000062A  0439 000A 0000235D       591      sub.b  #10,hillHP
00000632  6100 0700                592      BSR     PLAY_HILLHURT
Line 593 ERROR: Undefined symbol
00000636  04B9 0000000F 005455B8   593      sub.l   #15,currentHealth
00000640  13FC 000A 000024A4       594      move.b  #10,hillHurtTimer
00000648  0C39 0000 0000235D       595      CMP.b   #0,hillHP
00000650  6F00 1774                596      BLE     HILL_LOST
00000654  4E75                     597      RTS
00000656                           598  
00000656                           599  CONTINUE:
00000656  4E75                     600      RTS
00000658                           601  
00000658                           602  PERFORM_ATTACK:
Line 603 ERROR: Undefined symbol
00000658  4A39 004DBD16            603      TST.B  isPaused
0000065E                           604      IF <NE> THEN
00000662  4E75                     605          RTS
00000664                           606      ENDI
00000664  4A79 000023D0            607      TST.W    ATTACK_COOLDOWN
0000066A  66EA                     608      BNE      CONTINUE
0000066C                           609      
0000066C  13FC 0001 000023CE       610      MOVE.B   #01, CURRENTLYATTACKING
00000674  33FC 0032 000023D2       611      MOVE.W   #50, ATTACK_TIME
0000067C  33FC 004C 000023D0       612      MOVE.W   #76, ATTACK_COOLDOWN
00000684                           613  
00000684  23F9 00002382 000023D4   614      MOVE.L   PLAYER_X,ATTACK_X
0000068E  06B9 0000001B 000023D4   615      ADDI.L   #PLYR_W_INIT,ATTACK_X
00000698  23F9 00002386 000023D8   616      MOVE.L   PLAYER_Y,ATTACK_Y
000006A2  4E75                     617      RTS
000006A4                           618  
000006A4                           619  PERFORM_THROW:
Line 620 ERROR: Undefined symbol
000006A4  4A39 004DBD16            620      TST.B  isPaused
000006AA                           621      IF <NE> THEN
000006AE  4E75                     622          RTS
000006B0                           623      ENDI
000006B0  4A39 000023DC            624      TST.B    CURRENTLYTHROWING
000006B6  669E                     625      BNE      CONTINUE
000006B8                           626      
000006B8  13FC 0001 000023DC       627      MOVE.B   #01,CURRENTLYTHROWING
000006C0  23F9 00002382 000023E2   628      MOVE.L   PLAYER_X,THROW_X
000006CA  06B9 0000001B 000023E2   629      ADDI.L   #PLYR_W_INIT,THROW_X
000006D4  23F9 00002386 000023E6   630      MOVE.L   PLAYER_Y,THROW_Y
000006DE  04B9 0000000D 000023E6   631      SUBI.L   #PLYR_H_INIT,THROW_Y
000006E8                           632  
000006E8  6100 0552                633      BSR     PERFORM_THROW_ARC
000006EC  4E75                     634      RTS
000006EE                           635  
000006EE                           636  *-----------------------------------------------------------
000006EE                           637  * Subroutine    : Draw
000006EE                           638  * Description   : Draw Screen
000006EE                           639  *-----------------------------------------------------------
000006EE                           640  DRAWBATTLE: 
000006EE                           641      ; Enable back buffer
000006EE  103C 005E                642      MOVE.B  #TC_REDRAW,        D0
000006F2  4E4F                     643      TRAP    #15
000006F4                           644  
000006F4                           645      ; Clear the screen
000006F4  103C 000B                646      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000006F8  323C FF00                647      MOVE.W  #$FF00,     D1          ; Clear contents
000006FC  4E4F                     648      TRAP    #15                     ; Trap (Perform action)
000006FE                           649  
000006FE  123C 0001                650      MOVE.B  #1,D1
00000702  103C 005D                651      MOVE.B  #93,D0
00000706  4E4F                     652      TRAP    #15
00000708                           653  
00000708  6100 02A0                654      BSR     DRAW_BACKGROUND        
0000070C  6100 015C                655      BSR     DRAW_HILL 
00000710  6100 02C2                656      BSR     DRAW_TREES
00000714  6100 0264                657      BSR     DRAW_ENTRANCE_HOLE
00000718  6100 0AF8                658      BSR     DRAW_ENEMY              ; Draw Enemy
0000071C  6100 0D7E                659      BSR     DRAW_FLYENEMY
00000720  6100 0C2E                660      BSR     DRAW_BRUTEENEMY
00000724  6100 0F24                661      BSR     DRAW_HEALTHPACK
00000728  6100 01FC                662      BSR     DRAW_ENTRANCE
0000072C  6100 0778                663      BSR     DRAW_PLAYER             ; Draw Player
00000730  6100 101E                664      BSR     DRAW_FLOOR              ; Draw Floor
00000734  6100 03F6                665      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
00000738  6100 0010                666      BSR     drawHillHealth         ; draw hill hp
0000073C  6100 006C                667      BSR     drawAntHealth
00000740  6100 00C8                668      BSR     drawAntsRemaining
Line 669 ERROR: Undefined symbol
00000744  6100 B5D0                669      BSR     drawPause
00000748  4E75                     670      RTS                             ; Return to subroutine
0000074A                           671  
0000074A                           672  
0000074A                           673  
0000074A                           674  drawHillHealth:
0000074A  720A                     675      move.l  #10,        D1
0000074C  243C 000001A9            676      move.l  #425,       D2
00000752  283C 000001B8            677      move.l  #440,       D4
00000758  4285                     678      clr.l   d5
0000075A  4286                     679      clr.l   d6
0000075C  1A39 000023CA            680      move.b     maxHillHp,  d5
00000762  1C39 0000235D            681      move.b     hillHP, D6
00000768  CAFC 0002                682      mulu.w  #2,d5
0000076C  CCFC 0002                683      mulu.w  #2,d6
Line 684 ERROR: Undefined symbol
00000770  6100 B5A4                684      BSR     drawModularHbar
00000774                           685          
Line 686 ERROR: Undefined symbol
00000774  223C 004DBD16            686      MOVE.L  #color5,D1
Line 687 ERROR: Undefined symbol
0000077A  103C 0016                687      MOVE.B  #tcFont,D0
0000077E  243C 00015F90            688      MOVE.L  #00090000,D2
00000784  4E4F                     689      TRAP    #15
00000786                           690  
Line 691 ERROR: Undefined symbol
00000786  223C 004DBD16            691      MOVE.L  #deepgreen,D1
Line 692 ERROR: Undefined symbol
0000078C  103C 0016                692      MOVE.B  #tcPenFil,D0
00000790  4E4F                     693      TRAP    #15
00000792                           694  
00000792  103C 000B                695      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000796  323C 021B                696      MOVE.W  #$021B,     D1          ; Col 02, Row 01
0000079A  4E4F                     697      TRAP    #15                     ; Trap (Perform action)
0000079C  43F9 00002348            698      LEA     hillHP_MSG,  A1          ; Score Message
000007A2  303C 000D                699      MOVE    #13,        D0          ; No Line feed
000007A6  4E4F                     700      TRAP    #15                     ; Trap (Perform action)
000007A8                           701  
000007A8  4E75                     702      RTS
000007AA                           703  drawAntHealth:
000007AA  720A                     704      move.l  #10,        D1
000007AC  243C 0000014F            705      move.l  #335,       D2
000007B2  283C 0000015E            706      move.l  #350,       D4
000007B8  4285                     707      clr.l   d5
000007BA  4286                     708      clr.l   d6
000007BC  1A39 000023CB            709      move.b     maxAntHp,  d5
000007C2  1C39 000023C8            710      move.b     antHealth, D6
000007C8  CAFC 0032                711      mulu.w  #50,d5
000007CC  CCFC 0032                712      mulu.w  #50,d6
Line 713 ERROR: Undefined symbol
000007D0  6100 B544                713      BSR     drawModularHbar
000007D4                           714          
Line 715 ERROR: Undefined symbol
000007D4  223C 004DBD16            715      MOVE.L  #color5,D1
Line 716 ERROR: Undefined symbol
000007DA  103C 0016                716      MOVE.B  #tcFont,D0
000007DE  243C 00015F90            717      MOVE.L  #00090000,D2
000007E4  4E4F                     718      TRAP    #15
000007E6                           719  
Line 720 ERROR: Undefined symbol
000007E6  223C 004DBD16            720      MOVE.L  #deepgreen,D1
Line 721 ERROR: Undefined symbol
000007EC  103C 0016                721      MOVE.B  #tcPenFil,D0
000007F0  4E4F                     722      TRAP    #15
000007F2                           723  
000007F2  103C 000B                724      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000007F6  323C 0215                725      MOVE.W  #$0215,     D1          ; Col 02, Row 01
000007FA  4E4F                     726      TRAP    #15                     ; Trap (Perform action)
000007FC  43F9 0000232C            727      LEA     antHealth_MSG,  A1          ; Score Message
00000802  303C 000D                728      MOVE    #13,        D0          ; No Line feed
00000806  4E4F                     729      TRAP    #15                     ; Trap (Perform action)
00000808                           730  
00000808  4E75                     731      RTS
0000080A                           732  drawAntsRemaining:
0000080A  720A                     733      move.l  #10,        D1
0000080C  243C 0000017C            734      move.l  #380,       D2
00000812  283C 0000018B            735      move.l  #395,       D4
00000818  4285                     736      clr.l   d5
0000081A  4286                     737      clr.l   d6
0000081C  1A39 000023CC            738      move.b     maxRemainingAnts,  d5
00000822  1C39 000023C9            739      move.b     antsRemaining, D6
00000828  CAFC 0028                740      mulu.w  #40,d5
0000082C  CCFC 0028                741      mulu.w  #40,d6
Line 742 ERROR: Undefined symbol
00000830  6100 B4E4                742      BSR     drawModularHbar
00000834                           743          
Line 744 ERROR: Undefined symbol
00000834  223C 004DBD16            744      MOVE.L  #color5,D1
Line 745 ERROR: Undefined symbol
0000083A  103C 0016                745      MOVE.B  #tcFont,D0
0000083E  243C 00015F90            746      MOVE.L  #00090000,D2
00000844  4E4F                     747      TRAP    #15
00000846                           748  
Line 749 ERROR: Undefined symbol
00000846  223C 004DBD16            749      MOVE.L  #deepgreen,D1
Line 750 ERROR: Undefined symbol
0000084C  103C 0016                750      MOVE.B  #tcPenFil,D0
00000850  4E4F                     751      TRAP    #15
00000852                           752  
00000852  103C 000B                753      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000856  323C 0218                754      MOVE.W  #$0218,     D1          ; Col 02, Row 01
0000085A  4E4F                     755      TRAP    #15                     ; Trap (Perform action)
0000085C  43F9 00002336            756      LEA     antsRem_MSG,  A1          ; Score Message
00000862  303C 000D                757      MOVE    #13,        D0          ; No Line feed
00000866  4E4F                     758      TRAP    #15                     ; Trap (Perform action)
00000868                           759  
00000868  4E75                     760      RTS
0000086A                           761  
0000086A                           762  DRAW_HILL:
0000086A                           763  
0000086A                           764  
0000086A                           765      ; Set Pixel Colors
Line 766 ERROR: Undefined symbol
0000086A  223C 004DBD16            766      MOVE.L  #DIRT,     D1          ; Set Background color
00000870  103C 0050                767      MOVE.B  #80,        D0          ; Task for Background Color
00000874  4E4F                     768      TRAP    #15                     ; Trap (Perform action)
00000876                           769  
Line 770 ERROR: Undefined symbol
00000876  223C 004DBD16            770      MOVE.L  #DIRT,     D1
0000087C  103C 0051                771      MOVE.B  #81,        D0
00000880  4E4F                     772      TRAP    #15
00000882                           773  
00000882  0C39 0000 000024A4       774      CMP.B   #0, hillHurtTimer
0000088A                           775      IF <NE> THEN
0000088E                           776       
Line 777 ERROR: Undefined symbol
0000088E  223C 004DBD16            777          MOVE.L  #MIDBROWN,     D1          ; Set Background color
00000894  103C 0050                778          MOVE.B  #80,        D0          ; Task for Background Color
00000898  4E4F                     779          TRAP    #15                     ; Trap (Perform action)
0000089A                           780  
Line 781 ERROR: Undefined symbol
0000089A  223C 004DBD16            781          MOVE.L  #MIDBROWN,     D1
000008A0  103C 0051                782          MOVE.B  #81,        D0
000008A4  4E4F                     783          TRAP    #15
000008A6                           784      ENDI
000008A6                           785  
000008A6                           786       
000008A6                           787      ; Set X, Y, X2, and Y2
000008A6  7200                     788      MOVE.L  #0,   D1          ; X
000008A8  243C 000000F1            789      MOVE.L  #241,  D2          ; Y
000008AE  761E                     790      MOVE.L  #30,   D3           
000008B0  7878                     791      MOVE.L  #120,   D4     
000008B2                           792      
000008B2  103C 0057                793      MOVE.B  #87,        D0          ; Draw 
000008B6  4E4F                     794      TRAP    #15                     ; Trap (Perform action)
000008B8                           795      
000008B8                           796       ; Set X, Y, X2, and Y2
000008B8  7200                     797      MOVE.L  #0,   D1          ; X
000008BA  243C 000000F1            798      MOVE.L  #241,  D2          ; Y
000008C0  763C                     799      MOVE.L  #60,   D3           
000008C2  283C 00000087            800      MOVE.L  #135,   D4 
000008C8                           801      
000008C8                           802      
000008C8  103C 0057                803      MOVE.B  #87,        D0          ; Draw
000008CC  4E4F                     804      TRAP    #15                     ; Trap (Perform action)
000008CE                           805  
000008CE                           806       ; Set X, Y, X2, and Y2
000008CE  7200                     807      MOVE.L  #0,   D1          ; X
000008D0  243C 000000F1            808      MOVE.L  #241,  D2          ; Y
000008D6  7650                     809      MOVE.L  #80,   D3           
000008D8  283C 00000096            810      MOVE.L  #150,   D4 
000008DE                           811      
000008DE                           812      
000008DE  103C 0057                813      MOVE.B  #87,        D0          ; Draw 
000008E2  4E4F                     814      TRAP    #15                     ; Trap (Perform action)
000008E4                           815  
000008E4                           816       ; Set X, Y, X2, and Y2
000008E4  7200                     817      MOVE.L  #0,   D1          ; X
000008E6  243C 000000F1            818      MOVE.L  #241,  D2          ; Y
000008EC  7664                     819      MOVE.L  #100,   D3           
000008EE  283C 000000C8            820      MOVE.L  #200,   D4 
000008F4                           821      
000008F4                           822      
000008F4  103C 0057                823      MOVE.B  #87,        D0          ; Draw 
000008F8  4E4F                     824      TRAP    #15                     ; Trap (Perform action)
000008FA                           825  
Line 826 ERROR: Undefined symbol
000008FA  223C 004DBD16            826      MOVE.L  #BLACK,     D1
00000900  103C 0051                827      MOVE.B  #81,        D0
00000904  4E4F                     828      TRAP    #15
Line 829 ERROR: Undefined symbol
00000906  223C 004DBD16            829      MOVE.L  #BLACK,     D1
0000090C  103C 0050                830      MOVE.B  #80,        D0
00000910  4E4F                     831      TRAP    #15
00000912                           832  
00000912                           833      ; Set X, Y, X2, and Y2
00000912  7205                     834      MOVE.L  #5,   D1          ; X
00000914  243C 00000082            835      MOVE.L  #130,  D2          ; Y
0000091A  7619                     836      MOVE.L  #25,   D3           
0000091C  7878                     837      MOVE.L  #120,   D4     
0000091E                           838  
0000091E                           839      
0000091E  103C 0057                840      MOVE.B  #87,        D0          ; Draw 
00000922  4E4F                     841      TRAP    #15                     ; Trap (Perform action)
00000924                           842  
00000924  4E75                     843      RTS
00000926                           844  
00000926                           845  DRAW_ENTRANCE:
00000926                           846      ; Set Pixel Colors
Line 847 ERROR: Undefined symbol
00000926  223C 004DBD16            847      MOVE.L  #DIRT,     D1          ; Set Background color
0000092C  103C 0050                848      MOVE.B  #80,        D0          ; Task for Background Color
00000930  4E4F                     849      TRAP    #15                     ; Trap (Perform action)
00000932                           850  
Line 851 ERROR: Undefined symbol
00000932  223C 004DBD16            851      MOVE.L  #DIRT,     D1
00000938  103C 0051                852      MOVE.B  #81,        D0
0000093C  4E4F                     853      TRAP    #15
0000093E                           854  
0000093E                           855      
0000093E  0C39 0000 000024A4       856      CMP.B   #0, hillHurtTimer
00000946                           857      IF <NE> THEN
0000094A                           858              ; Set Pixel Colors
Line 859 ERROR: Undefined symbol
0000094A  223C 004DBD16            859          MOVE.L  #MIDBROWN,     D1          ; Set Background color
00000950  103C 0050                860          MOVE.B  #80,        D0          ; Task for Background Color
00000954  4E4F                     861          TRAP    #15                     ; Trap (Perform action)
00000956                           862  
Line 863 ERROR: Undefined symbol
00000956  223C 004DBD16            863          MOVE.L  #MIDBROWN,     D1
0000095C  103C 0051                864          MOVE.B  #81,        D0
00000960  4E4F                     865          TRAP    #15
00000962                           866      ENDI
00000962                           867  
00000962                           868      ; Set X, Y, X2, and Y2
00000962  7200                     869      MOVE.L  #0,   D1          ; X
00000964  243C 000000F1            870      MOVE.L  #241,  D2          ; Y
0000096A  7605                     871      MOVE.L  #5,   D3           
0000096C  283C 000000B5            872      MOVE.L  #181,   D4     
00000972                           873      
00000972  103C 0057                874      MOVE.B  #87,        D0          ; Draw 
00000976  4E4F                     875      TRAP    #15                     ; Trap (Perform action)
00000978                           876  
00000978  4E75                     877      RTS
0000097A                           878  
0000097A                           879  DRAW_ENTRANCE_HOLE:
0000097A                           880      ; Set Pixel Colors
Line 881 ERROR: Undefined symbol
0000097A  223C 004DBD16            881      MOVE.L  #BLACK,     D1          ; Set Background color
00000980  103C 0050                882      MOVE.B  #80,        D0          ; Task for Background Color
00000984  4E4F                     883      TRAP    #15                     ; Trap (Perform action)
00000986                           884  
Line 885 ERROR: Undefined symbol
00000986  223C 004DBD16            885      MOVE.L  #BLACK,     D1
0000098C  103C 0051                886      MOVE.B  #81,        D0
00000990  4E4F                     887      TRAP    #15
00000992                           888  
00000992                           889      ; Set X, Y, X2, and Y2
00000992  7205                     890      MOVE.L  #5,   D1          ; X
00000994  243C 000000F1            891      MOVE.L  #241,  D2          ; Y
0000099A  7614                     892      MOVE.L  #20,   D3           
0000099C  283C 000000D3            893      MOVE.L  #211,   D4     
000009A2                           894      
000009A2  103C 0057                895      MOVE.B  #87,        D0          ; Draw 
000009A6  4E4F                     896      TRAP    #15                     ; Trap (Perform action)
000009A8  4E75                     897      RTS
000009AA                           898  
000009AA                           899  DRAW_BACKGROUND:
000009AA  4281                     900      CLR.L       D1
Line 901 ERROR: Undefined symbol
000009AC  223C 004DBD16            901      MOVE.L      #SKY,D1
000009B2  103C 0051                902      MOVE.B      #81,D0
000009B6  4E4F                     903      TRAP        #15
000009B8                           904  
000009B8  7200                     905      MOVE.L      #00, D1
000009BA  7400                     906      MOVE.L      #00, D2
000009BC  7059                     907      MOVE.L      #89, D0
000009BE  4E4F                     908      TRAP        #15
000009C0                           909      
Line 910 ERROR: Undefined symbol
000009C0  223C 004DBD16            910      MOVE.L     #brown,D1
000009C6  243C 01110000            911      MOVE.L     #$01110000,D2
000009CC  103C 0015                912      MOVE.B     #21,D0
000009D0  4E4F                     913      TRAP       #15
000009D2                           914  
000009D2  4E75                     915      RTS
000009D4                           916  
000009D4                           917  DRAW_TREES:
000009D4                           918      
000009D4  7204                     919      MOVE.L  #4,D1
000009D6  705D                     920      MOVE.L  #93,D0
000009D8  4E4F                     921      TRAP    #15
000009DA                           922      
000009DA                           923      ; Set Pixel Colors
Line 924 ERROR: Undefined symbol
000009DA  223C 004DBD16            924      MOVE.L  #TRUNKO,     D1          ; Set Background color
000009E0  103C 0050                925      MOVE.B  #80,        D0          ; Task for Background Color
000009E4  4E4F                     926      TRAP    #15                     ; Trap (Perform action)
000009E6                           927  
Line 928 ERROR: Undefined symbol
000009E6  223C 004DBD16            928      MOVE.L  #TRUNKO,     D1
000009EC  103C 0051                929      MOVE.B  #81,        D0
000009F0  4E4F                     930      TRAP    #15
000009F2                           931      
000009F2                           932      ; left trunk
000009F2  223C 0000014A            933      MOVE.L  #330,D1
000009F8  243C 000000F1            934      MOVE.L  #241,D2
000009FE  263C 00000154            935      MOVE.L  #340,D3
00000A04  283C 00000089            936      MOVE.L  #137,D4
00000A0A                           937      
00000A0A  103C 0054                938      MOVE.B  #84,D0
00000A0E  4E4F                     939      TRAP    #15
00000A10                           940      
00000A10                           941      ;top trunk
00000A10  223C 00000170            942      MOVE.L  #368,D1
00000A16  2404                     943      MOVE.L  D4,D2
00000A18  103C 0055                944      MOVE.B  #85,D0
00000A1C  4E4F                     945      TRAP    #15
00000A1E                           946      
00000A1E                           947      ; right trunk
00000A1E  223C 00000177            948      MOVE.L  #375,D1
00000A24  243C 000000F1            949      MOVE.L  #241,D2
00000A2A  103C 0055                950      MOVE.B  #85,D0
00000A2E  4E4F                     951      TRAP    #15
00000A30                           952      
00000A30                           953      ; bottom of trunk
00000A30  223C 0000014A            954      MOVE.L  #330,D1
00000A36  243C 000000F1            955      MOVE.L  #241,D2
00000A3C  103C 0055                956      MOVE.B  #85,D0
00000A40  4E4F                     957      TRAP    #15
00000A42                           958      
00000A42                           959      ; fill in trunk of tree
Line 960 ERROR: Undefined symbol
00000A42  223C 004DBD16            960      MOVE.L  #TRUNKI,     D1
00000A48  103C 0051                961      MOVE.B  #81,        D0
00000A4C  4E4F                     962      TRAP    #15
00000A4E                           963      
00000A4E  223C 00000154            964      MOVE.L  #340,D1
00000A54  243C 000000A0            965      MOVE.L  #160,D2
00000A5A  103C 0059                966      MOVE.B  #89,D0
00000A5E  4E4F                     967      TRAP    #15
00000A60                           968     
00000A60                           969     ; reset pen size
00000A60  7201                     970      MOVE.L  #1,D1
00000A62  705D                     971      MOVE.L  #93,D0
00000A64  4E4F                     972      TRAP    #15
00000A66                           973  
00000A66                           974     ; Set Pixel Colors
Line 975 ERROR: Undefined symbol
00000A66  223C 004DBD16            975      MOVE.L  #GREEN1,     D1          ; Set Background color
00000A6C  103C 0050                976      MOVE.B  #80,        D0          ; Task for Background Color
00000A70  4E4F                     977      TRAP    #15                     ; Trap (Perform action)
00000A72                           978  
Line 979 ERROR: Undefined symbol
00000A72  223C 004DBD16            979      MOVE.L  #GREEN1,     D1
00000A78  103C 0051                980      MOVE.B  #81,        D0
00000A7C  4E4F                     981      TRAP    #15
00000A7E                           982  
00000A7E                           983  ; 88 for elipse
00000A7E  223C 0000012F            984      MOVE.L  #303,D1
00000A84  7421                     985      MOVE.L  #33,D2
00000A86  263C 00000187            986      MOVE.L  #391,D3
00000A8C  7876                     987      MOVE.L  #118,D4
00000A8E  103C 0057                988      MOVE.B  #87,D0
00000A92  4E4F                     989      TRAP    #15
00000A94                           990     
00000A94                           991        ; Set Pixel Colors
Line 992 ERROR: Undefined symbol
00000A94  223C 004DBD16            992      MOVE.L  #GREEN2,     D1          ; Set Background color
00000A9A  103C 0050                993      MOVE.B  #80,        D0          ; Task for Background Color
00000A9E  4E4F                     994      TRAP    #15                     ; Trap (Perform action)
00000AA0                           995  
Line 996 ERROR: Undefined symbol
00000AA0  223C 004DBD16            996      MOVE.L  #GREEN2,     D1
00000AA6  103C 0051                997      MOVE.B  #81,        D0
00000AAA  4E4F                     998      TRAP    #15
00000AAC                           999  
00000AAC                          1000  ; 88 for elipse
00000AAC  223C 00000152           1001      MOVE.L  #338,D1
00000AB2  742A                    1002      MOVE.L  #42,D2
00000AB4  263C 000001AB           1003      MOVE.L  #427,D3
00000ABA  283C 00000085           1004      MOVE.L  #133,D4
00000AC0  103C 0057               1005      MOVE.B  #87,D0
00000AC4  4E4F                    1006      TRAP    #15
00000AC6                          1007      
00000AC6                          1008            ; Set Pixel Colors
Line 1009 ERROR: Undefined symbol
00000AC6  223C 004DBD16           1009      MOVE.L  #GREEN3,     D1          ; Set Background color
00000ACC  103C 0050               1010      MOVE.B  #80,        D0          ; Task for Background Color
00000AD0  4E4F                    1011      TRAP    #15                     ; Trap (Perform action)
00000AD2                          1012  
Line 1013 ERROR: Undefined symbol
00000AD2  223C 004DBD16           1013      MOVE.L  #GREEN3,     D1
00000AD8  103C 0051               1014      MOVE.B  #81,        D0
00000ADC  4E4F                    1015      TRAP    #15
00000ADE                          1016  
00000ADE                          1017  ; 88 for elipse
00000ADE  223C 0000011C           1018      MOVE.L  #284,D1
00000AE4  7441                    1019      MOVE.L  #65,D2
00000AE6  263C 00000170           1020      MOVE.L  #368,D3
00000AEC  283C 00000096           1021      MOVE.L  #150,D4
00000AF2  103C 0057               1022      MOVE.B  #87,D0
00000AF6  4E4F                    1023      TRAP    #15
00000AF8                          1024      
00000AF8                          1025            ; Set Pixel Colors
Line 1026 ERROR: Undefined symbol
00000AF8  223C 004DBD16           1026      MOVE.L  #GREEN4,     D1          ; Set Background color
00000AFE  103C 0050               1027      MOVE.B  #80,        D0          ; Task for Background Color
00000B02  4E4F                    1028      TRAP    #15                     ; Trap (Perform action)
00000B04                          1029  
Line 1030 ERROR: Undefined symbol
00000B04  223C 004DBD16           1030      MOVE.L  #GREEN4,     D1
00000B0A  103C 0051               1031      MOVE.B  #81,        D0
00000B0E  4E4F                    1032      TRAP    #15
00000B10                          1033  
00000B10                          1034  ; 88 for elipse
00000B10  223C 00000154           1035      MOVE.L  #340,D1
00000B16  744C                    1036      MOVE.L  #76,D2
00000B18  263C 000001A7           1037      MOVE.L  #423,D3
00000B1E  283C 0000009E           1038      MOVE.L  #158,D4
00000B24  103C 0057               1039      MOVE.B  #87,D0
00000B28  4E4F                    1040      TRAP    #15
00000B2A                          1041      
00000B2A                          1042  
00000B2A                          1043      
00000B2A                          1044  
00000B2A  4E75                    1045      RTS
00000B2C                          1046  *-----------------------------------------------------------
00000B2C                          1047  * Subroutine    : Draw game info
00000B2C                          1048  * Description   : Draw info about the current battle e.g. your hp, hill hp, ant remaining, etc.
00000B2C                          1049  *-----------------------------------------------------------
00000B2C                          1050  DRAW_PLYR_DATA:
00000B2C  B381                    1051      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000B2E  B582                    1052      EOR.L    D2,D2
00000B30                          1053  
Line 1054 ERROR: Undefined symbol
00000B30  223C 004DBD16           1054      MOVE.L  #color5,D1
Line 1055 ERROR: Undefined symbol
00000B36  103C 0016               1055      MOVE.B  #tcFont,D0
Line 1056 ERROR: Invalid syntax
00000B3A                          1056      MOVE.L  #000A0000,D2
00000B3A  4E4F                    1057      TRAP    #15
00000B3C                          1058  
Line 1059 ERROR: Undefined symbol
00000B3C  223C 004DBD16           1059      MOVE.L  #deepgreen,D1
Line 1060 ERROR: Undefined symbol
00000B42  103C 0016               1060      MOVE.B  #tcPenFil,D0
00000B46  4E4F                    1061      TRAP    #15
00000B48                          1062  
00000B48                          1063        ; Show antHealth msg
00000B48  103C 000B               1064      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000B4C  323C 0201               1065      MOVE.W  #$0201,     D1          ; Col 02, Row 06
00000B50  4E4F                    1066      TRAP    #15                     ; Trap (Perform action)
00000B52  43F9 00002356           1067      LEA     wave_MSG,   A1          ; Draw
00000B58  303C 000D               1068      MOVE    #13,        D0          ; No Line feed
00000B5C  4E4F                    1069      TRAP    #15                     ; Trap (Perform action)  
00000B5E                          1070      
00000B5E                          1071      ; Show antHealth msg
00000B5E  103C 000B               1072      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000B62  323C 1701               1073      MOVE.W  #$1701,     D1          ; Col 30, Row 1
00000B66  4E4F                    1074      TRAP    #15                     ; Trap (Perform action)   
00000B68  B381                    1075      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
Line 1076 ERROR: Undefined symbol
00000B6A  1239 004DBD16           1076      MOVE.B  lvlIndex,      D1          ; Move Key Pressed to D1
00000B70  5201                    1077      ADDI.B  #1,D1
00000B72  103C 0003               1078      MOVE.B  #03,        D0          ; Display the contents of D1
00000B76  4E4F                    1079      TRAP    #15                     ; Trap (Perform action)
00000B78                          1080  
00000B78  103C 000B               1081      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000B7C  323C 0203               1082      MOVE.W  #$0203,     D1          ; Col 10, Row 03
00000B80  4E4F                    1083      TRAP    #15                     ; Trap (Perform action)
00000B82  43F9 00002242           1084      LEA     ENEMIESDEAD_MSG,    A1          ; On Ground Message
00000B88  303C 000D               1085      MOVE    #13,        D0          ; No Line feed
00000B8C  4E4F                    1086      TRAP    #15                     ; Trap (Perform action)
00000B8E                          1087      
00000B8E  103C 000B               1088      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000B92  323C 1703               1089      MOVE.W  #$1703,     D1          ; Col 06, Row 04
00000B96  4E4F                    1090      TRAP    #15                     ; Trap (Perform action)
00000B98  103C 0003               1091      MOVE.B  #03,        D0          ; Display number at D1.L
00000B9C  4281                    1092      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000B9E  1239 000023F2           1093      MOVE.B  ENEMIES_DEFEATED,     D1          ; Move Play on Ground ? to D1.L
00000BA4  4E4F                    1094      TRAP    #15                     ; Trap (Perform action)
00000BA6                          1095      
00000BA6                          1096      ; number of enemies in wave msg
00000BA6  103C 000B               1097      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000BAA  323C 0202               1098      MOVE.W  #$0202,     D1          ; Col 10, Row 03
00000BAE  4E4F                    1099      TRAP    #15                     ; Trap (Perform action)
00000BB0  43F9 00002254           1100      LEA     ENEMYCOUNT_MSG,    A1          ; On Ground Message
00000BB6  303C 000D               1101      MOVE    #13,        D0          ; No Line feed
00000BBA  4E4F                    1102      TRAP    #15                     ; Trap (Perform action)
00000BBC                          1103      
00000BBC                          1104      ; number of enemies in wave 
00000BBC  103C 000B               1105      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000BC0  323C 1702               1106      MOVE.W  #$1702,     D1          ; Col 06, Row 04
00000BC4  4E4F                    1107      TRAP    #15                     ; Trap (Perform action)
00000BC6  4281                    1108      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000BC8  1239 000023F4           1109      MOVE.B  enemiesToDefeat,     D1          ; Move Play on Ground ? to D1.L
00000BCE  103C 0003               1110      MOVE.B  #03,        D0          ; Display number at D1.L
00000BD2  4E4F                    1111      TRAP    #15                     ; Trap (Perform action)
00000BD4                          1112  
00000BD4                          1113  
00000BD4  4E75                    1114      RTS
00000BD6                          1115  *-----------------------------------------------------------
00000BD6                          1116  * Subroutine    : Player is on Ground
00000BD6                          1117  * Description   : Check if the Player is on or off Ground
00000BD6                          1118  *-----------------------------------------------------------
00000BD6                          1119  IS_PLAYER_ON_GND:
00000BD6                          1120      ; Check if Player is on Ground
00000BD6  4281                    1121      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000BD8  4282                    1122      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
00000BDA  3239 0000237A           1123      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
00000BE0  82FC 0002               1124      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000BE4  2439 00002386           1125      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
00000BEA  B441                    1126      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
00000BEC  6C00 0008               1127      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
00000BF0  6D00 002C               1128      BLT     SET_OFF_GROUND          ; The Player is off the Ground
00000BF4  4E75                    1129      RTS                             ; Return to subroutine
00000BF6                          1130  
00000BF6                          1131  
00000BF6                          1132  *-----------------------------------------------------------
00000BF6                          1133  * Subroutine    : On Ground
00000BF6                          1134  * Description   : Set the Player On Ground
00000BF6                          1135  *-----------------------------------------------------------
00000BF6                          1136  SET_ON_GROUND:
00000BF6  4281                    1137      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000BF8  3239 0000237A           1138      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000BFE  82FC 0002               1139      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000C02  23C1 00002386           1140      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00000C08  4281                    1141      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000C0A  7200                    1142      MOVE.L  #00,        D1          ; Player Velocity
00000C0C  23C1 0000238E           1143      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
00000C12  23FC 00000001 00002396  1144      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
00000C1C  4E75                    1145      RTS
00000C1E                          1146  
00000C1E                          1147  *-----------------------------------------------------------
00000C1E                          1148  * Subroutine    : Off Ground
00000C1E                          1149  * Description   : Set the Player Off Ground
00000C1E                          1150  *-----------------------------------------------------------
00000C1E                          1151  SET_OFF_GROUND:
00000C1E  23FC 00000000 00002396  1152      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00000C28  4E75                    1153      RTS                             ; Return to subroutine
00000C2A                          1154  
00000C2A                          1155  *-----------------------------------------------------------
00000C2A                          1156  * Subroutine    : Throw
00000C2A                          1157  * Description   : Perform a Throw
00000C2A                          1158  *-----------------------------------------------------------
00000C2A                          1159  THROW_ARC:
00000C2A  0CB9 00000001 00002396  1160      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000C34  6700 0006               1161      BEQ     PERFORM_THROW_ARC    ; Do Jump
00000C38  6000 000E               1162      BRA     ARC_DONE               ;
00000C3C                          1163  PERFORM_THROW_ARC:
00000C3C                          1164      ;BSR     PLAY_JUMP               ; Play jump sound
00000C3C  23FC FFFFFFF0 000023EA  1165      MOVE.L  #THRW_JUMP_V,THROW_VELOCITY ; Set the players velocity to true
00000C46  4E75                    1166      RTS                             ; Return to subroutine
00000C48                          1167  ARC_DONE:
00000C48  4E75                    1168      RTS                             ; Return to subroutine
00000C4A                          1169  
00000C4A                          1170  *-----------------------------------------------------------
00000C4A                          1171  * Subroutine    : Idle
00000C4A                          1172  * Description   : Perform a Idle
00000C4A                          1173  *----------------------------------------------------------- 
00000C4A                          1174  IDLE:
00000C4A  4E75                    1175      RTS                             ; Return to subroutine
00000C4C                          1176  
00000C4C                          1177  *-----------------------------------------------------------
00000C4C                          1178  * Subroutines   : Sound Load and Play
00000C4C                          1179  * Description   : Initialise game sounds into memory 
00000C4C                          1180  * Current Sounds are RUN, JUMP and Opps for Collision
00000C4C                          1181  *-----------------------------------------------------------
00000C4C                          1182  GAMEOVER_LOAD:
00000C4C  43F9 0000240D           1183      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00000C52  323C 0000               1184      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00000C56  303C 004A               1185      MOVE    #74,        D0          ; Load into memory
00000C5A  4E4F                    1186      TRAP    #15                     ; Trap (Perform action)
00000C5C  4E75                    1187      RTS                             ; Return to subroutine
00000C5E                          1188  
00000C5E                          1189  PLAY_GAMEOVER:
00000C5E  6100 0124               1190      bsr STOP_SONG
00000C62  323C 0000               1191      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00000C66  303C 004B               1192      MOVE    #75,        D0          ; Play Sound
00000C6A  4E4F                    1193      TRAP    #15                     ; Trap (Perform action)
00000C6C  4E75                    1194      RTS                             ; Return to subroutine
00000C6E                          1195  
00000C6E                          1196  JUMP_LOAD:
00000C6E  43F9 00002404           1197      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
00000C74  323C 0001               1198      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
00000C78  303C 004A               1199      MOVE    #74,        D0          ; Load into memory
00000C7C  4E4F                    1200      TRAP    #15                     ; Trap (Perform action)
00000C7E  4E75                    1201      RTS                             ; Return to subroutine
00000C80                          1202  
00000C80                          1203  PLAY_JUMP:
00000C80  323C 0001               1204      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
00000C84  303C 004B               1205      MOVE    #75,        D0          ; Play Sound
00000C88  4E4F                    1206      TRAP    #15                     ; Trap (Perform action)
00000C8A  4E75                    1207      RTS                             ; Return to subroutine
00000C8C                          1208  
00000C8C                          1209  HITHURT_LOAD:
00000C8C  43F9 0000241A           1210      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
00000C92  323C 0002               1211      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
00000C96  303C 004A               1212      MOVE    #74,        D0          ; Load into memory
00000C9A  4E4F                    1213      TRAP    #15                     ; Trap (Perform action)
00000C9C  4E75                    1214      RTS                             ; Return to subroutine
00000C9E                          1215  
00000C9E                          1216  PLAY_HITHURT:
00000C9E  323C 0002               1217      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
00000CA2  303C 004B               1218      MOVE    #75,        D0          ; Play Sound
00000CA6  4E4F                    1219      TRAP    #15                     ; Trap (Perform action)
00000CA8  4E75                    1220      RTS                             ; Return to subroutine
00000CAA                          1221  
00000CAA                          1222  POWERUP_LOAD:
00000CAA  43F9 0000242E           1223      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
00000CB0  323C 0003               1224      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
00000CB4  303C 004A               1225      MOVE    #74,        D0          ; Load into memory
00000CB8  4E4F                    1226      TRAP    #15                     ; Trap (Perform action)
00000CBA  4E75                    1227      RTS                             ; Return to subroutine
00000CBC                          1228  
00000CBC                          1229  PLAY_POWERUP:
00000CBC  323C 0003               1230      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
00000CC0  303C 004B               1231      MOVE    #75,        D0          ; Play Sound
00000CC4  4E4F                    1232      TRAP    #15                     ; Trap (Perform action)
00000CC6  4E75                    1233      RTS                             ; Return to subroutine
00000CC8                          1234  
00000CC8                          1235  LVLCHANGE_LOAD:
00000CC8  43F9 0000243A           1236      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
00000CCE  323C 0004               1237      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
00000CD2  303C 004A               1238      MOVE    #74,        D0          ; Load into memory
00000CD6  4E4F                    1239      TRAP    #15                     ; Trap (Perform action)
00000CD8  4E75                    1240      RTS                             ; Return to subroutine
00000CDA                          1241  
00000CDA                          1242  PLAY_LVLCHANGE:
00000CDA  323C 0004               1243      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00000CDE  303C 004B               1244      MOVE    #75,        D0          ; Play Sound
00000CE2  4E4F                    1245      TRAP    #15                     ; Trap (Perform action)
00000CE4  4E75                    1246      RTS                             ; Return to subroutine
00000CE6                          1247  
00000CE6                          1248  HIT_LOAD:
00000CE6  43F9 00002426           1249      LEA     HIT_WAV,   A1          ; Load Wav File into A1
00000CEC  323C 0005               1250      MOVE    #HIT_INDEX,D1          ; Assign it INDEX
00000CF0  303C 004A               1251      MOVE    #74,        D0          ; Load into memory
00000CF4  4E4F                    1252      TRAP    #15                     ; Trap (Perform action)
00000CF6  4E75                    1253      RTS                             ; Return to subroutine
00000CF8                          1254  
00000CF8                          1255  PLAY_HIT:
00000CF8  323C 0005               1256      MOVE    #HIT_INDEX,D1          ; Load Sound INDEX
00000CFC  303C 004B               1257      MOVE    #75,        D0          ; Play Sound
00000D00  4E4F                    1258      TRAP    #15                     ; Trap (Perform action)
00000D02  4E75                    1259      RTS                             ; Return to subroutine
00000D04                          1260  
00000D04                          1261  ROAR_LOAD:
00000D04  43F9 0000244A           1262      LEA     ROAR_WAV,   A1          ; Load Wav File into A1
00000D0A  323C 0007               1263      MOVE    #ROAR_INDEX,D1          ; Assign it INDEX
00000D0E  303C 004A               1264      MOVE    #74,        D0          ; Load into memory
00000D12  4E4F                    1265      TRAP    #15                     ; Trap (Perform action)
00000D14  4E75                    1266      RTS                             ; Return to subroutine
00000D16                          1267  
00000D16                          1268  PLAY_ROAR:
00000D16  323C 0007               1269      MOVE    #ROAR_INDEX,D1          ; Load Sound INDEX
00000D1A  303C 004B               1270      MOVE    #75,        D0          ; Play Sound
00000D1E  4E4F                    1271      TRAP    #15                     ; Trap (Perform action)
00000D20  4E75                    1272      RTS                             ; Return to subroutine
00000D22                          1273  
00000D22                          1274  HILLHURT_LOAD:
00000D22  43F9 00002459           1275      LEA     HILLHURT_WAV,   A1          ; Load Wav File into A1
00000D28  323C 0008               1276      MOVE    #HILLHURT_INDEX,D1          ; Assign it INDEX
00000D2C  303C 004A               1277      MOVE    #74,        D0          ; Load into memory
00000D30  4E4F                    1278      TRAP    #15                     ; Trap (Perform action)
00000D32  4E75                    1279      RTS                             ; Return to subroutine
00000D34                          1280  
00000D34                          1281  PLAY_HILLHURT:
00000D34  323C 0008               1282      MOVE    #HILLHURT_INDEX,D1          ; Load Sound INDEX
00000D38  303C 004B               1283      MOVE    #75,        D0          ; Play Sound
00000D3C  4E4F                    1284      TRAP    #15                     ; Trap (Perform action)
00000D3E  4E75                    1285      RTS                             ; Return to subroutine
00000D40                          1286  
00000D40                          1287  MAP_SONG_LOAD:
00000D40  43F9 0000247A           1288      LEA     MAP_SONG_WAV,   A1          ; Load Wav File into A1
00000D46  323C 0006               1289      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000D4A  303C 004A               1290      MOVE    #74,        D0          ; Load into memory
00000D4E  4E4F                    1291      TRAP    #15                     ; Trap (Perform action)
00000D50  4E75                    1292      RTS                             ; Return to subroutine
00000D52                          1293  
00000D52                          1294  BATTLE_SONG_LOAD:
00000D52  43F9 00002466           1295      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000D58  323C 0006               1296      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000D5C  303C 004A               1297      MOVE    #74,        D0          ; Load into memory
00000D60  4E4F                    1298      TRAP    #15                     ; Trap (Perform action)
00000D62  4E75                    1299      RTS                             ; Return to subroutine
00000D64                          1300  
00000D64                          1301  MENU_SONG_LOAD:
00000D64  43F9 0000248B           1302      LEA     MENU_SONG_WAV,   A1          ; Load Wav File into A1
00000D6A  323C 0006               1303      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000D6E  303C 004A               1304      MOVE    #74,        D0          ; Load into memory
00000D72  4E4F                    1305      TRAP    #15                     ; Trap (Perform action)
00000D74  4E75                    1306      RTS                             ; Return to subroutine
00000D76                          1307  
00000D76                          1308  ; special function to play song in song index
00000D76                          1309  PLAY_SONG:
00000D76  323C 0006               1310      MOVE    #SONG_INDEX,D1          ; Load Sound INDEX
00000D7A  7401                    1311      move.l #1, d2
00000D7C  303C 004D               1312      MOVE    #77,        D0          ; Play Sound
00000D80  4E4F                    1313      TRAP    #15                     ; Trap (Perform action)
00000D82  4E75                    1314      RTS                             ; Return to subroutine
00000D84                          1315  
00000D84                          1316  ; stop song playing
00000D84                          1317  STOP_SONG:
00000D84  323C 0006               1318      move #SONG_INDEX,d1
00000D88  7402                    1319      move.l #2, d2
00000D8A  303C 004D               1320      move #77, d0
00000D8E  4E4F                    1321      trap #15
00000D90  4E75                    1322      rts
00000D92                          1323  
00000D92                          1324  *-----------------------------------------------------------
00000D92                          1325  * Subroutine    : Draw Player
00000D92                          1326  * Description   : Draw Player Ant
00000D92                          1327  *-----------------------------------------------------------
00000D92                          1328      include "battle/playerAnt.X68"
00000D92                          1329  
00000D92  =0000001B               1330  PLYR_W_INIT EQU         27          ; Players initial Width
00000D92  =0000000D               1331  PLYR_H_INIT EQU         13          ; Players initial Height
00000D92                          1332  
00000D92  =00000000               1333  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00000D92  =FFFFFFEE               1334  PLYR_JUMP_V EQU         -18          ; Player Jump Velocity
00000D92  =00000001               1335  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00000D92                          1336  
00000D92                          1337  INIT_PLAYER:
00000D92                          1338  
00000D92                          1339      ; Place the Player at the center of the screen
00000D92  B381                    1340      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
00000D94  3239 00002378           1341      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000D9A  82FC 0002               1342      DIVU    #02,        D1          ; divide by 2 for center on X Axis
00000D9E  23C1 00002382           1343      MOVE.L  D1,         PLAYER_X    ; Players X Position
00000DA4                          1344  
00000DA4  B381                    1345      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000DA6  3239 0000237A           1346      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000DAC  82FC 0002               1347      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000DB0  23C1 00002386           1348      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000DB6                          1349  
00000DB6                          1350          ; Set the player starting width and height
00000DB6  13FC 001B 000023FA      1351      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
00000DBE  13FC 000D 000023FB      1352      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
00000DC6                          1353  
00000DC6  B381                    1354      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000DC8  3239 0000237A           1355      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000DCE  82FC 0002               1356      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000DD2  23C1 00002386           1357      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000DD8                          1358  
00000DD8                          1359      ; Initialise Player Velocity
00000DD8  B381                    1360      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000DDA  123C 0000               1361      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
00000DDE  23C1 0000238E           1362      MOVE.L  D1,         PLYR_VELOCITY
00000DE4                          1363  
00000DE4                          1364      ; Initialise Player Gravity
00000DE4  B381                    1365      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000DE6  7201                    1366      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
00000DE8  23C1 00002392           1367      MOVE.L  D1,         PLYR_GRAVITY
00000DEE                          1368  
00000DEE                          1369          ; Initialize Player on Ground
00000DEE  23FC 00000001 00002396  1370      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
00000DF8                          1371      
00000DF8                          1372  
00000DF8                          1373  UPDATE_PLAYER:
00000DF8                          1374      ; Update the Players Positon based on Velocity and Gravity
00000DF8  4281                    1375      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000DFA  2239 0000238E           1376      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00000E00  2439 00002392           1377      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
00000E06  D282                    1378      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000E08  23C1 0000238E           1379      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00000E0E  D2B9 00002386           1380      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
00000E14  23C1 00002386           1381      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
00000E1A  23C1 000023D8           1382      MOVE.L  D1,         ATTACK_Y 
00000E20                          1383  
00000E20  4E75                    1384      RTS
00000E22                          1385  
00000E22                          1386  ; Move Player to the left
00000E22                          1387  MOVE_PLAYER_LEFT:
Line 1388 ERROR: Undefined symbol
00000E22  4A39 004DBD16           1388      TST.B  isPaused
00000E28                          1389      IF <NE> THEN
00000E2C  4E75                    1390          RTS
00000E2E                          1391      ENDI
00000E2E                          1392  
00000E2E  13FC 0001 0000239A      1393      MOVE.B  #LOOKLEFT,        PLAYER_DIR
00000E36  2239 00002382           1394      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000E3C  5781                    1395      SUB.L   #03,        D1          ; Move Player Left
00000E3E  23C1 00002382           1396      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000E44  57B9 000023D4           1397      SUB.L   #03,        ATTACK_X
00000E4A  4E75                    1398      RTS                             ; Return to subroutine    
00000E4C                          1399  
00000E4C                          1400  ; Move Player to the right
00000E4C                          1401  MOVE_PLAYER_RIGHT:
Line 1402 ERROR: Undefined symbol
00000E4C  4A39 004DBD16           1402      TST.B  isPaused
00000E52                          1403      IF <NE> THEN
00000E56  4E75                    1404          RTS
00000E58                          1405      ENDI
00000E58  13FC 0002 0000239A      1406      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
00000E60  2239 00002382           1407      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000E66  5681                    1408      ADD.L   #03,        D1          ; Move Player Right
00000E68  23C1 00002382           1409      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000E6E  56B9 000023D4           1410      ADD.L   #03,        ATTACK_X
00000E74  4E75                    1411      RTS                             ; Return to subroutine
00000E76                          1412  
00000E76                          1413  JUMP:
Line 1414 ERROR: Undefined symbol
00000E76  4A39 004DBD16           1414      TST.B  isPaused
00000E7C                          1415      IF <NE> THEN
00000E80  4E75                    1416          RTS
00000E82                          1417      ENDI
00000E82  0CB9 00000001 00002396  1418      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000E8C  6700 0006               1419      BEQ     PERFORM_JUMP            ; Do Jump
00000E90  6000 0012               1420      BRA     JUMP_DONE               ;
00000E94                          1421  PERFORM_JUMP:
00000E94  6100 FDEA               1422      BSR     PLAY_JUMP               ; Play jump sound
00000E98  23FC FFFFFFEE 0000238E  1423      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00000EA2  4E75                    1424      RTS                             ; Return to subroutine
00000EA4                          1425  JUMP_DONE:
00000EA4  4E75                    1426      RTS                             ; Return to subroutine
00000EA6                          1427  
00000EA6                          1428  ; draw all player relevant data
00000EA6                          1429  DRAW_PLAYER:
00000EA6                          1430      ; Set Pixel Colors
Line 1431 ERROR: Undefined symbol
00000EA6  223C 004DBD16           1431      MOVE.L  #BLACK,     D1          ; Set Background color
00000EAC  103C 0050               1432      MOVE.B  #80,        D0          ; Task for Background Color
00000EB0  4E4F                    1433      TRAP    #15                     ; Trap (Perform action)
00000EB2                          1434      ; Reset Pixel Colors
Line 1435 ERROR: Undefined symbol
00000EB2  223C 004DBD16           1435      MOVE.L  #BLACK,     D1          ; Set Background color
00000EB8  103C 0051               1436      MOVE.B  #81,        D0          ; Task for Background Color
00000EBC  4E4F                    1437      TRAP    #15                     ; Trap (Perform action)
00000EBE                          1438  
00000EBE  2239 00002382           1439      MOVE.L  PLAYER_X,   D1          ; X
00000EC4  2439 00002386           1440      MOVE.L  PLAYER_Y,   D2
00000ECA  5982                    1441      SUBQ.L  #4,D2
00000ECC                          1442  
00000ECC  2639 00002382           1443      MOVE.L  PLAYER_X,   D3
00000ED2  B984                    1444      EOR.L   D4,D4
00000ED4  1839 000023FA           1445      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000EDA  D684                    1446      ADD.L   D4,D3
00000EDC  2839 00002386           1447      MOVE.L  PLAYER_Y,   D4
00000EE2  9839 000023FB           1448      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00000EE8                          1449      
00000EE8                          1450       ; Draw Player
00000EE8  103C 0057               1451      MOVE.B  #87,        D0          ; Draw Player
00000EEC  4E4F                    1452      TRAP    #15                     ; Trap (Perform action)
00000EEE                          1453  
00000EEE  2239 00002382           1454      MOVE.L  PLAYER_X,   D1          ; X
00000EF4  2439 00002386           1455      MOVE.L  PLAYER_Y,   D2
00000EFA  5982                    1456      SUBQ.L  #4,D2
00000EFC  2639 00002382           1457      MOVE.L  PLAYER_X,   D3
00000F02  B984                    1458      EOR.L   D4,D4
00000F04  1839 000023FA           1459      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000F0A  0404 000C               1460      SUBI.B   #12,D4
00000F0E  D684                    1461      ADD.L   D4,D3
00000F10  2839 00002386           1462      MOVE.L  PLAYER_Y,   D4
00000F16  9839 000023FB           1463      SUB.B   PLAYER_HEIGHT,   D4      ; Height
00000F1C  5704                    1464      SUB.B   #3,D4
00000F1E                          1465      
00000F1E                          1466      ; Draw Player
00000F1E  103C 0057               1467      MOVE.B  #87,        D0          ; Draw Player
00000F22  4E4F                    1468      TRAP    #15                     ; Trap (Perform action)
00000F24                          1469  
00000F24                          1470      ; change thickness
00000F24  7203                    1471          MOVE.l  #3,D1
00000F26  103C 005D               1472          MOVE.B  #93,D0
00000F2A  4E4F                    1473          TRAP    #15
00000F2C                          1474      ; draw if not currently attacking melee
00000F2C  4A39 000023CE           1475      tst.b   CURRENTLYATTACKING
00000F32                          1476      IF  <EQ>    THEN
00000F36  2239 00002382           1477          MOVE.L  PLAYER_X,D1
00000F3C  0681 00000016           1478          ADD.L   #22,D1
00000F42  2439 00002386           1479          MOVE.L  PLAYER_Y,D2
00000F48  0482 0000000D           1480          SUB.L   #PLYR_H_INIT,D2
00000F4E  2601                    1481          MOVE.L  D1,D3
00000F50  0683 0000000A           1482          ADD.L   #10,D3
00000F56  2802                    1483          MOVE.L  D2,D4
00000F58  5F84                    1484          SUBI.L  #7,D4
00000F5A                          1485  
00000F5A  103C 0054               1486          MOVE.B  #84,D0
00000F5E  4E4F                    1487          TRAP    #15
00000F60                          1488      ENDI
00000F60  2239 00002382           1489      MOVE.L  PLAYER_X,D1
00000F66  2439 00002386           1490      MOVE.L  PLAYER_Y,D2
00000F6C  2601                    1491      MOVE.L  D1,D3
00000F6E  5883                    1492      ADD.L   #4,D3
00000F70  2802                    1493      MOVE.L  D2,D4
00000F72  5984                    1494      SUBI.L  #4,D4
00000F74                          1495  
00000F74  103C 0054               1496      MOVE.B  #84,D0
00000F78  4E4F                    1497      TRAP    #15
00000F7A                          1498  
00000F7A  2239 00002382           1499      MOVE.L  PLAYER_X,D1
00000F80  0681 0000000D           1500      ADD.L   #13,D1
00000F86  2439 00002386           1501      MOVE.L  PLAYER_Y,D2
00000F8C  2601                    1502      MOVE.L  D1,D3
00000F8E  2802                    1503      MOVE.L  D2,D4
00000F90  5984                    1504      SUBI.L  #4,D4
00000F92                          1505  
00000F92  103C 0054               1506      MOVE.B  #84,D0
00000F96  4E4F                    1507      TRAP    #15
00000F98                          1508  
00000F98  2239 00002382           1509      MOVE.L  PLAYER_X,D1
00000F9E  0681 00000016           1510      ADD.L   #22,D1
00000FA4  2839 00002386           1511      MOVE.L  PLAYER_Y,D4
00000FAA  2601                    1512      MOVE.L  D1,D3
00000FAC  5683                    1513      ADD.L   #3,D3
00000FAE  2404                    1514      MOVE.L  D4,D2
00000FB0  5982                    1515      SUBI.L  #4,D2
00000FB2                          1516  
00000FB2  103C 0054               1517      MOVE.B  #84,D0
00000FB6  4E4F                    1518      TRAP    #15
00000FB8                          1519  
00000FB8                          1520      ; Set Pixel Colors
Line 1521 ERROR: Undefined symbol
00000FB8  223C 004DBD16           1521      MOVE.L  #WHITE,     D1          ; Set Background color
00000FBE  103C 0050               1522      MOVE.B  #80,        D0          ; Task for Background Color
00000FC2  4E4F                    1523      TRAP    #15                     ; Trap (Perform action)
00000FC4                          1524  
00000FC4  2239 00002382           1525      MOVE.L  PLAYER_X,D1
00000FCA  0681 00000016           1526      ADD.L   #22,D1
00000FD0  2439 00002386           1527      MOVE.L  PLAYER_Y,D2
00000FD6  0482 0000000A           1528      SUB.L   #10,D2
00000FDC  2601                    1529      MOVE.L  D1,D3
00000FDE  2802                    1530      MOVE.L  D2,D4
00000FE0                          1531  
00000FE0  103C 0054               1532      MOVE.B  #84,D0
00000FE4  4E4F                    1533      TRAP    #15
00000FE6                          1534  
00000FE6  7201                    1535      MOVE.l  #1,D1
00000FE8  103C 005D               1536      MOVE.B  #93,D0
00000FEC  4E4F                    1537      TRAP    #15
00000FEE                          1538      
00000FEE  6100 0008               1539      BSR     IS_ATTACKING
00000FF2  6100 00BC               1540      BSR     IS_THROWING
00000FF6                          1541  
00000FF6  4E75                    1542      RTS                             ; Return to subroutine
00000FF8                          1543  
00000FF8                          1544  IS_ATTACKING:
00000FF8  4A39 000023CE           1545      TST.B   CURRENTLYATTACKING
00000FFE  6600 0004               1546      BNE     DRAW_ATTACK
00001002  4E75                    1547      RTS
00001004                          1548  DRAW_ATTACK:
00001004                          1549   ; Set Pixel Colors
Line 1550 ERROR: Undefined symbol
00001004  223C 004DBD16           1550      MOVE.L  #WHITE,     D1          ; Set Background color
0000100A  103C 0050               1551      MOVE.B  #80,        D0          ; Task for Background Color
0000100E  4E4F                    1552      TRAP    #15                     ; Trap (Perform action)
00001010                          1553      ; Reset Pixel Colors
Line 1554 ERROR: Undefined symbol
00001010  223C 004DBD16           1554      MOVE.L  #WHITE,     D1          ; Set Background color
00001016  103C 0051               1555      MOVE.B  #81,        D0          ; Task for Background Color
0000101A  4E4F                    1556      TRAP    #15                     ; Trap (Perform action)
0000101C                          1557  
0000101C  7203                    1558      MOVE.l  #3,D1
0000101E  103C 005D               1559      MOVE.B  #93,D0
00001022  4E4F                    1560      TRAP    #15
00001024                          1561  
00001024  2239 00002382           1562      MOVE.L  PLAYER_X,D1
0000102A  0681 00000016           1563      ADD.L   #22,D1
00001030  2439 00002386           1564      MOVE.L  PLAYER_Y,D2
00001036  5F82                    1565      SUB.L   #7,D2
00001038  2601                    1566      MOVE.L  D1,D3
0000103A  2802                    1567      MOVE.L  D2,D4
0000103C                          1568  
0000103C  103C 0054               1569      MOVE.B  #84,D0
00001040  4E4F                    1570      TRAP    #15
00001042                          1571  
00001042                          1572      ; Set Pixel Colors
Line 1573 ERROR: Undefined symbol
00001042  223C 004DBD16           1573      MOVE.L  #BLACK,     D1          ; Set Background color
00001048  103C 0050               1574      MOVE.B  #80,        D0          ; Task for Background Color
0000104C  4E4F                    1575      TRAP    #15                     ; Trap (Perform action)
0000104E                          1576      ; Reset Pixel Colors
Line 1577 ERROR: Undefined symbol
0000104E  223C 004DBD16           1577      MOVE.L  #BLACK,     D1          ; Set Background color
00001054  103C 0051               1578      MOVE.B  #81,        D0          ; Task for Background Color
00001058  4E4F                    1579      TRAP    #15                     ; Trap (Perform action)
0000105A                          1580  
0000105A  2239 00002382           1581      MOVE.L  PLAYER_X,D1
00001060  0681 00000016           1582      ADD.L   #22,D1
00001066  2439 00002386           1583      MOVE.L  PLAYER_Y,D2
0000106C  0482 0000000A           1584      SUB.L   #10,D2
00001072  2601                    1585      MOVE.L  D1,D3
00001074  2802                    1586      MOVE.L  D2,D4
00001076                          1587  
00001076  103C 0054               1588      MOVE.B  #84,D0
0000107A  4E4F                    1589      TRAP    #15
0000107C                          1590  
0000107C  7201                    1591      MOVE.l  #1,D1
0000107E  103C 005D               1592      MOVE.B  #93,D0
00001082  4E4F                    1593      TRAP    #15
00001084  2239 000023D4           1594      MOVE.L  ATTACK_X,   D1          ; X
0000108A  2439 000023D8           1595      MOVE.L  ATTACK_Y,   D2
00001090  0482 00000009           1596      SUB.L   #9,D2
00001096                          1597      
00001096  2639 000023D4           1598      MOVE.L  ATTACK_X,   D3
0000109C  0683 00000023           1599      ADD.L   #ATTACK_WIDTH,   D3      ; Width
000010A2  5183                    1600      SUB.L   #8,D3
000010A4  2802                    1601      MOVE.L  D2,   D4 
000010A6  5784                    1602      SUB.L   #3,   D4      ; Height          ; Y
000010A8                          1603      
000010A8                          1604      ; Draw Player
000010A8  103C 0057               1605      MOVE.B  #87,        D0          ; Draw Player
000010AC  4E4F                    1606      TRAP    #15                     ; Trap (Perform action)
000010AE  4E75                    1607      RTS                             ; Return to subroutine
000010B0                          1608  
000010B0                          1609  IS_THROWING:
000010B0  4A39 000023DC           1610      TST.B   CURRENTLYTHROWING
000010B6  6600 0004               1611      BNE     DRAW_THROW
000010BA  4E75                    1612      RTS
000010BC                          1613  DRAW_THROW:
000010BC                          1614  
000010BC                          1615      ; Set Pixel Colors
Line 1616 ERROR: Undefined symbol
000010BC  223C 004DBD16           1616      MOVE.L  #ACORN,     D1          ; Set Background color
000010C2  103C 0050               1617      MOVE.B  #80,        D0          ; Task for Background Color
000010C6  4E4F                    1618      TRAP    #15                     ; Trap (Perform action)
000010C8                          1619      ; Reset Pixel Colors
Line 1620 ERROR: Undefined symbol
000010C8  223C 004DBD16           1620      MOVE.L  #ACORN,     D1          ; Set Background color
000010CE  103C 0051               1621      MOVE.B  #81,        D0          ; Task for Background Color
000010D2  4E4F                    1622      TRAP    #15                     ; Trap (Perform action)
000010D4                          1623  
000010D4  2239 000023E2           1624      MOVE.L  THROW_X,   D1          ; X
000010DA  2439 000023E6           1625      MOVE.L  THROW_Y,   D2
000010E0                          1626      
000010E0  2639 000023E2           1627      MOVE.L  THROW_X,   D3
000010E6  0683 0000000F           1628      ADD.L   #THRW_W_INIT,   D3      ; Width
000010EC  2839 000023E6           1629      MOVE.L  THROW_Y,   D4 
000010F2  0484 0000000F           1630      SUB.L   #THRW_H_INIT,   D4      ; Height          ; Y
000010F8                          1631      
000010F8                          1632      ; Draw Acorn
000010F8  103C 0057               1633      MOVE.B  #87,        D0          ; Draw Player
000010FC  4E4F                    1634      TRAP    #15                     ; Trap (Perform action)
000010FE                          1635      
000010FE                          1636      ; Set Pixel Colors
Line 1637 ERROR: Undefined symbol
000010FE  223C 004DBD16           1637      MOVE.L  #ACORNHAT,     D1          ; Set Background color
00001104  103C 0050               1638      MOVE.B  #80,        D0          ; Task for Background Color
00001108  4E4F                    1639      TRAP    #15                     ; Trap (Perform action)
0000110A                          1640      ; Reset Pixel Colors
Line 1641 ERROR: Undefined symbol
0000110A  223C 004DBD16           1641      MOVE.L  #ACORNHAT,     D1          ; Set Background color
00001110  103C 0051               1642      MOVE.B  #81,        D0          ; Task for Background Color
00001114  4E4F                    1643      TRAP    #15                     ; Trap (Perform action)
00001116                          1644  
00001116  2239 000023E2           1645      MOVE.L  THROW_X,D1
0000111C  5581                    1646      SUB.L   #2,D1
0000111E  5483                    1647      ADD.l   #2,D3
00001120  5284                    1648      ADD.L   #1,D4
00001122  2404                    1649      MOVE.L  D4,D2
00001124  5D82                    1650      SUB.L   #6,D2
00001126                          1651  
00001126                          1652      ; Draw Acorn
00001126  103C 0057               1653      MOVE.B  #87,        D0          ; Draw Player
0000112A  4E4F                    1654      TRAP    #15                     ; Trap (Perform action)
0000112C                          1655  
0000112C  2239 000023E2           1656      MOVE.L  THROW_X,D1
00001132  5C81                    1657      ADD.L   #6,D1
00001134  2802                    1658      MOVE.L  D2,D4
00001136  5B82                    1659      SUB.l   #5,D2
00001138  2601                    1660      MOVE.L  D1,D3
0000113A  5883                    1661      ADD.L   #4,D3
0000113C                          1662  
0000113C                          1663      ; Draw Acorn
0000113C  103C 0057               1664      MOVE.B  #87,        D0          ; Draw Player
00001140  4E4F                    1665      TRAP    #15                     ; Trap (Perform action)
00001142                          1666  
00001142  4E75                    1667      RTS                             ; Return to subroutine
00001144                          1668  
00001144                          1669  DRAW_RESPAWN:
00001144  7A00                    1670      MOVEQ.L     #0,  D5
00001146  3A39 0000249E           1671      MOVE.W      respawnTime,D5
0000114C                          1672  
0000114C  B381                    1673      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000114E  3239 0000237A           1674      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00001154  82FC 0002               1675      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00001158  23C1 00002386           1676      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
0000115E                          1677  
0000115E                          1678      ; reset player velocity and attack
0000115E  13FC 0000 000023CE      1679      MOVE.B  #0,     CURRENTLYATTACKING
00001166  4279 000023D0           1680      CLR.W   ATTACK_COOLDOWN
0000116C  4279 000023D2           1681      CLR.W   ATTACK_TIME
00001172  23FC 00000000 0000238E  1682      MOVE.L  #0,PLYR_VELOCITY
0000117C                          1683  
0000117C                          1684      ; push enemies back for fairness
0000117C  06B9 00000032 0000239C  1685      ADD.L   #50, ENEMY_X
00001186  06B9 00000032 000023AC  1686      ADD.L   #50, FLYINGENEMY_X
00001190  06B9 00000032 000023B4  1687      ADD.L   #50, BRUTE_X
0000119A                          1688  MOVE_RESPAWNED:
0000119A  23C5 00002382           1689      MOVE.L  D5, PLAYER_X
000011A0                          1690  
000011A0                          1691      ; Enable back buffer
000011A0  103C 005E               1692      MOVE.B  #TC_REDRAW,        D0
000011A4  4E4F                    1693      TRAP    #15
000011A6                          1694  
000011A6                          1695      ; Clear the screen
000011A6  103C 000B               1696      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000011AA  323C FF00               1697      MOVE.W  #$FF00,     D1          ; Clear contents
000011AE  4E4F                    1698      TRAP    #15                     ; Trap (Perform action)
000011B0                          1699  
000011B0  123C 0001               1700      MOVE.B  #1,D1
000011B4  103C 005D               1701      MOVE.B  #93,D0
000011B8  4E4F                    1702      TRAP    #15
000011BA                          1703  
000011BA  6100 F7EE               1704      BSR     DRAW_BACKGROUND        
000011BE  6100 F6AA               1705      BSR     DRAW_HILL 
000011C2  6100 F968               1706      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
000011C6  6100 F80C               1707      BSR     DRAW_TREES
000011CA  6100 F7AE               1708      BSR     DRAW_ENTRANCE_HOLE
000011CE  6100 0042               1709      BSR     DRAW_ENEMY              ; Draw Enemy
000011D2  6100 02C8               1710      BSR     DRAW_FLYENEMY
000011D6  6100 0178               1711      BSR     DRAW_BRUTEENEMY
000011DA  6100 046E               1712      BSR     DRAW_HEALTHPACK
000011DE  6100 FCC6               1713      BSR     DRAW_PLAYER             ; Draw Player
000011E2  6100 F742               1714      BSR     DRAW_ENTRANCE
000011E6  6100 0568               1715      BSR     DRAW_FLOOR              ; Draw Floor
000011EA  6100 F55E               1716      BSR     drawHillHealth         ; draw hill hp
Line 1717 ERROR: Undefined symbol
000011EE  6100 AB26               1717      BSR     drawPause        
000011F2                          1718  
000011F2                          1719  
000011F2  5279 0000249E           1720      ADDQ.W      #1,respawnTime
000011F8  3A39 0000249E           1721      MOVE.W      respawnTime,D5
000011FE  0C79 00C8 0000249E      1722      CMP.W       #200,respawnTime
00001206  6692                    1723      BNE         MOVE_RESPAWNED
00001208  33FC 0000 0000249E      1724      MOVE.W     #0,respawnTime
00001210                          1725      ;else
00001210  4E75                    1726      RTS
00001210  4E75                    1727  -------------------- end include --------------------
00001212                          1728  *-----------------------------------------------------------
00001212                          1729  * Subroutine    : Draw Enemy
00001212                          1730  * Description   : Draw Enemy Ant
00001212                          1731  *-----------------------------------------------------------
00001212                          1732      include "battle/battleEnemy.X68"
00001212                          1733  DRAW_ENEMY:
00001212                          1734      ; Set Pixel Colors
Line 1735 ERROR: Undefined symbol
00001212  223C 004DBD16           1735      MOVE.L  #RED,       D1          ; Set pen color
00001218  103C 0050               1736      MOVE.B  #80,        D0          ; Task for pen Color
0000121C  4E4F                    1737      TRAP    #15                     ; Trap (Perform action)
0000121E                          1738  
0000121E                          1739      ; Reset Pixel Colors
Line 1740 ERROR: Undefined symbol
0000121E  223C 004DBD16           1740      MOVE.L  #red,     D1          ; Set Background color
00001224  103C 0051               1741      MOVE.B  #81,        D0          ; Task for Background Color
00001228  4E4F                    1742      TRAP    #15                     ; Trap (Perform action)
0000122A                          1743  
0000122A                          1744      *-------------- draw ENEMY body -----------------*
0000122A  2239 0000239C           1745      MOVE.L  ENEMY_X,   D1          ; X
00001230  2439 000023A0           1746      MOVE.L  ENEMY_Y,   D2
00001236  5982                    1747      SUBQ.L  #4,D2
00001238                          1748  
00001238  2639 0000239C           1749      MOVE.L  ENEMY_X,   D3
0000123E  0683 0000001B           1750      ADD.L   #ENMY_W_INIT, D3  
00001244  2839 000023A0           1751      MOVE.L  ENEMY_Y,   D4
0000124A  0484 0000000D           1752      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00001250                          1753      
00001250                          1754       ; Draw 
00001250  103C 0057               1755      MOVE.B  #87,        D0          ; Draw enemy
00001254  4E4F                    1756      TRAP    #15                     ; Trap (Perform action)
00001256                          1757  
00001256  2239 0000239C           1758      MOVE.L  ENEMY_X,   D1          ; X
0000125C  2601                    1759      MOVE.L  D1,   D3
0000125E  0681 0000001B           1760      ADD.L   #ENMY_W_INIT,D1
00001264  2439 000023A0           1761      MOVE.L  ENEMY_Y,   D2
0000126A  5982                    1762      SUBQ.L  #4,D2
0000126C  2639 0000239C           1763      MOVE.L  ENEMY_X,   D3
00001272  0683 0000000C           1764      ADDI.L   #12,D3
00001278                          1765      
00001278  2839 000023A0           1766      MOVE.L  ENEMY_Y,   D4
0000127E  0484 0000000D           1767      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00001284  5704                    1768      SUB.B   #3,D4
00001286                          1769      
00001286                          1770      ; Draw 
00001286  103C 0057               1771      MOVE.B  #87,        D0          ; Draw enemy
0000128A  4E4F                    1772      TRAP    #15                     ; Trap (Perform action)
0000128C                          1773  
0000128C                          1774      ; change thickness
0000128C  7203                    1775      MOVE.l  #3,D1
0000128E  103C 005D               1776      MOVE.B  #93,D0
00001292  4E4F                    1777      TRAP    #15
00001294                          1778  
00001294  2239 0000239C           1779      MOVE.L  ENEMY_X,D1
0000129A  5681                    1780      ADD.L   #3,D1
0000129C  2439 000023A0           1781      MOVE.L  ENEMY_Y,D2
000012A2  0482 0000000D           1782      SUB.L   #ENMY_H_INIT,D2
000012A8  2601                    1783      MOVE.L  D1,D3
000012AA  0483 0000000A           1784      SUB.L   #10,D3
000012B0  2802                    1785      MOVE.L  D2,D4
000012B2  5F84                    1786      SUBI.L  #7,D4
000012B4                          1787  
000012B4  103C 0054               1788      MOVE.B  #84,D0
000012B8  4E4F                    1789      TRAP    #15
000012BA                          1790  
000012BA  2239 0000239C           1791      MOVE.L  ENEMY_X,D1
000012C0  2439 000023A0           1792      MOVE.L  ENEMY_Y,D2
000012C6  2601                    1793      MOVE.L  D1,D3
000012C8  5883                    1794      ADD.L   #4,D3
000012CA  2802                    1795      MOVE.L  D2,D4
000012CC  5984                    1796      SUBI.L  #4,D4
000012CE                          1797  
000012CE  103C 0054               1798      MOVE.B  #84,D0
000012D2  4E4F                    1799      TRAP    #15
000012D4                          1800  
000012D4  2239 0000239C           1801      MOVE.L  ENEMY_X,D1
000012DA  0681 0000000D           1802      ADD.L   #13,D1
000012E0  2439 000023A0           1803      MOVE.L  ENEMY_Y,D2
000012E6  2601                    1804      MOVE.L  D1,D3
000012E8  2802                    1805      MOVE.L  D2,D4
000012EA  5984                    1806      SUBI.L  #4,D4
000012EC                          1807  
000012EC  103C 0054               1808      MOVE.B  #84,D0
000012F0  4E4F                    1809      TRAP    #15
000012F2                          1810  
000012F2  2239 0000239C           1811      MOVE.L  ENEMY_X,D1
000012F8  0681 00000016           1812      ADD.L   #22,D1
000012FE  2839 000023A0           1813      MOVE.L  ENEMY_Y,D4
00001304  2601                    1814      MOVE.L  D1,D3
00001306  5683                    1815      ADD.L   #3,D3
00001308  2404                    1816      MOVE.L  D4,D2
0000130A  5982                    1817      SUBI.L  #4,D2
0000130C                          1818  
0000130C  103C 0054               1819      MOVE.B  #84,D0
00001310  4E4F                    1820      TRAP    #15
00001312                          1821  
00001312                          1822      ; Set Pixel Colors
Line 1823 ERROR: Undefined symbol
00001312  223C 004DBD16           1823      MOVE.L  #BLACK,     D1          ; Set Pen color
00001318  103C 0050               1824      MOVE.B  #80,        D0          ; Task for Pen Color
0000131C  4E4F                    1825      TRAP    #15                     ; Trap (Perform action)
0000131E                          1826  
0000131E                          1827      ; change thickness
0000131E  7203                    1828      MOVE.l  #3,D1
00001320  103C 005D               1829      MOVE.B  #93,D0
00001324  4E4F                    1830      TRAP    #15
00001326                          1831  
00001326  2239 0000239C           1832      MOVE.L  ENEMY_X,D1
0000132C  5681                    1833      ADD.L   #3,D1
0000132E  2439 000023A0           1834      MOVE.L  ENEMY_Y,D2
00001334  0482 0000000A           1835      SUB.L   #10,D2
0000133A  2601                    1836      MOVE.L  D1,D3
0000133C  5283                    1837      ADDQ.L  #1,D3
0000133E  2802                    1838      MOVE.L  D2,D4
00001340                          1839  
00001340  103C 0054               1840      MOVE.B  #84,D0
00001344  4E4F                    1841      TRAP    #15
00001346                          1842  
00001346                          1843      ; reset pen
00001346  7201                    1844      MOVE.l  #1,D1
00001348  103C 005D               1845      MOVE.B  #93,D0
0000134C  4E4F                    1846      TRAP    #15
0000134E                          1847  
0000134E  4E75                    1848      RTS                             ; Return to subroutine
00001350                          1849  
00001350                          1850  
00001350                          1851  DRAW_BRUTEENEMY:
00001350                          1852      ; Set Pixel Colors
Line 1853 ERROR: Undefined symbol
00001350  223C 004DBD16           1853      MOVE.L  #RED,       D1          ; Set pen color
00001356  103C 0050               1854      MOVE.B  #80,        D0          ; Task for pen Color
0000135A  4E4F                    1855      TRAP    #15                     ; Trap (Perform action)
0000135C                          1856  
0000135C                          1857      ; Reset Pixel Colors
Line 1858 ERROR: Undefined symbol
0000135C  223C 004DBD16           1858      MOVE.L  #colorRed,     D1          ; Set Background color
00001362  4A39 000023F8           1859      TST.B   BRUTE_HIT
00001368                          1860      IF <NE> THEN        ; brute is hit
Line 1861 ERROR: Undefined symbol
0000136C  223C 004DBD16           1861          MOVE.L  #RED,     D1          ; Set Background color
00001372                          1862      ENDI
00001372                          1863  
00001372  103C 0051               1864      MOVE.B  #81,        D0          ; Task for Background Color
00001376  4E4F                    1865      TRAP    #15                     ; Trap (Perform action)
00001378                          1866      *-------------- draw BRUTE body -----------------*
00001378  2239 000023B4           1867      MOVE.L  BRUTE_X,   D1          ; X
0000137E  2439 000023B8           1868      MOVE.L  BRUTE_Y,   D2
00001384  5F82                    1869      SUBQ.L  #7,D2
00001386                          1870  
00001386  2639 000023B4           1871      MOVE.L  BRUTE_X,   D3
0000138C  0683 00000032           1872      ADD.L   #BRUTE_W_INIT, D3  
00001392  2839 000023B8           1873      MOVE.L  BRUTE_Y,   D4
00001398  0484 00000019           1874      SUB.L   #BRUTE_H_INIT,   D4      ; Height          ; Y
0000139E                          1875      
0000139E                          1876       ; Draw 
0000139E  103C 0057               1877      MOVE.B  #87,        D0          ; Draw BRUTE
000013A2  4E4F                    1878      TRAP    #15                     ; Trap (Perform action)
000013A4                          1879  
000013A4  2239 000023B4           1880      MOVE.L  BRUTE_X,   D1          ; X
000013AA  2601                    1881      MOVE.L  D1,   D3
000013AC  0681 00000032           1882      ADD.L   #BRUTE_W_INIT,D1
000013B2  2439 000023B8           1883      MOVE.L  BRUTE_Y,   D2
000013B8  5F82                    1884      SUBQ.L  #7,D2
000013BA  2639 000023B4           1885      MOVE.L  BRUTE_X,   D3
000013C0  0683 0000001E           1886      ADDI.L   #30,D3
000013C6                          1887      
000013C6  2839 000023B8           1888      MOVE.L  BRUTE_Y,   D4
000013CC  0484 00000019           1889      SUB.L   #BRUTE_H_INIT,   D4      ; Height          ; Y
000013D2  5704                    1890      SUB.B   #3,D4
000013D4                          1891      
000013D4                          1892      ; Draw 
000013D4  103C 0057               1893      MOVE.B  #87,        D0          ; Draw BRUTE
000013D8  4E4F                    1894      TRAP    #15                     ; Trap (Perform action)
000013DA                          1895  
000013DA                          1896      ; change thickness
000013DA  7204                    1897      MOVE.l  #4,D1
000013DC  103C 005D               1898      MOVE.B  #93,D0
000013E0  4E4F                    1899      TRAP    #15
000013E2                          1900  
000013E2  2239 000023B4           1901      MOVE.L  BRUTE_X,D1
000013E8  5681                    1902      ADD.L   #3,D1
000013EA  2439 000023B8           1903      MOVE.L  BRUTE_Y,D2
000013F0  0482 00000019           1904      SUB.L   #BRUTE_H_INIT,D2
000013F6  2601                    1905      MOVE.L  D1,D3
000013F8  0483 0000000A           1906      SUB.L   #10,D3
000013FE  2802                    1907      MOVE.L  D2,D4
00001400  5184                    1908      SUBI.L  #8,D4
00001402                          1909  
00001402  103C 0054               1910      MOVE.B  #84,D0
00001406  4E4F                    1911      TRAP    #15
00001408                          1912  
00001408  2239 000023B4           1913      MOVE.L  BRUTE_X,D1
0000140E  2439 000023B8           1914      MOVE.L  BRUTE_Y,D2
00001414  2601                    1915      MOVE.L  D1,D3
00001416  5883                    1916      ADD.L   #4,D3
00001418  2802                    1917      MOVE.L  D2,D4
0000141A  5F84                    1918      SUBI.L  #7,D4
0000141C                          1919  
0000141C  103C 0054               1920      MOVE.B  #84,D0
00001420  4E4F                    1921      TRAP    #15
00001422                          1922  
00001422  2239 000023B4           1923      MOVE.L  BRUTE_X,D1
00001428  0681 00000018           1924      ADD.L   #24,D1
0000142E  2439 000023B8           1925      MOVE.L  BRUTE_Y,D2
00001434  2601                    1926      MOVE.L  D1,D3
00001436  2802                    1927      MOVE.L  D2,D4
00001438  5F84                    1928      SUBI.L  #7,D4
0000143A                          1929  
0000143A  103C 0054               1930      MOVE.B  #84,D0
0000143E  4E4F                    1931      TRAP    #15
00001440                          1932  
00001440  2239 000023B4           1933      MOVE.L  BRUTE_X,D1
00001446  0681 0000002A           1934      ADD.L   #42,D1
0000144C  2839 000023B8           1935      MOVE.L  BRUTE_Y,D4
00001452  2601                    1936      MOVE.L  D1,D3
00001454  5683                    1937      ADD.L   #3,D3
00001456  2404                    1938      MOVE.L  D4,D2
00001458  5F82                    1939      SUBI.L  #7,D2
0000145A                          1940  
0000145A  103C 0054               1941      MOVE.B  #84,D0
0000145E  4E4F                    1942      TRAP    #15
00001460                          1943  
00001460                          1944      ; Set Pixel Colors
Line 1945 ERROR: Undefined symbol
00001460  223C 004DBD16           1945      MOVE.L  #BLACK,     D1          ; Set Pen color
00001466  103C 0050               1946      MOVE.B  #80,        D0          ; Task for Pen Color
0000146A  4E4F                    1947      TRAP    #15                     ; Trap (Perform action)
0000146C                          1948  
0000146C                          1949      ; change thickness
0000146C  7204                    1950      MOVE.l  #4,D1
0000146E  103C 005D               1951      MOVE.B  #93,D0
00001472  4E4F                    1952      TRAP    #15
00001474                          1953  
00001474  2239 000023B4           1954      MOVE.L  BRUTE_X,D1
0000147A  5E81                    1955      ADD.L   #7,D1
0000147C  2439 000023B8           1956      MOVE.L  BRUTE_Y,D2
00001482  0482 00000011           1957      SUB.L   #17,D2
00001488  2601                    1958      MOVE.L  D1,D3
0000148A  2802                    1959      MOVE.L  D2,D4
0000148C                          1960  
0000148C  103C 0054               1961      MOVE.B  #84,D0
00001490  4E4F                    1962      TRAP    #15
00001492                          1963  
00001492                          1964      ; reset pen
00001492  7201                    1965      MOVE.l  #1,D1
00001494  103C 005D               1966      MOVE.B  #93,D0
00001498  4E4F                    1967      TRAP    #15
0000149A                          1968  
0000149A  4E75                    1969      RTS                             ; Return to subroutine
0000149A  4E75                    1970  -------------------- end include --------------------
0000149C                          1971  
0000149C                          1972      
0000149C                          1973  DRAW_FLYENEMY:
0000149C                          1974      ; Set Pixel Colors
Line 1975 ERROR: Undefined symbol
0000149C  223C 004DBD16           1975      MOVE.L  #blue,       D1          ; Set Background color
000014A2  103C 0050               1976      MOVE.B  #80,        D0          ; Task for Background Color
000014A6  4E4F                    1977      TRAP    #15                     ; Trap (Perform action)
000014A8                          1978  
000014A8                          1979      ; Reset Pixel Colors
Line 1980 ERROR: Undefined symbol
000014A8  223C 004DBD16           1980      MOVE.L  #blue,     D1          ; Set Background color
000014AE  103C 0051               1981      MOVE.B  #81,        D0          ; Task for Background Color
000014B2  4E4F                    1982      TRAP    #15                     ; Trap (Perform action)
000014B4                          1983  
000014B4                          1984          *-------------- draw FLYINGENEMY body -----------------*
000014B4  2239 000023AC           1985      MOVE.L  FLYINGENEMY_X,   D1          ; X
000014BA  2439 000023B0           1986      MOVE.L  FLYINGENEMY_Y,   D2
000014C0  5982                    1987      SUBQ.L  #4,D2
000014C2                          1988  
000014C2  2639 000023AC           1989      MOVE.L  FLYINGENEMY_X,   D3
000014C8  0683 0000001E           1990      ADD.L   #FLY_ENMY_W_INIT, D3  
000014CE  2839 000023B0           1991      MOVE.L  FLYINGENEMY_Y,   D4
000014D4  0484 0000000D           1992      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
000014DA                          1993      
000014DA                          1994       ; Draw 
000014DA  103C 0057               1995      MOVE.B  #87,        D0          ; Draw enemy
000014DE  4E4F                    1996      TRAP    #15                     ; Trap (Perform action)
000014E0                          1997  
000014E0                          1998  *-------------- draw FLYINGENEMY abdomen -----------------*
000014E0  2239 000023AC           1999      MOVE.L  FLYINGENEMY_X,   D1          ; X
000014E6  2601                    2000      MOVE.L  D1,   D3
000014E8  0681 0000001E           2001      ADD.L   #FLY_ENMY_W_INIT,D1
000014EE  2439 000023B0           2002      MOVE.L  FLYINGENEMY_Y,   D2
000014F4  5982                    2003      SUBQ.L  #4,D2
000014F6  2639 000023AC           2004      MOVE.L  FLYINGENEMY_X,   D3
000014FC  0683 0000000C           2005      ADDI.L   #12,D3
00001502                          2006      
00001502  2839 000023B0           2007      MOVE.L  FLYINGENEMY_Y,   D4
00001508  0484 0000000D           2008      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
0000150E  5704                    2009      SUB.B   #3,D4
00001510                          2010      
00001510                          2011      ; Draw 
00001510  103C 0057               2012      MOVE.B  #87,        D0          ; Draw enemy
00001514  4E4F                    2013      TRAP    #15                     ; Trap (Perform action)
00001516                          2014  
00001516                          2015  *-------------- draw FLYINGENEMY antena -----------------*    
00001516                          2016      ; change thickness
00001516  7203                    2017      MOVE.l  #3,D1
00001518  103C 005D               2018      MOVE.B  #93,D0
0000151C  4E4F                    2019      TRAP    #15
0000151E                          2020  
0000151E  2239 000023AC           2021      MOVE.L  FLYINGENEMY_X,D1
00001524  5681                    2022      ADD.L   #3,D1
00001526  2439 000023B0           2023      MOVE.L  FLYINGENEMY_Y,D2
0000152C  0482 0000000D           2024      SUB.L   #FLY_ENMY_H_INIT,D2
00001532  2601                    2025      MOVE.L  D1,D3
00001534  0483 0000000A           2026      SUB.L   #10,D3
0000153A  2802                    2027      MOVE.L  D2,D4
0000153C  5F84                    2028      SUBI.L  #7,D4
0000153E                          2029  
0000153E  103C 0054               2030      MOVE.B  #84,D0
00001542  4E4F                    2031      TRAP    #15
00001544                          2032  
00001544                          2033  *-------------- draw FLYINGENEMY leg 1 -----------------*
00001544  2239 000023AC           2034      MOVE.L  FLYINGENEMY_X,D1
0000154A  2439 000023B0           2035      MOVE.L  FLYINGENEMY_Y,D2
00001550  2601                    2036      MOVE.L  D1,D3
00001552  5883                    2037      ADD.L   #4,D3
00001554  2802                    2038      MOVE.L  D2,D4
00001556  5984                    2039      SUBI.L  #4,D4
00001558                          2040  
00001558  103C 0054               2041      MOVE.B  #84,D0
0000155C  4E4F                    2042      TRAP    #15
0000155E                          2043  
0000155E                          2044  *-------------- draw FLYINGENEMY leg 2 -----------------*
0000155E  2239 000023AC           2045      MOVE.L  FLYINGENEMY_X,D1
00001564  0681 0000000D           2046      ADD.L   #13,D1
0000156A  2439 000023B0           2047      MOVE.L  FLYINGENEMY_Y,D2
00001570  2601                    2048      MOVE.L  D1,D3
00001572  2802                    2049      MOVE.L  D2,D4
00001574  5984                    2050      SUBI.L  #4,D4
00001576                          2051  
00001576  103C 0054               2052      MOVE.B  #84,D0
0000157A  4E4F                    2053      TRAP    #15
0000157C                          2054  
0000157C                          2055  *-------------- draw FLYINGENEMY leg 3 -----------------*
0000157C  2239 000023AC           2056      MOVE.L  FLYINGENEMY_X,D1
00001582  0681 00000016           2057      ADD.L   #22,D1
00001588  2839 000023B0           2058      MOVE.L  FLYINGENEMY_Y,D4
0000158E  2601                    2059      MOVE.L  D1,D3
00001590  5683                    2060      ADD.L   #3,D3
00001592  2404                    2061      MOVE.L  D4,D2
00001594  5982                    2062      SUBI.L  #4,D2
00001596                          2063  
00001596  103C 0054               2064      MOVE.B  #84,D0
0000159A  4E4F                    2065      TRAP    #15
0000159C                          2066  
0000159C                          2067  *-------------- draw FLYINGENEMY Wing 1 -----------------*
0000159C                          2068      ; Set Pixel Colors
Line 2069 ERROR: Undefined symbol
0000159C  223C 004DBD16           2069      MOVE.L  #WING,     D1          ; Set Pen color
000015A2  103C 0050               2070      MOVE.B  #80,        D0          ; Task for Pen Color
000015A6  4E4F                    2071      TRAP    #15                     ; Trap (Perform action)
000015A8                          2072      
000015A8                          2073      ; change thickness
000015A8  7205                    2074      MOVE.l  #5,D1
000015AA  103C 005D               2075      MOVE.B  #93,D0
000015AE  4E4F                    2076      TRAP    #15
000015B0                          2077  
000015B0  2239 000023AC           2078      MOVE.L  FLYINGENEMY_X,D1
000015B6  0681 0000000F           2079      ADD.L   #15,D1
000015BC  2439 000023B0           2080      MOVE.L  FLYINGENEMY_Y,d2
000015C2  0482 0000000D           2081      SUB.L   #FLY_ENMY_H_INIT,D2
000015C8  2601                    2082      MOVE.L  D1,D3
000015CA  0483 00000009           2083      SUB.L   #9,D3
000015D0  2802                    2084      MOVE.L  D2,D4
000015D2  0484 0000000A           2085      SUB.L   #10,D4
000015D8                          2086  
000015D8  103C 0054               2087      MOVE.B  #84,D0
000015DC  4E4F                    2088      TRAP    #15
000015DE                          2089  
000015DE                          2090  *-------------- draw FLYINGENEMY Wing 2 -----------------*
000015DE  2239 000023AC           2091      MOVE.L  FLYINGENEMY_X,D1
000015E4  0681 0000000F           2092      ADD.L   #15,D1
000015EA  2439 000023B0           2093      MOVE.L  FLYINGENEMY_Y,d2
000015F0  0482 0000000D           2094      SUB.L   #FLY_ENMY_H_INIT,D2
000015F6  2601                    2095      MOVE.L  D1,D3
000015F8  0683 00000009           2096      ADD.L   #9,D3
000015FE  2802                    2097      MOVE.L  D2,D4
00001600  0484 0000000A           2098      SUB.L   #10,D4
00001606                          2099  
00001606  103C 0054               2100      MOVE.B  #84,D0
0000160A  4E4F                    2101      TRAP    #15
0000160C                          2102  
0000160C                          2103  
0000160C                          2104  *-------------- draw FLYINGENEMY eye -----------------*
0000160C                          2105      ; Set Pixel Colors
Line 2106 ERROR: Undefined symbol
0000160C  223C 004DBD16           2106      MOVE.L  #BLACK,     D1          ; Set Pen color
00001612  103C 0050               2107      MOVE.B  #80,        D0          ; Task for Pen Color
00001616  4E4F                    2108      TRAP    #15                     ; Trap (Perform action)
00001618                          2109      
00001618                          2110      ; change thickness
00001618  7203                    2111      MOVE.l  #3,D1
0000161A  103C 005D               2112      MOVE.B  #93,D0
0000161E  4E4F                    2113      TRAP    #15
00001620                          2114  
00001620  2239 000023AC           2115      MOVE.L  FLYINGENEMY_X,D1
00001626  5681                    2116      ADD.L   #3,D1
00001628  2439 000023B0           2117      MOVE.L  FLYINGENEMY_Y,D2
0000162E  0482 0000000A           2118      SUB.L   #10,D2
00001634  2601                    2119      MOVE.L  D1,D3
00001636  5283                    2120      ADDQ.L  #1,D3
00001638  2802                    2121      MOVE.L  D2,D4
0000163A                          2122  
0000163A  103C 0054               2123      MOVE.B  #84,D0
0000163E  4E4F                    2124      TRAP    #15
00001640                          2125  
00001640                          2126      ; reset pen
00001640  7201                    2127      MOVE.l  #1,D1
00001642  103C 005D               2128      MOVE.B  #93,D0
00001646  4E4F                    2129      TRAP    #15
00001648                          2130  
00001648  4E75                    2131      RTS  
0000164A                          2132  
0000164A                          2133  DRAW_HEALTHPACK:
0000164A                          2134  
0000164A  4A39 00002362           2135      TST.B   healthCooldownOver
00001650  6700 00E0               2136      BEQ     DRAW_HEALTHPACK_DONE
00001654  0C39 0000 00002361      2137      CMP.B   #00,     SPAWN_HEALTHPACKS
0000165C  6700 00D4               2138      BEQ     DRAW_HEALTHPACK_DONE
00001660  0C39 0000 00002360      2139      CMP.B   #00,     DRAW_HEALTHPACKS
00001668  6700 00C8               2140      BEQ     DRAW_HEALTHPACK_DONE
0000166C                          2141      
0000166C                          2142      ; Set Pixel Colors
Line 2143 ERROR: Undefined symbol
0000166C  223C 004DBD16           2143      MOVE.L  #RED,       D1          ; Set Background color
00001672  103C 0050               2144      MOVE.B  #80,        D0          ; Task for Background Color
00001676  4E4F                    2145      TRAP    #15                     ; Trap (Perform action)
00001678                          2146  
00001678                          2147      ; Reset Pixel Colors
Line 2148 ERROR: Undefined symbol
00001678  223C 004DBD16           2148      MOVE.L  #RED,     D1          ; Set Background color
0000167E  103C 0051               2149      MOVE.B  #81,        D0          ; Task for Background Color
00001682  4E4F                    2150      TRAP    #15                     ; Trap (Perform action)
00001684                          2151  
00001684                          2152      ; Set X, Y, Width and Height
00001684  2239 000023A4           2153      MOVE.L  HEALTH_X,    D1          ; X
0000168A  2439 000023A8           2154      MOVE.L  HEALTH_Y,    D2          ; Y
00001690  2601                    2155      MOVE.L  D1,    D3
00001692  0683 0000000C           2156      ADD.L   #HEALTH_PACK_W,   D3      ; Width
00001698  2802                    2157      MOVE.L  D2,    D4 
0000169A  0484 0000000C           2158      SUB.L   #HEALTH_PACK_H,   D4      ; Height
000016A0                          2159  
000016A0                          2160      ; Draw  
000016A0  103C 0057               2161      MOVE.B  #87,        D0          ; Draw
000016A4  4E4F                    2162      TRAP    #15                     ; Trap (Perform action)
000016A6                          2163  
000016A6                          2164      ; Set Pixel Colors
Line 2165 ERROR: Undefined symbol
000016A6  223C 004DBD16           2165      MOVE.L  #GREEN1,       D1          ; Set Background color
000016AC  103C 0050               2166      MOVE.B  #80,        D0          ; Task for Background Color
000016B0  4E4F                    2167      TRAP    #15                     ; Trap (Perform action)
000016B2                          2168  
000016B2                          2169      ; Reset Pixel Colors
Line 2170 ERROR: Undefined symbol
000016B2  223C 004DBD16           2170      MOVE.L  #GREEN1,     D1          ; Set Background color
000016B8  103C 0051               2171      MOVE.B  #81,        D0          ; Task for Background Color
000016BC  4E4F                    2172      TRAP    #15                     ; Trap (Perform action)
000016BE                          2173      
000016BE                          2174      ; change thickness
000016BE  7202                    2175      MOVE.l  #2,D1
000016C0  103C 005D               2176      MOVE.B  #93,D0
000016C4  4E4F                    2177      TRAP    #15
000016C6                          2178          ; Set X, Y, Width and Height
000016C6  2239 000023A4           2179      MOVE.L  HEALTH_X,    D1          ; X
000016CC  2439 000023A8           2180      MOVE.L  HEALTH_Y,    D2          ; Y
000016D2  0482 0000000C           2181      SUB.L   #HEALTH_PACK_H,   D2      ; Height
000016D8  2601                    2182      MOVE.L  D1,    D3
000016DA  5681                    2183      ADD.L   #3,D1
000016DC  0683 0000000C           2184      ADD.L   #HEALTH_PACK_W,   D3      ; Width
000016E2  5B83                    2185      SUB.L   #5,D3
000016E4  2802                    2186      MOVE.L  D2,    D4
000016E6  5B84                    2187      SUB.L   #5,     D4 
000016E8                          2188  
000016E8                          2189      ; Draw  
000016E8  103C 0057               2190      MOVE.B  #87,        D0          ; Draw
000016EC  4E4F                    2191      TRAP    #15                     ; Trap (Perform action)
000016EE                          2192      
000016EE                          2193      ; Set Pixel Colors
Line 2194 ERROR: Undefined symbol
000016EE  223C 004DBD16           2194      MOVE.L  #BROWN,       D1          ; Set Background color
000016F4  103C 0050               2195      MOVE.B  #80,        D0          ; Task for Background Color
000016F8  4E4F                    2196      TRAP    #15                     ; Trap (Perform action)
000016FA                          2197  
000016FA                          2198      ; Reset Pixel Colors
Line 2199 ERROR: Undefined symbol
000016FA  223C 004DBD16           2199      MOVE.L  #BROWN,     D1          ; Set Background color
00001700  103C 0051               2200      MOVE.B  #81,        D0          ; Task for Background Color
00001704  4E4F                    2201      TRAP    #15                     ; Trap (Perform action)
00001706                          2202      
00001706                          2203  
00001706                          2204          ; Set X, Y, Width and Height
00001706  2239 000023A4           2205      MOVE.L  HEALTH_X,    D1          ; X
0000170C  2439 000023A8           2206      MOVE.L  HEALTH_Y,    D2          ; Y
00001712  5C81                    2207      ADD.L   #6,D1
00001714  2601                    2208      MOVE.L  D1,    D3
00001716  5683                    2209      ADD.L   #3,D3
00001718  0482 0000000C           2210      SUB.L   #HEALTH_PACK_H,   D2      ; Height
0000171E  2802                    2211      MOVE.L  D2,    D4
00001720  5B84                    2212      SUB.L   #5, D4 
00001722                          2213  
00001722                          2214      ; Draw  
00001722  103C 0054               2215      MOVE.B  #84,        D0          ; Draw
00001726  4E4F                    2216      TRAP    #15                     ; Trap (Perform action)
00001728                          2217      ; reset thickness
00001728  7201                    2218      MOVE.l  #1,D1
0000172A  103C 005D               2219      MOVE.B  #93,D0
0000172E  4E4F                    2220      TRAP    #15
00001730                          2221  
00001730                          2222  
00001730  4E75                    2223      RTS                             ; Return to subroutine
00001732                          2224  
00001732                          2225  DRAW_HEALTHPACK_DONE:
00001732  23FC FFFFFFFF 000023A8  2226      MOVE.L  #-1, HEALTH_Y
0000173C  3439 000024A2           2227      MOVE.W  healthCooldown,D2
00001742  B47C 0000               2228      CMP.W   #0,  D2
00001746                          2229      IF <EQ> THEN
0000174A  6100 EEB2               2230          BSR     RESET_HEALTH_POSITION
0000174E                          2231      ENDI
0000174E  4E75                    2232      RTS
00001750                          2233  
00001750                          2234  DRAW_FLOOR:
00001750                          2235      ; Set Pixel Colors
Line 2236 ERROR: Undefined symbol
00001750  223C 004DBD16           2236      MOVE.L  #GREEN,     D1          ; Set Background color
00001756  103C 0050               2237      MOVE.B  #80,        D0          ; Task for Background Color
0000175A  4E4F                    2238      TRAP    #15                     ; Trap (Perform action)
0000175C                          2239  
Line 2240 ERROR: Undefined symbol
0000175C  223C 004DBD16           2240      MOVE.L  #GREEN,     D1
00001762  103C 0051               2241      MOVE.B  #81,        D0
00001766  4E4F                    2242      TRAP    #15
00001768                          2243  
00001768                          2244      
00001768                          2245      ; Set X, Y, X2, and Y2
00001768  7200                    2246      MOVE.L  #0,   D1          ; X
0000176A  243C 000000F1           2247      MOVE.L  #241,  D2          ; Y
00001770  263C 00000280           2248      MOVE.L  #640,   D3           
00001776  283C 000001E0           2249      MOVE.L  #480,   D4 
0000177C                          2250      
0000177C                          2251      ; Draw grass
0000177C  103C 0057               2252      MOVE.B  #87,        D0          ; Draw Line
00001780  4E4F                    2253      TRAP    #15                     ; Trap (Perform action)
00001782                          2254  
00001782                          2255      ; Set Pixel Colors
Line 2256 ERROR: Undefined symbol
00001782  223C 004DBD16           2256      MOVE.L  #deepgreen,     D1          ; Set Background color
00001788  103C 0050               2257      MOVE.B  #80,        D0          ; Task for Background Color
0000178C  4E4F                    2258      TRAP    #15                     ; Trap (Perform action)
0000178E                          2259  
Line 2260 ERROR: Undefined symbol
0000178E  223C 004DBD16           2260      MOVE.L  #deepgreen,     D1
00001794  103C 0051               2261      MOVE.B  #81,        D0
00001798  4E4F                    2262      TRAP    #15
0000179A                          2263  
0000179A                          2264  * -----------------------------------------------------------
0000179A                          2265  * Find level and draw dirt
0000179A                          2266  * -----------------------------------------------------------
0000179A  45F9 00002368           2267      LEA     LEVELS,      A2
000017A0  2A39 0000238A           2268      MOVE.L  PLAYER_SCORE,   D5
000017A6  6000 0002               2269      BRA     DRAWDIRT
000017AA                          2270      
000017AA                          2271  DRAWDIRT:
000017AA                          2272      ; Set X, Y, X2, and Y2
000017AA  7200                    2273      MOVE.L  #0,   D1          ; X
000017AC  263C 00000280           2274      MOVE.L  #640,   D3  
000017B2  243C 00000115           2275      MOVE.L  #277,   D2         
000017B8  283C 000001E0           2276      MOVE.L  #480,   D4 
000017BE                          2277      
000017BE                          2278      ; Draw Dirt
000017BE  103C 0057               2279      MOVE.B  #87,        D0          ; Draw Line
000017C2  4E4F                    2280      TRAP    #15                     ; Trap (Perform action)
000017C4                          2281  
000017C4                          2282  
000017C4                          2283      ; Reset Pixel Colors
000017C4  7200                    2284      MOVE.L  #$00000000,     D1          ; Set Background color
000017C6  103C 0050               2285      MOVE.B  #80,        D0          ; Task for Background Color
000017CA  4E4F                    2286      TRAP    #15                     ; Trap (Perform action)
000017CC                          2287  
000017CC                          2288      ; Reset Pixel Colors
000017CC  7200                    2289      MOVE.L  #$00000000,     D1          ; Set Background color
000017CE  103C 0051               2290      MOVE.B  #81,        D0          ; Task for Background Color
000017D2  4E4F                    2291      TRAP    #15                     ; Trap (Perform action)
000017D4                          2292  
000017D4  4E75                    2293      RTS                             ; Return to subroutine
000017D6                          2294      
000017D6                          2295  *-----------------------------------------------------------
000017D6                          2296  * Subroutine    : Collision Check
000017D6                          2297  * Description   : Axis-Aligned Bounding Box Collision Detection
000017D6                          2298  * Algorithm checks for overlap on the 4 sides of the Player and 
000017D6                          2299  * Enemy rectangles
000017D6                          2300  * PLAYER_X <= ENEMY_X + ENEMY_W &&
000017D6                          2301  * PLAYER_X + PLAYER_W >= ENEMY_X &&
000017D6                          2302  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
000017D6                          2303  * PLAYER_H + PLAYER_Y >= ENEMY_Y
000017D6                          2304  *-----------------------------------------------------------
000017D6                          2305  CHECK_COLLISIONS:
000017D6                          2306      include     "battle/battlecollisions.x68"     
000017D6  4281                    2307      CLR.L   D1                      ; Clear D1
000017D8  4282                    2308      CLR.L   D2                      ; Clear D2
000017DA                          2309  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
000017DA  2239 00002382           2310      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
000017E0  0681 0000001B           2311      ADD.L   #PLYR_W_INIT,D1          ; Move Player Width to D1
000017E6  2439 0000239C           2312      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
000017EC  B481                    2313      CMP.L   D1,         D2          ; Do the Overlap ?
000017EE  6F00 0006               2314      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
000017F2  6000 0048               2315      BRA     CHECK_FLYENEMY_COLLISIONS
000017F6                          2316  
000017F6                          2317  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
000017F6  2239 00002382           2318      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
000017FC  2439 0000239C           2319      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
00001802  D479 000023FC           2320      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
00001808  B481                    2321      CMP.L   D1,         D2          ; Do they OverLap ?
0000180A  6C00 0006               2322      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
0000180E  6000 002C               2323      BRA     CHECK_FLYENEMY_COLLISIONS  
00001812                          2324  
00001812                          2325  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
00001812  2239 00002386           2326      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001818  2439 000023A0           2327      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
0000181E  B481                    2328      CMP.L   D1,         D2          ; Do they Overlap ?
00001820  6F00 0006               2329      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
00001824  6000 0016               2330      BRA     CHECK_FLYENEMY_COLLISIONS
00001828                          2331  
00001828                          2332  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
00001828  D238 000D               2333      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
0000182C  2439 000023A0           2334      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001832  B481                    2335      CMP.L   D1,         D2          ; Do they OverLap ?
00001834  6C00 04BA               2336      BGE     ENEMYCOLLISION               ; Collision !
00001838  6000 0002               2337      BRA     CHECK_FLYENEMY_COLLISIONS
0000183C                          2338  
0000183C                          2339  CHECK_FLYENEMY_COLLISIONS:
0000183C  4281                    2340      CLR.L   D1                      ; Clear D1
0000183E  4282                    2341      CLR.L   D2                      ; Clear D2
00001840                          2342  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
00001840  2239 00002382           2343      MOVE.L  PLAYER_X,   D1
00001846  0681 0000001B           2344      ADD.L   #PLYR_W_INIT,D1          ; Move Player Width to D1
0000184C  2439 000023AC           2345      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001852  B481                    2346      CMP.L   D1,         D2                          ; Do the Overlap ?
00001854  6F00 0006               2347      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
00001858  6000 0050               2348      BRA     CHECK_brute_COLLISIONS
0000185C                          2349  
0000185C                          2350  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
0000185C  2239 00002382           2351      MOVE.L  PLAYER_X,   D1
00001862  2439 000023AC           2352      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001868  D479 00002400           2353      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
0000186E  B481                    2354      CMP.L   D1,         D2                  ; Do they OverLap ?
00001870  6C00 0006               2355      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001874  6000 0034               2356      BRA     CHECK_brute_COLLISIONS
00001878                          2357  
00001878                          2358  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001878  2239 00002386           2359      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
0000187E  2439 000023B0           2360      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001884  D479 00002402           2361      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000188A  B481                    2362      CMP.L   D1,         D2          ; Do they Overlap ?
0000188C  6C00 0006               2363      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001890  6000 0018               2364      BRA     CHECK_brute_COLLISIONS
00001894                          2365  
00001894                          2366  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001894  D239 000023FB           2367      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
0000189A  2439 000023B0           2368      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000018A0  B481                    2369      CMP.L   D1,         D2          ; Do they OverLap ?
000018A2  6F00 044C               2370      BLE     ENEMYCOLLISION               ; Collision !
000018A6  6000 0002               2371      BRA     CHECK_brute_COLLISIONS
000018AA                          2372  CHECK_brute_COLLISIONS:
Line 2373 ERROR: Undefined symbol
000018AA  0C79 0000 005455B8      2373      CMP.W   #0,     lvlIndex
000018B2  6700 0070               2374      BEQ     CHECK_HEALTH_COLLISIONS
000018B6  4281                    2375      CLR.L   D1                      ; Clear D1
000018B8  4282                    2376      CLR.L   D2                      ; Clear D2
000018BA                          2377  PLX_LTE_TO_brute_X_PLUS_W:
000018BA  2239 00002382           2378      MOVE.L  PLAYER_X,   D1
000018C0  0681 0000001B           2379      ADD.L   #PLYR_W_INIT,D1          ; Move Player Width to D1
000018C6  2439 000023B4           2380      MOVE.L  BRUTE_X,    D2                    ; Move Enemy X to D2
000018CC  B481                    2381      CMP.L   D1,         D2                          ; Do the Overlap ?
000018CE  6F00 0006               2382      BLE     PLX_PLUS_W_LTE_TO_brute_X      ; Less than or Equal ?
000018D2  6000 0050               2383      BRA     CHECK_HEALTH_COLLISIONS
000018D6                          2384  
000018D6                          2385  PLX_PLUS_W_LTE_TO_brute_X:           ; Check player is not  
000018D6  2239 00002382           2386      MOVE.L  PLAYER_X,   D1
000018DC  2439 000023B4           2387      MOVE.L  BRUTE_X,    D2            ; Move Enemy X to D2
000018E2  0682 00000032           2388      ADD.L   #BRUTE_W_INIT,  D2                    ; Set Enemy width X + Width
000018E8  B481                    2389      CMP.L   D1,         D2                  ; Do they OverLap ?
000018EA  6C00 0006               2390      BGE     PLY_LTE_TO_brute_Y_PLUS_H  ; Less than or Equal
000018EE  6000 0034               2391      BRA     CHECK_HEALTH_COLLISIONS
000018F2                          2392  
000018F2                          2393  PLY_LTE_TO_brute_Y_PLUS_H:     
000018F2  2239 00002386           2394      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
000018F8  2439 000023B8           2395      MOVE.L  BRUTE_Y,    D2          ; Move Enemy Y to D2
000018FE  0682 00000019           2396      ADD.L   #BRUTE_H_INIT,D2          ; Set Enemy Height to D2
00001904  B481                    2397      CMP.L   D1,         D2          ; Do they Overlap ?
00001906  6C00 0006               2398      BGE     PLY_PLUS_H_LTE_TO_brute_Y  ; Less than or Equal
0000190A  6000 0018               2399      BRA     CHECK_HEALTH_COLLISIONS
0000190E                          2400  
0000190E                          2401  PLY_PLUS_H_LTE_TO_brute_Y:     ; Less than or Equal ?
0000190E  D239 000023FB           2402      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001914  2439 000023B8           2403      MOVE.L  BRUTE_Y,    D2          ; Move Enemy Height to D2  
0000191A  B481                    2404      CMP.L   D1,         D2          ; Do they OverLap ?
0000191C  6F00 03D2               2405      BLE     ENEMYCOLLISION               ; Collision !
00001920  6000 0002               2406      BRA     CHECK_HEALTH_COLLISIONS
00001924                          2407  
00001924                          2408  CHECK_HEALTH_COLLISIONS:
00001924  4281                    2409      CLR.L   D1                      ; Clear D1
00001926  4282                    2410      CLR.L   D2                      ; Clear D2
00001928                          2411  PLX_LTE_TO_HEALTH_X_PLUS_W:
00001928  2239 00002382           2412      MOVE.L  PLAYER_X,   D1
0000192E  D239 000023FA           2413      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
00001934  2439 000023A4           2414      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
0000193A  B481                    2415      CMP.L   D1,         D2                          ; Do the Overlap ?
0000193C  6F00 0006               2416      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
00001940  6000 0050               2417      BRA     CHECK_ATTACK_COLLISIONS
00001944                          2418  
00001944                          2419  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
00001944  2239 00002382           2420      MOVE.L  PLAYER_X,   D1
0000194A  2439 000023A4           2421      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
00001950  0682 0000000C           2422      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
00001956  B481                    2423      CMP.L   D1,         D2                  ; Do they OverLap ?
00001958  6C00 0006               2424      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
0000195C  6000 0034               2425      BRA     CHECK_ATTACK_COLLISIONS
00001960                          2426  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
00001960  2239 00002386           2427      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001966  2439 000023A8           2428      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
0000196C  0682 0000000C           2429      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
00001972  B481                    2430      CMP.L   D1,         D2          ; Do they Overlap ?
00001974  6C00 0006               2431      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
00001978  6000 0018               2432      BRA     CHECK_ATTACK_COLLISIONS
0000197C                          2433  
0000197C                          2434  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
0000197C  D239 000023FB           2435      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
00001982  2439 000023A8           2436      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
00001988  B481                    2437      CMP.L   D1,         D2          ; Do they OverLap ?
0000198A  6F00 03D0               2438      BLE     HEALTH_COLLISION               ; Collision !
0000198E  6000 0002               2439      BRA     CHECK_ATTACK_COLLISIONS
00001992                          2440  
00001992                          2441  CHECK_ATTACK_COLLISIONS:
00001992  4281                    2442      CLR.L   D1                      ; Clear D1
00001994  4282                    2443      CLR.L   D2                      ; Clear D2
00001996                          2444  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
00001996  2239 000023D4           2445      MOVE.L  ATTACK_X,   D1
0000199C  0681 00000023           2446      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
000019A2  2439 0000239C           2447      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
000019A8  B481                    2448      CMP.L   D1,         D2                          ; Do the Overlap ?
000019AA  6F00 0006               2449      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
000019AE  6000 0050               2450      BRA     CHECK_ATTACK_FLY_COLLISIONS
000019B2                          2451  
000019B2                          2452  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
000019B2  2239 000023D4           2453      MOVE.L  ATTACK_X,   D1
000019B8  2439 0000239C           2454      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
000019BE  D479 000023FC           2455      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000019C4  B481                    2456      CMP.L   D1,         D2                  ; Do they OverLap ?
000019C6  6C00 0006               2457      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
000019CA  6000 0034               2458      BRA     CHECK_ATTACK_FLY_COLLISIONS
000019CE                          2459  
000019CE                          2460  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
000019CE  2239 000023D8           2461      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
000019D4  2439 000023A0           2462      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
000019DA  D479 000023FE           2463      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000019E0  B481                    2464      CMP.L   D1,         D2          ; Do they Overlap ?
000019E2  6C00 0006               2465      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
000019E6  6000 0018               2466      BRA     CHECK_ATTACK_FLY_COLLISIONS
000019EA                          2467  
000019EA                          2468  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
000019EA  0681 00000014           2469      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
000019F0  2439 000023A0           2470      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
000019F6  B481                    2471      CMP.L   D1,         D2          ; Do they OverLap ?
000019F8  6F00 022C               2472      BLE     ATTACK_COLLISION               ; Collision !
000019FC  6000 0002               2473      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001A00                          2474  
00001A00                          2475  CHECK_ATTACK_FLY_COLLISIONS:
00001A00  4281                    2476      CLR.L   D1                      ; Clear D1
00001A02  4282                    2477      CLR.L   D2                      ; Clear D2
00001A04                          2478  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001A04  2239 000023D4           2479      MOVE.L  ATTACK_X,   D1
00001A0A  0681 00000023           2480      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001A10  2439 000023AC           2481      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001A16  B481                    2482      CMP.L   D1,         D2                          ; Do the Overlap ?
00001A18  6F00 0006               2483      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001A1C  6000 0050               2484      BRA     CHECK_ATTACK_BRUTE_COLLISIONS
00001A20                          2485  
00001A20                          2486  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001A20  2239 000023D4           2487      MOVE.L  ATTACK_X,   D1
00001A26  2439 000023AC           2488      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001A2C  D479 00002400           2489      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001A32  B481                    2490      CMP.L   D1,         D2                  ; Do they OverLap ?
00001A34  6C00 0006               2491      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001A38  6000 0034               2492      BRA     CHECK_ATTACK_BRUTE_COLLISIONS
00001A3C                          2493  
00001A3C                          2494  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001A3C  2239 000023D8           2495      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001A42  2439 000023B0           2496      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001A48  D479 00002402           2497      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001A4E  B481                    2498      CMP.L   D1,         D2          ; Do they Overlap ?
00001A50  6C00 0006               2499      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001A54  6000 0018               2500      BRA     CHECK_ATTACK_BRUTE_COLLISIONS
00001A58                          2501  
00001A58                          2502  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001A58  0681 00000014           2503      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001A5E  2439 000023B0           2504      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001A64  B481                    2505      CMP.L   D1,         D2          ; Do they OverLap ?
00001A66  6F00 01E4               2506      BLE     ATTACK_FLY_COLLISION               ; Collision !
00001A6A  6000 0002               2507      BRA     CHECK_ATTACK_BRUTE_COLLISIONS
00001A6E                          2508  
00001A6E                          2509  CHECK_ATTACK_BRUTE_COLLISIONS:
00001A6E  4281                    2510      CLR.L   D1                      ; Clear D1
00001A70  4282                    2511      CLR.L   D2                      ; Clear D2
00001A72                          2512  ATK_X_LTE_TO_BRUTE_X_PLUS_W:
00001A72  2239 000023D4           2513      MOVE.L  ATTACK_X,   D1
00001A78  0681 00000023           2514      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001A7E  2439 000023B4           2515      MOVE.L  BRUTE_X,    D2                    ; Move Enemy X to D2
00001A84  B481                    2516      CMP.L   D1,         D2                          ; Do the Overlap ?
00001A86  6F00 0006               2517      BLE     ATTACK_PLUS_W_LTE_TO_BRUTE_X     ; Less than or Equal ?
00001A8A  6000 0050               2518      BRA     CHECK_THROW_COLLISION
00001A8E                          2519  
00001A8E                          2520  ATTACK_PLUS_W_LTE_TO_BRUTE_X:           ; Check player is not  
00001A8E  2239 000023D4           2521      MOVE.L  ATTACK_X,   D1
00001A94  2439 000023B4           2522      MOVE.L  BRUTE_X,    D2            ; Move Enemy X to D2
00001A9A  0682 00000032           2523      ADD.L   #BRUTE_W_INIT,  D2                    ; Set Enemy width X + Width
00001AA0  B481                    2524      CMP.L   D1,         D2                  ; Do they OverLap ?
00001AA2  6C00 0006               2525      BGE     ATK_LTE_TO_BRUTE_Y_PLUS_H  ; Less than or Equal
00001AA6  6000 0034               2526      BRA     CHECK_THROW_COLLISION
00001AAA                          2527  
00001AAA                          2528  ATK_LTE_TO_BRUTE_Y_PLUS_H:     
00001AAA  2239 000023D8           2529      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
00001AB0  2439 000023B8           2530      MOVE.L  BRUTE_Y,    D2          ; Move Enemy Y to D2
00001AB6  0682 00000019           2531      ADD.L   #BRUTE_H_INIT,D2          ; Set Enemy Height to D2
00001ABC  B481                    2532      CMP.L   D1,         D2          ; Do they Overlap ?
00001ABE  6C00 0006               2533      BGE     ATK_PLUS_H_LTE_TO_BRUTE_Y  ; Less than or Equal
00001AC2  6000 0018               2534      BRA     CHECK_THROW_COLLISION
00001AC6                          2535  
00001AC6                          2536  ATK_PLUS_H_LTE_TO_BRUTE_Y:     ; Less than or Equal ?
00001AC6  0681 00000014           2537      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001ACC  2439 000023B8           2538      MOVE.L  BRUTE_Y,    D2          ; Move Enemy Height to D2  
00001AD2  B481                    2539      CMP.L   D1,         D2          ; Do they OverLap ?
00001AD4  6F00 019C               2540      BLE     ATTACK_BRUTE_COLLISION               ; Collision !
00001AD8  6000 0002               2541      BRA     CHECK_THROW_COLLISION
00001ADC                          2542  
00001ADC                          2543  CHECK_THROW_COLLISION:
00001ADC  4281                    2544      CLR.L   D1                      ; Clear D1
00001ADE  4282                    2545      CLR.L   D2                      ; Clear D2
00001AE0                          2546  THROW_X_LTE_TO_ENEMY_X_PLUS_W:
00001AE0  2239 000023E2           2547      MOVE.L  THROW_X,   D1
00001AE6  0681 00000023           2548      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
00001AEC  2439 0000239C           2549      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001AF2  B481                    2550      CMP.L   D1,         D2                          ; Do the Overlap ?
00001AF4  6F00 0006               2551      BLE     THROW_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
00001AF8  6000 0050               2552      BRA     CHECK_THROW_FLY_COLLISIONS
00001AFC                          2553  
00001AFC                          2554  THROW_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
00001AFC  2239 000023E2           2555      MOVE.L  THROW_X,   D1
00001B02  2439 0000239C           2556      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
00001B08  D479 000023FC           2557      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001B0E  B481                    2558      CMP.L   D1,         D2                  ; Do they OverLap ?
00001B10  6C00 0006               2559      BGE     TRW_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001B14  6000 0034               2560      BRA     CHECK_THROW_FLY_COLLISIONS
00001B18                          2561  
00001B18                          2562  TRW_LTE_TO_ENEMY_Y_PLUS_H:     
00001B18  2239 000023E6           2563      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001B1E  2439 000023A0           2564      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001B24  D479 000023FE           2565      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001B2A  B481                    2566      CMP.L   D1,         D2          ; Do they Overlap ?
00001B2C  6C00 0006               2567      BGE     TRW_PLUS_H_LTE_TO_THROW_Y  ; Less than or Equal
00001B30  6000 0018               2568      BRA     CHECK_THROW_FLY_COLLISIONS
00001B34                          2569  
00001B34                          2570  TRW_PLUS_H_LTE_TO_THROW_Y:     ; Less than or Equal ?
00001B34  0681 0000000F           2571      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
00001B3A  2439 000023A0           2572      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001B40  B481                    2573      CMP.L   D1,         D2          ; Do they OverLap ?
00001B42  6F00 00E2               2574      BLE     ATTACK_COLLISION               ; Collision !
00001B46  6000 0002               2575      BRA     CHECK_THROW_FLY_COLLISIONS
00001B4A                          2576  
00001B4A                          2577  CHECK_THROW_FLY_COLLISIONS:
00001B4A  4281                    2578      CLR.L   D1                      ; Clear D1
00001B4C  4282                    2579      CLR.L   D2                      ; Clear D2
00001B4E                          2580  THROW_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001B4E  2239 000023E2           2581      MOVE.L  THROW_X,   D1
00001B54  0681 0000000F           2582      ADD.L   #THRW_W_INIT,D1          ; Move Player Width to D1
00001B5A  2439 000023AC           2583      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001B60  B481                    2584      CMP.L   D1,         D2                          ; Do the Overlap ?
00001B62  6F00 0006               2585      BLE     THROW_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001B66  6000 0050               2586      BRA     CHECK_THROW_BRUTE_COLLISIONS
00001B6A                          2587  
00001B6A                          2588  THROW_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001B6A  2239 000023E2           2589      MOVE.L  THROW_X,   D1
00001B70  2439 000023AC           2590      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001B76  D479 00002400           2591      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001B7C  B481                    2592      CMP.L   D1,         D2                  ; Do they OverLap ?
00001B7E  6C00 0006               2593      BGE     TRW_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001B82  6000 0034               2594      BRA     CHECK_THROW_BRUTE_COLLISIONS
00001B86                          2595  
00001B86                          2596  TRW_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001B86  2239 000023E6           2597      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001B8C  2439 000023B0           2598      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001B92  D479 00002402           2599      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001B98  B481                    2600      CMP.L   D1,         D2          ; Do they Overlap ?
00001B9A  6C00 0006               2601      BGE     TRW_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001B9E  6000 0018               2602      BRA     CHECK_THROW_BRUTE_COLLISIONS
00001BA2                          2603  
00001BA2                          2604  TRW_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001BA2  0681 0000000F           2605      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
00001BA8  2439 000023B0           2606      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001BAE  B481                    2607      CMP.L   D1,         D2          ; Do they OverLap ?
00001BB0  6F00 009A               2608      BLE     ATTACK_FLY_COLLISION               ; Collision !
00001BB4  6000 0002               2609      BRA     CHECK_THROW_BRUTE_COLLISIONS
00001BB8                          2610  
00001BB8                          2611  CHECK_THROW_BRUTE_COLLISIONS:
00001BB8  4281                    2612      CLR.L   D1                      ; Clear D1
00001BBA  4282                    2613      CLR.L   D2                      ; Clear D2
00001BBC                          2614  THROW_X_LTE_TO_BRUTE_X_PLUS_W:
00001BBC  2239 000023E2           2615      MOVE.L  THROW_X,   D1
00001BC2  0681 00000023           2616      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
00001BC8  2439 000023B4           2617      MOVE.L  BRUTE_X,    D2                    ; Move Enemy X to D2
00001BCE  B481                    2618      CMP.L   D1,         D2                          ; Do the Overlap ?
00001BD0  6F00 0006               2619      BLE     THROW_PLUS_W_LTE_TO_BRUTE_X     ; Less than or Equal ?
00001BD4  6000 00F2               2620      BRA     COLLISION_CHECK_DONE
00001BD8                          2621  
00001BD8                          2622  THROW_PLUS_W_LTE_TO_BRUTE_X:           ; Check player is not  
00001BD8  2239 000023E2           2623      MOVE.L  THROW_X,   D1
00001BDE  2439 000023B4           2624      MOVE.L  BRUTE_X,    D2            ; Move Enemy X to D2
00001BE4  0682 00000032           2625      ADD.L   #BRUTE_W_INIT,  D2                    ; Set Enemy width X + Width
00001BEA  B481                    2626      CMP.L   D1,         D2                  ; Do they OverLap ?
00001BEC  6C00 0006               2627      BGE     TRW_LTE_TO_BRUTE_Y_PLUS_H  ; Less than or Equal
00001BF0  6000 00D6               2628      BRA     COLLISION_CHECK_DONE
00001BF4                          2629  
00001BF4                          2630  TRW_LTE_TO_BRUTE_Y_PLUS_H:     
00001BF4  2239 000023E6           2631      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001BFA  2439 000023B8           2632      MOVE.L  BRUTE_Y,    D2          ; Move Enemy Y to D2
00001C00  0682 00000019           2633      ADD.L   #BRUTE_H_INIT,D2          ; Set Enemy Height to D2
00001C06  B481                    2634      CMP.L   D1,         D2          ; Do they Overlap ?
00001C08  6C00 0006               2635      BGE     TRW_PLUS_H_LTE_TO_BRUTE_Y  ; Less than or Equal
00001C0C  6000 00BA               2636      BRA     COLLISION_CHECK_DONE
00001C10                          2637  
00001C10                          2638  TRW_PLUS_H_LTE_TO_BRUTE_Y:     ; Less than or Equal ?
00001C10  0681 00000014           2639      ADD.L   #THROW_HEIGHT,D1          ; Add Player Height to D1
00001C16  2439 000023B8           2640      MOVE.L  BRUTE_Y,    D2          ; Move Enemy Height to D2  
00001C1C  B481                    2641      CMP.L   D1,         D2          ; Do they OverLap ?
00001C1E  6F00 0052               2642      BLE     ATTACK_BRUTE_COLLISION               ; Collision !
00001C22  6000 00A4               2643      BRA     COLLISION_CHECK_DONE
00001C26                          2644  
00001C26                          2645  
00001C26                          2646  
00001C26                          2647  ATTACK_COLLISION:
00001C26  4A39 000023F5           2648      TST.B   ENEMY_HIT
00001C2C  6600 0196               2649      BNE     STILL_COLLIDED
00001C30  6100 F0C6               2650      BSR     PLAY_HIT
00001C34  23FC 00000190 000023A0  2651      MOVE.L  #400, ENEMY_Y
00001C3E  13FC 0001 000023F5      2652      MOVE.B  #01,  ENEMY_HIT
00001C46  6100 0068               2653      BSR     CHECK_ENEMIES_CLEARED
00001C4A  4E75                    2654      RTS
00001C4C                          2655  
00001C4C                          2656  ATTACK_FLY_COLLISION:
00001C4C  4A39 000023F6           2657      TST.B   FLYENEMY_HIT
00001C52  6600 0170               2658      BNE     STILL_COLLIDED
00001C56  6100 F0A0               2659      BSR     PLAY_HIT
00001C5A  23FC 00000190 000023B0  2660      MOVE.L  #400, FLYINGENEMY_Y
00001C64  13FC 0001 000023F6      2661      MOVE.B  #01,  FLYENEMY_HIT
00001C6C  6100 0042               2662      BSR     CHECK_ENEMIES_CLEARED
00001C70  4E75                    2663      RTS
00001C72                          2664  
00001C72                          2665  ATTACK_BRUTE_COLLISION:
00001C72  4A39 000023F8           2666      TST.B   BRUTE_HIT
00001C78  6600 014A               2667      BNE     STILL_COLLIDED
00001C7C  6100 F07A               2668      BSR     PLAY_HIT
00001C80                          2669  
00001C80  5339 000023F9           2670      SUBQ.B  #1,BRUTE_HP
00001C86  4A39 000023F9           2671      TST.B   BRUTE_HP
00001C8C                          2672      IF <EQ> THEN
00001C90  23FC 00000190 000023B8  2673          MOVE.L  #400, BRUTE_Y
00001C9A  13FC 0001 000023F7      2674          MOVE.B  #1,BRUTE_DEAD
00001CA2  6100 000C               2675          BSR     CHECK_ENEMIES_CLEARED
00001CA6                          2676      ENDI
00001CA6                          2677  
00001CA6  13FC 0001 000023F8      2678      MOVE.B  #01,  BRUTE_HIT
00001CAE  4E75                    2679      RTS
00001CB0                          2680  
00001CB0                          2681  CHECK_ENEMIES_CLEARED:
00001CB0  5239 000023F2           2682      ADDI.B  #1,         ENEMIES_DEFEATED
00001CB6  1239 000023F2           2683      MOVE.B  ENEMIES_DEFEATED,D1
00001CBC  B239 000023F4           2684      CMP.B   enemiesToDefeat,D1
00001CC2  6700 0318               2685      BEQ     WAVE_DEFEATED
00001CC6  4E75                    2686      RTS
00001CC8                          2687  
00001CC8                          2688  COLLISION_CHECK_DONE:               ; No Collision Update points
00001CC8  4239 0000235E           2689      CLR.B   IN_ENEMY
00001CCE  4239 000023F8           2690      CLR.B   BRUTE_HIT
00001CD4  4239 0000235F           2691      CLR.B   IN_HPACK
00001CDA  4281                    2692      CLR.L   D1
00001CDC  1239 000023CD           2693      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
00001CE2  D2B9 0000238A           2694      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001CE8  23C1 0000238A           2695      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
00001CEE  4E75                    2696      RTS                             ; Return to subroutine
00001CF0                          2697  
00001CF0                          2698  
00001CF0                          2699  ENEMYCOLLISION:
00001CF0  0C39 0001 0000235E      2700      CMP.B     #$01, IN_ENEMY
00001CF8  6700 00CA               2701      BEQ     STILL_COLLIDED
00001CFC  5339 000023C8           2702      SUB.B   #1, antHealth
00001D02  13FC 0001 0000235E      2703      MOVE.B  #$01, IN_ENEMY
00001D0A  4A39 000023C8           2704      TST.B   antHealth
00001D10  6700 0028               2705      BEQ     antKilled
00001D14  6100 EF88               2706      BSR     PLAY_HITHURT               ; Play Opps Wav
00001D18  0C39 0001 00002360      2707      CMP.B   #01, DRAW_HEALTHPACKS
00001D20                          2708      IF <NE> THEN    
00001D24  6100 E8D8               2709          BSR RESET_HEALTH_POSITION
00001D28                          2710      ENDI
00001D28                          2711  
00001D28  13FC 0001 00002360      2712      MOVE.B  #01, DRAW_HEALTHPACKS 
00001D30  13FC 0001 00002361      2713      MOVE.B  #01, SPAWN_HEALTHPACKS 
00001D38  4E75                    2714      RTS                             ; Return to subroutine
00001D3A                          2715  
00001D3A                          2716  antKilled:
00001D3A  13FC 0003 000023C8      2717      MOVE.B    #3, antHealth
00001D42  5339 000023C9           2718      SUBQ.b    #1, antsRemaining
00001D48  4A39 000023C9           2719      TST.b     antsRemaining
00001D4E  6700 019E               2720      BEQ       GAME_OVER
00001D52  6100 EF4A               2721      BSR     PLAY_HITHURT               ; Play Opps Wav
00001D56  6100 F3EC               2722      BSR     DRAW_RESPAWN
00001D5A  4E75                    2723      RTS
00001D5C                          2724  
00001D5C                          2725  HEALTH_COLLISION:
00001D5C                          2726      ; skip if still collided
00001D5C  0C39 0001 0000235F      2727      CMP.B     #$01, IN_HPACK
00001D64  6700 005E               2728      BEQ     STILL_COLLIDED
00001D68  0C39 0003 000023C8      2729      CMP.B     #3, antHealth
00001D70  6700 0052               2730      BEQ     STILL_COLLIDED
00001D74                          2731  
00001D74  0C79 0000 000024A2      2732      CMP.W   #0, healthCooldown
00001D7C                          2733      IF <EQ> THEN
00001D80  33FC 01F4 000024A2      2734          MOVE.W  #500, healthCooldown
00001D88                          2735      ENDI
00001D88                          2736  
00001D88  6100 EF32               2737      BSR     PLAY_POWERUP               ; Play Opps Wav
00001D8C                          2738  
00001D8C  5239 000023C8           2739      ADD.B   #1, antHealth
00001D92  0C39 0003 000023C8      2740      CMP.B   #03, antHealth
00001D9A  6C00 0016               2741      BGE     STOP_HPACK_SPAWN
00001D9E                          2742      
00001D9E  13FC 0001 0000235F      2743      MOVE.B  #$01, IN_HPACK
00001DA6  23FC 0000005A 000023A8  2744      MOVE.L  #90, HEALTH_Y
00001DB0                          2745      
00001DB0  4E75                    2746      RTS
00001DB0  4E75                    2747  -------------------- end include --------------------
00001DB2                          2748  
00001DB2                          2749  STOP_HPACK_SPAWN:
00001DB2  13FC 0000 00002360      2750      MOVE.B  #00, DRAW_HEALTHPACKS
00001DBA  13FC 0000 00002361      2751      MOVE.B  #00, SPAWN_HEALTHPACKS
00001DC2                          2752  
00001DC2  4E75                    2753      RTS
00001DC4                          2754  
00001DC4                          2755  STILL_COLLIDED:
00001DC4  4E75                    2756      RTS
00001DC6                          2757  *-----------------------------------------------------------
00001DC6                          2758  * Subroutine    : EXIT
00001DC6                          2759  * Description   : Exit message and End Game
00001DC6                          2760  *-----------------------------------------------------------
00001DC6                          2761  
00001DC6                          2762  HILL_LOST:
00001DC6                          2763  
Line 2764 ERROR: Undefined symbol
00001DC6  0C79 0003 005455B8      2764      CMP.W   #3,lvlIndex
00001DCE  6700 032E               2765      BEQ     WIN_SCREEN
00001DD2                          2766  
00001DD2  103C 000B               2767      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001DD6  323C FF00               2768      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001DDA  4E4F                    2769      TRAP    #15                     ; Trap (Perform action)
00001DDC  6100 EE80               2770      BSR     PLAY_GAMEOVER
00001DE0                          2771  
00001DE0                          2772  *------------Set Colours--------------*
Line 2773 ERROR: Undefined symbol
00001DE0  223C 004DBD16           2773      MOVE.L  #color5,     D1
00001DE6  103C 0015               2774      MOVE.B  #21,        D0          ; Set Text Color
00001DEA  243C 01130005           2775      MOVE.L  #$01130005, D2
00001DF0  4E4F                    2776      TRAP    #15                     ; Trap (Perform action)
00001DF2                          2777  
Line 2778 ERROR: Undefined symbol
00001DF2  223C 004DBD16           2778      MOVE.L  #deepgreen,     D1
00001DF8  103C 0051               2779      MOVE.B  #81,        D0          ; Set Text Color
00001DFC  4E4F                    2780      TRAP    #15                     ; Trap (Perform action)
00001DFE                          2781  
00001DFE                          2782  *------------ fill background --------------*
00001DFE  323C 0000               2783      MOVE.W      #0,D1
00001E02  343C 0000               2784      MOVE.W      #0,d2
00001E06  103C 0059               2785      MOVE.B      #89,D0
00001E0A  4E4F                    2786      TRAP        #15
00001E0C                          2787  
00001E0C                          2788  *------------ Print hill lost message--------------*
00001E0C                          2789  
00001E0C  103C 000B               2790      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E10  323C 0803               2791      MOVE.W  #$0803,     D1          ; Col 10, Row 03
00001E14  4E4F                    2792      TRAP    #15                     ; Trap (Perform action)
00001E16  43F9 00002272           2793      LEA     HILLLOST_MSG,A1        ; Game Over Message
Line 2794 ERROR: Undefined symbol
00001E1C  6100 9EF8               2794      BSR     print
00001E20                          2795  
00001E20                          2796  *------------print amount of enemies defeated--------------*
00001E20                          2797  
00001E20  103C 000B               2798      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E24  323C 0606               2799      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001E28  4E4F                    2800      TRAP    #15                     ; Trap (Perform action)
00001E2A  43F9 00002242           2801      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2802 ERROR: Undefined symbol
00001E30  6100 9EE4               2802      BSR     print
00001E34                          2803  
00001E34  103C 000B               2804      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E38  323C 1B06               2805      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001E3C  4E4F                    2806      TRAP    #15                     ; Trap (Perform action)
00001E3E  103C 0003               2807      MOVE.B  #03,        D0          ; Display number at D1.L
00001E42  7200                    2808      MOVEQ.L #0,D1
00001E44  1239 000023F2           2809      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001E4A  4E4F                    2810      TRAP    #15                     ; Trap (Perform action)
00001E4C                          2811      
00001E4C                          2812  *------------print hill health --------------*
00001E4C                          2813  
00001E4C  103C 000B               2814      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E50  323C 0607               2815      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001E54  4E4F                    2816      TRAP    #15                     ; Trap (Perform action)
00001E56  43F9 00002348           2817      LEA     hillHP_MSG,  A1          ; Score Message
Line 2818 ERROR: Undefined symbol
00001E5C  6100 9EB8               2818      BSR     print
00001E60                          2819  
00001E60  103C 000B               2820      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E64  323C 1B07               2821      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001E68  4E4F                    2822      TRAP    #15                     ; Trap (Perform action)
00001E6A  7200                    2823      MOVEQ.L #0,D1
00001E6C  1239 0000235D           2824      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001E72  103C 0003               2825      MOVE.B  #03,        D0          ; Display number at D1.L
00001E76  4E4F                    2826      TRAP    #15                     ; Trap (Perform action)
00001E78                          2827      
00001E78                          2828  *------------ print back to map--------------*
00001E78                          2829  
Line 2830 ERROR: Undefined symbol
00001E78  223C 004DBD16           2830      MOVE.L  #color5,     D1
00001E7E  103C 0015               2831      MOVE.B  #21,        D0          ; Set Text Color
00001E82  243C 03140000           2832      MOVE.L  #$03140000, D2
00001E88  4E4F                    2833      TRAP    #15                     ; Trap (Perform action)
00001E8A                          2834  
00001E8A                          2835      ; Restart
00001E8A  103C 000B               2836      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001E8E  323C 070C               2837      MOVE.W  #$070C,     D1          ; Col 09, Row 01
00001E92  4E4F                    2838      TRAP    #15                     ; Trap (Perform action)
00001E94  43F9 000022E0           2839      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
00001E9A  303C 000D               2840      MOVE    #13,        D0          ; No Line feedF=
00001E9E  4E4F                    2841      TRAP    #15                     ; Trap (Perform action)
00001EA0                          2842  
00001EA0  103C 000B               2843      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001EA4  323C 1F0C               2844      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
00001EA8  4E4F                    2845      TRAP    #15                     ; Trap (Perform action)
00001EAA  7200                    2846      MOVEQ.L #0,D1
00001EAC  1239 000024A0           2847      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
00001EB2  103C 0003               2848      MOVE.B  #03,        D0          ; Display number at D1.L
00001EB6  4E4F                    2849      TRAP    #15                     ; Trap (Perform action)
00001EB8                          2850  
00001EB8                          2851      
00001EB8  103C 005E               2852      MOVE.B  #TC_REDRAW,        D0
00001EBC  4E4F                    2853      TRAP    #15
00001EBE                          2854     
00001EBE                          2855      ; delay by 1sec
00001EBE  103C 0017               2856      MOVE.b  #23,D0
00001EC2  7264                    2857      MOVE.L  #100,D1
00001EC4  4E4F                    2858      TRAP    #15
00001EC6                          2859  
00001EC6  5339 000024A0           2860      SUB.B   #01,backToMapCount
00001ECC  4A39 000024A0           2861      TST.B   backToMapCount
Line 2862 ERROR: Undefined symbol
00001ED2  6700 9E42               2862      BEQ     mapNotFirstInit
00001ED6                          2863  
Line 2864 ERROR: Undefined symbol
00001ED6  23FC 000000C8 005455B8  2864      MOVE.l  #200,currentHealth
Line 2865 ERROR: Undefined symbol
00001EE0  6100 9E34               2865      bsr     initDraw
00001EE4                          2866      ; back to top
00001EE4  6000 FEE0               2867      BRA     HILL_LOST
00001EE8                          2868  
00001EE8                          2869  INPUTLOOP:
00001EE8  6100 E2F6               2870      BSR     BATTLEINPUT
00001EEC  60FA                    2871      BRA     INPUTLOOP
00001EEE                          2872  
00001EEE                          2873  GAME_OVER:
00001EEE                          2874      
00001EEE  103C 000B               2875      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001EF2  323C FF00               2876      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001EF6  4E4F                    2877      TRAP    #15                     ; Trap (Perform action)
00001EF8  6100 ED64               2878      BSR     PLAY_GAMEOVER
00001EFC                          2879  
00001EFC                          2880  *------------Set Colours--------------*
Line 2881 ERROR: Undefined symbol
00001EFC  223C 004DBD16           2881      MOVE.L  #color5,     D1
00001F02  103C 0015               2882      MOVE.B  #21,        D0          ; Set Text Color
00001F06  243C 01130005           2883      MOVE.L  #$01130005, D2
00001F0C  4E4F                    2884      TRAP    #15                     ; Trap (Perform action)
00001F0E                          2885  
Line 2886 ERROR: Undefined symbol
00001F0E  223C 004DBD16           2886      MOVE.L  #color1,     D1
00001F14  103C 0051               2887      MOVE.B  #81,        D0          ; Set Text Color
00001F18  4E4F                    2888      TRAP    #15                     ; Trap (Perform action)
00001F1A                          2889  
00001F1A                          2890  *------------ fill background --------------*
00001F1A  323C 0000               2891      MOVE.W      #0,D1
00001F1E  343C 0000               2892      MOVE.W      #0,d2
00001F22  103C 0059               2893      MOVE.B      #89,D0
00001F26  4E4F                    2894      TRAP        #15
00001F28                          2895  
00001F28                          2896  *------------ Print gameover message--------------*
00001F28  103C 000B               2897      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001F2C  323C 1001               2898      MOVE.W  #$1001,     D1          ; Col 10, Row 03
00001F30  4E4F                    2899      TRAP    #15                     ; Trap (Perform action)
00001F32  43F9 000022D6           2900      LEA     GAMEOVER_MSG,A1        ; Game Over Message
Line 2901 ERROR: Undefined symbol
00001F38  6100 9DDC               2901      BSR     print
00001F3C                          2902  
00001F3C  103C 000B               2903      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001F40  323C 0703               2904      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001F44  4E4F                    2905      TRAP    #15                     ; Trap (Perform action)
00001F46  43F9 000022BA           2906      LEA     FALLENKINGDOM_MSG,A1        ; Game Over Message
Line 2907 ERROR: Undefined symbol
00001F4C  6100 9DC8               2907      BSR     print
00001F50                          2908  
00001F50                          2909  
00001F50                          2910  *------------ Print hills defended message--------------*
00001F50                          2911      ; TODO TODO hills defended msg
00001F50  103C 000B               2912      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001F54  323C 0606               2913      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001F58  4E4F                    2914      TRAP    #15                     ; Trap (Perform action)
00001F5A  43F9 00002242           2915      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2916 ERROR: Undefined symbol
00001F60  6100 9DB4               2916      BSR     print
00001F64                          2917  
00001F64  103C 000B               2918      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001F68  323C 1B06               2919      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001F6C  4E4F                    2920      TRAP    #15                     ; Trap (Perform action)
00001F6E  103C 0003               2921      MOVE.B  #03,        D0          ; Display number at D1.L
00001F72  7200                    2922      MOVEQ.L #0,D1
00001F74  1239 000023F2           2923      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001F7A  4E4F                    2924      TRAP    #15                     ; Trap (Perform action)
00001F7C                          2925      
00001F7C                          2926  *------------ Print ants remaining message--------------*
00001F7C  103C 000B               2927      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001F80  323C 0607               2928      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001F84  4E4F                    2929      TRAP    #15                     ; Trap (Perform action)
00001F86  43F9 00002336           2930      LEA     antsRem_MSG,  A1          ; Score Message
Line 2931 ERROR: Undefined symbol
00001F8C  6100 9D88               2931      BSR     print
00001F90                          2932  
00001F90  103C 000B               2933      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001F94  323C 1B07               2934      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001F98  4E4F                    2935      TRAP    #15                     ; Trap (Perform action)
00001F9A  7200                    2936      MOVEQ.L #0,D1
00001F9C  1239 000023C9           2937      MOVE.B  antsRemaining,D1         ; Move Score to D1.L
00001FA2  103C 0003               2938      MOVE.B  #03,        D0          ; Display number at D1.L
00001FA6  4E4F                    2939      TRAP    #15                     ; Trap (Perform action)
00001FA8                          2940      
00001FA8                          2941  *------------ change fonts --------------*
Line 2942 ERROR: Undefined symbol
00001FA8  223C 004DBD16           2942      MOVE.L  #color5,     D1
00001FAE  103C 0015               2943      MOVE.B  #21,        D0          ; Set Text Color
00001FB2  243C 03140000           2944      MOVE.L  #$03140000, D2
00001FB8  4E4F                    2945      TRAP    #15                     ; Trap (Perform action)
00001FBA                          2946  
00001FBA                          2947  *------------ Print restart message--------------*
00001FBA  103C 000B               2948      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001FBE  323C 0B09               2949      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001FC2  4E4F                    2950      TRAP    #15                     ; Trap (Perform action)
00001FC4  43F9 000022F8           2951      LEA     RESTART_MSG,  A1          ; Score Message
00001FCA  303C 000D               2952      MOVE    #13,        D0          ; No Line feedF=
00001FCE  4E4F                    2953      TRAP    #15                     ; Trap (Perform action)
00001FD0                          2954  
00001FD0                          2955      
00001FD0  103C 005E               2956      MOVE.B  #TC_REDRAW,        D0
00001FD4  4E4F                    2957      TRAP    #15
00001FD6                          2958  
00001FD6                          2959  LOSSINPUTLOOP:
00001FD6  6100 E208               2960      BSR     BATTLEINPUT
00001FDA  60FA                    2961      BRA     LOSSINPUTLOOP
00001FDC                          2962  
00001FDC                          2963  WAVE_DEFEATED:
00001FDC                          2964  
Line 2965 ERROR: Undefined symbol
00001FDC  0C79 0003 005455B8      2965      CMP.W   #3,lvlIndex
00001FE4  6700 0118               2966      BEQ     WIN_SCREEN
00001FE8                          2967      
00001FE8  103C 000B               2968      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001FEC  323C FF00               2969      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001FF0  4E4F                    2970      TRAP    #15                     ; Trap (Perform action)
00001FF2  6100 EC6A               2971      BSR     PLAY_GAMEOVER
00001FF6                          2972  
00001FF6                          2973  *------------Set Colours--------------*
Line 2974 ERROR: Undefined symbol
00001FF6  223C 004DBD16           2974      MOVE.L  #color5,     D1
00001FFC  103C 0015               2975      MOVE.B  #21,        D0          ; Set Text Color
00002000  243C 01130005           2976      MOVE.L  #$01130005, D2
00002006  4E4F                    2977      TRAP    #15                     ; Trap (Perform action)
00002008                          2978  
Line 2979 ERROR: Undefined symbol
00002008  223C 004DBD16           2979      MOVE.L  #deepgreen,     D1
Line 2980 ERROR: Undefined symbol
0000200E  103C 0016               2980      MOVE.B  #tcPenFil,        D0          ; Set Text Color
00002012  4E4F                    2981      TRAP    #15                     ; Trap (Perform action)
00002014                          2982  
00002014                          2983  *------------ fill background --------------*
00002014  323C 0000               2984      MOVE.W      #0,D1
00002018  343C 0000               2985      MOVE.W      #0,d2
0000201C  103C 0059               2986      MOVE.B      #89,D0
00002020  4E4F                    2987      TRAP        #15
00002022                          2988  
00002022                          2989  *------------ Print wave defeated message--------------*
00002022                          2990  
00002022  103C 000B               2991      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00002026  323C 0E03               2992      MOVE.W  #$0E03,     D1          ; Col 10, Row 03
0000202A  4E4F                    2993      TRAP    #15                     ; Trap (Perform action)
0000202C  43F9 000022AB           2994      LEA     HILLDEFENDED_MSG,A1        ; Game Over Message
Line 2995 ERROR: Undefined symbol
00002032  6100 9CE2               2995      BSR     print
00002036                          2996  
00002036                          2997  *------------print amount of enemies defeated--------------*
00002036                          2998  
00002036  103C 000B               2999      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000203A  323C 0606               3000      MOVE.W  #$0606,     D1          ; Col 02, Row 01
0000203E  4E4F                    3001      TRAP    #15                     ; Trap (Perform action)
00002040  43F9 00002242           3002      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 3003 ERROR: Undefined symbol
00002046  6100 9CCE               3003      BSR     print
0000204A                          3004  
0000204A  103C 000B               3005      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000204E  323C 1B06               3006      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00002052  4E4F                    3007      TRAP    #15                     ; Trap (Perform action)
00002054  103C 0003               3008      MOVE.B  #03,        D0          ; Display number at D1.L
00002058  7200                    3009      MOVEQ.L #0,D1
0000205A  1239 000023F2           3010      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00002060  4E4F                    3011      TRAP    #15                     ; Trap (Perform action)
00002062                          3012      
00002062                          3013  *------------print hill health --------------*
00002062                          3014  
00002062  103C 000B               3015      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00002066  323C 0607               3016      MOVE.W  #$0607,     D1          ; Col 02, Row 01
0000206A  4E4F                    3017      TRAP    #15                     ; Trap (Perform action)
0000206C  43F9 00002348           3018      LEA     hillHP_MSG,  A1          ; Score Message
Line 3019 ERROR: Undefined symbol
00002072  6100 9CA2               3019      BSR     print
00002076                          3020  
00002076  103C 000B               3021      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000207A  323C 1B07               3022      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
0000207E  4E4F                    3023      TRAP    #15                     ; Trap (Perform action)
00002080  7200                    3024      MOVEQ.L #0,D1
00002082  1239 0000235D           3025      MOVE.B  hillHP,D1         ; Move Score to D1.L
00002088  103C 0003               3026      MOVE.B  #03,        D0          ; Display number at D1.L
0000208C  4E4F                    3027      TRAP    #15                     ; Trap (Perform action)
0000208E                          3028      
0000208E                          3029  *------------ print back to map--------------*
Line 3030 ERROR: Undefined symbol
0000208E  223C 004DBD16           3030      MOVE.L  #color5,     D1
00002094  103C 0015               3031      MOVE.B  #21,        D0          ; Set Text Color
00002098  243C 03140000           3032      MOVE.L  #$03140000, D2
0000209E  4E4F                    3033      TRAP    #15                     ; Trap (Perform action)
000020A0                          3034  
000020A0                          3035  
000020A0                          3036      ; Restart
000020A0  103C 000B               3037      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000020A4  323C 070C               3038      MOVE.W  #$070C,     D1          ; Col 09, Row 01
000020A8  4E4F                    3039      TRAP    #15                     ; Trap (Perform action)
000020AA  43F9 000022E0           3040      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
000020B0  303C 000D               3041      MOVE    #13,        D0          ; No Line feedF=
000020B4  4E4F                    3042      TRAP    #15                     ; Trap (Perform action)
000020B6                          3043  
000020B6  103C 000B               3044      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000020BA  323C 1F0C               3045      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
000020BE  4E4F                    3046      TRAP    #15                     ; Trap (Perform action)
000020C0  7200                    3047      MOVEQ.L #0,D1
000020C2  1239 000024A0           3048      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
000020C8  103C 0003               3049      MOVE.B  #03,        D0          ; Display number at D1.L
000020CC  4E4F                    3050      TRAP    #15                     ; Trap (Perform action)
000020CE                          3051  
000020CE                          3052  
000020CE                          3053      
000020CE  103C 005E               3054      MOVE.B  #TC_REDRAW,        D0
000020D2  4E4F                    3055      TRAP    #15
000020D4                          3056     
000020D4                          3057      ; delay by 1sec
000020D4  103C 0017               3058      MOVE.b  #23,D0
000020D8  7264                    3059      MOVE.L  #100,D1
000020DA  4E4F                    3060      TRAP    #15
000020DC                          3061  
000020DC  5339 000024A0           3062      SUB.B   #01,backToMapCount
000020E2  4A39 000024A0           3063      TST.B   backToMapCount
Line 3064 ERROR: Undefined symbol
000020E8  6700 9C2C               3064      BEQ     mapNotFirstInit
000020EC                          3065  
Line 3066 ERROR: Undefined symbol
000020EC  6100 9C28               3066      bsr     initDraw
Line 3067 ERROR: Undefined symbol
000020F0  23FC 000000C8 005455B8  3067      MOVE.l  #200,currentHealth
000020FA                          3068      ; back to top
000020FA  6000 FEE0               3069      BRA     WAVE_DEFEATED
000020FE                          3070  
000020FE                          3071  
000020FE                          3072  WIN_SCREEN:
Line 3073 ERROR: Undefined symbol
000020FE  13FC 0001 005455B8      3073      move.b #1, isWin
00002106  103C 000B               3074      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000210A  323C FF00               3075      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
0000210E  4E4F                    3076      TRAP    #15                     ; Trap (Perform action)
00002110  6100 EB4C               3077      BSR     PLAY_GAMEOVER
00002114                          3078  
00002114                          3079  *------------Set Colours--------------*
Line 3080 ERROR: Undefined symbol
00002114  223C 004DBD16           3080      MOVE.L  #color5,     D1
0000211A  103C 0015               3081      MOVE.B  #21,        D0          ; Set Text Color
0000211E  243C 01130005           3082      MOVE.L  #$01130005, D2
00002124  4E4F                    3083      TRAP    #15                     ; Trap (Perform action)
00002126                          3084  
Line 3085 ERROR: Undefined symbol
00002126  223C 004DBD16           3085      MOVE.L  #color1,     D1
0000212C  103C 0051               3086      MOVE.B  #81,        D0          ; Set Text Color
00002130  4E4F                    3087      TRAP    #15                     ; Trap (Perform action)
00002132                          3088  
00002132                          3089  *------------ fill background --------------*
00002132  323C 0000               3090      MOVE.W      #0,D1
00002136  343C 0000               3091      MOVE.W      #0,d2
0000213A  103C 0059               3092      MOVE.B      #89,D0
0000213E  4E4F                    3093      TRAP        #15
00002140                          3094  
00002140                          3095  *------------ Print wave defeated message--------------*
00002140                          3096  
00002140  103C 000B               3097      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00002144  323C 0703               3098      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00002148  4E4F                    3099      TRAP    #15                     ; Trap (Perform action)
0000214A  43F9 0000228D           3100      LEA     WIN_MSG,A1        ; Game Over Message
Line 3101 ERROR: Undefined symbol
00002150  6100 9BC4               3101      BSR     print
00002154                          3102  
00002154                          3103  *------------print amount of enemies defeated--------------*
00002154                          3104  
00002154  103C 000B               3105      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00002158  323C 0606               3106      MOVE.W  #$0606,     D1          ; Col 02, Row 01
0000215C  4E4F                    3107      TRAP    #15                     ; Trap (Perform action)
0000215E  43F9 00002242           3108      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 3109 ERROR: Undefined symbol
00002164  6100 9BB0               3109      BSR     print
00002168                          3110  
00002168  103C 000B               3111      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000216C  323C 1B06               3112      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00002170  4E4F                    3113      TRAP    #15                     ; Trap (Perform action)
00002172  103C 0003               3114      MOVE.B  #03,        D0          ; Display number at D1.L
00002176  7200                    3115      MOVEQ.L #0,D1
00002178  1239 000023F2           3116      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
0000217E  4E4F                    3117      TRAP    #15                     ; Trap (Perform action)
00002180                          3118      
00002180                          3119  *------------print hill health --------------*
00002180                          3120  
00002180  103C 000B               3121      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00002184  323C 0607               3122      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00002188  4E4F                    3123      TRAP    #15                     ; Trap (Perform action)
0000218A  43F9 00002348           3124      LEA     hillHP_MSG,  A1          ; Score Message
Line 3125 ERROR: Undefined symbol
00002190  6100 9B84               3125      BSR     print
00002194                          3126  
00002194  103C 000B               3127      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00002198  323C 1B07               3128      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
0000219C  4E4F                    3129      TRAP    #15                     ; Trap (Perform action)
0000219E  7200                    3130      MOVEQ.L #0,D1
000021A0  1239 0000235D           3131      MOVE.B  hillHP,D1         ; Move Score to D1.L
000021A6  103C 0003               3132      MOVE.B  #03,        D0          ; Display number at D1.L
000021AA  4E4F                    3133      TRAP    #15                     ; Trap (Perform action)
000021AC                          3134      
000021AC                          3135  *------------ print restart --------------*
Line 3136 ERROR: Undefined symbol
000021AC  223C 004DBD16           3136      MOVE.L  #color5,     D1
000021B2  103C 0015               3137      MOVE.B  #21,        D0          ; Set Text Color
000021B6  243C 03140000           3138      MOVE.L  #$03140000, D2
000021BC  4E4F                    3139      TRAP    #15                     ; Trap (Perform action)
000021BE                          3140  
000021BE                          3141  
000021BE                          3142      ; Restart
000021BE  103C 000B               3143      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000021C2  323C 0B09               3144      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
000021C6  4E4F                    3145      TRAP    #15                     ; Trap (Perform action)
000021C8  43F9 000022F8           3146      LEA     RESTART_MSG,  A1          ; Score Message
000021CE  303C 000D               3147      MOVE    #13,        D0          ; No Line feedF=
000021D2  4E4F                    3148      TRAP    #15                     ; Trap (Perform action)
000021D4                          3149  
000021D4                          3150      
000021D4  103C 005E               3151      MOVE.B  #TC_REDRAW,        D0
000021D8  4E4F                    3152      TRAP    #15
000021DA                          3153  
000021DA                          3154  WININPUTLOOP:
000021DA  6100 E004               3155      BSR     BATTLEINPUT
000021DE  60FA                    3156      BRA     WININPUTLOOP
000021E0                          3157  
000021E0                          3158  
000021E0                          3159  EXIT:
000021E0                          3160      
000021E0  103C 000B               3161      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000021E4  323C FF00               3162      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000021E8  4E4F                    3163      TRAP    #15                     ; Trap (Perform action)
000021EA                          3164  
000021EA  103C 005E               3165      MOVE.B  #TC_REDRAW,        D0
000021EE  4E4F                    3166      TRAP    #15
000021F0                          3167  
000021F0  103C 0009               3168      MOVE.B  #TC_EXIT,   D0          ; Exit Code
000021F4  4E4F                    3169      TRAP    #15                     ; Trap (Perform action)
000021F6  FFFF FFFF               3170      SIMHALT
000021FA                          3171  
000021FA                          3172  *-----------------------------------------------------------
000021FA                          3173  * Section       : Messages
000021FA                          3174  * Description   : Messages to Print on Console, names should be
000021FA                          3175  * self documenting
000021FA                          3176  *-----------------------------------------------------------
000021FA= 53 63 6F 72 65 20 ...   3177  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00002203= 4B 65 79 43 6F 64 ...   3178  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
0000220E= 4A 75 6D 70 2E 2E ...   3179  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00002217                          3180  
00002217= 49 64 6C 65 2E 2E ...   3181  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00002220= 55 70 64 61 74 65 ...   3182  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
0000222B= 44 72 61 77 2E 2E ...   3183  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00002234                          3184  
00002234= 58 3A 00                3185  X_MSG           DC.B    'X:', 0             ; X Position Message
00002237= 59 3A 00                3186  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
0000223A= 56 3A 00                3187  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
0000223D= 44 52 41 57 00          3188  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00002242= 45 6E 65 6D 69 65 ...   3189  ENEMIESDEAD_MSG         DC.B    'Enemies Defeated:', 0           
00002254= 57 61 76 65 20 65 ...   3190  ENEMYCOUNT_MSG         DC.B    'Wave enemy count:', 0           
00002266                          3191  
00002266= 45 78 69 74 69 6E ...   3192  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00002272= 41 4E 54 20 48 49 ...   3193  HILLLOST_MSG    DC.B    'ANT HILL HAS BEEN OVERRUN!', 0      ; Game Over Message
0000228D= 45 4E 45 4D 59 20 ...   3194  WIN_MSG    DC.B    'ENEMY ARMY HAS BEEN DEFEATED!', 0      ; Game Over Message
000022AB= 57 41 56 45 20 43 ...   3195  HILLDEFENDED_MSG    DC.B    'WAVE COMPLETE!', 0      ; Game Over Message
000022BA= 59 4F 55 52 20 41 ...   3196  FALLENKINGDOM_MSG    DC.B    'YOUR ANT KINGDOM HAS FALLEN', 0      ; Game Over Message
000022D6= 47 41 4D 45 20 4F ...   3197  GAMEOVER_MSG    DC.B    'GAME OVER', 0      ; Game Over Message
000022E0= 52 65 74 75 72 6E ...   3198  BACK_TO_MAP_MSG    DC.B    'Returning to map in ...', 0      ; Game Over Message
000022F8= 50 72 65 73 73 20 ...   3199  RESTART_MSG    DC.B    'Press R to restart', 0      ; Game Over Message
0000230B= 23 23 00                3200  TREET          DC.B     '##',0
0000230E                          3201  
0000230E= 45 6E 74 65 72 20 ...   3202  PRESSSTART      DC.B    'Enter 1 to start',0
0000231F= 41 4E 54 20 44 45 ...   3203  TITLEMSG        DC.B    'ANT DEFENDER',0
0000232C= 48 65 61 6C 74 68 ...   3204  antHealth_MSG       DC.B    'Health : ',0        ; health message
00002336= 41 6E 74 73 20 52 ...   3205  antsRem_MSG       DC.B    'Ants Remaining : ',0        ; health message
00002348= 48 69 6C 6C 20 48 ...   3206  hillHP_MSG       DC.B    'Hill Health: ',0        ; health message
00002356= 57 61 76 65 3A 20 00    3207  wave_MSG       DC.B    'Wave: ',0        ; health message
0000235D                          3208  
0000235D= 0A                      3209  hillHP          DC.B      10
0000235E= 00                      3210  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
0000235F= 00                      3211  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00002360= 00                      3212  DRAW_HEALTHPACKS   DC.B     $00                  ; marker for if the healthpacks are showing
00002361= 00                      3213  SPAWN_HEALTHPACKS   DC.B    $00                  ; marker for if the healthpacks are spawning
00002362= 00                      3214  healthCooldownOver  DC.B    $00
00002363                          3215  
00002364= 07D0                    3216  LEVEL_02        DC.W    2000
00002366= 2710                    3217  LEVEL_03        DC.W    10000
00002368                          3218  
00002368= 00001B58 00000FA0 ...   3219  LEVELS:         DC.L    7000,4000,2000,1000
00002378                          3220  
00002378                          3221  *-----------------------------------------------------------
00002378                          3222  * Section       : Screen Size
00002378                          3223  * Description   : Screen Width and Height
00002378                          3224  *-----------------------------------------------------------
00002378                          3225  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
0000237A                          3226  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
0000237C                          3227  
0000237C                          3228  *-----------------------------------------------------------
0000237C                          3229  * Section       : Keyboard Input
0000237C                          3230  * Description   : Used for storing Keypresses
0000237C                          3231  *-----------------------------------------------------------
0000237C                          3232  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00002380                          3233  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00002382                          3234  
00002382                          3235  *-----------------------------------------------------------
00002382                          3236  * Section       : Character Data
00002382                          3237  * Description   : Player and Enemy Position Memory Locations
00002382                          3238  *-----------------------------------------------------------
00002382                          3239  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00002386                          3240  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
0000238A                          3241  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
0000238E                          3242  
0000238E                          3243  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00002392                          3244  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00002396                          3245  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
0000239A                          3246  
0000239A                          3247  ; 1, = left, 0 = right
0000239A                          3248  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
0000239B                          3249  
0000239C                          3250  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
000023A0                          3251  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
000023A4                          3252  
000023A4                          3253  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
000023A8                          3254  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
000023AC                          3255  
000023AC                          3256  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
000023B0                          3257  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
000023B4                          3258  
000023B4                          3259  BRUTE_X         DS.L    01
000023B8                          3260  BRUTE_Y         DS.L    01
000023BC                          3261  
000023BC= 000000FF                3262  ENEMYCOLOR        DC.L        $000000FF
000023C0= 00FF0000                3263  FLYENEMYCOLOR     DC.L        $00FF0000
000023C4                          3264  
000023C4                          3265  RANDOM            DS.L        01  ; Reserve Space for Random Number
000023C8= 03                      3266  antHealth         DC.B        03  ; reserves space for antHealth
000023C9= 05                      3267  antsRemaining     DC.B        05  ; reserves space for ants
000023CA= 64                      3268  maxHillHp         DC.B        100
000023CB= 03                      3269  maxAntHp         DC.B        3
000023CC= 05                      3270  maxRemainingAnts         DC.B        5
000023CD                          3271   
000023CD= 02                      3272  POINTS            DC.B        02          ; Points added
000023CE                          3273  
000023CE= 00                      3274  CURRENTLYATTACKING   DC.B    00
000023D0= 0000                    3275  ATTACK_COOLDOWN      DC.W    00
000023D2= 0000                    3276  ATTACK_TIME          DC.W    00
000023D4= 00000000                3277  ATTACK_X             DC.L    00
000023D8= 00000000                3278  ATTACK_Y             DC.L    00
000023DC  =00000014               3279  ATTACK_HEIGHT        EQU     20
000023DC  =00000023               3280  ATTACK_WIDTH         EQU     35 
000023DC                          3281  
000023DC= 00                      3282  CURRENTLYTHROWING   DC.B    00
000023DE= 0000                    3283  THROW_COOLDOWN      DC.W    00
000023E0= 0000                    3284  THROW_TIME          DC.W    00
000023E2= 00000000                3285  THROW_X             DC.L    00
000023E6= 00000000                3286  THROW_Y             DC.L    00
000023EA  =00000014               3287  THROW_HEIGHT        EQU     20
000023EA  =00000023               3288  THROW_WIDTH         EQU     35 
000023EA                          3289  THROW_VELOCITY      DS.L    01  
000023EE                          3290  THROW_GRAVITY       DS.L    01  
000023F2                          3291  
000023F2= 13                      3292  ENEMIES_DEFEATED    DC.B    19
000023F3= 00                      3293  enemiesPassed       DC.b    00
000023F4= 00                      3294  enemiesToDefeat     DC.B    00
000023F5                          3295  
000023F5= 00                      3296  ENEMY_HIT           DC.B    00
000023F6= 00                      3297  FLYENEMY_HIT        DC.B    00
000023F7= 00                      3298  BRUTE_DEAD          DC.B    00
000023F8= 00                      3299  BRUTE_HIT           DC.B    00
000023F9= 03                      3300  BRUTE_HP            DC.b    03
000023FA                          3301  
000023FA                          3302  * Widths and heights of player, enemy and healthpack
000023FA                          3303  ; NOT NECESSARY AT THE MOMENT
000023FA                          3304  *-----------------------------------------------------------
000023FA= 0C                      3305  PLAYER_WIDTH      DC.B        12          ; Player Width
000023FB= 0C                      3306  PLAYER_HEIGHT     DC.B        12          ; Player Height
000023FC                          3307  
000023FC= 000C                    3308  ENEMY_WIDTH       DC.W        12          ; Enemy Width
000023FE= 000C                    3309  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00002400                          3310  
00002400= 0014                    3311  FLYENEMY_WIDTH    DC.W        20 
00002402= 000C                    3312  FLYENEMY_HEIGHT   DC.W        12 
00002404                          3313  
00002404                          3314          
00002404                          3315  *-----------------------------------------------------------
00002404                          3316  * Section       : Sounds
00002404                          3317  * Description   : Sound files, which are then loaded and given
00002404                          3318  * an address in memory, they take a longtime to process and play
00002404                          3319  * so keep the files small.
00002404                          3320  *-----------------------------------------------------------
00002404= 6A 75 6D 70 2E 77 ...   3321  JUMP_WAV        DC.B    'jump.wav',0        ; Jump Sound
0000240D= 67 61 6D 65 4F 76 ...   3322  GAMEOVER_WAV    DC.B    'gameOver.wav',0    ; Run Sound
0000241A= 68 69 74 48 75 72 ...   3323  HITHURT_WAV     DC.B    'hitHurt.wav',0     ; Collision Opps
00002426= 68 69 74 2E 77 61 ...   3324  HIT_WAV         DC.B    'hit.wav',0         ; Collision Opps
0000242E= 70 6F 77 65 72 55 ...   3325  POWERUP_WAV     DC.B    'powerUP.wav',0     ; Collision Opps
0000243A= 6C 65 76 65 6C 43 ...   3326  LEVELCHANGE_WAV DC.B    'levelChange.wav',0 ; Collision Opps
0000244A= 72 6F 61 72 2D 38 ...   3327  ROAR_WAV        DC.B    'roar-8-bit.wav',0 ; Collision Opps
00002459= 68 69 6C 6C 48 75 ...   3328  HILLHURT_WAV        DC.B    'hillHurt.wav',0 ; Collision Opps
00002466                          3329  
00002466= 61 6E 74 6F 70 69 ...   3330  BATTLE_SONG_WAV DC.B    'antopia-battle.wav1',0
0000247A= 61 6E 74 6F 70 69 ...   3331  MAP_SONG_WAV    DC.B    'antopia-map.wav1',0
0000248B= 61 6E 74 6F 70 69 ...   3332  MENU_SONG_WAV   dc.B    'antopia-menu.wav1',0
0000249D                          3333  
0000249D                          3334  
0000249E= 0000                    3335  respawnTime         dc.W        0
000024A0= 03                      3336  backToMapCount      dc.b        3
000024A2= 0000                    3337  healthCooldown      DC.W        0
000024A4= 00                      3338  hillHurtTimer       dc.b        0
000024A5                          3339  *---*
000024A6= 00000000                3340  timer           DC.L    0
000024AA                          3341  
000024AA                          3342  ;    END    START        ; last line of source
000024AA                          3343  
000024AA                          3344  
000024AA                          3345  
Line 3346 WARNING: END directive missing, starting address not set

142 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ANTHEALTH           23C8
ANTHEALTH_MSG       232C
ANTKILLED           1D3A
ANTSREMAINING       23C9
ANTSREM_MSG         2336
ARC_DONE            C48
ATK_LTE_TO_BRUTE_Y_PLUS_H  1AAA
ATK_LTE_TO_ENEMY_Y_PLUS_H  19CE
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  1A3C
ATK_PLUS_H_LTE_TO_ATTACK_Y  19EA
ATK_PLUS_H_LTE_TO_BRUTE_Y  1AC6
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  1A58
ATK_X_LTE_TO_BRUTE_X_PLUS_W  1A72
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  1A04
ATTACK_BRUTE_COLLISION  1C72
ATTACK_COLLISION    1C26
ATTACK_COOLDOWN     23D0
ATTACK_COOLDOWN_SUB  426
ATTACK_FLY_COLLISION  1C4C
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_BRUTE_X  1A8E
ATTACK_PLUS_W_LTE_TO_ENMY_X  19B2
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  1A20
ATTACK_TIME         23D2
ATTACK_TIME_SUB     41E
ATTACK_WIDTH        23
ATTACK_X            23D4
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  1996
ATTACK_Y            23D8
BACKTOMAPCOUNT      24A0
BACK_TO_MAP_MSG     22E0
BATTLEINPUT         1E0
BATTLE_SONG_LOAD    D52
BATTLE_SONG_WAV     2466
BRUTE_DEAD          23F7
BRUTE_HIT           23F8
BRUTE_HP            23F9
BRUTE_H_INIT        19
BRUTE_W_INIT        32
BRUTE_X             23B4
BRUTE_Y             23B8
CHECKPAUSED         2F8
CHECK_ATTACK_BRUTE_COLLISIONS  1A6E
CHECK_ATTACK_COLLISIONS  1992
CHECK_ATTACK_COOLDOWN  410
CHECK_ATTACK_FLY_COLLISIONS  1A00
CHECK_BRUTE_COLLISIONS  18AA
CHECK_COLLISIONS    17D6
CHECK_ENEMIES_CLEARED  1CB0
CHECK_FLYENEMY_COLLISIONS  183C
CHECK_HEALTH_COLLISIONS  1924
CHECK_THROW_BRUTE_COLLISIONS  1BB8
CHECK_THROW_COLLISION  1ADC
CHECK_THROW_DONE    3E2
CHECK_THROW_FLY_COLLISIONS  1B4A
CHECK_WAVE_CLEARED  612
COLLISION_CHECK_DONE  1CC8
COMPLETE_RESTART    2CA
CONTINUE            656
CONTINUELOOP        1C6
CURRENTLYATTACKING  23CE
CURRENTLYTHROWING   23DC
CURRENT_KEY         237C
DAMAGE_HILL         62A
DKEY                44
DRAWANTHEALTH       7AA
DRAWANTSREMAINING   80A
DRAWBATTLE          6EE
DRAWDIRT            17AA
DRAWHILLHEALTH      74A
DRAW_ATTACK         1004
DRAW_BACKGROUND     9AA
DRAW_BRUTEENEMY     1350
DRAW_ENEMY          1212
DRAW_ENTRANCE       926
DRAW_ENTRANCE_HOLE  97A
DRAW_FLOOR          1750
DRAW_FLYENEMY       149C
DRAW_HEALTHPACK     164A
DRAW_HEALTHPACKS    2360
DRAW_HEALTHPACK_DONE  1732
DRAW_HILL           86A
DRAW_MSG            222B
DRAW_PLAYER         EA6
DRAW_PLYR_DATA      B2C
DRAW_RESPAWN        1144
DRAW_THROW          10BC
DRAW_TREES          9D4
ENEMIESDEAD_MSG     2242
ENEMIESPASSED       23F3
ENEMIESTODEFEAT     23F4
ENEMIES_DEFEATED    23F2
ENEMYCOLLISION      1CF0
ENEMYCOLOR          23BC
ENEMYCOUNT_MSG      2254
ENEMY_HEIGHT        23FE
ENEMY_HIT           23F5
ENEMY_WIDTH         23FC
ENEMY_X             239C
ENEMY_Y             23A0
ENMY_H_INIT         D
ENMY_W_INIT         1B
ESCAPE              1B
EXIT                21E0
EXIT_MSG            2266
FALLENKINGDOM_MSG   22BA
FLYENEMYCOLOR       23C0
FLYENEMY_HEIGHT     2402
FLYENEMY_HIT        23F6
FLYENEMY_WIDTH      2400
FLYINGENEMY_X       23AC
FLYINGENEMY_Y       23B0
FLY_ENMY_H_INIT     D
FLY_ENMY_W_INIT     1E
GAME                1A6
GAMELOOP            1A6
GAMEOVER_INDEX      0
GAMEOVER_LOAD       C4C
GAMEOVER_MSG        22D6
GAMEOVER_WAV        240D
GAME_OVER           1EEE
GND_FALSE           0
GND_TRUE            1
HEALTHCOOLDOWN      24A2
HEALTHCOOLDOWNOVER  2362
HEALTH_COLLISION    1D5C
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            23A4
HEALTH_Y            23A8
HILLDEFENDED_MSG    22AB
HILLHP              235D
HILLHP_MSG          2348
HILLHURTTIMER       24A4
HILLHURT_INDEX      8
HILLHURT_LOAD       D22
HILLHURT_WAV        2459
HILLLOST_MSG        2272
HILL_LOST           1DC6
HITHURT_INDEX       2
HITHURT_LOAD        C8C
HITHURT_WAV         241A
HIT_INDEX           5
HIT_LOAD            CE6
HIT_WAV             2426
IDLE                C4A
IDLE_MSG            2217
INITRUN             0
INIT_PLAYER         D92
INPUTLOOP           1EE8
IN_ENEMY            235E
IN_HPACK            235F
IS_ATTACKING        FF8
IS_PLAYER_ON_GND    BD6
IS_THROWING         10B0
JMP_INDEX           1
JUMP                E76
JUMP_DONE           EA4
JUMP_LOAD           C6E
JUMP_MSG            220E
JUMP_WAV            2404
KEYCODE_MSG         2203
KKEY                4B
LAST_KEY            2380
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     243A
LEVELS              2368
LEVEL_02            2364
LEVEL_03            2366
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LOSSINPUTLOOP       1FD6
LVLCHANGE_LOAD      CC8
MAP_SONG_LOAD       D40
MAP_SONG_WAV        247A
MAXANTHP            23CB
MAXHILLHP           23CA
MAXREMAININGANTS    23CC
MENU_SONG_LOAD      D64
MENU_SONG_WAV       248B
MOVE_ENEMY          44E
MOVE_ENEMY_L2       494
MOVE_ENEMY_L3       4D0
MOVE_ENEMY_L4       4F8
MOVE_HEALTHPACK     42E
MOVE_PLAYER_LEFT    E22
MOVE_PLAYER_RIGHT   E4C
MOVE_RESPAWNED      119A
MOVE_THROW          3B4
PERFORM_ATTACK      658
PERFORM_JUMP        E94
PERFORM_THROW       6A4
PERFORM_THROW_ARC   C3C
PLAYER_DIR          239A
PLAYER_HEIGHT       23FB
PLAYER_SCORE        238A
PLAYER_WIDTH        23FA
PLAYER_X            2382
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  17DA
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  17F6
PLAYER_Y            2386
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  1812
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  1828
PLAY_GAMEOVER       C5E
PLAY_HILLHURT       D34
PLAY_HIT            CF8
PLAY_HITHURT        C9E
PLAY_JUMP           C80
PLAY_LVLCHANGE      CDA
PLAY_POWERUP        CBC
PLAY_ROAR           D16
PLAY_SONG           D76
PLX_LTE_TO_BRUTE_X_PLUS_W  18BA
PLX_LTE_TO_FLYENEMY_X_PLUS_W  1840
PLX_LTE_TO_HEALTH_X_PLUS_W  1928
PLX_PLUS_W_LTE_TO_BRUTE_X  18D6
PLX_PLUS_W_LTE_TO_FLYENEMY_X  185C
PLX_PLUS_W_LTE_TO_HEALTH_X  1944
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        2392
PLYR_H_INIT         D
PLYR_JUMP_V         FFFFFFEE
PLYR_ON_GND         2396
PLYR_VELOCITY       238E
PLYR_W_INIT         1B
PLY_LTE_TO_BRUTE_Y_PLUS_H  18F2
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  1878
PLY_LTE_TO_HEALTH_Y_PLUS_H  1960
PLY_PLUS_H_LTE_TO_BRUTE_Y  190E
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  1894
PLY_PLUS_H_LTE_TO_HEALTH_Y  197C
POINTS              23CD
POWERUP_INDEX       3
POWERUP_LOAD        CAA
POWERUP_WAV         242E
PRESSSTART          230E
PROCESS_INPUT       284
RANDOM              23C4
RESET_BRUTE_POSITION  5A8
RESET_ENEMY_POSITION  520
RESET_FLYENEMY_POSITION  562
RESET_HEALTH_POSITION  5FE
RESET_THROW         3F2
RESPAWNTIME         249E
RESTART_MSG         22F8
RKEY                52
ROAR_INDEX          7
ROAR_LOAD           D04
ROAR_WAV            244A
SCORE_MSG           21FA
SCREEN_H            237A
SCREEN_W            2378
SET_OFF_GROUND      C1E
SET_ON_GROUND       BF6
SKEY                53
SONG_INDEX          6
SPACEBAR            20
SPAWN_HEALTHPACKS   2361
STILLPAUSED         304
STILL_COLLIDED      1DC4
STOP_HPACK_SPAWN    1DB2
STOP_SONG           D84
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
THROW_ARC           C2A
THROW_COOLDOWN      23DE
THROW_GRAVITY       23EE
THROW_HEIGHT        14
THROW_PLUS_W_LTE_TO_BRUTE_X  1BD8
THROW_PLUS_W_LTE_TO_ENMY_X  1AFC
THROW_PLUS_W_LTE_TO_FLYENMY_X  1B6A
THROW_TIME          23E0
THROW_VELOCITY      23EA
THROW_WIDTH         23
THROW_X             23E2
THROW_X_LTE_TO_BRUTE_X_PLUS_W  1BBC
THROW_X_LTE_TO_ENEMY_X_PLUS_W  1AE0
THROW_X_LTE_TO_FLYENEMY_X_PLUS_W  1B4E
THROW_Y             23E6
THRW_DFLT_G         1
THRW_DFLT_V         0
THRW_H_INIT         F
THRW_JUMP_V         FFFFFFF0
THRW_W_INIT         F
TIMER               24A6
TITLEMSG            231F
TREET               230B
TRW_LTE_TO_BRUTE_Y_PLUS_H  1BF4
TRW_LTE_TO_ENEMY_Y_PLUS_H  1B18
TRW_LTE_TO_FLYENEMY_Y_PLUS_H  1B86
TRW_PLUS_H_LTE_TO_BRUTE_Y  1C10
TRW_PLUS_H_LTE_TO_FLYENEMY_Y  1BA2
TRW_PLUS_H_LTE_TO_THROW_Y  1B34
UPDATE              30C
UPDATE_MSG          2220
UPDATE_PLAYER       DF8
VARMSG              223D
V_MSG               223A
WAIT_100MS          1B8
WAVE_DEFEATED       1FDC
WAVE_MSG            2356
WININPUTLOOP        21DA
WIN_MSG             228D
WIN_SCREEN          20FE
X_MSG               2234
Y_MSG               2237
_00000000           20A
_00000001           21C
_00000002           22E
_00000003           240
_00000004           264
_00000005           2F6
_00000006           35C
_00000007           382
_00000008           3B2
_00000009           486
_0000000A           4AE
_0000000B           4C2
_0000000C           4E4
_0000000D           50C
_0000000E           554
_0000000F           59A
_00000010           5E0
_00000011           664
_00000012           6B0
_00000013           8A6
_00000014           962
_00000015           E2E
_00000016           E58
_00000017           E82
_00000018           F60
_00000019           1372
_0000001A           174E
_0000001B           1CA6
_0000001C           1D28
_0000001D           1D88
