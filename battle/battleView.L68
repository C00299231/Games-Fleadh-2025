00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 28/02/2025 00:42:44

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Game Starter Kit
00000000                             3  * Written by : Oliwier Jakubiec
00000000                             4  * Date       : 05/02/2025
00000000                             5  * Description: Project Starter Kit
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  *-----------------------------------------------------------
00000000                            10  * Section       : Trap Codes
00000000                            11  * Description   : Trap Codes used throughout StarterKit
00000000                            12  *-----------------------------------------------------------
00000000                            13  * Trap CODES
00000000  =00000021                 14  TC_SCREEN   EQU         33          ; Screen size information trap code
00000000  =00000000                 15  TC_S_SIZE   EQU         00          ; Places 0 in D1.L to retrieve Screen width and height in D1.L
00000000                            16                                      ; First 16 bit Word is screen Width and Second 16 bits is screen Height
00000000  =00000013                 17  TC_KEYCODE  EQU         19          ; Check for pressed keys
00000000  =0000005C                 18  TC_DBL_BUF  EQU         92          ; Double Buffer Screen Trap Code
00000000  =0000000B                 19  TC_CURSR_P  EQU         11          ; Trap code cursor position
00000000                            20  
00000000  =0000005E                 21  TC_REDRAW   EQU         94          ; Redraw Screen
00000000  =00000009                 22  TC_EXIT     EQU         09          ; Exit Trapcode
00000000                            23  
00000000                            24  *-----------------------------------------------------------
00000000                            25  * Section       : Charater Setup
00000000                            26  * Description   : Size of Player and Enemy and properties
00000000                            27  * of these characters e.g Starting Positions and Sizes
00000000                            28  *-----------------------------------------------------------
00000000                            29  
00000000  =0000000F                 30  THRW_W_INIT EQU         15          ; Players initial Width
00000000  =0000000F                 31  THRW_H_INIT EQU         15          ; Players initial Height
00000000                            32  
00000000  =00000000                 33  THRW_DFLT_V EQU         00          ; Default Player Velocity
00000000  =FFFFFFF0                 34  THRW_JUMP_V EQU         -16          ; Player Jump Velocity
00000000  =00000001                 35  THRW_DFLT_G EQU         01          ; Player Default Gravity
00000000                            36  
00000000  =00000001                 37  GND_TRUE    EQU         01          ; Player on Ground True
00000000  =00000000                 38  GND_FALSE   EQU         00          ; Player on Ground False
00000000                            39  
00000000  =00000000                 40  GAMEOVER_INDEX   EQU             00          ; Player Run Sound Index  
00000000  =00000001                 41  JMP_INDEX   EQU             01          ; Player Jump Sound Index  
00000000  =00000002                 42  HITHURT_INDEX  EQU          02          ; Player Opps Sound Index
00000000  =00000003                 43  POWERUP_INDEX  EQU          03          ; Player Opps Sound Index
00000000  =00000004                 44  LEVELCHANGE_INDEX  EQU      04          ; Player Opps Sound Index
00000000  =00000005                 45  HIT_INDEX  EQU              05  
00000000                            46  
00000000  =00000006                 47  SONG_INDEX equ          06
00000000                            48  
00000000  =0000001B                 49  ENMY_W_INIT EQU         27          ; Enemy initial Width
00000000  =0000000D                 50  ENMY_H_INIT EQU         13          ; Enemy initial Height
00000000                            51  
00000000  =00000023                 52  BIGENMY_W_INIT EQU         35          ; BRute Enemy initial Width
00000000  =00000012                 53  BIGENMY_H_INIT EQU         18          ; Brute Enemy initial Height
00000000                            54  
00000000  =0000001E                 55  FLY_ENMY_W_INIT  EQU         30          ; Enemy initial Width
00000000  =0000000D                 56  FLY_ENMY_H_INIT  EQU         13          ; Enemy initial Height
00000000                            57  
00000000  =0000000C                 58  HEALTH_PACK_W    EQU         12          ; Enemy initial Width
00000000  =0000000C                 59  HEALTH_PACK_H    EQU         12          ; Enemy initial Height
00000000                            60  
00000000  =00000002                 61  LOOKRIGHT   EQU         02          ; Look Right
00000000  =00000001                 62  LOOKLEFT    EQU         01          ; Look Left
00000000                            63  
00000000                            64  *-----------------------------------------------------------
00000000                            65  * Section       : Keyboard Keys
00000000                            66  * Description   : Spacebar and Escape or two functioning keys
00000000                            67  * Spacebar to JUMP and Escape to Exit Game
00000000                            68  *-----------------------------------------------------------
00000000  =00000020                 69  SPACEBAR    EQU         $20         ; Spacebar ASCII Keycode
00000000  =0000001B                 70  ESCAPE      EQU         $1B         ; Escape ASCII Keycode
00000000  =00000052                 71  Rkey           EQU         $52         ; R ASCII Keycode
00000000  =00000041                 72  Akey           EQU         $41         ; A ASCII Keycode
00000000  =00000053                 73  Skey           EQU         $53         ; S ASCII Keycode
00000000  =00000044                 74  Dkey           EQU         $44         ; D ASCII Keycode
00000000  =0000004C                 75  Lkey           EQU         $4C         ; L ASCII Keycode
00000000  =0000004B                 76  Kkey           EQU         $4B         ; K ASCII Keycode
00000000                            77  
00000000                            78  *-----------------------------------------------------------
00000000                            79  * Subroutine    : Initialise
00000000                            80  * Description   : Initialise game data into memory such as 
00000000                            81  * sounds and screen size
00000000                            82  *-----------------------------------------------------------
00000000                            83  INITRUN:
Line 84 ERROR: Undefined symbol
00000000  33FC 0002 005455B8        84      move.w #2, lvlType
00000008                            85      ; Initialise Sounds
00000008  6100 0B76                 86      BSR     JUMP_LOAD               ; Load Jump Sound into Memory
0000000C  6100 0B50                 87      BSR     GAMEOVER_LOAD                ; Load Run Sound into Memory
00000010  6100 0B8C                 88      BSR     HITHURT_LOAD               ; Load Opps (Collision) Sound into Memory
00000014  6100 0BA6                 89      BSR     POWERUP_LOAD               ; Load Opps (Collision) Sound into Memory
00000018  6100 0BC0                 90      BSR     LVLCHANGE_LOAD               ; Load Opps (Collision) Sound into Memory
0000001C  6100 0BDA                 91      BSR     HIT_LOAD
00000020                            92  
00000020  6100 0C38                 93      BSR     stop_song
00000024  6100 0C02                 94      BSR     BATTLE_SONG_LOAD
00000028                            95  
00000028  6100 0C22                 96      bsr PLAY_SONG
0000002C                            97  
0000002C                            98      ; Screen Size
0000002C  103C 0021                 99      MOVE.B  #TC_SCREEN, D0          ; access screen information
00000030  7200                     100      MOVE.L  #TC_S_SIZE, D1          ; placing 0 in D1 triggers loading screen size information
00000032  4E4F                     101      TRAP    #15                     ; interpret D0 and D1 for screen size
00000034  33C1 00001D7C            102      MOVE.W  D1,         SCREEN_H    ; place screen height in memory location
0000003A  4841                     103      SWAP    D1                      ; Swap top and bottom word to retrive screen size
0000003C  33C1 00001D7A            104      MOVE.W  D1,         SCREEN_W    ; place screen width in memory location
00000042                           105  
00000042  6100 0C24                106      BSR     INIT_PLAYER
00000046                           107      
00000046                           108      ; Initialise Player Velocity
00000046  B381                     109      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000048  123C 0000                110      MOVE.B  #THRW_DFLT_V,D1         ; Init Player Velocity
0000004C  23C1 00001DE0            111      MOVE.L  D1,         THROW_VELOCITY
00000052                           112  
00000052                           113      ; Initialise Player Gravity
00000052  B381                     114      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000054  7201                     115      MOVE.L  #THRW_DFLT_G,D1         ; Init Player Gravity
00000056  23C1 00001DE4            116      MOVE.L  D1,         THROW_GRAVITY
0000005C                           117  
0000005C                           118      ; Initial Position for Enemy
0000005C  B381                     119      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000005E  3239 00001D7A            120      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000064  23C1 00001D9E            121      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
0000006A                           122  
0000006A  B381                     123      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000006C  3239 00001D7C            124      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000072  82FC 0002                125      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000076  23C1 00001DA2            126      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
0000007C                           127  
0000007C                           128      ; Initial Position for Flying Enemy
0000007C  B381                     129      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000007E  3239 00001D7A            130      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000084  23C1 00001DAE            131      MOVE.L  D1,         FLYINGENEMY_X     ; Enemy X Position
0000008A                           132  
0000008A  B381                     133      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
0000008C  3239 00001D7C            134      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000092  82FC 0002                135      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000096  0441 003C                136      SUB.W   #60,        D1
0000009A  23C1 00001DB2            137      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
000000A0                           138      
000000A0                           139      ; Initial Position for Health pack
000000A0  B381                     140      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000A2  3239 00001D7A            141      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000000A8  0481 FFFFFFF6            142      SUB.L   #-10,       D1
000000AE  23C1 00001DA6            143      MOVE.L  D1,         HEALTH_X     ; Enemy X Position
000000B4                           144  
000000B4  B381                     145      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000000B6  3239 00001D7C            146      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000000BC  82FC 0002                147      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000000C0  23C1 00001DAA            148      MOVE.L  D1,         HEALTH_Y     ; Enemy Y Position
000000C6                           149  
000000C6  13FC 0064 00001D60       150      MOVE.B     #100,    hillHP
000000CE                           151  
000000CE  45F9 00001D6A            152      LEA    LEVELS,      A2
000000D4  13FC 0003 00001DC2       153      MOVE.B  #03,        antHealth
000000DC                           154  
Line 155 ERROR: Undefined symbol
000000DC  23FC 00000096 005455B8   155      MOVE.L  #150,       currentHealth
Line 156 ERROR: Undefined symbol
000000E6  23FC 00000014 005455B8   156      move.l  #20,        healthTlX
Line 157 ERROR: Undefined symbol
000000F0  23FC 000001A9 005455B8   157      move.l  #425,       healthTlY
Line 158 ERROR: Undefined symbol
000000FA  23FC 000000AA 005455B8   158      move.l  #170,       healthBrX
Line 159 ERROR: Undefined symbol
00000104  23FC 000001B8 005455B8   159      move.l  #440,       healthBrY
0000010E                           160  
0000010E  13FC 0002 00001DC4       161      MOVE.B  #02,        POINTS
00000116  13FC 0000 00001D63       162      MOVE.B  #00,        DRAW_HEALTHPACKS
0000011E  13FC 0000 00001D64       163      MOVE.B  #00,        SPAWN_HEALTHPACKS
00000126                           164  
00000126  23FC 00000000 00001DCA   165      MOVE.L  #0,         ATTACK_X
00000130  23FC 00000000 00001DCE   166      MOVE.L  #0,         ATTACK_Y
0000013A  23FC FFFFFF9C 00001DD8   167      MOVE.L  #-100,      THROW_X
00000144  23FC FFFFFF9C 00001DDC   168      MOVE.L  #-100,      THROW_Y
0000014E                           169      
0000014E  13FC 0000 00001DC5       170      MOVE.B  #00,        CURRENTLYATTACKING
00000156  13FC 0000 00001DD2       171      MOVE.B  #00,        CURRENTLYTHROWING
0000015E                           172      
0000015E  13FC 0000 00001DEB       173      MOVE.B  #00,        ENEMY_HIT
00000166  13FC 0000 00001DEC       174      MOVE.B  #00,        FLYENEMY_HIT
0000016E                           175  
0000016E  0639 000A 00001DEA       176      ADD.B   #10,        enemiesToDefeat
00000176  13FC 0000 00001DE8       177      MOVE.B  #0,         ENEMIES_DEFEATED
0000017E  13FC 0000 00001DE9       178      MOVE.B  #0,         enemiesPassed
00000186  13FC 0004 00001E7E       179      MOVE.B  #4,         backToMapCount
0000018E  4281                     180      CLR.L   D1
00000190                           181   
00000190                           182  
00000190                           183      ; Enable the screen back buffer(see easy 68k help)
00000190  103C 005C                184      MOVE.B  #TC_DBL_BUF,D0          ; 92 Enables Double Buffer
00000194  123C 0011                185      MOVE.B  #17,        D1          ; Combine Tasks
00000198  4E4F                     186      TRAP    #15                     ; Trap (Perform action)
0000019A                           187          
0000019A                           188      ; Clear the screen (see easy 68k help)
0000019A  103C 000B                189      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000019E  323C FF00                190      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000001A2  4E4F                     191      TRAP    #15                     ; Trap (Perform action)
000001A4                           192  
000001A4  6000 0002                193      bra gameloop
000001A8                           194  
000001A8                           195  *-----------------------------------------------------------
000001A8                           196  * Subroutine    : Game
000001A8                           197  * Description   : Game including main GameLoop. GameLoop is like
000001A8                           198  * a while loop in that it runs forever until interupted
000001A8                           199  * (Input, Update, Draw). The Enemies Run at Player Jump to Avoid
000001A8                           200  *-----------------------------------------------------------
000001A8                           201  GAME:
000001A8                           202  
000001A8                           203      
000001A8                           204  GAMELOOP:
000001A8                           205      ; Main Gameloop
000001A8  23FC 00000BB8 00001E80   206      MOVE.L      #3000,timer
000001B2  7200                     207      MOVE.L      #0,D1
000001B4  103C 0017                208      MOVE.B      #23,D0
000001B8  4E4F                     209      TRAP        #15
000001BA                           210  DELAY:     
000001BA                           211  
000001BA  53B9 00001E80            212      SUBI.L      #1,timer            ; decrement timer by 1 to simulate a delay
000001C0  4AB9 00001E80            213      TST.L       timer            ; compare 0 to the value of timer
000001C6  66F2                     214      BNE         DELAY               ; branch back to DELAY if the previous compare was not equal
000001C8                           215  
000001C8  6100 0018                216      BSR     BATTLEINPUT                   ; Check Keyboard Input
000001CC  6100 012C                217      BSR     checkPaused
000001D0  6100 013C                218      BSR     UPDATE                  ; Update positions and points
000001D4  6100 08E2                219      BSR     IS_PLAYER_ON_GND        ; Check if player is on ground
000001D8  6100 11CE                220      BSR     CHECK_COLLISIONS        ; Check for Collisions
000001DC  6100 044A                221      BSR     DRAWBATTLE                  ; Draw the Scene
000001E0                           222                  ; Loop back to GameLoop
000001E0  60C6                     223      BRA     GAMELOOP    
000001E2                           224      
000001E2                           225  *-----------------------------------------------------------
000001E2                           226  * Subroutine    : Input
000001E2                           227  * Description   : Process Keyboard Input
000001E2                           228  *-----------------------------------------------------------
000001E2                           229  BATTLEINPUT:
000001E2  2039 00001D7E            230      move.l CURRENT_KEY, D0
Line 231 ERROR: Undefined symbol
000001E8  13C0 005455B8            231      move.b D0,lastkey 
000001EE                           232  
000001EE  103C 0013                233      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
000001F2                           234      ;MOVE.L  #$41444C20, D1          
Line 235 ERROR: Undefined symbol
000001F2  223C 004DBD16            235      MOVE.L  #runActionKeys, D1          ; Check for A, D, L, and Spacebar
000001F8  4E4F                     236      TRAP    #15                         ; Trap (Perform action)
000001FA  23C1 00001D7E            237      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
00000200                           238  
00000200  0801 0018                239      BTST.L  #24,D1
00000204                           240      IF <NE> THEN
00000208  6100 0AEE                241          BSR    MOVE_PLAYER_LEFT
0000020C                           242      ENDI
0000020C                           243  
0000020C  2239 00001D7E            244      MOVE.L  CURRENT_KEY, D1
00000212  0801 0010                245      BTST.L  #16,D1
00000216                           246      IF <NE> THEN
0000021A  6100 0B06                247          BSR    MOVE_PLAYER_RIGHT
0000021E                           248      ENDI
0000021E                           249  
0000021E  2239 00001D7E            250      MOVE.L  CURRENT_KEY, D1
00000224  0801 0008                251      BTST.L  #8,D1
00000228                           252      IF <NE> THEN
0000022C  6100 0364                253          BSR    PERFORM_ATTACK
00000230                           254      ENDI
00000230                           255  
00000230  2239 00001D7E            256      MOVE.L  CURRENT_KEY, D1
00000236  0801 0000                257      BTST.L  #0,D1
0000023A                           258      IF <NE> THEN
0000023E  6100 08CC                259          BSR    JUMP
00000242                           260      ENDI
00000242                           261  
00000242  103C 0013                262      MOVE.B  #TC_KEYCODE, D0          ; Check for pressed keys
00000246  223C 00001B4B            263      MOVE.L  #$1B4B, D1                 ; check K and escape
0000024C  4E4F                     264      TRAP    #15                     ; Trap (Perform action)
0000024E  23C1 00001D7E            265      MOVE.L  D1,         CURRENT_KEY     ; Put Current Key in Memory
00000254                           266  
00000254  2239 00001D7E            267      MOVE.L  CURRENT_KEY, D1
0000025A  0801 0000                268      BTST.L  #0,D1
0000025E                           269      IF <NE> THEN
00000262  6100 037A                270          BSR    PERFORM_THROW
00000266                           271      ENDI
00000266                           272  
00000266                           273  
00000266                           274  
00000266                           275      ; Process Input
00000266  4281                     276      CLR.L   D1                      ; Clear Data Register
00000268  4282                     277      CLR.L   D2
0000026A  103C 0013                278      MOVE.B  #TC_KEYCODE,D0          ; Listen for Keys
0000026E  4E4F                     279      TRAP    #15                     ; Trap (Perform action)
00000270  1401                     280      MOVE.B  D1,         D2          ; Move last key D1 to D2
00000272  B43C 0000                281      CMP.B   #00,        D2          ; Key is pressed
00000276  6700 000E                282      BEQ     PROCESS_INPUT           ; Process Key
0000027A  4E4F                     283      TRAP    #15                     ; Trap for Last Key
0000027C                           284      ; Check if key still pressed
0000027C  B23C 00FF                285      CMP.B   #$FF,       D1          ; Is it still pressed
00000280  6700 0004                286      BEQ     PROCESS_INPUT           ; Process Last Key
00000284  4E75                     287      RTS                             ; Return to subroutine
00000286                           288  *-----------------------------------------------------------
00000286                           289  * Subroutine    : Process Input
00000286                           290  * Description   : Branch based on keys pressed
00000286                           291  *-----------------------------------------------------------
00000286                           292  PROCESS_INPUT:
00000286  23C2 00001D7E            293      MOVE.L  D2,         CURRENT_KEY ; Put Current Key in Memory
0000028C                           294  
0000028C                           295  ; pause
Line 296 ERROR: Undefined symbol
0000028C  13C2 005455B8            296      move.b  d2,         currentKey
Line 297 ERROR: Undefined symbol
00000292  0C39 0016 005455CC       297      CMP.b   #escapekey,    currentKey ; Is Current Key Escape
Line 298 ERROR: Undefined symbol
0000029A  6700 BA7A                298      BEQ     escapePressed
0000029E                           299  
Line 300 ERROR: Undefined symbol
0000029E  0C39 0016 005455C0       300      cmpi.b #key0, currentKey ; fullscreen
Line 301 ERROR: Undefined symbol
000002A6  6700 BA6E                301      beq key0pressed
000002AA                           302  
Line 303 ERROR: Undefined symbol
000002AA  4A39 004DBD16            303      tst.b   isPaused
Line 304 ERROR: Undefined symbol
000002B0  6600 BA64                304      bne     pausedInput
000002B4                           305  
Line 306 ERROR: Undefined symbol
000002B4  0C79 0003 005455B8       306      CMP.W   #3,lvlIndex
000002BC  6700 000E                307      BEQ     COMPLETE_RESTART
000002C0                           308  
000002C0  4A39 00001DC3            309      TST.B   antsRemaining
000002C6  6F00 0004                310      BLE     COMPLETE_RESTART
000002CA                           311  
000002CA  4E75                     312      RTS                             ; Return to subroutine
000002CC                           313  
000002CC                           314  COMPLETE_RESTART:
000002CC  0CB9 00000052 00001D7E   315      CMP.L   #Rkey,  CURRENT_KEY ; Is Current Key R
000002D6                           316      IF <EQ> THEN
Line 317 ERROR: Undefined symbol
000002DA  33FC 0001 005455B8       317          move.w #1, lvlType
000002E2                           318  
Line 319 ERROR: Undefined symbol
000002E2  223C 004DBD16            319          MOVE.L    #color5,D1
000002E8  243C 00015F90            320          MOVE.L  #00090000,D2
Line 321 ERROR: Undefined symbol
000002EE  103C 0016                321          MOVE.B  #tcFont,D0
000002F2  4E4F                     322          TRAP    #15
000002F4                           323          
Line 324 ERROR: Undefined symbol
000002F4  6000 BA20                324          BRA     nextInit
000002F8                           325      ENDI
000002F8                           326  
000002F8  4E75                     327      RTS                             ; Return to subroutine
000002FA                           328  *----------
000002FA                           329  checkPaused:
Line 330 ERROR: Undefined symbol
000002FA  4A39 004DBD16            330      TST.B  isPaused
00000300  6600 0004                331      BNE    stillPaused
00000304  4E75                     332      RTS
00000306                           333  
00000306                           334  stillPaused:
00000306  6100 0320                335      BSR    DRAWBATTLE
0000030A  6000 FE9C                336      BRA    GAMELOOP
0000030E                           337  *-----------------------------------------------------------
0000030E                           338  * Subroutine    : Update
0000030E                           339  * Description   : Main update loop update Player and Enemies
0000030E                           340  *-----------------------------------------------------------
0000030E                           341  UPDATE:
0000030E  6100 09BE                342      BSR     UPDATE_PLAYER
00000312  6100 005E                343      BSR     MOVE_THROW
00000316                           344      ; Move the Enemy
00000316  4281                     345      CLR.L   D1                      ; Clear the contents of D0
00000318  2239 00001D9E            346      MOVE.L  ENEMY_X,    D1          ; Move the Enemy X Position to D0
0000031E  B2BC 00000000            347      CMP.L   #00,        D1
00000324  6F00 0192                348      BLE     RESET_ENEMY_POSITION    ; Reset Enemy if off Screen
00000328  6100 00CA                349      BSR     MOVE_ENEMY              ; Move the Enemy
0000032C                           350  
0000032C                           351      ; Move flying enemy
0000032C                           352  
0000032C  4281                     353      CLR.L   D1                      ; Clear the contents of D0
0000032E  2239 00001DAE            354      MOVE.L  FLYINGENEMY_X,    D1          ; Move the Enemy X Position to D0
00000334  B2BC 00000000            355      CMP.L   #00,        D1
0000033A  6F00 01BE                356      BLE     RESET_FLYENEMY_POSITION    ; Reset Enemy if off Screen
0000033E                           357  
0000033E                           358  
0000033E                           359      ; Move health
0000033E  0CB9 00000000 00001DA6   360      CMP.L   #00,        HEALTH_X
00000348  6F00 01F6                361      BLE     RESET_HEALTH_POSITION
0000034C  6100 009E                362      BSR     MOVE_HEALTHPACK
00000350                           363  
00000350                           364    
00000350  6100 007C                365      BSR     CHECK_ATTACK_COOLDOWN
00000354                           366  
00000354  4A79 00001DC8            367      TST.W   ATTACK_TIME
0000035A  6600 0080                368      BNE     ATTACK_TIME_SUB
0000035E  13FC 0000 00001DC5       369      MOVE.B  #00,        CURRENTLYATTACKING
00000366  23FC 000001E0 00001DCE   370      MOVE.L  #480,        ATTACK_Y
00000370                           371  
00000370                           372      
00000370                           373  
00000370  4E75                     374      RTS                             ; Return to subroutine  
00000372                           375  
00000372                           376  MOVE_THROW:
00000372                           377         ; Update the Players Positon based on Velocity and Gravity
00000372  B381                     378      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000374  2239 00001DE0            379      MOVE.L  THROW_VELOCITY, D1       ; Fetch Player Velocity
0000037A  2439 00001DE4            380      MOVE.L  THROW_GRAVITY, D2        ; Fetch Player Gravity
00000380  D282                     381      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000382  23C1 00001DE0            382      MOVE.L  D1,         THROW_VELOCITY ; Update Player Velocity
00000388  D2B9 00001DDC            383      ADD.L   THROW_Y,   D1          ; Add Velocity to Player
0000038E  23C1 00001DDC            384      MOVE.L  D1,         THROW_Y    ; Update Players Y Position
00000394                           385  
00000394  58B9 00001DD8            386      ADDI.L   #4,        THROW_X
0000039A  6100 0004                387      BSR     CHECK_THROW_DONE
0000039E                           388      
0000039E  4E75                     389      RTS
000003A0                           390  
000003A0                           391  CHECK_THROW_DONE:
000003A0  0CB9 0000015E 00001DDC   392      CMP.L    #350, THROW_Y
000003AA  6E00 0004                393      BGT      RESET_THROW
000003AE  4E75                     394      RTS
000003B0                           395  
000003B0                           396  RESET_THROW:
000003B0  13FC 0000 00001DD2       397      MOVE.B   #00, CURRENTLYTHROWING
000003B8  23FC FFFFFF9C 00001DD8   398      MOVE.L   #-100, THROW_X
000003C2  23FC FFFFFF9C 00001DDC   399      MOVE.L   #-100, THROW_Y
000003CC  4E75                     400      RTS
000003CE                           401  
000003CE                           402  CHECK_ATTACK_COOLDOWN:
000003CE  0C79 0000 00001DC6       403      CMP.W   #0, ATTACK_COOLDOWN
000003D6  6E00 000C                404      BGT     ATTACK_COOLDOWN_SUB
000003DA  4E75                     405      RTS
000003DC                           406  
000003DC                           407  ATTACK_TIME_SUB:
000003DC  5579 00001DC8            408      SUB.W   #02,        ATTACK_TIME
000003E2  4E75                     409      RTS   
000003E4                           410  ATTACK_COOLDOWN_SUB:
000003E4  5579 00001DC6            411      SUB.W   #02,        ATTACK_COOLDOWN
000003EA  4E75                     412      RTS                            
000003EC                           413  
000003EC                           414  MOVE_HEALTHPACK:
000003EC  55B9 00001DA6            415      SUB.L   #02,        HEALTH_X
000003F2  4E75                     416      RTS
000003F4                           417  
000003F4                           418  *-----------------------------------------------------------
000003F4                           419  * Subroutine    : Move Enemy
000003F4                           420  * Description   : Move Enemy Right to Left
000003F4                           421  *-----------------------------------------------------------
000003F4                           422  MOVE_ENEMY:
Line 423 ERROR: Undefined symbol
000003F4  0C79 0003 005455B8       423      CMP.W   #3,lvlIndex
000003FC  6700 0090                424      BEQ     MOVE_ENEMY_L4
Line 425 ERROR: Undefined symbol
00000400  0C79 0002 005455B8       425      CMP.W   #2,lvlIndex
00000408  6700 005A                426      BEQ     MOVE_ENEMY_L3
Line 427 ERROR: Undefined symbol
0000040C  0C79 0001 005455B8       427      CMP.W   #1,lvlIndex
00000414  6700 0024                428      BEQ     MOVE_ENEMY_L2
00000418                           429  
00000418  0CB9 000000B4 00001DAE   430      CMP.L   #180,FLYINGENEMY_X
00000422                           431      IF <LE> THEN
00000426  52B9 00001DB2            432          ADD.L   #1,FLYINGENEMY_Y
0000042C                           433      ENDI
0000042C                           434  
0000042C  59B9 00001DAE            435      SUB.L   #04,        FLYINGENEMY_X
00000432  57B9 00001D9E            436      SUB.L   #03,        ENEMY_X     ; Move enemy by X Value
00000438  4E75                     437      RTS
0000043A                           438  
0000043A                           439  MOVE_ENEMY_L2:
0000043A  57B9 00001DAE            440      SUB.L   #03,        FLYINGENEMY_X
00000440  0CB9 00000082 00001DAE   441       CMP.L   #130,      FLYINGENEMY_X
0000044A                           442      IF <LE> THEN
0000044E  52B9 00001DB2            443          ADD.L   #1,FLYINGENEMY_Y
00000454                           444      ENDI
00000454  5BB9 00001D9E            445      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
0000045A  13FC 0004 00001DC4       446      MOVE.B  #04,        POINTS
00000462  4E75                     447      RTS
00000464                           448  
00000464                           449  MOVE_ENEMY_L3:
00000464  0CB9 00000082 00001DAE   450      CMP.L   #130,      FLYINGENEMY_X
0000046E                           451      IF <LE> THEN
00000472  56B9 00001DB2            452          ADD.L   #3,FLYINGENEMY_Y
00000478                           453      ENDI
00000478  5FB9 00001DAE            454      SUB.L   #07,        FLYINGENEMY_X
0000047E  5BB9 00001D9E            455      SUB.L   #05,        ENEMY_X     ; Move enemy by X Value
00000484  13FC 0005 00001DC4       456      MOVE.B  #05,        POINTS
0000048C  4E75                     457      RTS
0000048E                           458  
0000048E                           459  MOVE_ENEMY_L4:
0000048E  0CB9 00000082 00001DAE   460      CMP.L   #130,      FLYINGENEMY_X
00000498                           461      IF <LE> THEN
0000049C  58B9 00001DB2            462          ADD.L   #4,FLYINGENEMY_Y
000004A2                           463      ENDI
000004A2  51B9 00001DAE            464      SUB.L   #08,        FLYINGENEMY_X
000004A8  5DB9 00001D9E            465      SUB.L   #06,        ENEMY_X     ; Move enemy by X Value
000004AE  13FC 000A 00001DC4       466      MOVE.B  #10,        POINTS
000004B6  4E75                     467      RTS
000004B8                           468  *-----------------------------------------------------------
000004B8                           469  * Subroutine    : Reset Enemy
000004B8                           470  * Description   : Reset Enemy if to passes 0 to Right of Screen
000004B8                           471  *-----------------------------------------------------------
000004B8                           472  RESET_ENEMY_POSITION:
000004B8  4281                     473      CLR.L   D1       
000004BA  3239 00001D7C            474      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
000004C0  82FC 0002                475      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
000004C4  23C1 00001DA2            476      MOVE.L  D1,         ENEMY_Y     ; Enemy Y Position
000004CA                           477  
000004CA  B381                     478      EOR.L  D1,D1                      ; Clear contents of D1 (XOR is faster)
000004CC  3239 00001D7A            479      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
000004D2  0681 0000001B            480      ADD.L   #ENMY_W_INIT,D1
000004D8  23C1 00001D9E            481      MOVE.L  D1,         ENEMY_X     ; Enemy X Position
000004DE                           482  
000004DE  4A39 00001DEB            483      TST.B     ENEMY_HIT
000004E4                           484      IF <EQ> THEN        ; enemy has not been hit
000004E8  6100 0086                485          BSR   damage_hill
000004EC                           486      ENDI
000004EC  13FC 0000 00001DEB       487      MOVE.B  #0,         ENEMY_HIT
000004F4  6100 0062                488      BSR     CHECK_WAVE_CLEARED
000004F8                           489  
000004F8  4E75                     490      RTS
000004FA                           491  
000004FA                           492  RESET_FLYENEMY_POSITION:
000004FA  B381                     493      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
000004FC  3239 00001D7C            494      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000502  82FC 0002                495      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000506  0441 003C                496      SUB.W   #60,        D1
0000050A  23C1 00001DB2            497      MOVE.L  D1,         FLYINGENEMY_Y     ; Enemy Y Position
00000510                           498  
00000510  4281                     499      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000512  3239 00001D7A            500      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000518  0681 0000001E            501      ADD.L   #FLY_ENMY_W_INIT,D1
0000051E  23C1 00001DAE            502      MOVE.L  D1,         FLYINGENEMY_X     ; FLY Enemy X Position
00000524                           503  
00000524  4A39 00001DEC            504      TST.B     FLYENEMY_HIT
0000052A                           505      IF <EQ> THEN        ; enemy has not been hit
0000052E  6100 0040                506          BSR   damage_hill
00000532                           507      ENDI
00000532  13FC 0000 00001DEC       508      MOVE.B  #0,         FLYENEMY_HIT
0000053A  6100 001C                509      BSR     CHECK_WAVE_CLEARED
0000053E                           510  
0000053E  4E75                     511      RTS
00000540                           512      
00000540                           513  RESET_HEALTH_POSITION:
00000540  13FC 0001 00001D63       514      MOVE.B  #01,        DRAW_HEALTHPACKS
00000548  4281                     515      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
0000054A  3239 00001D7A            516      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000550  23C1 00001DA6            517      MOVE.L  D1,         HEALTH_X     ; healthpack X Position
00000556  4E75                     518      RTS
00000558                           519  
00000558                           520  CHECK_WAVE_CLEARED:
00000558  5239 00001DE9            521      ADDI.B  #1,         enemiesPassed
0000055E  1239 00001DE9            522      MOVE.B  enemiesPassed,D1
00000564  B239 00001DEA            523      CMP.B   enemiesToDefeat,D1
0000056A  6700 147A                524      BEQ     WAVE_DEFEATED
0000056E  4E75                     525      RTS
00000570                           526  
00000570                           527  damage_hill:
00000570  0439 000A 00001D60       528      sub.b  #10,hillHP
Line 529 ERROR: Undefined symbol
00000578  04B9 0000000F 005455B8   529      sub.l   #15,currentHealth
00000582  0C39 0000 00001D60       530      CMP.b   #0,hillHP
0000058A  6F00 1244                531      BLE     HILL_LOST
0000058E  4E75                     532      RTS
00000590                           533  
00000590                           534  CONTINUE:
00000590  4E75                     535      RTS
00000592                           536  
00000592                           537  PERFORM_ATTACK:
Line 538 ERROR: Undefined symbol
00000592  4A39 004DBD16            538      TST.B  isPaused
00000598                           539      IF <NE> THEN
0000059C  4E75                     540          RTS
0000059E                           541      ENDI
0000059E  4A79 00001DC6            542      TST.W    ATTACK_COOLDOWN
000005A4  66EA                     543      BNE      CONTINUE
000005A6                           544      
000005A6  13FC 0001 00001DC5       545      MOVE.B   #01, CURRENTLYATTACKING
000005AE  33FC 0032 00001DC8       546      MOVE.W   #50, ATTACK_TIME
000005B6  33FC 004C 00001DC6       547      MOVE.W   #76, ATTACK_COOLDOWN
000005BE                           548  
000005BE  23F9 00001D84 00001DCA   549      MOVE.L   PLAYER_X,ATTACK_X
000005C8  06B9 0000001B 00001DCA   550      ADDI.L   #PLYR_W_INIT,ATTACK_X
000005D2  23F9 00001D88 00001DCE   551      MOVE.L   PLAYER_Y,ATTACK_Y
000005DC  4E75                     552      RTS
000005DE                           553  
000005DE                           554  PERFORM_THROW:
Line 555 ERROR: Undefined symbol
000005DE  4A39 004DBD16            555      TST.B  isPaused
000005E4                           556      IF <NE> THEN
000005E8  4E75                     557          RTS
000005EA                           558      ENDI
000005EA  4A39 00001DD2            559      TST.B    CURRENTLYTHROWING
000005F0  669E                     560      BNE      CONTINUE
000005F2                           561      
000005F2  13FC 0001 00001DD2       562      MOVE.B   #01,CURRENTLYTHROWING
000005FA  23F9 00001D84 00001DD8   563      MOVE.L   PLAYER_X,THROW_X
00000604  06B9 0000001B 00001DD8   564      ADDI.L   #PLYR_W_INIT,THROW_X
0000060E  23F9 00001D88 00001DDC   565      MOVE.L   PLAYER_Y,THROW_Y
00000618  04B9 0000000D 00001DDC   566      SUBI.L   #PLYR_H_INIT,THROW_Y
00000622                           567  
00000622  6100 052A                568      BSR     PERFORM_THROW_ARC
00000626  4E75                     569      RTS
00000628                           570  
00000628                           571  *-----------------------------------------------------------
00000628                           572  * Subroutine    : Draw
00000628                           573  * Description   : Draw Screen
00000628                           574  *-----------------------------------------------------------
00000628                           575  DRAWBATTLE: 
00000628                           576      ; Enable back buffer
00000628  103C 005E                577      MOVE.B  #TC_REDRAW,        D0
0000062C  4E4F                     578      TRAP    #15
0000062E                           579  
0000062E                           580      ; Clear the screen
0000062E  103C 000B                581      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000632  323C FF00                582      MOVE.W  #$FF00,     D1          ; Clear contents
00000636  4E4F                     583      TRAP    #15                     ; Trap (Perform action)
00000638                           584  
00000638  123C 0001                585      MOVE.B  #1,D1
0000063C  103C 005D                586      MOVE.B  #93,D0
00000640  4E4F                     587      TRAP    #15
00000642                           588  
00000642  6100 01FE                589      BSR     DRAW_BACKGROUND        
00000646  6100 006A                590      BSR     DRAW_HILL 
0000064A  6100 036C                591      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
0000064E  6100 021C                592      BSR     DRAW_TREES
00000652  6100 01BE                593      BSR     DRAW_ENTRANCE_HOLE
00000656  6100 095A                594      BSR     DRAW_ENEMY              ; Draw Enemy
0000065A  6100 0A94                595      BSR     DRAW_FLYENEMY
0000065E  6100 0C3C                596      BSR     DRAW_HEALTHPACK
00000662  6100 017E                597      BSR     DRAW_ENTRANCE
00000666  6100 06E4                598      BSR     DRAW_PLAYER             ; Draw Player
0000066A  6100 0CB6                599      BSR     DRAW_FLOOR              ; Draw Floor
0000066E  6100 0008                600      BSR     drawHillHealth         ; draw hill hp
Line 601 ERROR: Undefined symbol
00000672  6100 B6A2                601      BSR     drawPause
00000676  4E75                     602      RTS                             ; Return to subroutine
00000678                           603  
00000678                           604  
00000678                           605  
00000678                           606  drawHillHealth:
Line 607 ERROR: Undefined symbol
00000678  6100 B69C                607      BSR     drawHealth
0000067C                           608          
Line 609 ERROR: Undefined symbol
0000067C  223C 004DBD16            609      MOVE.L  #color5,D1
Line 610 ERROR: Undefined symbol
00000682  103C 0016                610      MOVE.B  #tcFont,D0
00000686  243C 00015F90            611      MOVE.L  #00090000,D2
0000068C  4E4F                     612      TRAP    #15
0000068E                           613  
Line 614 ERROR: Undefined symbol
0000068E  223C 004DBD16            614      MOVE.L  #BROWN,D1
Line 615 ERROR: Undefined symbol
00000694  103C 0016                615      MOVE.B  #tcPenFil,D0
00000698  4E4F                     616      TRAP    #15
0000069A                           617  
0000069A  103C 000B                618      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000069E  323C 041B                619      MOVE.W  #$041B,     D1          ; Col 02, Row 01
000006A2  4E4F                     620      TRAP    #15                     ; Trap (Perform action)
000006A4  43F9 00001D52            621      LEA     hillHP_MSG,  A1          ; Score Message
000006AA  303C 000D                622      MOVE    #13,        D0          ; No Line feed
000006AE  4E4F                     623      TRAP    #15                     ; Trap (Perform action)
000006B0                           624  
000006B0  4E75                     625      RTS
000006B2                           626  
000006B2                           627  DRAW_HILL:
000006B2                           628  
000006B2                           629      ; Set Pixel Colors
Line 630 ERROR: Undefined symbol
000006B2  223C 004DBD16            630      MOVE.L  #DIRT,     D1          ; Set Background color
000006B8  103C 0050                631      MOVE.B  #80,        D0          ; Task for Background Color
000006BC  4E4F                     632      TRAP    #15                     ; Trap (Perform action)
000006BE                           633  
Line 634 ERROR: Undefined symbol
000006BE  223C 004DBD16            634      MOVE.L  #DIRT,     D1
000006C4  103C 0051                635      MOVE.B  #81,        D0
000006C8  4E4F                     636      TRAP    #15
000006CA                           637  
000006CA                           638      ; Set X, Y, X2, and Y2
000006CA  7200                     639      MOVE.L  #0,   D1          ; X
000006CC  243C 000000F1            640      MOVE.L  #241,  D2          ; Y
000006D2  761E                     641      MOVE.L  #30,   D3           
000006D4  7878                     642      MOVE.L  #120,   D4     
000006D6                           643      
000006D6  103C 0057                644      MOVE.B  #87,        D0          ; Draw 
000006DA  4E4F                     645      TRAP    #15                     ; Trap (Perform action)
000006DC                           646      
000006DC                           647       ; Set X, Y, X2, and Y2
000006DC  7200                     648      MOVE.L  #0,   D1          ; X
000006DE  243C 000000F1            649      MOVE.L  #241,  D2          ; Y
000006E4  763C                     650      MOVE.L  #60,   D3           
000006E6  283C 00000087            651      MOVE.L  #135,   D4 
000006EC                           652      
000006EC                           653      
000006EC  103C 0057                654      MOVE.B  #87,        D0          ; Draw
000006F0  4E4F                     655      TRAP    #15                     ; Trap (Perform action)
000006F2                           656  
000006F2                           657       ; Set X, Y, X2, and Y2
000006F2  7200                     658      MOVE.L  #0,   D1          ; X
000006F4  243C 000000F1            659      MOVE.L  #241,  D2          ; Y
000006FA  7650                     660      MOVE.L  #80,   D3           
000006FC  283C 00000096            661      MOVE.L  #150,   D4 
00000702                           662      
00000702                           663      
00000702  103C 0057                664      MOVE.B  #87,        D0          ; Draw 
00000706  4E4F                     665      TRAP    #15                     ; Trap (Perform action)
00000708                           666  
00000708                           667       ; Set X, Y, X2, and Y2
00000708  7200                     668      MOVE.L  #0,   D1          ; X
0000070A  243C 000000F1            669      MOVE.L  #241,  D2          ; Y
00000710  7664                     670      MOVE.L  #100,   D3           
00000712  283C 000000C8            671      MOVE.L  #200,   D4 
00000718                           672      
00000718                           673      
00000718  103C 0057                674      MOVE.B  #87,        D0          ; Draw 
0000071C  4E4F                     675      TRAP    #15                     ; Trap (Perform action)
0000071E                           676  
Line 677 ERROR: Undefined symbol
0000071E  223C 004DBD16            677      MOVE.L  #BLACK,     D1
00000724  103C 0051                678      MOVE.B  #81,        D0
00000728  4E4F                     679      TRAP    #15
Line 680 ERROR: Undefined symbol
0000072A  223C 004DBD16            680      MOVE.L  #BLACK,     D1
00000730  103C 0050                681      MOVE.B  #80,        D0
00000734  4E4F                     682      TRAP    #15
00000736                           683  
00000736                           684      ; Set X, Y, X2, and Y2
00000736  7205                     685      MOVE.L  #5,   D1          ; X
00000738  243C 00000082            686      MOVE.L  #130,  D2          ; Y
0000073E  7619                     687      MOVE.L  #25,   D3           
00000740  7878                     688      MOVE.L  #120,   D4     
00000742                           689  
00000742                           690      
00000742  103C 0057                691      MOVE.B  #87,        D0          ; Draw 
00000746  4E4F                     692      TRAP    #15                     ; Trap (Perform action)
00000748                           693  
00000748  4E75                     694      RTS
0000074A                           695  
0000074A                           696      ; Set Pixel Colors
Line 697 ERROR: Undefined symbol
0000074A  223C 004DBD16            697      MOVE.L  #DIRT,     D1          ; Set Background color
00000750  103C 0050                698      MOVE.B  #80,        D0          ; Task for Background Color
00000754  4E4F                     699      TRAP    #15                     ; Trap (Perform action)
00000756                           700  
Line 701 ERROR: Undefined symbol
00000756  223C 004DBD16            701      MOVE.L  #DIRT,     D1
0000075C  103C 0051                702      MOVE.B  #81,        D0
00000760  4E4F                     703      TRAP    #15
00000762                           704  
00000762                           705      ; Set X, Y, X2, and Y2
00000762  7200                     706      MOVE.L  #0,   D1          ; X
00000764  243C 000000F1            707      MOVE.L  #241,  D2          ; Y
0000076A  761E                     708      MOVE.L  #30,   D3           
0000076C  7878                     709      MOVE.L  #120,   D4     
0000076E                           710      
0000076E  103C 0057                711      MOVE.B  #87,        D0          ; Draw 
00000772  4E4F                     712      TRAP    #15                     ; Trap (Perform action)
00000774                           713      
00000774                           714       ; Set X, Y, X2, and Y2
00000774  7200                     715      MOVE.L  #0,   D1          ; X
00000776  243C 000000F1            716      MOVE.L  #241,  D2          ; Y
0000077C  763C                     717      MOVE.L  #60,   D3           
0000077E  283C 00000087            718      MOVE.L  #135,   D4 
00000784                           719      
00000784                           720      
00000784  103C 0057                721      MOVE.B  #87,        D0          ; Draw
00000788  4E4F                     722      TRAP    #15                     ; Trap (Perform action)
0000078A                           723  
0000078A                           724       ; Set X, Y, X2, and Y2
0000078A  7200                     725      MOVE.L  #0,   D1          ; X
0000078C  243C 000000F1            726      MOVE.L  #241,  D2          ; Y
00000792  7650                     727      MOVE.L  #80,   D3           
00000794  283C 00000096            728      MOVE.L  #150,   D4 
0000079A                           729      
0000079A                           730      
0000079A  103C 0057                731      MOVE.B  #87,        D0          ; Draw 
0000079E  4E4F                     732      TRAP    #15                     ; Trap (Perform action)
000007A0                           733  
000007A0                           734       ; Set X, Y, X2, and Y2
000007A0  7200                     735      MOVE.L  #0,   D1          ; X
000007A2  243C 000000F1            736      MOVE.L  #241,  D2          ; Y
000007A8  7664                     737      MOVE.L  #100,   D3           
000007AA  283C 000000C8            738      MOVE.L  #200,   D4 
000007B0                           739      
000007B0                           740      
000007B0  103C 0057                741      MOVE.B  #87,        D0          ; Draw 
000007B4  4E4F                     742      TRAP    #15                     ; Trap (Perform action)
000007B6                           743  
Line 744 ERROR: Undefined symbol
000007B6  223C 004DBD16            744      MOVE.L  #BLACK,     D1
000007BC  103C 0051                745      MOVE.B  #81,        D0
000007C0  4E4F                     746      TRAP    #15
Line 747 ERROR: Undefined symbol
000007C2  223C 004DBD16            747      MOVE.L  #BLACK,     D1
000007C8  103C 0050                748      MOVE.B  #80,        D0
000007CC  4E4F                     749      TRAP    #15
000007CE                           750  
000007CE                           751      ; Set X, Y, X2, and Y2
000007CE  7205                     752      MOVE.L  #5,   D1          ; X
000007D0  243C 00000082            753      MOVE.L  #130,  D2          ; Y
000007D6  7619                     754      MOVE.L  #25,   D3           
000007D8  7878                     755      MOVE.L  #120,   D4     
000007DA                           756  
000007DA                           757      
000007DA  103C 0057                758      MOVE.B  #87,        D0          ; Draw 
000007DE  4E4F                     759      TRAP    #15                     ; Trap (Perform action)
000007E0                           760  
000007E0  4E75                     761      RTS
000007E2                           762  
000007E2                           763  DRAW_ENTRANCE:
000007E2                           764      ; Set Pixel Colors
Line 765 ERROR: Undefined symbol
000007E2  223C 004DBD16            765      MOVE.L  #DIRT,     D1          ; Set Background color
000007E8  103C 0050                766      MOVE.B  #80,        D0          ; Task for Background Color
000007EC  4E4F                     767      TRAP    #15                     ; Trap (Perform action)
000007EE                           768  
Line 769 ERROR: Undefined symbol
000007EE  223C 004DBD16            769      MOVE.L  #DIRT,     D1
000007F4  103C 0051                770      MOVE.B  #81,        D0
000007F8  4E4F                     771      TRAP    #15
000007FA                           772  
000007FA                           773      ; Set X, Y, X2, and Y2
000007FA  7200                     774      MOVE.L  #0,   D1          ; X
000007FC  243C 000000F1            775      MOVE.L  #241,  D2          ; Y
00000802  7605                     776      MOVE.L  #5,   D3           
00000804  283C 000000B5            777      MOVE.L  #181,   D4     
0000080A                           778      
0000080A  103C 0057                779      MOVE.B  #87,        D0          ; Draw 
0000080E  4E4F                     780      TRAP    #15                     ; Trap (Perform action)
00000810                           781  
00000810  4E75                     782      RTS
00000812                           783  
00000812                           784  DRAW_ENTRANCE_HOLE:
00000812                           785      ; Set Pixel Colors
Line 786 ERROR: Undefined symbol
00000812  223C 004DBD16            786      MOVE.L  #BLACK,     D1          ; Set Background color
00000818  103C 0050                787      MOVE.B  #80,        D0          ; Task for Background Color
0000081C  4E4F                     788      TRAP    #15                     ; Trap (Perform action)
0000081E                           789  
Line 790 ERROR: Undefined symbol
0000081E  223C 004DBD16            790      MOVE.L  #BLACK,     D1
00000824  103C 0051                791      MOVE.B  #81,        D0
00000828  4E4F                     792      TRAP    #15
0000082A                           793  
0000082A                           794      ; Set X, Y, X2, and Y2
0000082A  7205                     795      MOVE.L  #5,   D1          ; X
0000082C  243C 000000F1            796      MOVE.L  #241,  D2          ; Y
00000832  7614                     797      MOVE.L  #20,   D3           
00000834  283C 000000D3            798      MOVE.L  #211,   D4     
0000083A                           799      
0000083A  103C 0057                800      MOVE.B  #87,        D0          ; Draw 
0000083E  4E4F                     801      TRAP    #15                     ; Trap (Perform action)
00000840  4E75                     802      RTS
00000842                           803  
00000842                           804  DRAW_BACKGROUND:
00000842  4281                     805      CLR.L       D1
Line 806 ERROR: Undefined symbol
00000844  223C 004DBD16            806      MOVE.L      #SKY,D1
0000084A  103C 0051                807      MOVE.B      #81,D0
0000084E  4E4F                     808      TRAP        #15
00000850                           809  
00000850  7200                     810      MOVE.L      #00, D1
00000852  7400                     811      MOVE.L      #00, D2
00000854  7059                     812      MOVE.L      #89, D0
00000856  4E4F                     813      TRAP        #15
00000858                           814      
Line 815 ERROR: Undefined symbol
00000858  223C 004DBD16            815      MOVE.L     #BROWN,D1
0000085E  243C 01110000            816      MOVE.L     #$01110000,D2
00000864  103C 0015                817      MOVE.B     #21,D0
00000868  4E4F                     818      TRAP       #15
0000086A                           819  
0000086A  4E75                     820      RTS
0000086C                           821  
0000086C                           822  DRAW_TREES:
0000086C                           823      
0000086C  7204                     824      MOVE.L  #4,D1
0000086E  705D                     825      MOVE.L  #93,D0
00000870  4E4F                     826      TRAP    #15
00000872                           827      
00000872                           828      ; Set Pixel Colors
Line 829 ERROR: Undefined symbol
00000872  223C 004DBD16            829      MOVE.L  #TRUNKO,     D1          ; Set Background color
00000878  103C 0050                830      MOVE.B  #80,        D0          ; Task for Background Color
0000087C  4E4F                     831      TRAP    #15                     ; Trap (Perform action)
0000087E                           832  
Line 833 ERROR: Undefined symbol
0000087E  223C 004DBD16            833      MOVE.L  #TRUNKO,     D1
00000884  103C 0051                834      MOVE.B  #81,        D0
00000888  4E4F                     835      TRAP    #15
0000088A                           836      
0000088A  223C 00000140            837      MOVE.L  #320,D1
00000890  243C 000000F1            838      MOVE.L  #241,D2
00000896  263C 00000154            839      MOVE.L  #340,D3
0000089C  283C 00000089            840      MOVE.L  #137,D4
000008A2                           841      
000008A2  103C 0054                842      MOVE.B  #84,D0
000008A6  4E4F                     843      TRAP    #15
000008A8                           844      
000008A8  223C 00000170            845      MOVE.L  #368,D1
000008AE  2404                     846      MOVE.L  D4,D2
000008B0  103C 0055                847      MOVE.B  #85,D0
000008B4  4E4F                     848      TRAP    #15
000008B6                           849      
000008B6  223C 00000181            850      MOVE.L  #385,D1
000008BC  243C 000000F1            851      MOVE.L  #241,D2
000008C2  103C 0055                852      MOVE.B  #85,D0
000008C6  4E4F                     853      TRAP    #15
000008C8                           854      
Line 855 ERROR: Undefined symbol
000008C8  223C 004DBD16            855      MOVE.L  #TRUNKI,     D1
000008CE  103C 0051                856      MOVE.B  #81,        D0
000008D2  4E4F                     857      TRAP    #15
000008D4                           858      
000008D4  223C 00000154            859      MOVE.L  #340,D1
000008DA  243C 000000A0            860      MOVE.L  #160,D2
000008E0  103C 0059                861      MOVE.B  #89,D0
000008E4  4E4F                     862      TRAP    #15
000008E6                           863     
000008E6  7201                     864      MOVE.L  #1,D1
000008E8  705D                     865      MOVE.L  #93,D0
000008EA  4E4F                     866      TRAP    #15
000008EC                           867  
000008EC                           868     ; Set Pixel Colors
Line 869 ERROR: Undefined symbol
000008EC  223C 004DBD16            869      MOVE.L  #GREEN1,     D1          ; Set Background color
000008F2  103C 0050                870      MOVE.B  #80,        D0          ; Task for Background Color
000008F6  4E4F                     871      TRAP    #15                     ; Trap (Perform action)
000008F8                           872  
Line 873 ERROR: Undefined symbol
000008F8  223C 004DBD16            873      MOVE.L  #GREEN1,     D1
000008FE  103C 0051                874      MOVE.B  #81,        D0
00000902  4E4F                     875      TRAP    #15
00000904                           876  
00000904                           877  ; 88 for elipse
00000904  223C 0000012F            878      MOVE.L  #303,D1
0000090A  7421                     879      MOVE.L  #33,D2
0000090C  263C 00000187            880      MOVE.L  #391,D3
00000912  7876                     881      MOVE.L  #118,D4
00000914  103C 0058                882      MOVE.B  #88,D0
00000918  4E4F                     883      TRAP    #15
0000091A                           884     
0000091A                           885        ; Set Pixel Colors
Line 886 ERROR: Undefined symbol
0000091A  223C 004DBD16            886      MOVE.L  #GREEN2,     D1          ; Set Background color
00000920  103C 0050                887      MOVE.B  #80,        D0          ; Task for Background Color
00000924  4E4F                     888      TRAP    #15                     ; Trap (Perform action)
00000926                           889  
Line 890 ERROR: Undefined symbol
00000926  223C 004DBD16            890      MOVE.L  #GREEN2,     D1
0000092C  103C 0051                891      MOVE.B  #81,        D0
00000930  4E4F                     892      TRAP    #15
00000932                           893  
00000932                           894  ; 88 for elipse
00000932  223C 00000152            895      MOVE.L  #338,D1
00000938  742A                     896      MOVE.L  #42,D2
0000093A  263C 000001AB            897      MOVE.L  #427,D3
00000940  283C 00000085            898      MOVE.L  #133,D4
00000946  103C 0058                899      MOVE.B  #88,D0
0000094A  4E4F                     900      TRAP    #15
0000094C                           901      
0000094C                           902            ; Set Pixel Colors
Line 903 ERROR: Undefined symbol
0000094C  223C 004DBD16            903      MOVE.L  #GREEN3,     D1          ; Set Background color
00000952  103C 0050                904      MOVE.B  #80,        D0          ; Task for Background Color
00000956  4E4F                     905      TRAP    #15                     ; Trap (Perform action)
00000958                           906  
Line 907 ERROR: Undefined symbol
00000958  223C 004DBD16            907      MOVE.L  #GREEN3,     D1
0000095E  103C 0051                908      MOVE.B  #81,        D0
00000962  4E4F                     909      TRAP    #15
00000964                           910  
00000964                           911  ; 88 for elipse
00000964  223C 0000011C            912      MOVE.L  #284,D1
0000096A  7441                     913      MOVE.L  #65,D2
0000096C  263C 00000170            914      MOVE.L  #368,D3
00000972  283C 00000096            915      MOVE.L  #150,D4
00000978  103C 0058                916      MOVE.B  #88,D0
0000097C  4E4F                     917      TRAP    #15
0000097E                           918      
0000097E                           919            ; Set Pixel Colors
Line 920 ERROR: Undefined symbol
0000097E  223C 004DBD16            920      MOVE.L  #GREEN4,     D1          ; Set Background color
00000984  103C 0050                921      MOVE.B  #80,        D0          ; Task for Background Color
00000988  4E4F                     922      TRAP    #15                     ; Trap (Perform action)
0000098A                           923  
Line 924 ERROR: Undefined symbol
0000098A  223C 004DBD16            924      MOVE.L  #GREEN4,     D1
00000990  103C 0051                925      MOVE.B  #81,        D0
00000994  4E4F                     926      TRAP    #15
00000996                           927  
00000996                           928  ; 88 for elipse
00000996  223C 00000151            929      MOVE.L  #337,D1
0000099C  744A                     930      MOVE.L  #74,D2
0000099E  263C 000001AC            931      MOVE.L  #428,D3
000009A4  283C 0000009E            932      MOVE.L  #158,D4
000009AA  103C 0058                933      MOVE.B  #88,D0
000009AE  4E4F                     934      TRAP    #15
000009B0                           935      
000009B0                           936      
000009B0  103C 005E                937      MOVE.B  #94,D0
000009B4  4E4F                     938      TRAP    #15
000009B6                           939  
000009B6                           940      
000009B6                           941  
000009B6  4E75                     942      RTS
000009B8                           943  *-----------------------------------------------------------
000009B8                           944  * Subroutine    : Draw game info
000009B8                           945  * Description   : Draw info about the current battle e.g. your hp, hill hp, ant remaining, etc.
000009B8                           946  *-----------------------------------------------------------
000009B8                           947  DRAW_PLYR_DATA:
000009B8  B381                     948      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
000009BA  B582                     949      EOR.L    D2,D2
000009BC                           950  
Line 951 ERROR: Undefined symbol
000009BC  223C 004DBD16            951      MOVE.L  #BLACK,     D1
000009C2  103C 0015                952      MOVE.B  #21,        D0          ; Set Text Color
000009C6  4E4F                     953      TRAP    #15                     ; Trap (Perform action)
000009C8                           954  
Line 955 ERROR: Undefined symbol
000009C8  223C 004DBD16            955      MOVE.L  #SKY,       D1          ; Set Text Color
000009CE  7051                     956      MOVE.L  #81,        D0          ; Set Text Color
000009D0  4E4F                     957      TRAP    #15                     ; Trap (Perform action)
000009D2                           958      ; Player 
000009D2  103C 000B                959      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009D6  323C 0203                960      MOVE.W  #$0203,     D1          ; Col 02, Row 03
000009DA  4E4F                     961      TRAP    #15                     ; Trap (Perform action)
000009DC  43F9 00001D40            962      LEA     antsRem_MSG,      A1          ; Velocity Message
000009E2  303C 000D                963      MOVE    #13,        D0          ; No Line feed
000009E6  4E4F                     964      TRAP    #15                     ; Trap (Perform action)
000009E8                           965      
000009E8                           966      ; Player Velocity
000009E8  103C 000B                967      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000009EC  323C 1303                968      MOVE.W  #$1303,     D1          ; Col 05, Row 03
000009F0  4E4F                     969      TRAP    #15                     ; Trap (Perform action)
000009F2  103C 0003                970      MOVE.B  #03,        D0          ; Display number at D1.L
000009F6  B381                     971      EOR.L   D1,D1
000009F8  1239 00001DC3            972      MOVE.B  antsRemaining,D1        ; Move X to D1.L
000009FE  4E4F                     973      TRAP    #15                     ; Trap (Perform action)
00000A00                           974  
00000A00                           975      ; Player On Ground Message
00000A00  103C 000B                976      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A04  323C 0204                977      MOVE.W  #$0204,     D1          ; Col 10, Row 03
00000A08  4E4F                     978      TRAP    #15                     ; Trap (Perform action)
00000A0A  43F9 00001C4C            979      LEA     ENEMIESDEAD_MSG,    A1          ; On Ground Message
00000A10  303C 000D                980      MOVE    #13,        D0          ; No Line feed
00000A14  4E4F                     981      TRAP    #15                     ; Trap (Perform action)
00000A16                           982      
00000A16                           983      ; Player On Ground
00000A16  103C 000B                984      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A1A  323C 1504                985      MOVE.W  #$1504,     D1          ; Col 06, Row 04
00000A1E  4E4F                     986      TRAP    #15                     ; Trap (Perform action)
00000A20  103C 0003                987      MOVE.B  #03,        D0          ; Display number at D1.L
00000A24  4281                     988      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A26  1239 00001DE8            989      MOVE.B  ENEMIES_DEFEATED,     D1          ; Move Play on Ground ? to D1.L
00000A2C  4E4F                     990      TRAP    #15                     ; Trap (Perform action)
00000A2E                           991      
00000A2E                           992      ; number of enemies in wave msg
00000A2E  103C 000B                993      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A32  323C 0205                994      MOVE.W  #$0205,     D1          ; Col 10, Row 03
00000A36  4E4F                     995      TRAP    #15                     ; Trap (Perform action)
00000A38  43F9 00001C5E            996      LEA     ENEMYCOUNT_MSG,    A1          ; On Ground Message
00000A3E  303C 000D                997      MOVE    #13,        D0          ; No Line feed
00000A42  4E4F                     998      TRAP    #15                     ; Trap (Perform action)
00000A44                           999      
00000A44                          1000      ; number of enemies in wave 
00000A44  103C 000B               1001      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A48  323C 1705               1002      MOVE.W  #$1705,     D1          ; Col 06, Row 04
00000A4C  4E4F                    1003      TRAP    #15                     ; Trap (Perform action)
00000A4E  4281                    1004      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000A50  1239 00001DEA           1005      MOVE.B  enemiesToDefeat,     D1          ; Move Play on Ground ? to D1.L
00000A56  103C 0003               1006      MOVE.B  #03,        D0          ; Display number at D1.L
00000A5A  4E4F                    1007      TRAP    #15                     ; Trap (Perform action)
00000A5C                          1008  
00000A5C                          1009      ; Show Keys Pressed
00000A5C  103C 000B               1010      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A60  323C 2001               1011      MOVE.W  #$2001,     D1          ; Col 20, Row 1
00000A64  4E4F                    1012      TRAP    #15                     ; Trap (Perform action)
00000A66  43F9 00001C0D           1013      LEA     KEYCODE_MSG, A1         ; Keycode
00000A6C  303C 000D               1014      MOVE    #13,        D0          ; No Line feed
00000A70  4E4F                    1015      TRAP    #15                     ; Trap (Perform action)
00000A72                          1016  
00000A72                          1017      ; Show KeyCode
00000A72  103C 000B               1018      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A76  323C 3001               1019      MOVE.W  #$3001,     D1          ; Col 30, Row 1
00000A7A  4E4F                    1020      TRAP    #15                     ; Trap (Perform action)    
00000A7C  2239 00001D7E           1021      MOVE.L  CURRENT_KEY,D1          ; Move Key Pressed to D1
00000A82  103C 0003               1022      MOVE.B  #03,        D0          ; Display the contents of D1
00000A86  4E4F                    1023      TRAP    #15                     ; Trap (Perform action)
00000A88                          1024  
00000A88                          1025      
00000A88                          1026      ; Show antHealth msg
00000A88  103C 000B               1027      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000A8C  323C 0202               1028      MOVE.W  #$0202,     D1          ; Col 02, Row 06
00000A90  4E4F                    1029      TRAP    #15                     ; Trap (Perform action)
00000A92  43F9 00001D36           1030      LEA     antHealth_MSG,   A1          ; Draw
00000A98  303C 000D               1031      MOVE    #13,        D0          ; No Line feed
00000A9C  4E4F                    1032      TRAP    #15                     ; Trap (Perform action)  
00000A9E                          1033      
00000A9E                          1034      ; Show antHealth msg
00000A9E  103C 000B               1035      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000AA2  323C 0A02               1036      MOVE.W  #$0A02,     D1          ; Col 30, Row 1
00000AA6  4E4F                    1037      TRAP    #15                     ; Trap (Perform action)   
00000AA8  B381                    1038      EOR.L   D1,D1                      ; Clear contents of D1 (XOR is faster)
00000AAA  1239 00001DC2           1039      MOVE.B  antHealth,      D1          ; Move Key Pressed to D1
00000AB0  103C 0003               1040      MOVE.B  #03,        D0          ; Display the contents of D1
00000AB4  4E4F                    1041      TRAP    #15                     ; Trap (Perform action)
00000AB6                          1042  
00000AB6  4E75                    1043      RTS
00000AB8                          1044  *-----------------------------------------------------------
00000AB8                          1045  * Subroutine    : Player is on Ground
00000AB8                          1046  * Description   : Check if the Player is on or off Ground
00000AB8                          1047  *-----------------------------------------------------------
00000AB8                          1048  IS_PLAYER_ON_GND:
00000AB8                          1049      ; Check if Player is on Ground
00000AB8  4281                    1050      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000ABA  4282                    1051      CLR.L   D2                      ; Clear contents of D2 (XOR is faster)
00000ABC  3239 00001D7C           1052      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1  
00000AC2  82FC 0002               1053      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000AC6  2439 00001D88           1054      MOVE.L  PLAYER_Y,   D2          ; Player Y Position
00000ACC  B441                    1055      CMP     D1,         D2          ; Compare middle of Screen with Players Y Position 
00000ACE  6C00 0008               1056      BGE     SET_ON_GROUND           ; The Player is on the Ground Plane
00000AD2  6D00 002C               1057      BLT     SET_OFF_GROUND          ; The Player is off the Ground
00000AD6  4E75                    1058      RTS                             ; Return to subroutine
00000AD8                          1059  
00000AD8                          1060  
00000AD8                          1061  *-----------------------------------------------------------
00000AD8                          1062  * Subroutine    : On Ground
00000AD8                          1063  * Description   : Set the Player On Ground
00000AD8                          1064  *-----------------------------------------------------------
00000AD8                          1065  SET_ON_GROUND:
00000AD8  4281                    1066      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000ADA  3239 00001D7C           1067      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000AE0  82FC 0002               1068      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000AE4  23C1 00001D88           1069      MOVE.L  D1,         PLAYER_Y    ; Reset the Player Y Position
00000AEA  4281                    1070      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000AEC  7200                    1071      MOVE.L  #00,        D1          ; Player Velocity
00000AEE  23C1 00001D90           1072      MOVE.L  D1,         PLYR_VELOCITY ; Set Player Velocity
00000AF4  23FC 00000001 00001D98  1073      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Player is on Ground
00000AFE  4E75                    1074      RTS
00000B00                          1075  
00000B00                          1076  *-----------------------------------------------------------
00000B00                          1077  * Subroutine    : Off Ground
00000B00                          1078  * Description   : Set the Player Off Ground
00000B00                          1079  *-----------------------------------------------------------
00000B00                          1080  SET_OFF_GROUND:
00000B00  23FC 00000000 00001D98  1081      MOVE.L  #GND_FALSE, PLYR_ON_GND ; Player if off Ground
00000B0A  4E75                    1082      RTS                             ; Return to subroutine
00000B0C                          1083  *-----------------------------------------------------------
00000B0C                          1084  * Subroutine    : Jump
00000B0C                          1085  * Description   : Perform a Jump
00000B0C                          1086  *-----------------------------------------------------------
00000B0C                          1087  JUMP:
Line 1088 ERROR: Undefined symbol
00000B0C  4A39 004DBD16           1088      TST.B  isPaused
00000B12                          1089      IF <NE> THEN
00000B16  4E75                    1090          RTS
00000B18                          1091      ENDI
00000B18  0CB9 00000001 00001D98  1092      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000B22  6700 0006               1093      BEQ     PERFORM_JUMP            ; Do Jump
00000B26  6000 0012               1094      BRA     JUMP_DONE               ;
00000B2A                          1095  PERFORM_JUMP:
00000B2A  6100 0066               1096      BSR     PLAY_JUMP               ; Play jump sound
00000B2E  23FC FFFFFFED 00001D90  1097      MOVE.L  #PLYR_JUMP_V,PLYR_VELOCITY ; Set the players velocity to true
00000B38  4E75                    1098      RTS                             ; Return to subroutine
00000B3A                          1099  JUMP_DONE:
00000B3A  4E75                    1100      RTS                             ; Return to subroutine
00000B3C                          1101  
00000B3C                          1102  *-----------------------------------------------------------
00000B3C                          1103  * Subroutine    : Throw
00000B3C                          1104  * Description   : Perform a Throw
00000B3C                          1105  *-----------------------------------------------------------
00000B3C                          1106  THROW_ARC:
00000B3C  0CB9 00000001 00001D98  1107      CMP.L   #GND_TRUE,PLYR_ON_GND   ; Player is on the Ground ?
00000B46  6700 0006               1108      BEQ     PERFORM_THROW_ARC    ; Do Jump
00000B4A  6000 000E               1109      BRA     ARC_DONE               ;
00000B4E                          1110  PERFORM_THROW_ARC:
00000B4E                          1111      ;BSR     PLAY_JUMP               ; Play jump sound
00000B4E  23FC FFFFFFF0 00001DE0  1112      MOVE.L  #THRW_JUMP_V,THROW_VELOCITY ; Set the players velocity to true
00000B58  4E75                    1113      RTS                             ; Return to subroutine
00000B5A                          1114  ARC_DONE:
00000B5A  4E75                    1115      RTS                             ; Return to subroutine
00000B5C                          1116  
00000B5C                          1117  *-----------------------------------------------------------
00000B5C                          1118  * Subroutine    : Idle
00000B5C                          1119  * Description   : Perform a Idle
00000B5C                          1120  *----------------------------------------------------------- 
00000B5C                          1121  IDLE:
00000B5C  4E75                    1122      RTS                             ; Return to subroutine
00000B5E                          1123  
00000B5E                          1124  *-----------------------------------------------------------
00000B5E                          1125  * Subroutines   : Sound Load and Play
00000B5E                          1126  * Description   : Initialise game sounds into memory 
00000B5E                          1127  * Current Sounds are RUN, JUMP and Opps for Collision
00000B5E                          1128  *-----------------------------------------------------------
00000B5E                          1129  GAMEOVER_LOAD:
00000B5E  43F9 00001E02           1130      LEA     GAMEOVER_WAV,    A1          ; Load Wav File into A1
00000B64  323C 0000               1131      MOVE    #GAMEOVER_INDEX, D1          ; Assign it INDEX
00000B68  303C 004A               1132      MOVE    #74,        D0          ; Load into memory
00000B6C  4E4F                    1133      TRAP    #15                     ; Trap (Perform action)
00000B6E  4E75                    1134      RTS                             ; Return to subroutine
00000B70                          1135  
00000B70                          1136  PLAY_GAMEOVER:
00000B70  6100 00E8               1137      bsr STOP_SONG
00000B74  323C 0000               1138      MOVE    #GAMEOVER_INDEX, D1          ; Load Sound INDEX
00000B78  303C 004B               1139      MOVE    #75,        D0          ; Play Sound
00000B7C  4E4F                    1140      TRAP    #15                     ; Trap (Perform action)
00000B7E  4E75                    1141      RTS                             ; Return to subroutine
00000B80                          1142  
00000B80                          1143  JUMP_LOAD:
00000B80  43F9 00001DF8           1144      LEA     JUMP_WAV,   A1          ; Load Wav File into A1
00000B86  323C 0001               1145      MOVE    #JMP_INDEX, D1          ; Assign it INDEX
00000B8A  303C 004A               1146      MOVE    #74,        D0          ; Load into memory
00000B8E  4E4F                    1147      TRAP    #15                     ; Trap (Perform action)
00000B90  4E75                    1148      RTS                             ; Return to subroutine
00000B92                          1149  
00000B92                          1150  PLAY_JUMP:
00000B92  323C 0001               1151      MOVE    #JMP_INDEX, D1          ; Load Sound INDEX
00000B96  303C 004B               1152      MOVE    #75,        D0          ; Play Sound
00000B9A  4E4F                    1153      TRAP    #15                     ; Trap (Perform action)
00000B9C  4E75                    1154      RTS                             ; Return to subroutine
00000B9E                          1155  
00000B9E                          1156  HITHURT_LOAD:
00000B9E  43F9 00001E10           1157      LEA     HITHURT_WAV,   A1          ; Load Wav File into A1
00000BA4  323C 0002               1158      MOVE    #HITHURT_INDEX,D1          ; Assign it INDEX
00000BA8  303C 004A               1159      MOVE    #74,        D0          ; Load into memory
00000BAC  4E4F                    1160      TRAP    #15                     ; Trap (Perform action)
00000BAE  4E75                    1161      RTS                             ; Return to subroutine
00000BB0                          1162  
00000BB0                          1163  PLAY_HITHURT:
00000BB0  323C 0002               1164      MOVE    #HITHURT_INDEX,D1          ; Load Sound INDEX
00000BB4  303C 004B               1165      MOVE    #75,        D0          ; Play Sound
00000BB8  4E4F                    1166      TRAP    #15                     ; Trap (Perform action)
00000BBA  4E75                    1167      RTS                             ; Return to subroutine
00000BBC                          1168  
00000BBC                          1169  POWERUP_LOAD:
00000BBC  43F9 00001E26           1170      LEA     POWERUP_WAV,   A1          ; Load Wav File into A1
00000BC2  323C 0003               1171      MOVE    #POWERUP_INDEX,D1          ; Assign it INDEX
00000BC6  303C 004A               1172      MOVE    #74,        D0          ; Load into memory
00000BCA  4E4F                    1173      TRAP    #15                     ; Trap (Perform action)
00000BCC  4E75                    1174      RTS                             ; Return to subroutine
00000BCE                          1175  
00000BCE                          1176  PLAY_POWERUP:
00000BCE  323C 0003               1177      MOVE    #POWERUP_INDEX,D1          ; Load Sound INDEX
00000BD2  303C 004B               1178      MOVE    #75,        D0          ; Play Sound
00000BD6  4E4F                    1179      TRAP    #15                     ; Trap (Perform action)
00000BD8  4E75                    1180      RTS                             ; Return to subroutine
00000BDA                          1181  
00000BDA                          1182  LVLCHANGE_LOAD:
00000BDA  43F9 00001E33           1183      LEA     LEVELCHANGE_WAV,   A1          ; Load Wav File into A1
00000BE0  323C 0004               1184      MOVE    #LEVELCHANGE_INDEX,D1          ; Assign it INDEX
00000BE4  303C 004A               1185      MOVE    #74,        D0          ; Load into memory
00000BE8  4E4F                    1186      TRAP    #15                     ; Trap (Perform action)
00000BEA  4E75                    1187      RTS                             ; Return to subroutine
00000BEC                          1188  
00000BEC                          1189  PLAY_LVLCHANGE:
00000BEC  323C 0004               1190      MOVE    #LEVELCHANGE_INDEX,D1          ; Load Sound INDEX
00000BF0  303C 004B               1191      MOVE    #75,        D0          ; Play Sound
00000BF4  4E4F                    1192      TRAP    #15                     ; Trap (Perform action)
00000BF6  4E75                    1193      RTS                             ; Return to subroutine
00000BF8                          1194  
00000BF8                          1195  HIT_LOAD:
00000BF8  43F9 00001E1D           1196      LEA     HIT_WAV,   A1          ; Load Wav File into A1
00000BFE  323C 0005               1197      MOVE    #HIT_INDEX,D1          ; Assign it INDEX
00000C02  303C 004A               1198      MOVE    #74,        D0          ; Load into memory
00000C06  4E4F                    1199      TRAP    #15                     ; Trap (Perform action)
00000C08  4E75                    1200      RTS                             ; Return to subroutine
00000C0A                          1201  
00000C0A                          1202  PLAY_HIT:
00000C0A  323C 0005               1203      MOVE    #HIT_INDEX,D1          ; Load Sound INDEX
00000C0E  303C 004B               1204      MOVE    #75,        D0          ; Play Sound
00000C12  4E4F                    1205      TRAP    #15                     ; Trap (Perform action)
00000C14  4E75                    1206      RTS                             ; Return to subroutine
00000C16                          1207  
00000C16                          1208  MAP_SONG_LOAD:
00000C16  43F9 00001E58           1209      LEA     MAP_SONG_WAV,   A1          ; Load Wav File into A1
00000C1C  323C 0006               1210      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C20  303C 004A               1211      MOVE    #74,        D0          ; Load into memory
00000C24  4E4F                    1212      TRAP    #15                     ; Trap (Perform action)
00000C26  4E75                    1213      RTS                             ; Return to subroutine
00000C28                          1214  
00000C28                          1215  BATTLE_SONG_LOAD:
00000C28  43F9 00001E44           1216      LEA     BATTLE_SONG_WAV,   A1          ; Load Wav File into A1
00000C2E  323C 0006               1217      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C32  303C 004A               1218      MOVE    #74,        D0          ; Load into memory
00000C36  4E4F                    1219      TRAP    #15                     ; Trap (Perform action)
00000C38  4E75                    1220      RTS                             ; Return to subroutine
00000C3A                          1221  
00000C3A                          1222  MENU_SONG_LOAD:
00000C3A  43F9 00001E69           1223      LEA     MENU_SONG_WAV,   A1          ; Load Wav File into A1
00000C40  323C 0006               1224      MOVE    #SONG_INDEX,D1          ; Assign it INDEX
00000C44  303C 004A               1225      MOVE    #74,        D0          ; Load into memory
00000C48  4E4F                    1226      TRAP    #15                     ; Trap (Perform action)
00000C4A  4E75                    1227      RTS                             ; Return to subroutine
00000C4C                          1228  
00000C4C                          1229  ; special function to play song in song index
00000C4C                          1230  PLAY_SONG:
00000C4C  323C 0006               1231      MOVE    #SONG_INDEX,D1          ; Load Sound INDEX
00000C50  7401                    1232      move.l #1, d2
00000C52  303C 004D               1233      MOVE    #77,        D0          ; Play Sound
00000C56  4E4F                    1234      TRAP    #15                     ; Trap (Perform action)
00000C58  4E75                    1235      RTS                             ; Return to subroutine
00000C5A                          1236  
00000C5A                          1237  ; stop song playing
00000C5A                          1238  STOP_SONG:
00000C5A  323C 0006               1239      move #SONG_INDEX,d1
00000C5E  7402                    1240      move.l #2, d2
00000C60  303C 004D               1241      move #77, d0
00000C64  4E4F                    1242      trap #15
00000C66  4E75                    1243      rts
00000C68                          1244  
00000C68                          1245  *-----------------------------------------------------------
00000C68                          1246  * Subroutine    : Draw Player
00000C68                          1247  * Description   : Draw Player Ant
00000C68                          1248  *-----------------------------------------------------------
00000C68                          1249      include "battle/playerAnt.X68"
00000C68                          1250  
00000C68  =0000001B               1251  PLYR_W_INIT EQU         27          ; Players initial Width
00000C68  =0000000D               1252  PLYR_H_INIT EQU         13          ; Players initial Height
00000C68                          1253  
00000C68  =00000000               1254  PLYR_DFLT_V EQU         00          ; Default Player Velocity
00000C68  =FFFFFFED               1255  PLYR_JUMP_V EQU         -19          ; Player Jump Velocity
00000C68  =00000001               1256  PLYR_DFLT_G EQU         01          ; Player Default Gravity
00000C68                          1257  
00000C68                          1258  INIT_PLAYER:
00000C68                          1259  
00000C68                          1260      ; Place the Player at the center of the screen
00000C68  B381                    1261      EOR.L    D1,D1                      ; Clear contents of D1 (XOR is faster)
00000C6A  3239 00001D7A           1262      MOVE.W  SCREEN_W,   D1          ; Place Screen width in D1
00000C70  82FC 0002               1263      DIVU    #02,        D1          ; divide by 2 for center on X Axis
00000C74  23C1 00001D84           1264      MOVE.L  D1,         PLAYER_X    ; Players X Position
00000C7A                          1265  
00000C7A  B381                    1266      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000C7C  3239 00001D7C           1267      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000C82  82FC 0002               1268      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000C86  23C1 00001D88           1269      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000C8C                          1270  
00000C8C                          1271          ; Set the player starting width and height
00000C8C  13FC 001B 00001DED      1272      MOVE.B  #PLYR_W_INIT,        PLAYER_WIDTH ; Players Width
00000C94  13FC 000D 00001DEE      1273      MOVE.B  #PLYR_H_INIT,        PLAYER_HEIGHT ; Players Width
00000C9C                          1274  
00000C9C  B381                    1275      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000C9E  3239 00001D7C           1276      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000CA4  82FC 0002               1277      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000CA8  23C1 00001D88           1278      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000CAE                          1279  
00000CAE                          1280      ; Initialise Player Velocity
00000CAE  B381                    1281      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CB0  123C 0000               1282      MOVE.B  #PLYR_DFLT_V,D1         ; Init Player Velocity
00000CB4  23C1 00001D90           1283      MOVE.L  D1,         PLYR_VELOCITY
00000CBA                          1284  
00000CBA                          1285      ; Initialise Player Gravity
00000CBA  B381                    1286      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000CBC  7201                    1287      MOVE.L  #PLYR_DFLT_G,D1         ; Init Player Gravity
00000CBE  23C1 00001D94           1288      MOVE.L  D1,         PLYR_GRAVITY
00000CC4                          1289  
00000CC4                          1290          ; Initialize Player on Ground
00000CC4  23FC 00000001 00001D98  1291      MOVE.L  #GND_TRUE,  PLYR_ON_GND ; Init Player on Ground
00000CCE                          1292      
00000CCE                          1293  
00000CCE                          1294  UPDATE_PLAYER:
00000CCE                          1295      ; Update the Players Positon based on Velocity and Gravity
00000CCE  4281                    1296      CLR.L   D1                      ; Clear contents of D1 (XOR is faster)
00000CD0  2239 00001D90           1297      MOVE.L  PLYR_VELOCITY, D1       ; Fetch Player Velocity
00000CD6  2439 00001D94           1298      MOVE.L  PLYR_GRAVITY, D2        ; Fetch Player Gravity
00000CDC  D282                    1299      ADD.L   D2,         D1          ; Add Gravity to Velocity
00000CDE  23C1 00001D90           1300      MOVE.L  D1,         PLYR_VELOCITY ; Update Player Velocity
00000CE4  D2B9 00001D88           1301      ADD.L   PLAYER_Y,   D1          ; Add Velocity to Player
00000CEA  23C1 00001D88           1302      MOVE.L  D1,         PLAYER_Y    ; Update Players Y Position
00000CF0  23C1 00001DCE           1303      MOVE.L  D1,         ATTACK_Y 
00000CF6                          1304  
00000CF6  4E75                    1305      RTS
00000CF8                          1306  
00000CF8                          1307  ; Move Player to the left
00000CF8                          1308  MOVE_PLAYER_LEFT:
Line 1309 ERROR: Undefined symbol
00000CF8  4A39 004DBD16           1309      TST.B  isPaused
00000CFE                          1310      IF <NE> THEN
00000D02  4E75                    1311          RTS
00000D04                          1312      ENDI
00000D04                          1313  
00000D04  13FC 0001 00001D9C      1314      MOVE.B  #LOOKLEFT,        PLAYER_DIR
00000D0C  2239 00001D84           1315      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000D12  5581                    1316      SUB.L   #02,        D1          ; Move Player Left
00000D14  23C1 00001D84           1317      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000D1A  55B9 00001DCA           1318      SUB.L   #02,        ATTACK_X
00000D20  4E75                    1319      RTS                             ; Return to subroutine    
00000D22                          1320  
00000D22                          1321  ; Move Player to the right
00000D22                          1322  MOVE_PLAYER_RIGHT:
Line 1323 ERROR: Undefined symbol
00000D22  4A39 004DBD16           1323      TST.B  isPaused
00000D28                          1324      IF <NE> THEN
00000D2C  4E75                    1325          RTS
00000D2E                          1326      ENDI
00000D2E  13FC 0002 00001D9C      1327      MOVE.B  #LOOKRIGHT,        PLAYER_DIR
00000D36  2239 00001D84           1328      MOVE.L  PLAYER_X,   D1          ; Fetch Player X Position
00000D3C  5481                    1329      ADD.L   #02,        D1          ; Move Player Right
00000D3E  23C1 00001D84           1330      MOVE.L  D1,         PLAYER_X    ; Update Players X Position
00000D44  54B9 00001DCA           1331      ADD.L   #02,        ATTACK_X
00000D4A  4E75                    1332      RTS                             ; Return to subroutine
00000D4C                          1333  
00000D4C                          1334  ; draw all player relevant data
00000D4C                          1335  DRAW_PLAYER:
00000D4C                          1336      ; Set Pixel Colors
Line 1337 ERROR: Undefined symbol
00000D4C  223C 004DBD16           1337      MOVE.L  #BLACK,     D1          ; Set Background color
00000D52  103C 0050               1338      MOVE.B  #80,        D0          ; Task for Background Color
00000D56  4E4F                    1339      TRAP    #15                     ; Trap (Perform action)
00000D58                          1340      ; Reset Pixel Colors
Line 1341 ERROR: Undefined symbol
00000D58  223C 004DBD16           1341      MOVE.L  #BLACK,     D1          ; Set Background color
00000D5E  103C 0051               1342      MOVE.B  #81,        D0          ; Task for Background Color
00000D62  4E4F                    1343      TRAP    #15                     ; Trap (Perform action)
00000D64                          1344  
00000D64  2239 00001D84           1345      MOVE.L  PLAYER_X,   D1          ; X
00000D6A  2439 00001D88           1346      MOVE.L  PLAYER_Y,   D2
00000D70  5982                    1347      SUBQ.L  #4,D2
00000D72                          1348  
00000D72  2639 00001D84           1349      MOVE.L  PLAYER_X,   D3
00000D78  B984                    1350      EOR.L   D4,D4
00000D7A  1839 00001DED           1351      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000D80  D684                    1352      ADD.L   D4,D3
00000D82  2839 00001D88           1353      MOVE.L  PLAYER_Y,   D4
00000D88  9839 00001DEE           1354      SUB.B   PLAYER_HEIGHT,   D4      ; Height          ; Y
00000D8E                          1355      
00000D8E                          1356       ; Draw Player
00000D8E  103C 0057               1357      MOVE.B  #87,        D0          ; Draw Player
00000D92  4E4F                    1358      TRAP    #15                     ; Trap (Perform action)
00000D94                          1359  
00000D94  2239 00001D84           1360      MOVE.L  PLAYER_X,   D1          ; X
00000D9A  2439 00001D88           1361      MOVE.L  PLAYER_Y,   D2
00000DA0  5982                    1362      SUBQ.L  #4,D2
00000DA2  2639 00001D84           1363      MOVE.L  PLAYER_X,   D3
00000DA8  B984                    1364      EOR.L   D4,D4
00000DAA  1839 00001DED           1365      MOVE.B   PLAYER_WIDTH,   D4      ; Width
00000DB0  0404 000C               1366      SUBI.B   #12,D4
00000DB4  D684                    1367      ADD.L   D4,D3
00000DB6  2839 00001D88           1368      MOVE.L  PLAYER_Y,   D4
00000DBC  9839 00001DEE           1369      SUB.B   PLAYER_HEIGHT,   D4      ; Height
00000DC2  5704                    1370      SUB.B   #3,D4
00000DC4                          1371      
00000DC4                          1372      ; Draw Player
00000DC4  103C 0057               1373      MOVE.B  #87,        D0          ; Draw Player
00000DC8  4E4F                    1374      TRAP    #15                     ; Trap (Perform action)
00000DCA                          1375  
00000DCA                          1376      ; change thickness
00000DCA  7203                    1377      MOVE.l  #3,D1
00000DCC  103C 005D               1378      MOVE.B  #93,D0
00000DD0  4E4F                    1379      TRAP    #15
00000DD2                          1380  
00000DD2  2239 00001D84           1381      MOVE.L  PLAYER_X,D1
00000DD8  0681 00000016           1382      ADD.L   #22,D1
00000DDE  2439 00001D88           1383      MOVE.L  PLAYER_Y,D2
00000DE4  0482 0000000D           1384      SUB.L   #PLYR_H_INIT,D2
00000DEA  2601                    1385      MOVE.L  D1,D3
00000DEC  0683 0000000A           1386      ADD.L   #10,D3
00000DF2  2802                    1387      MOVE.L  D2,D4
00000DF4  5F84                    1388      SUBI.L  #7,D4
00000DF6                          1389  
00000DF6  103C 0054               1390      MOVE.B  #84,D0
00000DFA  4E4F                    1391      TRAP    #15
00000DFC                          1392  
00000DFC  2239 00001D84           1393      MOVE.L  PLAYER_X,D1
00000E02  2439 00001D88           1394      MOVE.L  PLAYER_Y,D2
00000E08  2601                    1395      MOVE.L  D1,D3
00000E0A  5883                    1396      ADD.L   #4,D3
00000E0C  2802                    1397      MOVE.L  D2,D4
00000E0E  5984                    1398      SUBI.L  #4,D4
00000E10                          1399  
00000E10  103C 0054               1400      MOVE.B  #84,D0
00000E14  4E4F                    1401      TRAP    #15
00000E16                          1402  
00000E16  2239 00001D84           1403      MOVE.L  PLAYER_X,D1
00000E1C  0681 0000000D           1404      ADD.L   #13,D1
00000E22  2439 00001D88           1405      MOVE.L  PLAYER_Y,D2
00000E28  2601                    1406      MOVE.L  D1,D3
00000E2A  2802                    1407      MOVE.L  D2,D4
00000E2C  5984                    1408      SUBI.L  #4,D4
00000E2E                          1409  
00000E2E  103C 0054               1410      MOVE.B  #84,D0
00000E32  4E4F                    1411      TRAP    #15
00000E34                          1412  
00000E34  2239 00001D84           1413      MOVE.L  PLAYER_X,D1
00000E3A  0681 00000016           1414      ADD.L   #22,D1
00000E40  2839 00001D88           1415      MOVE.L  PLAYER_Y,D4
00000E46  2601                    1416      MOVE.L  D1,D3
00000E48  5683                    1417      ADD.L   #3,D3
00000E4A  2404                    1418      MOVE.L  D4,D2
00000E4C  5982                    1419      SUBI.L  #4,D2
00000E4E                          1420  
00000E4E  103C 0054               1421      MOVE.B  #84,D0
00000E52  4E4F                    1422      TRAP    #15
00000E54                          1423  
00000E54                          1424      ; Set Pixel Colors
Line 1425 ERROR: Undefined symbol
00000E54  223C 004DBD16           1425      MOVE.L  #WHITE,     D1          ; Set Background color
00000E5A  103C 0050               1426      MOVE.B  #80,        D0          ; Task for Background Color
00000E5E  4E4F                    1427      TRAP    #15                     ; Trap (Perform action)
00000E60                          1428  
00000E60  2239 00001D84           1429      MOVE.L  PLAYER_X,D1
00000E66  0681 00000016           1430      ADD.L   #22,D1
00000E6C  2439 00001D88           1431      MOVE.L  PLAYER_Y,D2
00000E72  0482 0000000A           1432      SUB.L   #10,D2
00000E78  2601                    1433      MOVE.L  D1,D3
00000E7A  2802                    1434      MOVE.L  D2,D4
00000E7C                          1435  
00000E7C  103C 0054               1436      MOVE.B  #84,D0
00000E80  4E4F                    1437      TRAP    #15
00000E82                          1438  
00000E82  7201                    1439      MOVE.l  #1,D1
00000E84  103C 005D               1440      MOVE.B  #93,D0
00000E88  4E4F                    1441      TRAP    #15
00000E8A                          1442      
00000E8A  6100 0008               1443      BSR     IS_ATTACKING
00000E8E  6100 0054               1444      BSR     IS_THROWING
00000E92                          1445  
00000E92  4E75                    1446      RTS                             ; Return to subroutine
00000E94                          1447  
00000E94                          1448  IS_ATTACKING:
00000E94  4A39 00001DC5           1449      TST.B   CURRENTLYATTACKING
00000E9A  6600 0004               1450      BNE     DRAW_ATTACK
00000E9E  4E75                    1451      RTS
00000EA0                          1452  DRAW_ATTACK:
00000EA0                          1453  
00000EA0                          1454      ; Set Pixel Colors
Line 1455 ERROR: Undefined symbol
00000EA0  223C 004DBD16           1455      MOVE.L  #WHITE,     D1          ; Set Background color
00000EA6  103C 0050               1456      MOVE.B  #80,        D0          ; Task for Background Color
00000EAA  4E4F                    1457      TRAP    #15                     ; Trap (Perform action)
00000EAC                          1458      ; Reset Pixel Colors
Line 1459 ERROR: Undefined symbol
00000EAC  223C 004DBD16           1459      MOVE.L  #WHITE,     D1          ; Set Background color
00000EB2  103C 0051               1460      MOVE.B  #81,        D0          ; Task for Background Color
00000EB6  4E4F                    1461      TRAP    #15                     ; Trap (Perform action)
00000EB8                          1462  
00000EB8  2239 00001DCA           1463      MOVE.L  ATTACK_X,   D1          ; X
00000EBE  2439 00001DCE           1464      MOVE.L  ATTACK_Y,   D2
00000EC4                          1465      
00000EC4  2639 00001DCA           1466      MOVE.L  ATTACK_X,   D3
00000ECA  0683 00000023           1467      ADD.L   #ATTACK_WIDTH,   D3      ; Width
00000ED0  2839 00001DCE           1468      MOVE.L  ATTACK_Y,   D4 
00000ED6  0484 00000014           1469      SUB.L   #ATTACK_HEIGHT,   D4      ; Height          ; Y
00000EDC                          1470      
00000EDC                          1471      ; Draw Player
00000EDC  103C 0057               1472      MOVE.B  #87,        D0          ; Draw Player
00000EE0  4E4F                    1473      TRAP    #15                     ; Trap (Perform action)
00000EE2  4E75                    1474      RTS                             ; Return to subroutine
00000EE4                          1475  
00000EE4                          1476  IS_THROWING:
00000EE4  4A39 00001DD2           1477      TST.B   CURRENTLYTHROWING
00000EEA  6600 0004               1478      BNE     DRAW_THROW
00000EEE  4E75                    1479      RTS
00000EF0                          1480  DRAW_THROW:
00000EF0                          1481  
00000EF0                          1482      ; Set Pixel Colors
Line 1483 ERROR: Undefined symbol
00000EF0  223C 004DBD16           1483      MOVE.L  #DIRT,     D1          ; Set Background color
00000EF6  103C 0050               1484      MOVE.B  #80,        D0          ; Task for Background Color
00000EFA  4E4F                    1485      TRAP    #15                     ; Trap (Perform action)
00000EFC                          1486      ; Reset Pixel Colors
Line 1487 ERROR: Undefined symbol
00000EFC  223C 004DBD16           1487      MOVE.L  #DIRT,     D1          ; Set Background color
00000F02  103C 0051               1488      MOVE.B  #81,        D0          ; Task for Background Color
00000F06  4E4F                    1489      TRAP    #15                     ; Trap (Perform action)
00000F08                          1490  
00000F08  2239 00001DD8           1491      MOVE.L  THROW_X,   D1          ; X
00000F0E  2439 00001DDC           1492      MOVE.L  THROW_Y,   D2
00000F14                          1493      
00000F14  2639 00001DD8           1494      MOVE.L  THROW_X,   D3
00000F1A  0683 0000000F           1495      ADD.L   #THRW_W_INIT,   D3      ; Width
00000F20  2839 00001DDC           1496      MOVE.L  THROW_Y,   D4 
00000F26  0484 0000000F           1497      SUB.L   #THRW_H_INIT,   D4      ; Height          ; Y
00000F2C                          1498      
00000F2C                          1499      ; Draw Acorn
00000F2C  103C 0057               1500      MOVE.B  #87,        D0          ; Draw Player
00000F30  4E4F                    1501      TRAP    #15                     ; Trap (Perform action)
00000F32  4E75                    1502      RTS                             ; Return to subroutine
00000F34                          1503  
00000F34                          1504  DRAW_RESPAWN:
00000F34  7A00                    1505      MOVEQ.L     #0,  D5
00000F36  3A39 00001E7C           1506      MOVE.W      respawnTime,D5
00000F3C                          1507  
00000F3C  B381                    1508      EOR.L     D1,D1                      ; Clear contents of D1 (XOR is faster)
00000F3E  3239 00001D7C           1509      MOVE.W  SCREEN_H,   D1          ; Place Screen width in D1
00000F44  82FC 0002               1510      DIVU    #02,        D1          ; divide by 2 for center on Y Axis
00000F48  23C1 00001D88           1511      MOVE.L  D1,         PLAYER_Y    ; Players Y Position
00000F4E                          1512  
00000F4E                          1513  MOVE_RESPAWNED:
00000F4E  23C5 00001D84           1514      MOVE.L  D5, PLAYER_X
00000F54                          1515  
00000F54                          1516      ; Enable back buffer
00000F54  103C 005E               1517      MOVE.B  #TC_REDRAW,        D0
00000F58  4E4F                    1518      TRAP    #15
00000F5A                          1519  
00000F5A                          1520      ; Clear the screen
00000F5A  103C 000B               1521      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00000F5E  323C FF00               1522      MOVE.W  #$FF00,     D1          ; Clear contents
00000F62  4E4F                    1523      TRAP    #15                     ; Trap (Perform action)
00000F64                          1524  
00000F64  123C 0001               1525      MOVE.B  #1,D1
00000F68  103C 005D               1526      MOVE.B  #93,D0
00000F6C  4E4F                    1527      TRAP    #15
00000F6E                          1528  
00000F6E  6100 F8D2               1529      BSR     DRAW_BACKGROUND        
00000F72  6100 F73E               1530      BSR     DRAW_HILL 
00000F76  6100 FA40               1531      BSR     DRAW_PLYR_DATA          ; Draw Draw Score, HUD, Player X and Y
00000F7A  6100 FDD0               1532      BSR     DRAW_PLAYER             ; Draw Player
00000F7E  6100 0032               1533      BSR     DRAW_ENEMY              ; Draw Enemy
00000F82  6100 016C               1534      BSR     DRAW_FLYENEMY
00000F86  6100 0314               1535      BSR     DRAW_HEALTHPACK
00000F8A  6100 0396               1536      BSR     DRAW_FLOOR              ; Draw Floor
Line 1537 ERROR: Undefined symbol
00000F8E  6100 AD86               1537      BSR     drawPause        
00000F92                          1538  
00000F92                          1539  
00000F92  5279 00001E7C           1540      ADDQ.W      #1,respawnTime
00000F98  3A39 00001E7C           1541      MOVE.W      respawnTime,D5
00000F9E  0C79 00C8 00001E7C      1542      CMP.W       #200,respawnTime
00000FA6  66A6                    1543      BNE         MOVE_RESPAWNED
00000FA8  33FC 0000 00001E7C      1544      MOVE.W     #0,respawnTime
00000FB0                          1545      ;else
00000FB0  4E75                    1546      RTS
00000FB0  4E75                    1547  -------------------- end include --------------------
00000FB2                          1548  *-----------------------------------------------------------
00000FB2                          1549  * Subroutine    : Draw Enemy
00000FB2                          1550  * Description   : Draw Enemy Ant
00000FB2                          1551  *-----------------------------------------------------------
00000FB2                          1552      include "battle/battleEnemy.X68"
00000FB2                          1553  DRAW_ENEMY:
00000FB2                          1554      ; Set Pixel Colors
00000FB2  2239 00001DB6           1555      MOVE.L  ENEMYCOLOR,       D1          ; Set pen color
00000FB8  103C 0050               1556      MOVE.B  #80,        D0          ; Task for pen Color
00000FBC  4E4F                    1557      TRAP    #15                     ; Trap (Perform action)
00000FBE                          1558  
00000FBE                          1559      ; Reset Pixel Colors
00000FBE  2239 00001DB6           1560      MOVE.L  ENEMYCOLOR,     D1          ; Set Background color
00000FC4  103C 0051               1561      MOVE.B  #81,        D0          ; Task for Background Color
00000FC8  4E4F                    1562      TRAP    #15                     ; Trap (Perform action)
00000FCA                          1563  
00000FCA                          1564      *-------------- draw ENEMY body -----------------*
00000FCA  2239 00001D9E           1565      MOVE.L  ENEMY_X,   D1          ; X
00000FD0  2439 00001DA2           1566      MOVE.L  ENEMY_Y,   D2
00000FD6  5982                    1567      SUBQ.L  #4,D2
00000FD8                          1568  
00000FD8  2639 00001D9E           1569      MOVE.L  ENEMY_X,   D3
00000FDE  0683 0000001B           1570      ADD.L   #ENMY_W_INIT, D3  
00000FE4  2839 00001DA2           1571      MOVE.L  ENEMY_Y,   D4
00000FEA  0484 0000000D           1572      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00000FF0                          1573      
00000FF0                          1574       ; Draw 
00000FF0  103C 0057               1575      MOVE.B  #87,        D0          ; Draw enemy
00000FF4  4E4F                    1576      TRAP    #15                     ; Trap (Perform action)
00000FF6                          1577  
00000FF6  2239 00001D9E           1578      MOVE.L  ENEMY_X,   D1          ; X
00000FFC  2601                    1579      MOVE.L  D1,   D3
00000FFE  0681 0000001B           1580      ADD.L   #ENMY_W_INIT,D1
00001004  2439 00001DA2           1581      MOVE.L  ENEMY_Y,   D2
0000100A  5982                    1582      SUBQ.L  #4,D2
0000100C  2639 00001D9E           1583      MOVE.L  ENEMY_X,   D3
00001012  0683 0000000C           1584      ADDI.L   #12,D3
00001018                          1585      
00001018  2839 00001DA2           1586      MOVE.L  ENEMY_Y,   D4
0000101E  0484 0000000D           1587      SUB.L   #ENMY_H_INIT,   D4      ; Height          ; Y
00001024  5704                    1588      SUB.B   #3,D4
00001026                          1589      
00001026                          1590      ; Draw 
00001026  103C 0057               1591      MOVE.B  #87,        D0          ; Draw enemy
0000102A  4E4F                    1592      TRAP    #15                     ; Trap (Perform action)
0000102C                          1593  
0000102C                          1594      ; change thickness
0000102C  7203                    1595      MOVE.l  #3,D1
0000102E  103C 005D               1596      MOVE.B  #93,D0
00001032  4E4F                    1597      TRAP    #15
00001034                          1598  
00001034  2239 00001D9E           1599      MOVE.L  ENEMY_X,D1
0000103A  5681                    1600      ADD.L   #3,D1
0000103C  2439 00001DA2           1601      MOVE.L  ENEMY_Y,D2
00001042  0482 0000000D           1602      SUB.L   #ENMY_H_INIT,D2
00001048  2601                    1603      MOVE.L  D1,D3
0000104A  0483 0000000A           1604      SUB.L   #10,D3
00001050  2802                    1605      MOVE.L  D2,D4
00001052  5F84                    1606      SUBI.L  #7,D4
00001054                          1607  
00001054  103C 0054               1608      MOVE.B  #84,D0
00001058  4E4F                    1609      TRAP    #15
0000105A                          1610  
0000105A  2239 00001D9E           1611      MOVE.L  ENEMY_X,D1
00001060  2439 00001DA2           1612      MOVE.L  ENEMY_Y,D2
00001066  2601                    1613      MOVE.L  D1,D3
00001068  5883                    1614      ADD.L   #4,D3
0000106A  2802                    1615      MOVE.L  D2,D4
0000106C  5984                    1616      SUBI.L  #4,D4
0000106E                          1617  
0000106E  103C 0054               1618      MOVE.B  #84,D0
00001072  4E4F                    1619      TRAP    #15
00001074                          1620  
00001074  2239 00001D9E           1621      MOVE.L  ENEMY_X,D1
0000107A  0681 0000000D           1622      ADD.L   #13,D1
00001080  2439 00001DA2           1623      MOVE.L  ENEMY_Y,D2
00001086  2601                    1624      MOVE.L  D1,D3
00001088  2802                    1625      MOVE.L  D2,D4
0000108A  5984                    1626      SUBI.L  #4,D4
0000108C                          1627  
0000108C  103C 0054               1628      MOVE.B  #84,D0
00001090  4E4F                    1629      TRAP    #15
00001092                          1630  
00001092  2239 00001D9E           1631      MOVE.L  ENEMY_X,D1
00001098  0681 00000016           1632      ADD.L   #22,D1
0000109E  2839 00001DA2           1633      MOVE.L  ENEMY_Y,D4
000010A4  2601                    1634      MOVE.L  D1,D3
000010A6  5683                    1635      ADD.L   #3,D3
000010A8  2404                    1636      MOVE.L  D4,D2
000010AA  5982                    1637      SUBI.L  #4,D2
000010AC                          1638  
000010AC  103C 0054               1639      MOVE.B  #84,D0
000010B0  4E4F                    1640      TRAP    #15
000010B2                          1641  
000010B2                          1642      ; Set Pixel Colors
Line 1643 ERROR: Undefined symbol
000010B2  223C 004DBD16           1643      MOVE.L  #BLACK,     D1          ; Set Pen color
000010B8  103C 0050               1644      MOVE.B  #80,        D0          ; Task for Pen Color
000010BC  4E4F                    1645      TRAP    #15                     ; Trap (Perform action)
000010BE                          1646  
000010BE                          1647      ; change thickness
000010BE  7203                    1648      MOVE.l  #3,D1
000010C0  103C 005D               1649      MOVE.B  #93,D0
000010C4  4E4F                    1650      TRAP    #15
000010C6                          1651  
000010C6  2239 00001D9E           1652      MOVE.L  ENEMY_X,D1
000010CC  5681                    1653      ADD.L   #3,D1
000010CE  2439 00001DA2           1654      MOVE.L  ENEMY_Y,D2
000010D4  0482 0000000A           1655      SUB.L   #10,D2
000010DA  2601                    1656      MOVE.L  D1,D3
000010DC  5283                    1657      ADDQ.L  #1,D3
000010DE  2802                    1658      MOVE.L  D2,D4
000010E0                          1659  
000010E0  103C 0054               1660      MOVE.B  #84,D0
000010E4  4E4F                    1661      TRAP    #15
000010E6                          1662  
000010E6                          1663      ; reset pen
000010E6  7201                    1664      MOVE.l  #1,D1
000010E8  103C 005D               1665      MOVE.B  #93,D0
000010EC  4E4F                    1666      TRAP    #15
000010EE                          1667  
000010EE  4E75                    1668      RTS                             ; Return to subroutine
000010EE  4E75                    1669  -------------------- end include --------------------
000010F0                          1670  
000010F0                          1671      
000010F0                          1672  DRAW_FLYENEMY:
000010F0                          1673      ; Set Pixel Colors
000010F0  2239 00001DBA           1674      MOVE.L  FLYENEMYCOLOR,       D1          ; Set Background color
000010F6  103C 0050               1675      MOVE.B  #80,        D0          ; Task for Background Color
000010FA  4E4F                    1676      TRAP    #15                     ; Trap (Perform action)
000010FC                          1677  
000010FC                          1678      ; Reset Pixel Colors
000010FC  2239 00001DBA           1679      MOVE.L  FLYENEMYCOLOR,     D1          ; Set Background color
00001102  103C 0051               1680      MOVE.B  #81,        D0          ; Task for Background Color
00001106  4E4F                    1681      TRAP    #15                     ; Trap (Perform action)
00001108                          1682  
00001108                          1683          *-------------- draw FLYINGENEMY body -----------------*
00001108  2239 00001DAE           1684      MOVE.L  FLYINGENEMY_X,   D1          ; X
0000110E  2439 00001DB2           1685      MOVE.L  FLYINGENEMY_Y,   D2
00001114  5982                    1686      SUBQ.L  #4,D2
00001116                          1687  
00001116  2639 00001DAE           1688      MOVE.L  FLYINGENEMY_X,   D3
0000111C  0683 0000001E           1689      ADD.L   #FLY_ENMY_W_INIT, D3  
00001122  2839 00001DB2           1690      MOVE.L  FLYINGENEMY_Y,   D4
00001128  0484 0000000D           1691      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
0000112E                          1692      
0000112E                          1693       ; Draw 
0000112E  103C 0057               1694      MOVE.B  #87,        D0          ; Draw enemy
00001132  4E4F                    1695      TRAP    #15                     ; Trap (Perform action)
00001134                          1696  
00001134                          1697  *-------------- draw FLYINGENEMY abdomen -----------------*
00001134  2239 00001DAE           1698      MOVE.L  FLYINGENEMY_X,   D1          ; X
0000113A  2601                    1699      MOVE.L  D1,   D3
0000113C  0681 0000001E           1700      ADD.L   #FLY_ENMY_W_INIT,D1
00001142  2439 00001DB2           1701      MOVE.L  FLYINGENEMY_Y,   D2
00001148  5982                    1702      SUBQ.L  #4,D2
0000114A  2639 00001DAE           1703      MOVE.L  FLYINGENEMY_X,   D3
00001150  0683 0000000C           1704      ADDI.L   #12,D3
00001156                          1705      
00001156  2839 00001DB2           1706      MOVE.L  FLYINGENEMY_Y,   D4
0000115C  0484 0000000D           1707      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00001162  5704                    1708      SUB.B   #3,D4
00001164                          1709      
00001164                          1710      ; Draw 
00001164  103C 0057               1711      MOVE.B  #87,        D0          ; Draw enemy
00001168  4E4F                    1712      TRAP    #15                     ; Trap (Perform action)
0000116A                          1713  
0000116A                          1714  *-------------- draw FLYINGENEMY antena -----------------*    
0000116A                          1715      ; change thickness
0000116A  7203                    1716      MOVE.l  #3,D1
0000116C  103C 005D               1717      MOVE.B  #93,D0
00001170  4E4F                    1718      TRAP    #15
00001172                          1719  
00001172  2239 00001DAE           1720      MOVE.L  FLYINGENEMY_X,D1
00001178  5681                    1721      ADD.L   #3,D1
0000117A  2439 00001DB2           1722      MOVE.L  FLYINGENEMY_Y,D2
00001180  0482 0000000D           1723      SUB.L   #FLY_ENMY_H_INIT,D2
00001186  2601                    1724      MOVE.L  D1,D3
00001188  0483 0000000A           1725      SUB.L   #10,D3
0000118E  2802                    1726      MOVE.L  D2,D4
00001190  5F84                    1727      SUBI.L  #7,D4
00001192                          1728  
00001192  103C 0054               1729      MOVE.B  #84,D0
00001196  4E4F                    1730      TRAP    #15
00001198                          1731  
00001198                          1732  *-------------- draw FLYINGENEMY leg 1 -----------------*
00001198  2239 00001DAE           1733      MOVE.L  FLYINGENEMY_X,D1
0000119E  2439 00001DB2           1734      MOVE.L  FLYINGENEMY_Y,D2
000011A4  2601                    1735      MOVE.L  D1,D3
000011A6  5883                    1736      ADD.L   #4,D3
000011A8  2802                    1737      MOVE.L  D2,D4
000011AA  5984                    1738      SUBI.L  #4,D4
000011AC                          1739  
000011AC  103C 0054               1740      MOVE.B  #84,D0
000011B0  4E4F                    1741      TRAP    #15
000011B2                          1742  
000011B2                          1743  *-------------- draw FLYINGENEMY leg 2 -----------------*
000011B2  2239 00001DAE           1744      MOVE.L  FLYINGENEMY_X,D1
000011B8  0681 0000000D           1745      ADD.L   #13,D1
000011BE  2439 00001DB2           1746      MOVE.L  FLYINGENEMY_Y,D2
000011C4  2601                    1747      MOVE.L  D1,D3
000011C6  2802                    1748      MOVE.L  D2,D4
000011C8  5984                    1749      SUBI.L  #4,D4
000011CA                          1750  
000011CA  103C 0054               1751      MOVE.B  #84,D0
000011CE  4E4F                    1752      TRAP    #15
000011D0                          1753  
000011D0                          1754  *-------------- draw FLYINGENEMY leg 3 -----------------*
000011D0  2239 00001DAE           1755      MOVE.L  FLYINGENEMY_X,D1
000011D6  0681 00000016           1756      ADD.L   #22,D1
000011DC  2839 00001DB2           1757      MOVE.L  FLYINGENEMY_Y,D4
000011E2  2601                    1758      MOVE.L  D1,D3
000011E4  5683                    1759      ADD.L   #3,D3
000011E6  2404                    1760      MOVE.L  D4,D2
000011E8  5982                    1761      SUBI.L  #4,D2
000011EA                          1762  
000011EA  103C 0054               1763      MOVE.B  #84,D0
000011EE  4E4F                    1764      TRAP    #15
000011F0                          1765  
000011F0                          1766  *-------------- draw FLYINGENEMY Wing 1 -----------------*
000011F0                          1767      ; Set Pixel Colors
Line 1768 ERROR: Undefined symbol
000011F0  223C 004DBD16           1768      MOVE.L  #WING,     D1          ; Set Pen color
000011F6  103C 0050               1769      MOVE.B  #80,        D0          ; Task for Pen Color
000011FA  4E4F                    1770      TRAP    #15                     ; Trap (Perform action)
000011FC                          1771      
000011FC                          1772      ; change thickness
000011FC  7205                    1773      MOVE.l  #5,D1
000011FE  103C 005D               1774      MOVE.B  #93,D0
00001202  4E4F                    1775      TRAP    #15
00001204                          1776  
00001204  2239 00001DAE           1777      MOVE.L  FLYINGENEMY_X,D1
0000120A  0681 0000000F           1778      ADD.L   #15,D1
00001210  2439 00001DB2           1779      MOVE.L  FLYINGENEMY_Y,d2
00001216  0482 0000000D           1780      SUB.L   #FLY_ENMY_H_INIT,D2
0000121C  2601                    1781      MOVE.L  D1,D3
0000121E  0483 00000009           1782      SUB.L   #9,D3
00001224  2802                    1783      MOVE.L  D2,D4
00001226  0484 0000000A           1784      SUB.L   #10,D4
0000122C                          1785  
0000122C  103C 0054               1786      MOVE.B  #84,D0
00001230  4E4F                    1787      TRAP    #15
00001232                          1788  
00001232                          1789  *-------------- draw FLYINGENEMY Wing 2 -----------------*
00001232  2239 00001DAE           1790      MOVE.L  FLYINGENEMY_X,D1
00001238  0681 0000000F           1791      ADD.L   #15,D1
0000123E  2439 00001DB2           1792      MOVE.L  FLYINGENEMY_Y,d2
00001244  0482 0000000D           1793      SUB.L   #FLY_ENMY_H_INIT,D2
0000124A  2601                    1794      MOVE.L  D1,D3
0000124C  0683 00000009           1795      ADD.L   #9,D3
00001252  2802                    1796      MOVE.L  D2,D4
00001254  0484 0000000A           1797      SUB.L   #10,D4
0000125A                          1798  
0000125A  103C 0054               1799      MOVE.B  #84,D0
0000125E  4E4F                    1800      TRAP    #15
00001260                          1801  
00001260                          1802  
00001260                          1803  *-------------- draw FLYINGENEMY eye -----------------*
00001260                          1804      ; Set Pixel Colors
Line 1805 ERROR: Undefined symbol
00001260  223C 004DBD16           1805      MOVE.L  #BLACK,     D1          ; Set Pen color
00001266  103C 0050               1806      MOVE.B  #80,        D0          ; Task for Pen Color
0000126A  4E4F                    1807      TRAP    #15                     ; Trap (Perform action)
0000126C                          1808      
0000126C                          1809      ; change thickness
0000126C  7203                    1810      MOVE.l  #3,D1
0000126E  103C 005D               1811      MOVE.B  #93,D0
00001272  4E4F                    1812      TRAP    #15
00001274                          1813  
00001274  2239 00001DAE           1814      MOVE.L  FLYINGENEMY_X,D1
0000127A  5681                    1815      ADD.L   #3,D1
0000127C  2839 00001DB2           1816      MOVE.L  FLYINGENEMY_Y,   D4
00001282  0484 0000000D           1817      SUB.L   #FLY_ENMY_H_INIT,   D4      ; Height          ; Y
00001288  2601                    1818      MOVE.L  D1,D3
0000128A  2802                    1819      MOVE.L  D2,D4
0000128C                          1820  
0000128C  103C 0054               1821      MOVE.B  #84,D0
00001290  4E4F                    1822      TRAP    #15
00001292                          1823  
00001292                          1824      ; reset pen
00001292  7201                    1825      MOVE.l  #1,D1
00001294  103C 005D               1826      MOVE.B  #93,D0
00001298  4E4F                    1827      TRAP    #15
0000129A                          1828  
0000129A  4E75                    1829      RTS  
0000129C                          1830  
0000129C                          1831  DRAW_HEALTHPACK:
0000129C                          1832  
0000129C  0C39 0000 00001D64      1833      CMP.B   #00,     SPAWN_HEALTHPACKS
000012A4  6700 0070               1834      BEQ     DRAW_HEALTHPACK_DONE
000012A8  0C39 0000 00001D63      1835      CMP.B   #00,     DRAW_HEALTHPACKS
000012B0  6700 0064               1836      BEQ     DRAW_HEALTHPACK_DONE
000012B4                          1837      
000012B4                          1838      ;BSR     RANDOM_NUMBER
000012B4                          1839      ;CMP.L   #$80,  D1
000012B4                          1840      ;BGT     DRAW_HEALTHPACK_DONE
000012B4                          1841  
000012B4  13FC 0001 00001D63      1842      MOVE.B  #01,        DRAW_HEALTHPACKS
000012BC  3239 00001D7C           1843      MOVE.W  SCREEN_H,     D1
000012C2  82FC 0002               1844      DIVU.W    #02,        D1
000012C6  C2BC 0000FFFF           1845      AND.L   #$0000FFFF,   D1
000012CC  23C1 00001DAA           1846      MOVE.L  D1,         HEALTH_Y
000012D2                          1847      ; Set Pixel Colors
Line 1848 ERROR: Undefined symbol
000012D2  223C 004DBD16           1848      MOVE.L  #BLACK,       D1          ; Set Background color
000012D8  103C 0050               1849      MOVE.B  #80,        D0          ; Task for Background Color
000012DC  4E4F                    1850      TRAP    #15                     ; Trap (Perform action)
000012DE                          1851  
000012DE                          1852      ; Reset Pixel Colors
Line 1853 ERROR: Undefined symbol
000012DE  223C 004DBD16           1853      MOVE.L  #LIFEGREEN,     D1          ; Set Background color
000012E4  103C 0051               1854      MOVE.B  #81,        D0          ; Task for Background Color
000012E8  4E4F                    1855      TRAP    #15                     ; Trap (Perform action)
000012EA                          1856  
000012EA                          1857      ; Set X, Y, Width and Height
000012EA  2239 00001DA6           1858      MOVE.L  HEALTH_X,    D1          ; X
000012F0  2439 00001DAA           1859      MOVE.L  HEALTH_Y,    D2          ; Y
000012F6  2639 00001DA6           1860      MOVE.L  HEALTH_X,    D3
000012FC  0683 0000000C           1861      ADD.L   #HEALTH_PACK_W,   D3      ; Width
00001302  2839 00001DAA           1862      MOVE.L  HEALTH_Y,    D4 
00001308  0484 0000000C           1863      SUB.L   #HEALTH_PACK_H,   D4      ; Height
0000130E                          1864      
0000130E                          1865      ; Draw Enemy    
0000130E  103C 0057               1866      MOVE.B  #87,        D0          ; Draw Enemy
00001312  4E4F                    1867      TRAP    #15                     ; Trap (Perform action)
00001314  4E75                    1868      RTS                             ; Return to subroutine
00001316                          1869  
00001316                          1870  DRAW_HEALTHPACK_DONE:
00001316  23FC FFFFFFFF 00001DAA  1871      MOVE.L  #-1, HEALTH_Y
00001320  4E75                    1872      RTS
00001322                          1873  
00001322                          1874  DRAW_FLOOR:
00001322                          1875      ; Set Pixel Colors
Line 1876 ERROR: Undefined symbol
00001322  223C 004DBD16           1876      MOVE.L  #GREEN,     D1          ; Set Background color
00001328  103C 0050               1877      MOVE.B  #80,        D0          ; Task for Background Color
0000132C  4E4F                    1878      TRAP    #15                     ; Trap (Perform action)
0000132E                          1879  
Line 1880 ERROR: Undefined symbol
0000132E  223C 004DBD16           1880      MOVE.L  #GREEN,     D1
00001334  103C 0051               1881      MOVE.B  #81,        D0
00001338  4E4F                    1882      TRAP    #15
0000133A                          1883  
0000133A                          1884      
0000133A                          1885      ; Set X, Y, X2, and Y2
0000133A  7200                    1886      MOVE.L  #0,   D1          ; X
0000133C  243C 000000F1           1887      MOVE.L  #241,  D2          ; Y
00001342  263C 00000280           1888      MOVE.L  #640,   D3           
00001348  283C 000001E0           1889      MOVE.L  #480,   D4 
0000134E                          1890      
0000134E                          1891      ; Draw grass
0000134E  103C 0057               1892      MOVE.B  #87,        D0          ; Draw Line
00001352  4E4F                    1893      TRAP    #15                     ; Trap (Perform action)
00001354                          1894  
00001354                          1895      ; Set Pixel Colors
Line 1896 ERROR: Undefined symbol
00001354  223C 004DBD16           1896      MOVE.L  #BROWN,     D1          ; Set Background color
0000135A  103C 0050               1897      MOVE.B  #80,        D0          ; Task for Background Color
0000135E  4E4F                    1898      TRAP    #15                     ; Trap (Perform action)
00001360                          1899  
Line 1900 ERROR: Undefined symbol
00001360  223C 004DBD16           1900      MOVE.L  #BROWN,     D1
00001366  103C 0051               1901      MOVE.B  #81,        D0
0000136A  4E4F                    1902      TRAP    #15
0000136C                          1903  
0000136C                          1904  * -----------------------------------------------------------
0000136C                          1905  * Find level and draw dirt
0000136C                          1906  * -----------------------------------------------------------
0000136C  45F9 00001D6A           1907      LEA     LEVELS,      A2
00001372  2A39 00001D8C           1908      MOVE.L  PLAYER_SCORE,   D5
00001378  6000 0002               1909      BRA     DRAWDIRT
0000137C                          1910      
0000137C                          1911  DRAWDIRT:
0000137C                          1912      ; Set X, Y, X2, and Y2
0000137C  7200                    1913      MOVE.L  #0,   D1          ; X
0000137E  263C 00000280           1914      MOVE.L  #640,   D3  
00001384  243C 00000115           1915      MOVE.L  #277,   D2         
0000138A  283C 000001E0           1916      MOVE.L  #480,   D4 
00001390                          1917      
00001390                          1918      ; Draw Dirt
00001390  103C 0057               1919      MOVE.B  #87,        D0          ; Draw Line
00001394  4E4F                    1920      TRAP    #15                     ; Trap (Perform action)
00001396                          1921  
00001396                          1922  
00001396                          1923      ; Reset Pixel Colors
00001396  7200                    1924      MOVE.L  #$00000000,     D1          ; Set Background color
00001398  103C 0050               1925      MOVE.B  #80,        D0          ; Task for Background Color
0000139C  4E4F                    1926      TRAP    #15                     ; Trap (Perform action)
0000139E                          1927  
0000139E                          1928      ; Reset Pixel Colors
0000139E  7200                    1929      MOVE.L  #$00000000,     D1          ; Set Background color
000013A0  103C 0051               1930      MOVE.B  #81,        D0          ; Task for Background Color
000013A4  4E4F                    1931      TRAP    #15                     ; Trap (Perform action)
000013A6                          1932  
000013A6  4E75                    1933      RTS                             ; Return to subroutine
000013A8                          1934      
000013A8                          1935  *-----------------------------------------------------------
000013A8                          1936  * Subroutine    : Collision Check
000013A8                          1937  * Description   : Axis-Aligned Bounding Box Collision Detection
000013A8                          1938  * Algorithm checks for overlap on the 4 sides of the Player and 
000013A8                          1939  * Enemy rectangles
000013A8                          1940  * PLAYER_X <= ENEMY_X + ENEMY_W &&
000013A8                          1941  * PLAYER_X + PLAYER_W >= ENEMY_X &&
000013A8                          1942  * PLAYER_Y <= ENEMY_Y + ENEMY_H &&
000013A8                          1943  * PLAYER_H + PLAYER_Y >= ENEMY_Y
000013A8                          1944  *-----------------------------------------------------------
000013A8                          1945  CHECK_COLLISIONS:
000013A8                          1946      include     "battle/battlecollisions.x68"     
000013A8  4281                    1947      CLR.L   D1                      ; Clear D1
000013AA  4282                    1948      CLR.L   D2                      ; Clear D2
000013AC                          1949  PLAYER_X_LTE_TO_ENEMY_X_PLUS_W:
000013AC  2239 00001D84           1950      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
000013B2  D239 00001DED           1951      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
000013B8  2439 00001D9E           1952      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
000013BE  B481                    1953      CMP.L   D1,         D2          ; Do the Overlap ?
000013C0  6F00 0006               1954      BLE     PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  ; Less than or Equal ?
000013C4  6000 0048               1955      BRA     CHECK_FLYENEMY_COLLISIONS
000013C8                          1956  
000013C8                          1957  PLAYER_X_PLUS_W_LTE_TO_ENEMY_X:     ; Check player is not  
000013C8  2239 00001D84           1958      MOVE.L  PLAYER_X,   D1          ; Move Player X to D1
000013CE  2439 00001D9E           1959      MOVE.L  ENEMY_X,    D2          ; Move Enemy X to D2
000013D4  D479 00001DF0           1960      ADD.W   ENEMY_WIDTH,D2          ; Set Enemy width X + Width
000013DA  B481                    1961      CMP.L   D1,         D2          ; Do they OverLap ?
000013DC  6C00 0006               1962      BGE     PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
000013E0  6000 002C               1963      BRA     CHECK_FLYENEMY_COLLISIONS  
000013E4                          1964  
000013E4                          1965  PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H:     
000013E4  2239 00001D88           1966      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
000013EA  2439 00001DA2           1967      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
000013F0                          1968      ;ADD.W   ENMY_H_INIT,D2          ; Set Enemy Height to D2
000013F0  B481                    1969      CMP.L   D1,         D2          ; Do they Overlap ?
000013F2  6F00 0006               1970      BLE     PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  ; Less than or Equal
000013F6  6000 0016               1971      BRA     CHECK_FLYENEMY_COLLISIONS
000013FA                          1972  
000013FA                          1973  PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y:     ; Less than or Equal ?
000013FA  D238 000D               1974      ADD.B   PLYR_H_INIT,D1          ; Add Player Height to D1
000013FE  2439 00001DA2           1975      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
00001404  B481                    1976      CMP.L   D1,         D2          ; Do they OverLap ?
00001406  6C00 0320               1977      BGE     ENEMYCOLLISION               ; Collision !
0000140A  6000 0002               1978      BRA     CHECK_FLYENEMY_COLLISIONS
0000140E                          1979  
0000140E                          1980  CHECK_FLYENEMY_COLLISIONS:
0000140E  4281                    1981      CLR.L   D1                      ; Clear D1
00001410  4282                    1982      CLR.L   D2                      ; Clear D2
00001412                          1983  PLX_LTE_TO_FLYENEMY_X_PLUS_W:
00001412  2239 00001D84           1984      MOVE.L  PLAYER_X,   D1
00001418  D239 00001DED           1985      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
0000141E  2439 00001DAE           1986      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
00001424  B481                    1987      CMP.L   D1,         D2                          ; Do the Overlap ?
00001426  6F00 0006               1988      BLE     PLX_PLUS_W_LTE_TO_FLYENEMY_X      ; Less than or Equal ?
0000142A  6000 0050               1989      BRA     CHECK_HEALTH_COLLISIONS
0000142E                          1990  
0000142E                          1991  PLX_PLUS_W_LTE_TO_FLYENEMY_X:           ; Check player is not  
0000142E  2239 00001D84           1992      MOVE.L  PLAYER_X,   D1
00001434  2439 00001DAE           1993      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
0000143A  D479 00001DF4           1994      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001440  B481                    1995      CMP.L   D1,         D2                  ; Do they OverLap ?
00001442  6C00 0006               1996      BGE     PLY_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001446  6000 0034               1997      BRA     CHECK_HEALTH_COLLISIONS
0000144A                          1998  
0000144A                          1999  PLY_LTE_TO_FLYENEMY_Y_PLUS_H:     
0000144A  2239 00001D88           2000      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
00001450  2439 00001DB2           2001      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
00001456  D479 00001DF6           2002      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
0000145C  B481                    2003      CMP.L   D1,         D2          ; Do they Overlap ?
0000145E  6C00 0006               2004      BGE     PLY_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001462  6000 0018               2005      BRA     CHECK_HEALTH_COLLISIONS
00001466                          2006  
00001466                          2007  PLY_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
00001466  D239 00001DEE           2008      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
0000146C  2439 00001DB2           2009      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001472  B481                    2010      CMP.L   D1,         D2          ; Do they OverLap ?
00001474  6F00 02B2               2011      BLE     ENEMYCOLLISION               ; Collision !
00001478  6000 0002               2012      BRA     CHECK_HEALTH_COLLISIONS
0000147C                          2013  
0000147C                          2014  CHECK_HEALTH_COLLISIONS:
0000147C  4281                    2015      CLR.L   D1                      ; Clear D1
0000147E  4282                    2016      CLR.L   D2                      ; Clear D2
00001480                          2017  PLX_LTE_TO_HEALTH_X_PLUS_W:
00001480  2239 00001D84           2018      MOVE.L  PLAYER_X,   D1
00001486  D239 00001DED           2019      ADD.B   PLAYER_WIDTH,D1          ; Move Player Width to D1
0000148C  2439 00001DA6           2020      MOVE.L  HEALTH_X,    D2                    ; Move Enemy X to D2
00001492  B481                    2021      CMP.L   D1,         D2                          ; Do the Overlap ?
00001494  6F00 0006               2022      BLE     PLX_PLUS_W_LTE_TO_HEALTH_X      ; Less than or Equal ?
00001498  6000 0050               2023      BRA     CHECK_ATTACK_COLLISIONS
0000149C                          2024  
0000149C                          2025  PLX_PLUS_W_LTE_TO_HEALTH_X:           ; Check player is not  
0000149C  2239 00001D84           2026      MOVE.L  PLAYER_X,   D1
000014A2  2439 00001DA6           2027      MOVE.L  HEALTH_X,    D2            ; Move Enemy X to D2
000014A8  0682 0000000C           2028      ADD.L   #HEALTH_PACK_W,  D2                    ; Set Enemy width X + Width
000014AE  B481                    2029      CMP.L   D1,         D2                  ; Do they OverLap ?
000014B0  6C00 0006               2030      BGE     PLY_LTE_TO_HEALTH_Y_PLUS_H  ; Less than or Equal
000014B4  6000 0034               2031      BRA     CHECK_ATTACK_COLLISIONS
000014B8                          2032  PLY_LTE_TO_HEALTH_Y_PLUS_H:     
000014B8  2239 00001D88           2033      MOVE.L  PLAYER_Y,   D1          ; Move Player Y to D1
000014BE  2439 00001DAA           2034      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Y to D2
000014C4  0682 0000000C           2035      ADD.L   #HEALTH_PACK_H,D2          ; Set Enemy Height to D2
000014CA  B481                    2036      CMP.L   D1,         D2          ; Do they Overlap ?
000014CC  6C00 0006               2037      BGE     PLY_PLUS_H_LTE_TO_HEALTH_Y  ; Less than or Equal
000014D0  6000 0018               2038      BRA     CHECK_ATTACK_COLLISIONS
000014D4                          2039  
000014D4                          2040  PLY_PLUS_H_LTE_TO_HEALTH_Y:     ; Less than or Equal ?
000014D4  D239 00001DEE           2041      ADD.B   PLAYER_HEIGHT,D1          ; Add Player Height to D1
000014DA  2439 00001DAA           2042      MOVE.L  HEALTH_Y,    D2          ; Move Enemy Height to D2  
000014E0  B481                    2043      CMP.L   D1,         D2          ; Do they OverLap ?
000014E2  6F00 02AC               2044      BLE     HEALTH_COLLISION               ; Collision !
000014E6  6000 0002               2045      BRA     CHECK_ATTACK_COLLISIONS
000014EA                          2046  
000014EA                          2047  CHECK_ATTACK_COLLISIONS:
000014EA  4281                    2048      CLR.L   D1                      ; Clear D1
000014EC  4282                    2049      CLR.L   D2                      ; Clear D2
000014EE                          2050  ATTACK_X_LTE_TO_ENEMY_X_PLUS_W:
000014EE  2239 00001DCA           2051      MOVE.L  ATTACK_X,   D1
000014F4  0681 00000023           2052      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
000014FA  2439 00001D9E           2053      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
00001500  B481                    2054      CMP.L   D1,         D2                          ; Do the Overlap ?
00001502  6F00 0006               2055      BLE     ATTACK_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
00001506  6000 0050               2056      BRA     CHECK_ATTACK_FLY_COLLISIONS
0000150A                          2057  
0000150A                          2058  ATTACK_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
0000150A  2239 00001DCA           2059      MOVE.L  ATTACK_X,   D1
00001510  2439 00001D9E           2060      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
00001516  D479 00001DF0           2061      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
0000151C  B481                    2062      CMP.L   D1,         D2                  ; Do they OverLap ?
0000151E  6C00 0006               2063      BGE     ATK_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
00001522  6000 0034               2064      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001526                          2065  
00001526                          2066  ATK_LTE_TO_ENEMY_Y_PLUS_H:     
00001526  2239 00001DCE           2067      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
0000152C  2439 00001DA2           2068      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
00001532  D479 00001DF2           2069      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001538  B481                    2070      CMP.L   D1,         D2          ; Do they Overlap ?
0000153A  6C00 0006               2071      BGE     ATK_PLUS_H_LTE_TO_ATTACK_Y  ; Less than or Equal
0000153E  6000 0018               2072      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001542                          2073  
00001542                          2074  ATK_PLUS_H_LTE_TO_ATTACK_Y:     ; Less than or Equal ?
00001542  0681 00000014           2075      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
00001548  2439 00001DA2           2076      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
0000154E  B481                    2077      CMP.L   D1,         D2          ; Do they OverLap ?
00001550  6F00 0150               2078      BLE     ATTACK_COLLISION               ; Collision !
00001554  6000 0002               2079      BRA     CHECK_ATTACK_FLY_COLLISIONS
00001558                          2080  
00001558                          2081  CHECK_ATTACK_FLY_COLLISIONS:
00001558  4281                    2082      CLR.L   D1                      ; Clear D1
0000155A  4282                    2083      CLR.L   D2                      ; Clear D2
0000155C                          2084  ATK_X_LTE_TO_FLYENEMY_X_PLUS_W:
0000155C  2239 00001DCA           2085      MOVE.L  ATTACK_X,   D1
00001562  0681 00000023           2086      ADD.L   #ATTACK_WIDTH,D1          ; Move Player Width to D1
00001568  2439 00001DAE           2087      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
0000156E  B481                    2088      CMP.L   D1,         D2                          ; Do the Overlap ?
00001570  6F00 0006               2089      BLE     ATTACK_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001574  6000 0050               2090      BRA     CHECK_THROW_COLLISION
00001578                          2091  
00001578                          2092  ATTACK_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001578  2239 00001DCA           2093      MOVE.L  ATTACK_X,   D1
0000157E  2439 00001DAE           2094      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001584  D479 00001DF4           2095      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
0000158A  B481                    2096      CMP.L   D1,         D2                  ; Do they OverLap ?
0000158C  6C00 0006               2097      BGE     ATK_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
00001590  6000 0034               2098      BRA     CHECK_THROW_COLLISION
00001594                          2099  
00001594                          2100  ATK_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001594  2239 00001DCE           2101      MOVE.L  ATTACK_Y,   D1          ; Move Player Y to D1
0000159A  2439 00001DB2           2102      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
000015A0  D479 00001DF6           2103      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
000015A6  B481                    2104      CMP.L   D1,         D2          ; Do they Overlap ?
000015A8  6C00 0006               2105      BGE     ATK_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
000015AC  6000 0018               2106      BRA     CHECK_THROW_COLLISION
000015B0                          2107  
000015B0                          2108  ATK_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
000015B0  0681 00000014           2109      ADD.L   #ATTACK_HEIGHT,D1          ; Add Player Height to D1
000015B6  2439 00001DB2           2110      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
000015BC  B481                    2111      CMP.L   D1,         D2          ; Do they OverLap ?
000015BE  6F00 0108               2112      BLE     ATTACK_FLY_COLLISION               ; Collision !
000015C2  6000 0002               2113      BRA     CHECK_THROW_COLLISION
000015C6                          2114  
000015C6                          2115  CHECK_THROW_COLLISION:
000015C6  4281                    2116      CLR.L   D1                      ; Clear D1
000015C8  4282                    2117      CLR.L   D2                      ; Clear D2
000015CA                          2118  THROW_X_LTE_TO_ENEMY_X_PLUS_W:
000015CA  2239 00001DD8           2119      MOVE.L  THROW_X,   D1
000015D0  0681 00000023           2120      ADD.L   #THROW_WIDTH,D1          ; Move Player Width to D1
000015D6  2439 00001D9E           2121      MOVE.L  ENEMY_X,    D2                    ; Move Enemy X to D2
000015DC  B481                    2122      CMP.L   D1,         D2                          ; Do the Overlap ?
000015DE  6F00 0006               2123      BLE     THROW_PLUS_W_LTE_TO_ENMY_X      ; Less than or Equal ?
000015E2  6000 0050               2124      BRA     CHECK_THROW_FLY_COLLISIONS
000015E6                          2125  
000015E6                          2126  THROW_PLUS_W_LTE_TO_ENMY_X:           ; Check player is not  
000015E6  2239 00001DD8           2127      MOVE.L  THROW_X,   D1
000015EC  2439 00001D9E           2128      MOVE.L  ENEMY_X,    D2            ; Move Enemy X to D2
000015F2  D479 00001DF0           2129      ADD.W   ENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
000015F8  B481                    2130      CMP.L   D1,         D2                  ; Do they OverLap ?
000015FA  6C00 0006               2131      BGE     TRW_LTE_TO_ENEMY_Y_PLUS_H  ; Less than or Equal
000015FE  6000 0034               2132      BRA     CHECK_THROW_FLY_COLLISIONS
00001602                          2133  
00001602                          2134  TRW_LTE_TO_ENEMY_Y_PLUS_H:     
00001602  2239 00001DDC           2135      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001608  2439 00001DA2           2136      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Y to D2
0000160E  D479 00001DF2           2137      ADD.W   ENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001614  B481                    2138      CMP.L   D1,         D2          ; Do they Overlap ?
00001616  6C00 0006               2139      BGE     TRW_PLUS_H_LTE_TO_THROW_Y  ; Less than or Equal
0000161A  6000 0018               2140      BRA     CHECK_THROW_FLY_COLLISIONS
0000161E                          2141  
0000161E                          2142  TRW_PLUS_H_LTE_TO_THROW_Y:     ; Less than or Equal ?
0000161E  0681 0000000F           2143      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
00001624  2439 00001DA2           2144      MOVE.L  ENEMY_Y,    D2          ; Move Enemy Height to D2  
0000162A  B481                    2145      CMP.L   D1,         D2          ; Do they OverLap ?
0000162C  6F00 0074               2146      BLE     ATTACK_COLLISION               ; Collision !
00001630  6000 0002               2147      BRA     CHECK_THROW_FLY_COLLISIONS
00001634                          2148  
00001634                          2149  CHECK_THROW_FLY_COLLISIONS:
00001634  4281                    2150      CLR.L   D1                      ; Clear D1
00001636  4282                    2151      CLR.L   D2                      ; Clear D2
00001638                          2152  THROW_X_LTE_TO_FLYENEMY_X_PLUS_W:
00001638  2239 00001DD8           2153      MOVE.L  THROW_X,   D1
0000163E  0681 0000000F           2154      ADD.L   #THRW_W_INIT,D1          ; Move Player Width to D1
00001644  2439 00001DAE           2155      MOVE.L  FLYINGENEMY_X,    D2                    ; Move Enemy X to D2
0000164A  B481                    2156      CMP.L   D1,         D2                          ; Do the Overlap ?
0000164C  6F00 0006               2157      BLE     THROW_PLUS_W_LTE_TO_FLYENMY_X     ; Less than or Equal ?
00001650  6000 00B4               2158      BRA     COLLISION_CHECK_DONE
00001654                          2159  
00001654                          2160  THROW_PLUS_W_LTE_TO_FLYENMY_X:           ; Check player is not  
00001654  2239 00001DD8           2161      MOVE.L  THROW_X,   D1
0000165A  2439 00001DAE           2162      MOVE.L  FLYINGENEMY_X,    D2            ; Move Enemy X to D2
00001660  D479 00001DF4           2163      ADD.W   FLYENEMY_WIDTH,  D2                    ; Set Enemy width X + Width
00001666  B481                    2164      CMP.L   D1,         D2                  ; Do they OverLap ?
00001668  6C00 0006               2165      BGE     TRW_LTE_TO_FLYENEMY_Y_PLUS_H  ; Less than or Equal
0000166C  6000 0098               2166      BRA     COLLISION_CHECK_DONE
00001670                          2167  
00001670                          2168  TRW_LTE_TO_FLYENEMY_Y_PLUS_H:     
00001670  2239 00001DDC           2169      MOVE.L  THROW_Y,   D1          ; Move Player Y to D1
00001676  2439 00001DB2           2170      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Y to D2
0000167C  D479 00001DF6           2171      ADD.W   FLYENEMY_HEIGHT,D2          ; Set Enemy Height to D2
00001682  B481                    2172      CMP.L   D1,         D2          ; Do they Overlap ?
00001684  6C00 0006               2173      BGE     TRW_PLUS_H_LTE_TO_FLYENEMY_Y  ; Less than or Equal
00001688  6000 007C               2174      BRA     COLLISION_CHECK_DONE
0000168C                          2175  
0000168C                          2176  TRW_PLUS_H_LTE_TO_FLYENEMY_Y:     ; Less than or Equal ?
0000168C  0681 0000000F           2177      ADD.L   #THRW_H_INIT,D1          ; Add Player Height to D1
00001692  2439 00001DB2           2178      MOVE.L  FLYINGENEMY_Y,    D2          ; Move Enemy Height to D2  
00001698  B481                    2179      CMP.L   D1,         D2          ; Do they OverLap ?
0000169A  6F00 002C               2180      BLE     ATTACK_FLY_COLLISION               ; Collision !
0000169E  6000 0066               2181      BRA     COLLISION_CHECK_DONE
000016A2                          2182  
000016A2                          2183  
000016A2                          2184  
000016A2                          2185  ATTACK_COLLISION:
000016A2  4A39 00001DEB           2186      TST.B   ENEMY_HIT
000016A8  6600 0124               2187      BNE     STILL_COLLIDED
000016AC  6100 F55C               2188      BSR     PLAY_HIT
000016B0  23FC 00000190 00001DA2  2189      MOVE.L  #400, ENEMY_Y
000016BA  13FC 0001 00001DEB      2190      MOVE.B  #01,  ENEMY_HIT
000016C2  6100 002A               2191      BSR     CHECK_ENEMIES_CLEARED
000016C6  4E75                    2192      RTS
000016C8                          2193  
000016C8                          2194  ATTACK_FLY_COLLISION:
000016C8  4A39 00001DEC           2195      TST.B   FLYENEMY_HIT
000016CE  6600 00FE               2196      BNE     STILL_COLLIDED
000016D2  6100 F536               2197      BSR     PLAY_HIT
000016D6  23FC 00000190 00001DB2  2198      MOVE.L  #400, FLYINGENEMY_Y
000016E0  13FC 0001 00001DEC      2199      MOVE.B  #01,  FLYENEMY_HIT
000016E8  6100 0004               2200      BSR     CHECK_ENEMIES_CLEARED
000016EC  4E75                    2201      RTS
000016EE                          2202  
000016EE                          2203  CHECK_ENEMIES_CLEARED:
000016EE  5239 00001DE8           2204      ADDI.B  #1,         ENEMIES_DEFEATED
000016F4  1239 00001DE8           2205      MOVE.B  ENEMIES_DEFEATED,D1
000016FA  B239 00001DEA           2206      CMP.B   enemiesToDefeat,D1
00001700  6700 02E4               2207      BEQ     WAVE_DEFEATED
00001704  4E75                    2208      RTS
00001706                          2209  
00001706                          2210  COLLISION_CHECK_DONE:               ; No Collision Update points
00001706  4239 00001D61           2211      CLR.B   IN_ENEMY
0000170C  4239 00001D62           2212      CLR.B   IN_HPACK
00001712  4281                    2213      CLR.L   D1
00001714  1239 00001DC4           2214      MOVE.B  POINTS,    D1          ; Move points upgrade to D1
0000171A  D2B9 00001D8C           2215      ADD.L   PLAYER_SCORE,D1         ; Add to current player score
00001720  23C1 00001D8C           2216      MOVE.L  D1, PLAYER_SCORE        ; Update player score in memory
00001726  4E75                    2217      RTS                             ; Return to subroutine
00001728                          2218  
00001728                          2219  
00001728                          2220  ENEMYCOLLISION:
00001728  0C39 0001 00001D61      2221      CMP.B     #$01, IN_ENEMY
00001730  6700 009C               2222      BEQ     STILL_COLLIDED
00001734  0C39 0001 00001D63      2223      CMP.B   #01, DRAW_HEALTHPACKS
0000173C  6600 EE02               2224      BNE     RESET_HEALTH_POSITION
00001740  13FC 0001 00001D63      2225      MOVE.B  #01, DRAW_HEALTHPACKS 
00001748  13FC 0001 00001D64      2226      MOVE.B  #01, SPAWN_HEALTHPACKS 
00001750  5339 00001DC2           2227      SUB.B   #1, antHealth
00001756  13FC 0001 00001D61      2228      MOVE.B  #$01, IN_ENEMY
0000175E  4A39 00001DC2           2229      TST.B   antHealth
00001764  6700 0008               2230      BEQ     antKilled
00001768  6100 F446               2231      BSR     PLAY_HITHURT               ; Play Opps Wav
0000176C  4E75                    2232      RTS                             ; Return to subroutine
0000176E                          2233  
0000176E                          2234  antKilled:
0000176E  13FC 0003 00001DC2      2235      MOVE.B    #3, antHealth
00001776  5339 00001DC3           2236      SUBQ.b    #1, antsRemaining
0000177C  4A39 00001DC3           2237      TST.b     antsRemaining
00001782  6700 0174               2238      BEQ       GAME_OVER
00001786  6100 F428               2239      BSR     PLAY_HITHURT               ; Play Opps Wav
0000178A  6100 F7A8               2240      BSR     DRAW_RESPAWN
0000178E  4E75                    2241      RTS
00001790                          2242  
00001790                          2243  HEALTH_COLLISION:
00001790  0C39 0001 00001D62      2244      CMP.B     #$01, IN_HPACK
00001798  6700 0034               2245      BEQ     STILL_COLLIDED
0000179C  13FC 0000 00001D63      2246      MOVE.B  #00, DRAW_HEALTHPACKS
000017A4  6100 F428               2247      BSR     PLAY_POWERUP               ; Play Opps Wav
000017A8  5239 00001DC2           2248      ADD.B   #1, antHealth
000017AE  0C39 0003 00001DC2      2249      CMP.B   #03, antHealth
000017B6  6C00 000C               2250      BGE     STOP_HPACK_SPAWN
000017BA  13FC 0001 00001D62      2251      MOVE.B  #$01, IN_HPACK
000017C2  4E75                    2252      RTS
000017C2  4E75                    2253  -------------------- end include --------------------
000017C4                          2254  
000017C4                          2255  STOP_HPACK_SPAWN:
000017C4  13FC 0000 00001D64      2256      MOVE.B  #00, SPAWN_HEALTHPACKS
000017CC  4E75                    2257      RTS
000017CE                          2258  
000017CE                          2259  STILL_COLLIDED:
000017CE  4E75                    2260      RTS
000017D0                          2261  *-----------------------------------------------------------
000017D0                          2262  * Subroutine    : EXIT
000017D0                          2263  * Description   : Exit message and End Game
000017D0                          2264  *-----------------------------------------------------------
000017D0                          2265  
000017D0                          2266  HILL_LOST:
000017D0                          2267  
Line 2268 ERROR: Undefined symbol
000017D0  0C79 0003 005455B8      2268      CMP.W   #3,lvlIndex
000017D8  6700 032E               2269      BEQ     WIN_SCREEN
000017DC                          2270  
000017DC  103C 000B               2271      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000017E0  323C FF00               2272      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000017E4  4E4F                    2273      TRAP    #15                     ; Trap (Perform action)
000017E6  6100 F388               2274      BSR     PLAY_GAMEOVER
000017EA                          2275  
000017EA                          2276  *------------Set Colours--------------*
Line 2277 ERROR: Undefined symbol
000017EA  223C 004DBD16           2277      MOVE.L  #color5,     D1
000017F0  103C 0015               2278      MOVE.B  #21,        D0          ; Set Text Color
000017F4  243C 01130005           2279      MOVE.L  #$01130005, D2
000017FA  4E4F                    2280      TRAP    #15                     ; Trap (Perform action)
000017FC                          2281  
Line 2282 ERROR: Undefined symbol
000017FC  223C 004DBD16           2282      MOVE.L  #color1,     D1
00001802  103C 0051               2283      MOVE.B  #81,        D0          ; Set Text Color
00001806  4E4F                    2284      TRAP    #15                     ; Trap (Perform action)
00001808                          2285  
00001808                          2286  *------------ fill background --------------*
00001808  323C 0000               2287      MOVE.W      #0,D1
0000180C  343C 0000               2288      MOVE.W      #0,d2
00001810  103C 0059               2289      MOVE.B      #89,D0
00001814  4E4F                    2290      TRAP        #15
00001816                          2291  
00001816                          2292  *------------ Print hill lost message--------------*
00001816                          2293  
00001816  103C 000B               2294      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000181A  323C 0803               2295      MOVE.W  #$0803,     D1          ; Col 10, Row 03
0000181E  4E4F                    2296      TRAP    #15                     ; Trap (Perform action)
00001820  43F9 00001C7C           2297      LEA     HILLLOST_MSG,A1        ; Game Over Message
Line 2298 ERROR: Undefined symbol
00001826  6100 A4EE               2298      BSR     print
0000182A                          2299  
0000182A                          2300  *------------print amount of enemies defeated--------------*
0000182A                          2301  
0000182A  103C 000B               2302      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000182E  323C 0606               2303      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001832  4E4F                    2304      TRAP    #15                     ; Trap (Perform action)
00001834  43F9 00001C4C           2305      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2306 ERROR: Undefined symbol
0000183A  6100 A4DA               2306      BSR     print
0000183E                          2307  
0000183E  103C 000B               2308      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001842  323C 1B06               2309      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001846  4E4F                    2310      TRAP    #15                     ; Trap (Perform action)
00001848  103C 0003               2311      MOVE.B  #03,        D0          ; Display number at D1.L
0000184C  7200                    2312      MOVEQ.L #0,D1
0000184E  1239 00001DE8           2313      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001854  4E4F                    2314      TRAP    #15                     ; Trap (Perform action)
00001856                          2315      
00001856                          2316  *------------print hill health --------------*
00001856                          2317  
00001856  103C 000B               2318      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000185A  323C 0607               2319      MOVE.W  #$0607,     D1          ; Col 02, Row 01
0000185E  4E4F                    2320      TRAP    #15                     ; Trap (Perform action)
00001860  43F9 00001D52           2321      LEA     hillHP_MSG,  A1          ; Score Message
Line 2322 ERROR: Undefined symbol
00001866  6100 A4AE               2322      BSR     print
0000186A                          2323  
0000186A  103C 000B               2324      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000186E  323C 1B07               2325      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001872  4E4F                    2326      TRAP    #15                     ; Trap (Perform action)
00001874  7200                    2327      MOVEQ.L #0,D1
00001876  1239 00001D60           2328      MOVE.B  hillHP,D1         ; Move Score to D1.L
0000187C  103C 0003               2329      MOVE.B  #03,        D0          ; Display number at D1.L
00001880  4E4F                    2330      TRAP    #15                     ; Trap (Perform action)
00001882                          2331      
00001882                          2332  *------------ print back to map--------------*
00001882                          2333  
Line 2334 ERROR: Undefined symbol
00001882  223C 004DBD16           2334      MOVE.L  #color5,     D1
00001888  103C 0015               2335      MOVE.B  #21,        D0          ; Set Text Color
0000188C  243C 03140000           2336      MOVE.L  #$03140000, D2
00001892  4E4F                    2337      TRAP    #15                     ; Trap (Perform action)
00001894                          2338  
00001894                          2339      ; Restart
00001894  103C 000B               2340      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001898  323C 070C               2341      MOVE.W  #$070C,     D1          ; Col 09, Row 01
0000189C  4E4F                    2342      TRAP    #15                     ; Trap (Perform action)
0000189E  43F9 00001CEA           2343      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
000018A4  303C 000D               2344      MOVE    #13,        D0          ; No Line feedF=
000018A8  4E4F                    2345      TRAP    #15                     ; Trap (Perform action)
000018AA                          2346  
000018AA  103C 000B               2347      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018AE  323C 1F0C               2348      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
000018B2  4E4F                    2349      TRAP    #15                     ; Trap (Perform action)
000018B4  7200                    2350      MOVEQ.L #0,D1
000018B6  1239 00001E7E           2351      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
000018BC  103C 0003               2352      MOVE.B  #03,        D0          ; Display number at D1.L
000018C0  4E4F                    2353      TRAP    #15                     ; Trap (Perform action)
000018C2                          2354  
000018C2                          2355      
000018C2  103C 005E               2356      MOVE.B  #TC_REDRAW,        D0
000018C6  4E4F                    2357      TRAP    #15
000018C8                          2358     
000018C8                          2359      ; delay by 1sec
000018C8  103C 0017               2360      MOVE.b  #23,D0
000018CC  7264                    2361      MOVE.L  #100,D1
000018CE  4E4F                    2362      TRAP    #15
000018D0                          2363  
000018D0  5339 00001E7E           2364      SUB.B   #01,backToMapCount
000018D6  4A39 00001E7E           2365      TST.B   backToMapCount
Line 2366 ERROR: Undefined symbol
000018DC  6700 A438               2366      BEQ     mapNotFirstInit
000018E0                          2367  
Line 2368 ERROR: Undefined symbol
000018E0  23FC 000000C8 005455B8  2368      MOVE.l  #200,currentHealth
Line 2369 ERROR: Undefined symbol
000018EA  6100 A42A               2369      bsr     initDraw
000018EE                          2370      ; back to top
000018EE  6000 FEE0               2371      BRA     HILL_LOST
000018F2                          2372  
000018F2                          2373  INPUTLOOP:
000018F2  6100 E8EE               2374      BSR     BATTLEINPUT
000018F6  60FA                    2375      BRA     INPUTLOOP
000018F8                          2376  
000018F8                          2377  GAME_OVER:
000018F8                          2378      
000018F8  103C 000B               2379      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000018FC  323C FF00               2380      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001900  4E4F                    2381      TRAP    #15                     ; Trap (Perform action)
00001902  6100 F26C               2382      BSR     PLAY_GAMEOVER
00001906                          2383  
00001906                          2384  *------------Set Colours--------------*
Line 2385 ERROR: Undefined symbol
00001906  223C 004DBD16           2385      MOVE.L  #color5,     D1
0000190C  103C 0015               2386      MOVE.B  #21,        D0          ; Set Text Color
00001910  243C 01130005           2387      MOVE.L  #$01130005, D2
00001916  4E4F                    2388      TRAP    #15                     ; Trap (Perform action)
00001918                          2389  
Line 2390 ERROR: Undefined symbol
00001918  223C 004DBD16           2390      MOVE.L  #color1,     D1
0000191E  103C 0051               2391      MOVE.B  #81,        D0          ; Set Text Color
00001922  4E4F                    2392      TRAP    #15                     ; Trap (Perform action)
00001924                          2393  
00001924                          2394  *------------ fill background --------------*
00001924  323C 0000               2395      MOVE.W      #0,D1
00001928  343C 0000               2396      MOVE.W      #0,d2
0000192C  103C 0059               2397      MOVE.B      #89,D0
00001930  4E4F                    2398      TRAP        #15
00001932                          2399  
00001932                          2400  *------------ Print gameover message--------------*
00001932  103C 000B               2401      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001936  323C 1001               2402      MOVE.W  #$1001,     D1          ; Col 10, Row 03
0000193A  4E4F                    2403      TRAP    #15                     ; Trap (Perform action)
0000193C  43F9 00001CE0           2404      LEA     GAMEOVER_MSG,A1        ; Game Over Message
Line 2405 ERROR: Undefined symbol
00001942  6100 A3D2               2405      BSR     print
00001946                          2406  
00001946  103C 000B               2407      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000194A  323C 0703               2408      MOVE.W  #$0703,     D1          ; Col 10, Row 03
0000194E  4E4F                    2409      TRAP    #15                     ; Trap (Perform action)
00001950  43F9 00001CC4           2410      LEA     FALLENKINGDOM_MSG,A1        ; Game Over Message
Line 2411 ERROR: Undefined symbol
00001956  6100 A3BE               2411      BSR     print
0000195A                          2412  
0000195A                          2413  
0000195A                          2414  *------------ Print hills defended message--------------*
0000195A                          2415      ; TODO TODO hills defended msg
0000195A  103C 000B               2416      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000195E  323C 0606               2417      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001962  4E4F                    2418      TRAP    #15                     ; Trap (Perform action)
00001964  43F9 00001C4C           2419      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2420 ERROR: Undefined symbol
0000196A  6100 A3AA               2420      BSR     print
0000196E                          2421  
0000196E  103C 000B               2422      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001972  323C 1B06               2423      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001976  4E4F                    2424      TRAP    #15                     ; Trap (Perform action)
00001978  103C 0003               2425      MOVE.B  #03,        D0          ; Display number at D1.L
0000197C  7200                    2426      MOVEQ.L #0,D1
0000197E  1239 00001DE8           2427      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001984  4E4F                    2428      TRAP    #15                     ; Trap (Perform action)
00001986                          2429      
00001986                          2430  *------------ Print ants remaining message--------------*
00001986  103C 000B               2431      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000198A  323C 0607               2432      MOVE.W  #$0607,     D1          ; Col 02, Row 01
0000198E  4E4F                    2433      TRAP    #15                     ; Trap (Perform action)
00001990  43F9 00001D40           2434      LEA     antsRem_MSG,  A1          ; Score Message
Line 2435 ERROR: Undefined symbol
00001996  6100 A37E               2435      BSR     print
0000199A                          2436  
0000199A  103C 000B               2437      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
0000199E  323C 1B07               2438      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
000019A2  4E4F                    2439      TRAP    #15                     ; Trap (Perform action)
000019A4  7200                    2440      MOVEQ.L #0,D1
000019A6  1239 00001DC3           2441      MOVE.B  antsRemaining,D1         ; Move Score to D1.L
000019AC  103C 0003               2442      MOVE.B  #03,        D0          ; Display number at D1.L
000019B0  4E4F                    2443      TRAP    #15                     ; Trap (Perform action)
000019B2                          2444      
000019B2                          2445  *------------ change fonts --------------*
Line 2446 ERROR: Undefined symbol
000019B2  223C 004DBD16           2446      MOVE.L  #color5,     D1
000019B8  103C 0015               2447      MOVE.B  #21,        D0          ; Set Text Color
000019BC  243C 03140000           2448      MOVE.L  #$03140000, D2
000019C2  4E4F                    2449      TRAP    #15                     ; Trap (Perform action)
000019C4                          2450  
000019C4                          2451  *------------ Print restart message--------------*
000019C4  103C 000B               2452      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019C8  323C 0B09               2453      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
000019CC  4E4F                    2454      TRAP    #15                     ; Trap (Perform action)
000019CE  43F9 00001D02           2455      LEA     RESTART_MSG,  A1          ; Score Message
000019D4  303C 000D               2456      MOVE    #13,        D0          ; No Line feedF=
000019D8  4E4F                    2457      TRAP    #15                     ; Trap (Perform action)
000019DA                          2458  
000019DA                          2459      
000019DA  103C 005E               2460      MOVE.B  #TC_REDRAW,        D0
000019DE  4E4F                    2461      TRAP    #15
000019E0                          2462  
000019E0                          2463  LOSSINPUTLOOP:
000019E0  6100 E800               2464      BSR     BATTLEINPUT
000019E4  60FA                    2465      BRA     LOSSINPUTLOOP
000019E6                          2466  
000019E6                          2467  WAVE_DEFEATED:
000019E6                          2468  
Line 2469 ERROR: Undefined symbol
000019E6  0C79 0003 005455B8      2469      CMP.W   #3,lvlIndex
000019EE  6700 0118               2470      BEQ     WIN_SCREEN
000019F2                          2471      
000019F2  103C 000B               2472      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
000019F6  323C FF00               2473      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
000019FA  4E4F                    2474      TRAP    #15                     ; Trap (Perform action)
000019FC  6100 F172               2475      BSR     PLAY_GAMEOVER
00001A00                          2476  
00001A00                          2477  *------------Set Colours--------------*
Line 2478 ERROR: Undefined symbol
00001A00  223C 004DBD16           2478      MOVE.L  #color5,     D1
00001A06  103C 0015               2479      MOVE.B  #21,        D0          ; Set Text Color
00001A0A  243C 01130005           2480      MOVE.L  #$01130005, D2
00001A10  4E4F                    2481      TRAP    #15                     ; Trap (Perform action)
00001A12                          2482  
Line 2483 ERROR: Undefined symbol
00001A12  223C 004DBD16           2483      MOVE.L  #color1,     D1
00001A18  103C 0051               2484      MOVE.B  #81,        D0          ; Set Text Color
00001A1C  4E4F                    2485      TRAP    #15                     ; Trap (Perform action)
00001A1E                          2486  
00001A1E                          2487  *------------ fill background --------------*
00001A1E  323C 0000               2488      MOVE.W      #0,D1
00001A22  343C 0000               2489      MOVE.W      #0,d2
00001A26  103C 0059               2490      MOVE.B      #89,D0
00001A2A  4E4F                    2491      TRAP        #15
00001A2C                          2492  
00001A2C                          2493  *------------ Print wave defeated message--------------*
00001A2C                          2494  
00001A2C  103C 000B               2495      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A30  323C 0E03               2496      MOVE.W  #$0E03,     D1          ; Col 10, Row 03
00001A34  4E4F                    2497      TRAP    #15                     ; Trap (Perform action)
00001A36  43F9 00001CB5           2498      LEA     HILLDEFENDED_MSG,A1        ; Game Over Message
Line 2499 ERROR: Undefined symbol
00001A3C  6100 A2D8               2499      BSR     print
00001A40                          2500  
00001A40                          2501  *------------print amount of enemies defeated--------------*
00001A40                          2502  
00001A40  103C 000B               2503      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A44  323C 0606               2504      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001A48  4E4F                    2505      TRAP    #15                     ; Trap (Perform action)
00001A4A  43F9 00001C4C           2506      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2507 ERROR: Undefined symbol
00001A50  6100 A2C4               2507      BSR     print
00001A54                          2508  
00001A54  103C 000B               2509      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A58  323C 1B06               2510      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001A5C  4E4F                    2511      TRAP    #15                     ; Trap (Perform action)
00001A5E  103C 0003               2512      MOVE.B  #03,        D0          ; Display number at D1.L
00001A62  7200                    2513      MOVEQ.L #0,D1
00001A64  1239 00001DE8           2514      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001A6A  4E4F                    2515      TRAP    #15                     ; Trap (Perform action)
00001A6C                          2516      
00001A6C                          2517  *------------print hill health --------------*
00001A6C                          2518  
00001A6C  103C 000B               2519      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A70  323C 0607               2520      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001A74  4E4F                    2521      TRAP    #15                     ; Trap (Perform action)
00001A76  43F9 00001D52           2522      LEA     hillHP_MSG,  A1          ; Score Message
Line 2523 ERROR: Undefined symbol
00001A7C  6100 A298               2523      BSR     print
00001A80                          2524  
00001A80  103C 000B               2525      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001A84  323C 1B07               2526      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001A88  4E4F                    2527      TRAP    #15                     ; Trap (Perform action)
00001A8A  7200                    2528      MOVEQ.L #0,D1
00001A8C  1239 00001D60           2529      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001A92  103C 0003               2530      MOVE.B  #03,        D0          ; Display number at D1.L
00001A96  4E4F                    2531      TRAP    #15                     ; Trap (Perform action)
00001A98                          2532      
00001A98                          2533  *------------ print back to map--------------*
Line 2534 ERROR: Undefined symbol
00001A98  223C 004DBD16           2534      MOVE.L  #color5,     D1
00001A9E  103C 0015               2535      MOVE.B  #21,        D0          ; Set Text Color
00001AA2  243C 03140000           2536      MOVE.L  #$03140000, D2
00001AA8  4E4F                    2537      TRAP    #15                     ; Trap (Perform action)
00001AAA                          2538  
00001AAA                          2539  
00001AAA                          2540      ; Restart
00001AAA  103C 000B               2541      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AAE  323C 070C               2542      MOVE.W  #$070C,     D1          ; Col 09, Row 01
00001AB2  4E4F                    2543      TRAP    #15                     ; Trap (Perform action)
00001AB4  43F9 00001CEA           2544      LEA     BACK_TO_MAP_MSG,  A1          ; Score Message
00001ABA  303C 000D               2545      MOVE    #13,        D0          ; No Line feedF=
00001ABE  4E4F                    2546      TRAP    #15                     ; Trap (Perform action)
00001AC0                          2547  
00001AC0  103C 000B               2548      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001AC4  323C 1F0C               2549      MOVE.W  #$1F0C,     D1          ; Col 09, Row 01
00001AC8  4E4F                    2550      TRAP    #15                     ; Trap (Perform action)
00001ACA  7200                    2551      MOVEQ.L #0,D1
00001ACC  1239 00001E7E           2552      MOVE.B  backToMapCount,D1         ; Move Score to D1.L
00001AD2  103C 0003               2553      MOVE.B  #03,        D0          ; Display number at D1.L
00001AD6  4E4F                    2554      TRAP    #15                     ; Trap (Perform action)
00001AD8                          2555  
00001AD8                          2556  
00001AD8                          2557      
00001AD8  103C 005E               2558      MOVE.B  #TC_REDRAW,        D0
00001ADC  4E4F                    2559      TRAP    #15
00001ADE                          2560     
00001ADE                          2561      ; delay by 1sec
00001ADE  103C 0017               2562      MOVE.b  #23,D0
00001AE2  7264                    2563      MOVE.L  #100,D1
00001AE4  4E4F                    2564      TRAP    #15
00001AE6                          2565  
00001AE6  5339 00001E7E           2566      SUB.B   #01,backToMapCount
00001AEC  4A39 00001E7E           2567      TST.B   backToMapCount
Line 2568 ERROR: Undefined symbol
00001AF2  6700 A222               2568      BEQ     mapNotFirstInit
00001AF6                          2569  
Line 2570 ERROR: Undefined symbol
00001AF6  6100 A21E               2570      bsr     initDraw
Line 2571 ERROR: Undefined symbol
00001AFA  23FC 000000C8 005455B8  2571      MOVE.l  #200,currentHealth
00001B04                          2572      ; back to top
00001B04  6000 FEE0               2573      BRA     WAVE_DEFEATED
00001B08                          2574  
00001B08                          2575  
00001B08                          2576  WIN_SCREEN:
Line 2577 ERROR: Undefined symbol
00001B08  13FC 0001 005455B8      2577      move.b #1, isWin
00001B10  103C 000B               2578      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B14  323C FF00               2579      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001B18  4E4F                    2580      TRAP    #15                     ; Trap (Perform action)
00001B1A  6100 F054               2581      BSR     PLAY_GAMEOVER
00001B1E                          2582  
00001B1E                          2583  *------------Set Colours--------------*
Line 2584 ERROR: Undefined symbol
00001B1E  223C 004DBD16           2584      MOVE.L  #color5,     D1
00001B24  103C 0015               2585      MOVE.B  #21,        D0          ; Set Text Color
00001B28  243C 01130005           2586      MOVE.L  #$01130005, D2
00001B2E  4E4F                    2587      TRAP    #15                     ; Trap (Perform action)
00001B30                          2588  
Line 2589 ERROR: Undefined symbol
00001B30  223C 004DBD16           2589      MOVE.L  #color1,     D1
00001B36  103C 0051               2590      MOVE.B  #81,        D0          ; Set Text Color
00001B3A  4E4F                    2591      TRAP    #15                     ; Trap (Perform action)
00001B3C                          2592  
00001B3C                          2593  *------------ fill background --------------*
00001B3C  323C 0000               2594      MOVE.W      #0,D1
00001B40  343C 0000               2595      MOVE.W      #0,d2
00001B44  103C 0059               2596      MOVE.B      #89,D0
00001B48  4E4F                    2597      TRAP        #15
00001B4A                          2598  
00001B4A                          2599  *------------ Print wave defeated message--------------*
00001B4A                          2600  
00001B4A  103C 000B               2601      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B4E  323C 0703               2602      MOVE.W  #$0703,     D1          ; Col 10, Row 03
00001B52  4E4F                    2603      TRAP    #15                     ; Trap (Perform action)
00001B54  43F9 00001C97           2604      LEA     WIN_MSG,A1        ; Game Over Message
Line 2605 ERROR: Undefined symbol
00001B5A  6100 A1BA               2605      BSR     print
00001B5E                          2606  
00001B5E                          2607  *------------print amount of enemies defeated--------------*
00001B5E                          2608  
00001B5E  103C 000B               2609      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B62  323C 0606               2610      MOVE.W  #$0606,     D1          ; Col 02, Row 01
00001B66  4E4F                    2611      TRAP    #15                     ; Trap (Perform action)
00001B68  43F9 00001C4C           2612      LEA     ENEMIESDEAD_MSG,  A1          ; Score Message
Line 2613 ERROR: Undefined symbol
00001B6E  6100 A1A6               2613      BSR     print
00001B72                          2614  
00001B72  103C 000B               2615      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B76  323C 1B06               2616      MOVE.W  #$1B06,     D1          ; Col 09, Row 01
00001B7A  4E4F                    2617      TRAP    #15                     ; Trap (Perform action)
00001B7C  103C 0003               2618      MOVE.B  #03,        D0          ; Display number at D1.L
00001B80  7200                    2619      MOVEQ.L #0,D1
00001B82  1239 00001DE8           2620      MOVE.B  ENEMIES_DEFEATED,D1         ; Move Score to D1.L
00001B88  4E4F                    2621      TRAP    #15                     ; Trap (Perform action)
00001B8A                          2622      
00001B8A                          2623  *------------print hill health --------------*
00001B8A                          2624  
00001B8A  103C 000B               2625      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001B8E  323C 0607               2626      MOVE.W  #$0607,     D1          ; Col 02, Row 01
00001B92  4E4F                    2627      TRAP    #15                     ; Trap (Perform action)
00001B94  43F9 00001D52           2628      LEA     hillHP_MSG,  A1          ; Score Message
Line 2629 ERROR: Undefined symbol
00001B9A  6100 A17A               2629      BSR     print
00001B9E                          2630  
00001B9E  103C 000B               2631      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BA2  323C 1B07               2632      MOVE.W  #$1B07,     D1          ; Col 09, Row 01
00001BA6  4E4F                    2633      TRAP    #15                     ; Trap (Perform action)
00001BA8  7200                    2634      MOVEQ.L #0,D1
00001BAA  1239 00001D60           2635      MOVE.B  hillHP,D1         ; Move Score to D1.L
00001BB0  103C 0003               2636      MOVE.B  #03,        D0          ; Display number at D1.L
00001BB4  4E4F                    2637      TRAP    #15                     ; Trap (Perform action)
00001BB6                          2638      
00001BB6                          2639  *------------ print restart --------------*
Line 2640 ERROR: Undefined symbol
00001BB6  223C 004DBD16           2640      MOVE.L  #color5,     D1
00001BBC  103C 0015               2641      MOVE.B  #21,        D0          ; Set Text Color
00001BC0  243C 03140000           2642      MOVE.L  #$03140000, D2
00001BC6  4E4F                    2643      TRAP    #15                     ; Trap (Perform action)
00001BC8                          2644  
00001BC8                          2645  
00001BC8                          2646      ; Restart
00001BC8  103C 000B               2647      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BCC  323C 0B09               2648      MOVE.W  #$0B09,     D1          ; Col 09, Row 01
00001BD0  4E4F                    2649      TRAP    #15                     ; Trap (Perform action)
00001BD2  43F9 00001D02           2650      LEA     RESTART_MSG,  A1          ; Score Message
00001BD8  303C 000D               2651      MOVE    #13,        D0          ; No Line feedF=
00001BDC  4E4F                    2652      TRAP    #15                     ; Trap (Perform action)
00001BDE                          2653  
00001BDE                          2654      
00001BDE  103C 005E               2655      MOVE.B  #TC_REDRAW,        D0
00001BE2  4E4F                    2656      TRAP    #15
00001BE4                          2657  
00001BE4                          2658  WININPUTLOOP:
00001BE4  6100 E5FC               2659      BSR     BATTLEINPUT
00001BE8  60FA                    2660      BRA     WININPUTLOOP
00001BEA                          2661  
00001BEA                          2662  
00001BEA                          2663  EXIT:
00001BEA                          2664      
00001BEA  103C 000B               2665      MOVE.B  #TC_CURSR_P,D0          ; Set Cursor Position
00001BEE  323C FF00               2666      MOVE.W  #$FF00,     D1          ; Fill Screen Clear
00001BF2  4E4F                    2667      TRAP    #15                     ; Trap (Perform action)
00001BF4                          2668  
00001BF4  103C 005E               2669      MOVE.B  #TC_REDRAW,        D0
00001BF8  4E4F                    2670      TRAP    #15
00001BFA                          2671  
00001BFA  103C 0009               2672      MOVE.B  #TC_EXIT,   D0          ; Exit Code
00001BFE  4E4F                    2673      TRAP    #15                     ; Trap (Perform action)
00001C00  FFFF FFFF               2674      SIMHALT
00001C04                          2675  
00001C04                          2676  *-----------------------------------------------------------
00001C04                          2677  * Section       : Messages
00001C04                          2678  * Description   : Messages to Print on Console, names should be
00001C04                          2679  * self documenting
00001C04                          2680  *-----------------------------------------------------------
00001C04= 53 63 6F 72 65 20 ...   2681  SCORE_MSG       DC.B    'Score : ', 0       ; Score Message
00001C0D= 4B 65 79 43 6F 64 ...   2682  KEYCODE_MSG     DC.B    'KeyCode : ', 0     ; Keycode Message
00001C18= 4A 75 6D 70 2E 2E ...   2683  JUMP_MSG        DC.B    'Jump....', 0       ; Jump Message
00001C21                          2684  
00001C21= 49 64 6C 65 2E 2E ...   2685  IDLE_MSG        DC.B    'Idle....', 0       ; Idle Message
00001C2A= 55 70 64 61 74 65 ...   2686  UPDATE_MSG      DC.B    'Update....', 0     ; Update Message
00001C35= 44 72 61 77 2E 2E ...   2687  DRAW_MSG        DC.B    'Draw....', 0       ; Draw Message
00001C3E                          2688  
00001C3E= 58 3A 00                2689  X_MSG           DC.B    'X:', 0             ; X Position Message
00001C41= 59 3A 00                2690  Y_MSG           DC.B    'Y:', 0             ; Y Position Message
00001C44= 56 3A 00                2691  V_MSG           DC.B    'V:', 0             ; Velocity Position Message
00001C47= 44 52 41 57 00          2692  VARMSG           DC.B    'DRAW', 0             ; Gravity Position Message
00001C4C= 45 6E 65 6D 69 65 ...   2693  ENEMIESDEAD_MSG         DC.B    'Enemies Defeated:', 0           
00001C5E= 57 61 76 65 20 65 ...   2694  ENEMYCOUNT_MSG         DC.B    'Wave enemy count:', 0           
00001C70                          2695  
00001C70= 45 78 69 74 69 6E ...   2696  EXIT_MSG        DC.B    'Exiting....', 0    ; Exit Message
00001C7C= 41 4E 54 20 48 49 ...   2697  HILLLOST_MSG    DC.B    'ANT HILL HAS BEEN OVERRUN!', 0      ; Game Over Message
00001C97= 45 4E 45 4D 59 20 ...   2698  WIN_MSG    DC.B    'ENEMY ARMY HAS BEEN DEFEATED!', 0      ; Game Over Message
00001CB5= 57 41 56 45 20 43 ...   2699  HILLDEFENDED_MSG    DC.B    'WAVE COMPLETE!', 0      ; Game Over Message
00001CC4= 59 4F 55 52 20 41 ...   2700  FALLENKINGDOM_MSG    DC.B    'YOUR ANT KINGDOM HAS FALLEN', 0      ; Game Over Message
00001CE0= 47 41 4D 45 20 4F ...   2701  GAMEOVER_MSG    DC.B    'GAME OVER', 0      ; Game Over Message
00001CEA= 52 65 74 75 72 6E ...   2702  BACK_TO_MAP_MSG    DC.B    'Returning to map in ...', 0      ; Game Over Message
00001D02= 50 72 65 73 73 20 ...   2703  RESTART_MSG    DC.B    'Press R to restart', 0      ; Game Over Message
00001D15= 23 23 00                2704  TREET          DC.B     '##',0
00001D18                          2705  
00001D18= 45 6E 74 65 72 20 ...   2706  PRESSSTART      DC.B    'Enter 1 to start',0
00001D29= 41 4E 54 20 44 45 ...   2707  TITLEMSG        DC.B    'ANT DEFENDER',0
00001D36= 48 65 61 6C 74 68 ...   2708  antHealth_MSG       DC.B    'Health : ',0        ; health message
00001D40= 41 6E 74 73 20 52 ...   2709  antsRem_MSG       DC.B    'Ants Remaining : ',0        ; health message
00001D52= 48 69 6C 6C 20 48 ...   2710  hillHP_MSG       DC.B    'Hill Health: ',0        ; health message
00001D60= 0A                      2711  hillHP          DC.B      10
00001D61                          2712  
00001D61= 00                      2713  IN_ENEMY        DC.B      00                  ; marker for if the player is in the enemy
00001D62= 00                      2714  IN_HPACK        DC.B      00                  ; marker for if the player is in the health pack
00001D63= 00                      2715  DRAW_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are showing
00001D64= 00                      2716  SPAWN_HEALTHPACKS   DC.B  $00                  ; marker for if the healthpacks are spawning
00001D65                          2717  
00001D66= 07D0                    2718  LEVEL_02        DC.W    2000
00001D68= 2710                    2719  LEVEL_03        DC.W    10000
00001D6A                          2720  
00001D6A= 00001B58 00000FA0 ...   2721  LEVELS:         DC.L    7000,4000,2000,1000
00001D7A                          2722  
00001D7A                          2723  *-----------------------------------------------------------
00001D7A                          2724  * Section       : Screen Size
00001D7A                          2725  * Description   : Screen Width and Height
00001D7A                          2726  *-----------------------------------------------------------
00001D7A                          2727  SCREEN_W        DS.W    01  ; Reserve Space for Screen Width
00001D7C                          2728  SCREEN_H        DS.W    01  ; Reserve Space for Screen Height
00001D7E                          2729  
00001D7E                          2730  *-----------------------------------------------------------
00001D7E                          2731  * Section       : Keyboard Input
00001D7E                          2732  * Description   : Used for storing Keypresses
00001D7E                          2733  *-----------------------------------------------------------
00001D7E                          2734  CURRENT_KEY     DS.L    01  ; Reserve Space for Current Key Pressed
00001D82                          2735  LAST_KEY        DS.W    01  ; Reserve Space for Current Key Pressed
00001D84                          2736  
00001D84                          2737  *-----------------------------------------------------------
00001D84                          2738  * Section       : Character Data
00001D84                          2739  * Description   : Player and Enemy Position Memory Locations
00001D84                          2740  *-----------------------------------------------------------
00001D84                          2741  PLAYER_X        DS.L    01  ; Reserve Space for Player X Position
00001D88                          2742  PLAYER_Y        DS.L    01  ; Reserve Space for Player Y Position
00001D8C                          2743  PLAYER_SCORE    DS.L    01  ; Reserve Space for Player Score
00001D90                          2744  
00001D90                          2745  PLYR_VELOCITY   DS.L    01  ; Reserve Space for Player Velocity
00001D94                          2746  PLYR_GRAVITY    DS.L    01  ; Reserve Space for Player Gravity
00001D98                          2747  PLYR_ON_GND     DS.L    01  ; Reserve Space for Player on Ground
00001D9C                          2748  
00001D9C                          2749  ; 1, = left, 0 = right
00001D9C                          2750  PLAYER_DIR      DS.B    01  ; Reserve Space for Player Direction
00001D9D                          2751  
00001D9E                          2752  ENEMY_X         DS.L    01  ; Reserve Space for Enemy X Position
00001DA2                          2753  ENEMY_Y         DS.L    01  ; Reserve Space for Enemy Y Position
00001DA6                          2754  
00001DA6                          2755  HEALTH_X         DS.L    01  ; Reserve Space for Health+ X Position
00001DAA                          2756  HEALTH_Y         DS.L    01  ; Reserve Space for Health Y Position
00001DAE                          2757  
00001DAE                          2758  FLYINGENEMY_X         DS.L    01  ; Reserve Space for Flying Enemy X Position
00001DB2                          2759  FLYINGENEMY_Y         DS.L    01  ; Reserve Space for Flying Enemy Y Position
00001DB6                          2760  
00001DB6= 000000FF                2761  ENEMYCOLOR        DC.L        $000000FF
00001DBA= 00FF0000                2762  FLYENEMYCOLOR     DC.L        $00FF0000
00001DBE                          2763  
00001DBE                          2764  RANDOM            DS.L        01  ; Reserve Space for Random Number
00001DC2= 03                      2765  antHealth         DC.B        03  ; reserves space for antHealth
00001DC3= 05                      2766  antsRemaining     DC.B        05  ; reserves space for ants
00001DC4                          2767  
00001DC4                          2768   
00001DC4= 02                      2769  POINTS            DC.B        02          ; Points added
00001DC5                          2770  
00001DC5= 00                      2771  CURRENTLYATTACKING   DC.B    00
00001DC6= 0000                    2772  ATTACK_COOLDOWN      DC.W    00
00001DC8= 0000                    2773  ATTACK_TIME          DC.W    00
00001DCA= 00000000                2774  ATTACK_X             DC.L    00
00001DCE= 00000000                2775  ATTACK_Y             DC.L    00
00001DD2  =00000014               2776  ATTACK_HEIGHT        EQU     20
00001DD2  =00000023               2777  ATTACK_WIDTH         EQU     35 
00001DD2                          2778  
00001DD2= 00                      2779  CURRENTLYTHROWING   DC.B    00
00001DD4= 0000                    2780  THROW_COOLDOWN      DC.W    00
00001DD6= 0000                    2781  THROW_TIME          DC.W    00
00001DD8= 00000000                2782  THROW_X             DC.L    00
00001DDC= 00000000                2783  THROW_Y             DC.L    00
00001DE0  =00000014               2784  THROW_HEIGHT        EQU     20
00001DE0  =00000023               2785  THROW_WIDTH         EQU     35 
00001DE0                          2786  THROW_VELOCITY      DS.L    01  
00001DE4                          2787  THROW_GRAVITY       DS.L    01  
00001DE8                          2788  
00001DE8= 13                      2789  ENEMIES_DEFEATED    DC.B    19
00001DE9= 00                      2790  enemiesPassed       DC.b    00
00001DEA= 00                      2791  enemiesToDefeat     DC.B    00
00001DEB                          2792  
00001DEB= 00                      2793  ENEMY_HIT           DC.B    00
00001DEC= 00                      2794  FLYENEMY_HIT        DC.B    00
00001DED                          2795  
00001DED                          2796  
00001DED                          2797  * Widths and heights of player, enemy and healthpack
00001DED                          2798  *-----------------------------------------------------------
00001DED= 0C                      2799  PLAYER_WIDTH      DC.B        12          ; Player Width
00001DEE= 0C                      2800  PLAYER_HEIGHT     DC.B        12          ; Player Height
00001DEF                          2801  
00001DF0= 000C                    2802  ENEMY_WIDTH       DC.W        12          ; Enemy Width
00001DF2= 000C                    2803  ENEMY_HEIGHT      DC.W        12          ; Enemy Height
00001DF4                          2804  
00001DF4= 0014                    2805  FLYENEMY_WIDTH    DC.W        20 
00001DF6= 000C                    2806  FLYENEMY_HEIGHT   DC.W        12 
00001DF8                          2807  
00001DF8                          2808          
00001DF8                          2809  *-----------------------------------------------------------
00001DF8                          2810  * Section       : Sounds
00001DF8                          2811  * Description   : Sound files, which are then loaded and given
00001DF8                          2812  * an address in memory, they take a longtime to process and play
00001DF8                          2813  * so keep the files small.
00001DF8                          2814  *-----------------------------------------------------------
00001DF8= 6A 75 6D 70 2E 77 ...   2815  JUMP_WAV        DC.B    'jump.wav1',0        ; Jump Sound
00001E02= 67 61 6D 65 4F 76 ...   2816  GAMEOVER_WAV    DC.B    'gameOver.wav1',0    ; Run Sound
00001E10= 68 69 74 48 75 72 ...   2817  HITHURT_WAV     DC.B    'hitHurt.wav1',0     ; Collision Opps
00001E1D= 68 69 74 2E 77 61 ...   2818  HIT_WAV         DC.B    'hit.wav1',0         ; Collision Opps
00001E26= 70 6F 77 65 72 55 ...   2819  POWERUP_WAV     DC.B    'powerUP.wav1',0     ; Collision Opps
00001E33= 6C 65 76 65 6C 43 ...   2820  LEVELCHANGE_WAV DC.B    'levelChange.wav1',0 ; Collision Opps
00001E44                          2821  
00001E44= 61 6E 74 6F 70 69 ...   2822  BATTLE_SONG_WAV DC.B    'antopia-battle.wav1',0
00001E58= 61 6E 74 6F 70 69 ...   2823  MAP_SONG_WAV    DC.B    'antopia-map.wav1',0
00001E69= 61 6E 74 6F 70 69 ...   2824  MENU_SONG_WAV   dc.B    'antopia-menu.wav1',0
00001E7B                          2825  
00001E7B                          2826  
00001E7C= 0000                    2827  respawnTime         dc.W        0
00001E7E= 03                      2828  backToMapCount      dc.b        3
00001E7F                          2829  *---*
00001E80= 00000000                2830  timer           DC.L    0
00001E84                          2831  
00001E84                          2832  ;    END    START        ; last line of source
Line 2833 WARNING: END directive missing, starting address not set

114 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AKEY                41
ANTHEALTH           1DC2
ANTHEALTH_MSG       1D36
ANTKILLED           176E
ANTSREMAINING       1DC3
ANTSREM_MSG         1D40
ARC_DONE            B5A
ATK_LTE_TO_ENEMY_Y_PLUS_H  1526
ATK_LTE_TO_FLYENEMY_Y_PLUS_H  1594
ATK_PLUS_H_LTE_TO_ATTACK_Y  1542
ATK_PLUS_H_LTE_TO_FLYENEMY_Y  15B0
ATK_X_LTE_TO_FLYENEMY_X_PLUS_W  155C
ATTACK_COLLISION    16A2
ATTACK_COOLDOWN     1DC6
ATTACK_COOLDOWN_SUB  3E4
ATTACK_FLY_COLLISION  16C8
ATTACK_HEIGHT       14
ATTACK_PLUS_W_LTE_TO_ENMY_X  150A
ATTACK_PLUS_W_LTE_TO_FLYENMY_X  1578
ATTACK_TIME         1DC8
ATTACK_TIME_SUB     3DC
ATTACK_WIDTH        23
ATTACK_X            1DCA
ATTACK_X_LTE_TO_ENEMY_X_PLUS_W  14EE
ATTACK_Y            1DCE
BACKTOMAPCOUNT      1E7E
BACK_TO_MAP_MSG     1CEA
BATTLEINPUT         1E2
BATTLE_SONG_LOAD    C28
BATTLE_SONG_WAV     1E44
BIGENMY_H_INIT      12
BIGENMY_W_INIT      23
CHECKPAUSED         2FA
CHECK_ATTACK_COLLISIONS  14EA
CHECK_ATTACK_COOLDOWN  3CE
CHECK_ATTACK_FLY_COLLISIONS  1558
CHECK_COLLISIONS    13A8
CHECK_ENEMIES_CLEARED  16EE
CHECK_FLYENEMY_COLLISIONS  140E
CHECK_HEALTH_COLLISIONS  147C
CHECK_THROW_COLLISION  15C6
CHECK_THROW_DONE    3A0
CHECK_THROW_FLY_COLLISIONS  1634
CHECK_WAVE_CLEARED  558
COLLISION_CHECK_DONE  1706
COMPLETE_RESTART    2CC
CONTINUE            590
CURRENTLYATTACKING  1DC5
CURRENTLYTHROWING   1DD2
CURRENT_KEY         1D7E
DAMAGE_HILL         570
DELAY               1BA
DKEY                44
DRAWBATTLE          628
DRAWDIRT            137C
DRAWHILLHEALTH      678
DRAW_ATTACK         EA0
DRAW_BACKGROUND     842
DRAW_ENEMY          FB2
DRAW_ENTRANCE       7E2
DRAW_ENTRANCE_HOLE  812
DRAW_FLOOR          1322
DRAW_FLYENEMY       10F0
DRAW_HEALTHPACK     129C
DRAW_HEALTHPACKS    1D63
DRAW_HEALTHPACK_DONE  1316
DRAW_HILL           6B2
DRAW_MSG            1C35
DRAW_PLAYER         D4C
DRAW_PLYR_DATA      9B8
DRAW_RESPAWN        F34
DRAW_THROW          EF0
DRAW_TREES          86C
ENEMIESDEAD_MSG     1C4C
ENEMIESPASSED       1DE9
ENEMIESTODEFEAT     1DEA
ENEMIES_DEFEATED    1DE8
ENEMYCOLLISION      1728
ENEMYCOLOR          1DB6
ENEMYCOUNT_MSG      1C5E
ENEMY_HEIGHT        1DF2
ENEMY_HIT           1DEB
ENEMY_WIDTH         1DF0
ENEMY_X             1D9E
ENEMY_Y             1DA2
ENMY_H_INIT         D
ENMY_W_INIT         1B
ESCAPE              1B
EXIT                1BEA
EXIT_MSG            1C70
FALLENKINGDOM_MSG   1CC4
FLYENEMYCOLOR       1DBA
FLYENEMY_HEIGHT     1DF6
FLYENEMY_HIT        1DEC
FLYENEMY_WIDTH      1DF4
FLYINGENEMY_X       1DAE
FLYINGENEMY_Y       1DB2
FLY_ENMY_H_INIT     D
FLY_ENMY_W_INIT     1E
GAME                1A8
GAMELOOP            1A8
GAMEOVER_INDEX      0
GAMEOVER_LOAD       B5E
GAMEOVER_MSG        1CE0
GAMEOVER_WAV        1E02
GAME_OVER           18F8
GND_FALSE           0
GND_TRUE            1
HEALTH_COLLISION    1790
HEALTH_PACK_H       C
HEALTH_PACK_W       C
HEALTH_X            1DA6
HEALTH_Y            1DAA
HILLDEFENDED_MSG    1CB5
HILLHP              1D60
HILLHP_MSG          1D52
HILLLOST_MSG        1C7C
HILL_LOST           17D0
HITHURT_INDEX       2
HITHURT_LOAD        B9E
HITHURT_WAV         1E10
HIT_INDEX           5
HIT_LOAD            BF8
HIT_WAV             1E1D
IDLE                B5C
IDLE_MSG            1C21
INITRUN             0
INIT_PLAYER         C68
INPUTLOOP           18F2
IN_ENEMY            1D61
IN_HPACK            1D62
IS_ATTACKING        E94
IS_PLAYER_ON_GND    AB8
IS_THROWING         EE4
JMP_INDEX           1
JUMP                B0C
JUMP_DONE           B3A
JUMP_LOAD           B80
JUMP_MSG            1C18
JUMP_WAV            1DF8
KEYCODE_MSG         1C0D
KKEY                4B
LAST_KEY            1D82
LEVELCHANGE_INDEX   4
LEVELCHANGE_WAV     1E33
LEVELS              1D6A
LEVEL_02            1D66
LEVEL_03            1D68
LKEY                4C
LOOKLEFT            1
LOOKRIGHT           2
LOSSINPUTLOOP       19E0
LVLCHANGE_LOAD      BDA
MAP_SONG_LOAD       C16
MAP_SONG_WAV        1E58
MENU_SONG_LOAD      C3A
MENU_SONG_WAV       1E69
MOVE_ENEMY          3F4
MOVE_ENEMY_L2       43A
MOVE_ENEMY_L3       464
MOVE_ENEMY_L4       48E
MOVE_HEALTHPACK     3EC
MOVE_PLAYER_LEFT    CF8
MOVE_PLAYER_RIGHT   D22
MOVE_RESPAWNED      F4E
MOVE_THROW          372
PERFORM_ATTACK      592
PERFORM_JUMP        B2A
PERFORM_THROW       5DE
PERFORM_THROW_ARC   B4E
PLAYER_DIR          1D9C
PLAYER_HEIGHT       1DEE
PLAYER_SCORE        1D8C
PLAYER_WIDTH        1DED
PLAYER_X            1D84
PLAYER_X_LTE_TO_ENEMY_X_PLUS_W  13AC
PLAYER_X_PLUS_W_LTE_TO_ENEMY_X  13C8
PLAYER_Y            1D88
PLAYER_Y_LTE_TO_ENEMY_Y_PLUS_H  13E4
PLAYER_Y_PLUS_H_LTE_TO_ENEMY_Y  13FA
PLAY_GAMEOVER       B70
PLAY_HIT            C0A
PLAY_HITHURT        BB0
PLAY_JUMP           B92
PLAY_LVLCHANGE      BEC
PLAY_POWERUP        BCE
PLAY_SONG           C4C
PLX_LTE_TO_FLYENEMY_X_PLUS_W  1412
PLX_LTE_TO_HEALTH_X_PLUS_W  1480
PLX_PLUS_W_LTE_TO_FLYENEMY_X  142E
PLX_PLUS_W_LTE_TO_HEALTH_X  149C
PLYR_DFLT_G         1
PLYR_DFLT_V         0
PLYR_GRAVITY        1D94
PLYR_H_INIT         D
PLYR_JUMP_V         FFFFFFED
PLYR_ON_GND         1D98
PLYR_VELOCITY       1D90
PLYR_W_INIT         1B
PLY_LTE_TO_FLYENEMY_Y_PLUS_H  144A
PLY_LTE_TO_HEALTH_Y_PLUS_H  14B8
PLY_PLUS_H_LTE_TO_FLYENEMY_Y  1466
PLY_PLUS_H_LTE_TO_HEALTH_Y  14D4
POINTS              1DC4
POWERUP_INDEX       3
POWERUP_LOAD        BBC
POWERUP_WAV         1E26
PRESSSTART          1D18
PROCESS_INPUT       286
RANDOM              1DBE
RESET_ENEMY_POSITION  4B8
RESET_FLYENEMY_POSITION  4FA
RESET_HEALTH_POSITION  540
RESET_THROW         3B0
RESPAWNTIME         1E7C
RESTART_MSG         1D02
RKEY                52
SCORE_MSG           1C04
SCREEN_H            1D7C
SCREEN_W            1D7A
SET_OFF_GROUND      B00
SET_ON_GROUND       AD8
SKEY                53
SONG_INDEX          6
SPACEBAR            20
SPAWN_HEALTHPACKS   1D64
STILLPAUSED         306
STILL_COLLIDED      17CE
STOP_HPACK_SPAWN    17C4
STOP_SONG           C5A
TC_CURSR_P          B
TC_DBL_BUF          5C
TC_EXIT             9
TC_KEYCODE          13
TC_REDRAW           5E
TC_SCREEN           21
TC_S_SIZE           0
THROW_ARC           B3C
THROW_COOLDOWN      1DD4
THROW_GRAVITY       1DE4
THROW_HEIGHT        14
THROW_PLUS_W_LTE_TO_ENMY_X  15E6
THROW_PLUS_W_LTE_TO_FLYENMY_X  1654
THROW_TIME          1DD6
THROW_VELOCITY      1DE0
THROW_WIDTH         23
THROW_X             1DD8
THROW_X_LTE_TO_ENEMY_X_PLUS_W  15CA
THROW_X_LTE_TO_FLYENEMY_X_PLUS_W  1638
THROW_Y             1DDC
THRW_DFLT_G         1
THRW_DFLT_V         0
THRW_H_INIT         F
THRW_JUMP_V         FFFFFFF0
THRW_W_INIT         F
TIMER               1E80
TITLEMSG            1D29
TREET               1D15
TRW_LTE_TO_ENEMY_Y_PLUS_H  1602
TRW_LTE_TO_FLYENEMY_Y_PLUS_H  1670
TRW_PLUS_H_LTE_TO_FLYENEMY_Y  168C
TRW_PLUS_H_LTE_TO_THROW_Y  161E
UPDATE              30E
UPDATE_MSG          1C2A
UPDATE_PLAYER       CCE
VARMSG              1C47
V_MSG               1C44
WAVE_DEFEATED       19E6
WININPUTLOOP        1BE4
WIN_MSG             1C97
WIN_SCREEN          1B08
X_MSG               1C3E
Y_MSG               1C41
_00000000           20C
_00000001           21E
_00000002           230
_00000003           242
_00000004           266
_00000005           2F8
_00000006           42C
_00000007           454
_00000008           478
_00000009           4A2
_0000000A           4EC
_0000000B           532
_0000000C           59E
_0000000D           5EA
_0000000E           B18
_0000000F           D04
_00000010           D2E
